// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_preco_estoque_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJava_2
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_11
	//import java.util.List;

	//the import part of tJava_15
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaRow_12
	//import java.util.List;

	//the import part of tJavaRow_16
	//import java.util.List;

	//the import part of tJavaRow_17
	//import java.util.List;

	//the import part of tJavaRow_10
	//import java.util.List;

	//the import part of tJavaRow_24
	//import java.util.List;

	//the import part of tJavaRow_25
	//import java.util.List;

	//the import part of tJavaRow_26
	//import java.util.List;

	//the import part of tJavaRow_27
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_14
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_13
	//import java.util.List;

	//the import part of tJavaRow_15
	//import java.util.List;

	//the import part of tJavaRow_19
	//import java.util.List;

	//the import part of tJavaRow_20
	//import java.util.List;

	//the import part of tJavaRow_18
	//import java.util.List;

	//the import part of tJavaRow_21
	//import java.util.List;

	//the import part of tJavaRow_22
	//import java.util.List;

	//the import part of tJavaRow_23
	//import java.util.List;

	//the import part of tJavaRow_28
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJava_3
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJava_4
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJava_5
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJava_16
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_2
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_preco_estoque Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_preco_estoque implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(data_atual != null){
				
					this.setProperty("data_atual", data_atual.toString());
				
			}
			
			if(data_atual1 != null){
				
					this.setProperty("data_atual1", data_atual1.toString());
				
			}
			
			if(Arquivo != null){
				
					this.setProperty("Arquivo", Arquivo.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(Pasta_Rede != null){
				
					this.setProperty("Pasta_Rede", Pasta_Rede.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String data_atual;
public String getData_atual(){
	return this.data_atual;
}
public String data_atual1;
public String getData_atual1(){
	return this.data_atual1;
}
public Integer Arquivo;
public Integer getArquivo(){
	return this.Arquivo;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String Pasta_Rede;
public String getPasta_Rede(){
	return this.Pasta_Rede;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_preco_estoque";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_preco_estoque.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_preco_estoque.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileList_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row65_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row51_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row68_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row77_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_4_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_4_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_4_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_3_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_3_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_3_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_17_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileList_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_16_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		
	

	
        String properties_tDBConnection_1 = context.JDBC_PARAMETERS;
        if (properties_tDBConnection_1 == null || properties_tDBConnection_1.trim().length() == 0) {
            properties_tDBConnection_1 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_1.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_1 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_1.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_1 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_1 = "jdbc:mysql://" + context.AUTCOM_HOST + ":" + context.AUTCOM_PORT + "/" + context.AUTCOM_DB + "?" + properties_tDBConnection_1;
	String dbUser_tDBConnection_1 = context.AUTCOM_USER;
	
	
		
	final String decryptedPassword_tDBConnection_1 = context.AUTCOM_PASSWORD; 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
		
			String driverClass_tDBConnection_1 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_1",context.AUTCOM_DB);
 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tDBConnection_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		


	
            String dbProperties_tDBConnection_2 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_2 = "jdbc:postgresql://"+context.POSTGRES_HOST+":"+context.POSTGRES_PORT+"/"+context.POSTGRES_DB;
            
            if(dbProperties_tDBConnection_2 != null && !"".equals(dbProperties_tDBConnection_2.trim())) {
                url_tDBConnection_2 = url_tDBConnection_2 + "?" + dbProperties_tDBConnection_2;
            }
	String dbUser_tDBConnection_2 = context.POSTGRES_USER;
	
	
		
	final String decryptedPassword_tDBConnection_2 = context.POSTGRES_PASSWORD; 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_2 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_2 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_2.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_2 = drivers_tDBConnection_2.nextElement();
        if (redShiftDriverNames_tDBConnection_2.contains(d_tDBConnection_2.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_2);
                java.sql.DriverManager.registerDriver(d_tDBConnection_2);
            } catch (java.lang.Exception e_tDBConnection_2) {
globalMap.put("tDBConnection_2_ERROR_MESSAGE",e_tDBConnection_2.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_2 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_2","");

 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk81", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


String foo = "bar";

//context.data_atual = TalendDate.getCurrentDate();

Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


Date dataNova1 = new Date();
DateFormat formato1 = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato1.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data1 = formato1.format(dataNova1.getTime());


System.out.println(data);
context.data_atual = data;
context.data_atual1 = data1;
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();
insert_logStruct insert_log = new insert_logStruct();
row80Struct row80 = new row80Struct();






	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row79.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row79.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row80 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row80 = new row80Struct();
                                row80.nm_programa = insert_log.nm_programa;
                                row80.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row80.data_termino_execucao = insert_log.data_termino_execucao;
                                row80.mensagem = insert_log.mensagem;
                                row80.uuid = insert_log.uuid;
                                row80.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row80"
if(row80 != null) { 



	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					



    
		row80Struct oneRow_tHashOutput_13 = new row80Struct();
				
					oneRow_tHashOutput_13.nm_programa = row80.nm_programa;
					oneRow_tHashOutput_13.data_inicio_execucao = row80.data_inicio_execucao;
					oneRow_tHashOutput_13.data_termino_execucao = row80.data_termino_execucao;
					oneRow_tHashOutput_13.mensagem = row80.mensagem;
					oneRow_tHashOutput_13.uuid = row80.uuid;
					oneRow_tHashOutput_13.versao = row80.versao;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */

} // End of branch "row80"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tFileInputDelimited_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_5", false);
		start_Hash.put("tFileInputDelimited_5", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_5";
	
	
		int tos_count_tFileInputDelimited_5 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_5 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_5 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_5 = null;
				int limit_tFileInputDelimited_5 = -1;
				try{
					
						Object filename_tFileInputDelimited_5 = ""+context.Pasta_Rede+"/Parametro/Parametro.csv";
						if(filename_tFileInputDelimited_5 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_5 = 0, random_value_tFileInputDelimited_5 = -1;
			if(footer_value_tFileInputDelimited_5 >0 || random_value_tFileInputDelimited_5 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_5 = new org.talend.fileprocess.FileInputDelimited(""+context.Pasta_Rede+"/Parametro/Parametro.csv", "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_5
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_5_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_5!=null && fid_tFileInputDelimited_5.nextRecord()) {
						rowstate_tFileInputDelimited_5.reset();
						
			    						row75 = null;			
												
									boolean whetherReject_tFileInputDelimited_5 = false;
									row75 = new row75Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_5 = 0;
				
					String temp = ""; 
				
					columnIndexWithD_tFileInputDelimited_5 = 0;
					
						temp = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						if(temp.length() > 0) {
							
								try {
								
    								row75.Quantidade = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_5) {
globalMap.put("tFileInputDelimited_5_ERROR_MESSAGE",ex_tFileInputDelimited_5.getMessage());
									rowstate_tFileInputDelimited_5.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"Quantidade", "row75", temp, ex_tFileInputDelimited_5), ex_tFileInputDelimited_5));
								}
    							
						} else {						
							
								
									row75.Quantidade = null;
								
							
						}
					
				
				
										
										if(rowstate_tFileInputDelimited_5.getException()!=null) {
											throw rowstate_tFileInputDelimited_5.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_5_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_5 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row75 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_5 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 


	tos_count_tFileInputDelimited_5++;

/**
 * [tFileInputDelimited_5 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 



/**
 * [tFileInputDelimited_5 process_data_begin ] stop
 */
// Start of branch "row75"
if(row75 != null) { 



	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					



    
		row75Struct oneRow_tHashOutput_12 = new row75Struct();
				
					oneRow_tHashOutput_12.Quantidade = row75.Quantidade;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */

} // End of branch "row75"




	
	/**
	 * [tFileInputDelimited_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 



/**
 * [tFileInputDelimited_5 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	



            }
            }finally{
                if(!((Object)(""+context.Pasta_Rede+"/Parametro/Parametro.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_5!=null){
                		fid_tFileInputDelimited_5.close();
                	}
                }
                if(fid_tFileInputDelimited_5!=null){
                	globalMap.put("tFileInputDelimited_5_NB_LINE", fid_tFileInputDelimited_5.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_5", true);
end_Hash.put("tFileInputDelimited_5", System.currentTimeMillis());




/**
 * [tFileInputDelimited_5 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk76", 0, "ok");
								} 
							
							tFileDelete_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_5 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 



/**
 * [tFileInputDelimited_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_5_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
	java.io.File path_tFileDelete_1=new java.io.File(""+context.Pasta_Rede+"/Parametro/Parametro.csv");
	if(path_tFileDelete_1.exists()){
		if(path_tFileDelete_1.isFile()){
	    	if(path_tFileDelete_1.delete()){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
	    	}
		}else if(path_tFileDelete_1.isDirectory()){ 
	    	DeleteFoldertFileDelete_1 dftFileDelete_1 = new DeleteFoldertFileDelete_1();
	    	if(dftFileDelete_1.delete(path_tFileDelete_1)){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "Path deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No path deleted.");
	    	}
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File or path does not exist or is invalid.");
    }
    globalMap.put("tFileDelete_1_DELETE_PATH",""+context.Pasta_Rede+"/Parametro/Parametro.csv");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk77", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row76Struct row76 = new row76Struct();
row78Struct row78 = new row78Struct();





	
	/**
	 * [tFileOutputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_3", false);
		start_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tFileOutputDelimited_3 = 0;
		

String fileName_tFileOutputDelimited_3 = "";
    fileName_tFileOutputDelimited_3 = (new java.io.File(""+context.Pasta_Rede+"/Parametro/Parametro.csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_3 = null;
    String extension_tFileOutputDelimited_3 = null;
    String directory_tFileOutputDelimited_3 = null;
    if((fileName_tFileOutputDelimited_3.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") < fileName_tFileOutputDelimited_3.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        }
        directory_tFileOutputDelimited_3 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_3 = true;
    java.io.File filetFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
    globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
        if(filetFileOutputDelimited_3.exists()){
            isFileGenerated_tFileOutputDelimited_3 = false;
        }
            int nb_line_tFileOutputDelimited_3 = 0;
            int splitedFileNo_tFileOutputDelimited_3 = 0;
            int currentRow_tFileOutputDelimited_3 = 0;

            final String OUT_DELIM_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_3:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_3:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_3 != null && directory_tFileOutputDelimited_3.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_3 = new java.io.File(directory_tFileOutputDelimited_3);
                        if(!dir_tFileOutputDelimited_3.exists()) {
                            dir_tFileOutputDelimited_3.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_3 = null;

                        outtFileOutputDelimited_3 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_3, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_3", outtFileOutputDelimited_3);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_3.length()==0){
                                        outtFileOutputDelimited_3.write("Quantidade");
                                        outtFileOutputDelimited_3.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

 



/**
 * [tFileOutputDelimited_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row75Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row75Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row76.Quantidade = next_tHashInput_2.Quantidade;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					

    //Code generate according to input schema and output schema
row78.Quantidade = row76.Quantidade+1;
context.Arquivo = row78.Quantidade;
    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_3 = new StringBuilder();
                            if(row78.Quantidade != null) {
                        sb_tFileOutputDelimited_3.append(
                            row78.Quantidade
                        );
                            }
                    sb_tFileOutputDelimited_3.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_3++;
                    resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

                        outtFileOutputDelimited_3.write(sb_tFileOutputDelimited_3.toString());

                    }



 


	tos_count_tFileOutputDelimited_3++;

/**
 * [tFileOutputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_3!=null) {
						outtFileOutputDelimited_3.flush();
						outtFileOutputDelimited_3.close();
					}
				
				globalMap.put("tFileOutputDelimited_3_NB_LINE",nb_line_tFileOutputDelimited_3);
				globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_3", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_3", true);
end_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_3") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_3 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_3");
						if(outtFileOutputDelimited_3!=null) {
							outtFileOutputDelimited_3.flush();
							outtFileOutputDelimited_3.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfanymarket_0Struct implements routines.system.IPersistableRow<copyOfcopyOfanymarket_0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfanymarket_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
row3Struct row3 = new row3Struct();
copyOfcopyOfanymarket_0Struct copyOfcopyOfanymarket_0 = new copyOfcopyOfanymarket_0Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfanymarket_0");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfanymarket_0Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfanymarket_0Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfanymarket_0Struct copyOfcopyOfanymarket_0_tmp = new copyOfcopyOfanymarket_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_1", false);
		start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_1";
	
	
		int tos_count_tFileInputExcel_1 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:VI67F+lOPRn/tLQYtl6qUY7G4vVsQw091wdilQ==");
        String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
        if (password_tFileInputExcel_1.isEmpty()){
            password_tFileInputExcel_1 = null;
        }
		Object source_tFileInputExcel_1 = ""+context.Pasta_Rede+"/export_1.xlsx";
		com.talend.excel.xssf.event.ExcelReader excelReader_tFileInputExcel_1 = null;

		
		if(source_tFileInputExcel_1 instanceof java.io.InputStream || source_tFileInputExcel_1 instanceof String){
			excelReader_tFileInputExcel_1 = new com.talend.excel.xssf.event.ExcelReader();
			excelReader_tFileInputExcel_1.setIncludePhoneticRuns(true);
		}else{
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}

		try {
		excelReader_tFileInputExcel_1.addSheetName("MODELO", false);
		int start_column_tFileInputExcel_1 = 1-1;
		int end_column_tFileInputExcel_1 = -1;
		if(start_column_tFileInputExcel_1 >=0) {//follow start column
			
				end_column_tFileInputExcel_1 = start_column_tFileInputExcel_1 + 7 - 1;
			
		} else if(end_column_tFileInputExcel_1 >= 0) {//follow end column
			start_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 - 7 + 1;
		}

		if(end_column_tFileInputExcel_1<0 || start_column_tFileInputExcel_1<0) {
			throw new RuntimeException("Error start column and end column.");
		}
		int actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 ;

		int header_tFileInputExcel_1 = 1;
		int limit_tFileInputExcel_1 = -1;

		int nb_line_tFileInputExcel_1 = 0;

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols().getDecimalSeparator();


		if(source_tFileInputExcel_1 instanceof String){
			excelReader_tFileInputExcel_1.parse((String)source_tFileInputExcel_1,"ISO-8859-15", password_tFileInputExcel_1);
		} else if(source_tFileInputExcel_1 instanceof java.io.InputStream) {
			excelReader_tFileInputExcel_1.parse((java.io.InputStream)source_tFileInputExcel_1,"ISO-8859-15", password_tFileInputExcel_1);
		}
		


		while((header_tFileInputExcel_1--)>0 && excelReader_tFileInputExcel_1.hasNext()) {//skip the header
			excelReader_tFileInputExcel_1.next();
		}

		
		while(excelReader_tFileInputExcel_1.hasNext()) {
			int emptyColumnCount_tFileInputExcel_1 = 0;

			if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
				excelReader_tFileInputExcel_1.stopRead();
        		break;
        	}

        	java.util.List<String> row_tFileInputExcel_1 = excelReader_tFileInputExcel_1.next();
		row2 = null;
					int tempRowLength_tFileInputExcel_1 = 7;
				
				int columnIndex_tFileInputExcel_1 = 0;
			
					
		String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
		
		for(int i_tFileInputExcel_1=0;i_tFileInputExcel_1 < tempRowLength_tFileInputExcel_1;i_tFileInputExcel_1++){
			int current_tFileInputExcel_1 = i_tFileInputExcel_1 + start_column_tFileInputExcel_1;
			if(current_tFileInputExcel_1 <= actual_end_column_tFileInputExcel_1){
				if(current_tFileInputExcel_1 < row_tFileInputExcel_1.size()){
					String column_tFileInputExcel_1 = row_tFileInputExcel_1.get(current_tFileInputExcel_1);
					if(column_tFileInputExcel_1!=null) {
						temp_row_tFileInputExcel_1[i_tFileInputExcel_1] = column_tFileInputExcel_1;
					} else {
						temp_row_tFileInputExcel_1[i_tFileInputExcel_1]="";
					}
				} else {
					temp_row_tFileInputExcel_1[i_tFileInputExcel_1]="";
				}
			} else {
				temp_row_tFileInputExcel_1[i_tFileInputExcel_1]="";
			}
		}

		boolean whetherReject_tFileInputExcel_1 = false;
		row2 = new row2Struct();
		int curColNum_tFileInputExcel_1 = -1;
		String curColName_tFileInputExcel_1 = "";

		try{
							columnIndex_tFileInputExcel_1 = 0;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SKU_INTERNO";

				row2.SKU_INTERNO = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.SKU_INTERNO = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 1;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "CUSTO";

				row2.CUSTO = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.CUSTO = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 2;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "PRAZO_ADICIONAL";

				row2.PRAZO_ADICIONAL = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.PRAZO_ADICIONAL = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 3;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "QTD_ESTOQUE";

				row2.QTD_ESTOQUE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.QTD_ESTOQUE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 4;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "QTD_DISPONIVEL";

				row2.QTD_DISPONIVEL = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.QTD_DISPONIVEL = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 5;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "QTD_PEDIDO";

				row2.QTD_PEDIDO = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.QTD_PEDIDO = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 6;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "LOCALIZACAO_ESTOQUE";

				row2.LOCALIZACAO_ESTOQUE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row2.LOCALIZACAO_ESTOQUE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
			nb_line_tFileInputExcel_1++;
			
		} catch(java.lang.Exception e) {
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_1 = true;
					 System.err.println(e.getMessage());
					 row2 = null;
			}

        		




 



/**
 * [tFileInputExcel_1 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 


	tos_count_tFileInputExcel_1++;

/**
 * [tFileInputExcel_1 main ] stop
 */
	
	/**
	 * [tFileInputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_begin ] stop
 */
// Start of branch "row2"
if(row2 != null) { 



	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					


  row3 = new row3Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row3.SKU_INTERNO=TypeConvert.String2String(row2.SKU_INTERNO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.CUSTO=TypeConvert.String2String(row2.CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.PRAZO_ADICIONAL=TypeConvert.String2String(row2.PRAZO_ADICIONAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.QTD_ESTOQUE=TypeConvert.String2String(row2.QTD_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.QTD_DISPONIVEL=TypeConvert.String2String(row2.QTD_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.QTD_PEDIDO=TypeConvert.String2String(row2.QTD_PEDIDO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.LOCALIZACAO_ESTOQUE=TypeConvert.String2String(row2.LOCALIZACAO_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row3 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfanymarket_0 = null;


// # Output table : 'copyOfcopyOfanymarket_0'
copyOfcopyOfanymarket_0_tmp.SKU_INTERNO = row3.SKU_INTERNO ;
copyOfcopyOfanymarket_0_tmp.CUSTO = row3.CUSTO ;
copyOfcopyOfanymarket_0_tmp.PRAZO_ADICIONAL = row3.PRAZO_ADICIONAL ;
copyOfcopyOfanymarket_0_tmp.QTD_ESTOQUE = row3.QTD_ESTOQUE ;
copyOfcopyOfanymarket_0_tmp.QTD_DISPONIVEL = row3.QTD_DISPONIVEL ;
copyOfcopyOfanymarket_0_tmp.QTD_PEDIDO = row3.QTD_PEDIDO ;
copyOfcopyOfanymarket_0_tmp.LOCALIZACAO_ESTOQUE = row3.LOCALIZACAO_ESTOQUE ;
copyOfcopyOfanymarket_0 = copyOfcopyOfanymarket_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfanymarket_0"
if(copyOfcopyOfanymarket_0 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfanymarket_0"
						
						);
					}
					



    
		copyOfcopyOfanymarket_0Struct oneRow_tHashOutput_1 = new copyOfcopyOfanymarket_0Struct();
				
					oneRow_tHashOutput_1.SKU_INTERNO = copyOfcopyOfanymarket_0.SKU_INTERNO;
					oneRow_tHashOutput_1.CUSTO = copyOfcopyOfanymarket_0.CUSTO;
					oneRow_tHashOutput_1.PRAZO_ADICIONAL = copyOfcopyOfanymarket_0.PRAZO_ADICIONAL;
					oneRow_tHashOutput_1.QTD_ESTOQUE = copyOfcopyOfanymarket_0.QTD_ESTOQUE;
					oneRow_tHashOutput_1.QTD_DISPONIVEL = copyOfcopyOfanymarket_0.QTD_DISPONIVEL;
					oneRow_tHashOutput_1.QTD_PEDIDO = copyOfcopyOfanymarket_0.QTD_PEDIDO;
					oneRow_tHashOutput_1.LOCALIZACAO_ESTOQUE = copyOfcopyOfanymarket_0.LOCALIZACAO_ESTOQUE;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfanymarket_0"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */

} // End of branch "row2"




	
	/**
	 * [tFileInputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

			}
			
			try {
				if(excelReader_tFileInputExcel_1!=null) {
					excelReader_tFileInputExcel_1.handleException();
				}
			} catch(java.lang.Exception e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e_tFileInputExcel_1.getMessage());
				if(!(e_tFileInputExcel_1.getCause() instanceof com.talend.excel.xssf.event.EnoughDataException)) {
				
					
				System.err.println(e_tFileInputExcel_1.getMessage());	
				
				}
			}
			
			
			
			globalMap.put("tFileInputExcel_1_NB_LINE",nb_line_tFileInputExcel_1);
			
		} finally { 
				
		}	
		

 

ok_Hash.put("tFileInputExcel_1", true);
end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());




/**
 * [tFileInputExcel_1 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfanymarket_0");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputExcel_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tJava_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura Anymarket: "+data);

 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.cd_empresa = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.cd_empresa = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.cd_empresa,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.cd_empresa,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",cd_empresa="+cd_empresa);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.cd_empresa = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.cd_empresa = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.cd_empresa,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.cd_empresa,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",cd_empresa="+cd_empresa);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();
row31Struct row31 = new row31Struct();





	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_11", false);
		start_Hash.put("tJavaRow_11", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tJavaRow_11 = 0;
		

int nb_line_tJavaRow_11 = 0;

 



/**
 * [tJavaRow_11 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select emp.cd_produto,\n       emp.cd_empresa,\n       (emp.saldo_fisico - emp.reservado_ordem_producao - emp.reservado"
+"_pedido_venda -emp.reservado_garantia -emp.reservado_externo + emp.reservado_enderecamento) SALDO_DISPONIVEL,\n       em"
+"p.tabela3_preco_venda,\n       emp.tabela4_preco_venda,\n       emp.tabela7_preco_venda,\n       CASE WHEN MOD(tabela3_p"
+"reco_venda,1) >= 0 THEN CEIL(tabela3_preco_venda)-0.10\n        ELSE CEIL(tabela3_preco_venda)\n         END AS tabela3_"
+"preco_vendac,\n       CASE WHEN MOD(tabela4_preco_venda,1) >= 0 THEN CEIL(tabela4_preco_venda)-0.10\n        ELSE CEIL(t"
+"abela4_preco_venda)\n         END AS tabela4_preco_vendac,\n      CASE WHEN MOD(tabela7_preco_venda,1) >= 0 THEN CEIL(ta"
+"bela7_preco_venda)-0.10\n        ELSE CEIL(tabela7_preco_venda)\n         END AS tabela7_preco_vendac,\n       case when"
+" prod.situacao_produto is null then '001'\n       else prod.situacao_produto\n       end situacao_produto\n  from stg_t_"
+"produto_empresa emp,\n       dw_t_produto         prod\n where emp.cd_produto = prod.cd_produto\n   and emp.cd_empresa ="
+"'001'\n   and prod.ativo_venda = 'S'";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row12.cd_produto = null;
							} else {
	                         		
        	row12.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row12.cd_empresa = null;
							} else {
	                         		
        	row12.cd_empresa = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row12.SALDO_DISPONIVEL = null;
							} else {
		                          
            row12.SALDO_DISPONIVEL = rs_tDBInput_1.getInt(3);
            if(rs_tDBInput_1.wasNull()){
                    row12.SALDO_DISPONIVEL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row12.tabela3_preco_venda = null;
							} else {
	                         		
            row12.tabela3_preco_venda = rs_tDBInput_1.getDouble(4);
            if(rs_tDBInput_1.wasNull()){
                    row12.tabela3_preco_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row12.tabela4_preco_venda = null;
							} else {
	                         		
            row12.tabela4_preco_venda = rs_tDBInput_1.getDouble(5);
            if(rs_tDBInput_1.wasNull()){
                    row12.tabela4_preco_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row12.tabela7_preco_venda = null;
							} else {
	                         		
            row12.tabela7_preco_venda = rs_tDBInput_1.getDouble(6);
            if(rs_tDBInput_1.wasNull()){
                    row12.tabela7_preco_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row12.tabela3_preco_vendac = null;
							} else {
	                         		
            row12.tabela3_preco_vendac = rs_tDBInput_1.getDouble(7);
            if(rs_tDBInput_1.wasNull()){
                    row12.tabela3_preco_vendac = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row12.tabela4_preco_vendac = null;
							} else {
	                         		
            row12.tabela4_preco_vendac = rs_tDBInput_1.getDouble(8);
            if(rs_tDBInput_1.wasNull()){
                    row12.tabela4_preco_vendac = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 9) {
								row12.tabela7_preco_vendac = null;
							} else {
	                         		
            row12.tabela7_preco_vendac = rs_tDBInput_1.getDouble(9);
            if(rs_tDBInput_1.wasNull()){
                    row12.tabela7_preco_vendac = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 10) {
								row12.situacao_produto = null;
							} else {
	                         		
        	row12.situacao_produto = routines.system.JDBCUtil.getString(rs_tDBInput_1, 10, false);
		                    }
					


 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_11 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

    //Code generate according to input schema and output schema
row31.cd_produto = row12.cd_produto;
row31.cd_empresa = row12.cd_empresa;
row31.SALDO_DISPONIVEL = row12.SALDO_DISPONIVEL;
row31.tabela3_preco_venda = row12.tabela3_preco_venda;
row31.tabela4_preco_venda = row12.tabela4_preco_venda;
row31.tabela7_preco_venda = row12.tabela7_preco_venda;
row31.tabela3_preco_vendac = row12.tabela3_preco_vendac;
row31.tabela4_preco_vendac = row12.tabela4_preco_vendac;
row31.tabela7_preco_vendac = row12.tabela7_preco_vendac;
row31.situacao_produto = row12.situacao_produto;
    nb_line_tJavaRow_11++;   

 


	tos_count_tJavaRow_11++;

/**
 * [tJavaRow_11 main ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					



    
		row31Struct oneRow_tHashOutput_6 = new row31Struct();
				
					oneRow_tHashOutput_6.cd_produto = row31.cd_produto;
					oneRow_tHashOutput_6.cd_empresa = row31.cd_empresa;
					oneRow_tHashOutput_6.SALDO_DISPONIVEL = row31.SALDO_DISPONIVEL;
					oneRow_tHashOutput_6.tabela3_preco_venda = row31.tabela3_preco_venda;
					oneRow_tHashOutput_6.tabela4_preco_venda = row31.tabela4_preco_venda;
					oneRow_tHashOutput_6.tabela7_preco_venda = row31.tabela7_preco_venda;
					oneRow_tHashOutput_6.tabela3_preco_vendac = row31.tabela3_preco_vendac;
					oneRow_tHashOutput_6.tabela4_preco_vendac = row31.tabela4_preco_vendac;
					oneRow_tHashOutput_6.tabela7_preco_vendac = row31.tabela7_preco_vendac;
					oneRow_tHashOutput_6.situacao_produto = row31.situacao_produto;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_11 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

globalMap.put("tJavaRow_11_NB_LINE",nb_line_tJavaRow_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tJavaRow_11", true);
end_Hash.put("tJavaRow_11", System.currentTimeMillis());




/**
 * [tJavaRow_11 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk32", 0, "ok");
								} 
							
							tJava_15Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_11 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_15", false);
		start_Hash.put("tJava_15", System.currentTimeMillis());
		
	
	currentComponent="tJava_15";
	
	
		int tos_count_tJava_15 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura dos Dados Banco: "+data);

 



/**
 * [tJava_15 begin ] stop
 */
	
	/**
	 * [tJava_15 main ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 


	tos_count_tJava_15++;

/**
 * [tJava_15 main ] stop
 */
	
	/**
	 * [tJava_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 



/**
 * [tJava_15 process_data_begin ] stop
 */
	
	/**
	 * [tJava_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 



/**
 * [tJava_15 process_data_end ] stop
 */
	
	/**
	 * [tJava_15 end ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 

ok_Hash.put("tJava_15", true);
end_Hash.put("tJava_15", System.currentTimeMillis());




/**
 * [tJava_15 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_15 finally ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 



/**
 * [tJava_15 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_15_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tHashInput_7Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableRow<row43Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public Double VALOR_DIFF;

				public Double getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_DIFF = null;
           				} else {
           			    	this.VALOR_DIFF = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_DIFF = null;
           				} else {
           			    	this.VALOR_DIFF = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// Double
				
						if(this.VALOR_DIFF == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_DIFF);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// Double
				
						if(this.VALOR_DIFF == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_DIFF);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+String.valueOf(VALOR_DIFF));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida1Struct implements routines.system.IPersistableRow<saida1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PrecoAnyStruct implements routines.system.IPersistableRow<PrecoAnyStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PrecoAnyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return null;
				}
				public Integer PRECO_DEPrecision(){
				    return null;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return null;
				}
				public Integer PRECO_PORPrecision(){
				    return null;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_7Struct implements routines.system.IPersistableRow<after_tHashInput_7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return null;
				}
				public Integer PRECO_DEPrecision(){
				    return null;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return null;
				}
				public Integer PRECO_PORPrecision(){
				    return null;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_9Process(globalMap);
		tHashInput_6Process(globalMap);

		row22Struct row22 = new row22Struct();
PrecoAnyStruct PrecoAny = new PrecoAnyStruct();
saida1Struct saida1 = new saida1Struct();
row1Struct row1 = new row1Struct();
row29Struct row29 = new row29Struct();
row26Struct row26 = new row26Struct();
row34Struct row34 = new row34Struct();
row42Struct row42 = new row42Struct();
row32Struct row32 = new row32Struct();
row33Struct row33 = new row33Struct();
row39Struct row39 = new row39Struct();
row43Struct row43 = new row43Struct();















	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row43Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row43Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tFilterRow_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_13", false);
		start_Hash.put("tFilterRow_13", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tFilterRow_13 = 0;
		
    int nb_line_tFilterRow_13 = 0;
    int nb_line_ok_tFilterRow_13 = 0;
    int nb_line_reject_tFilterRow_13 = 0;

    class Operator_tFilterRow_13 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_13(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_13 begin ] stop
 */



	
	/**
	 * [tFilterRow_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_12", false);
		start_Hash.put("tFilterRow_12", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tFilterRow_12 = 0;
		
    int nb_line_tFilterRow_12 = 0;
    int nb_line_ok_tFilterRow_12 = 0;
    int nb_line_reject_tFilterRow_12 = 0;

    class Operator_tFilterRow_12 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_12(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_12 begin ] stop
 */



	
	/**
	 * [tFilterRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_11", false);
		start_Hash.put("tFilterRow_11", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tFilterRow_11 = 0;
		
    int nb_line_tFilterRow_11 = 0;
    int nb_line_ok_tFilterRow_11 = 0;
    int nb_line_reject_tFilterRow_11 = 0;

    class Operator_tFilterRow_11 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_11(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_11 begin ] stop
 */



	
	/**
	 * [tFilterRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_10", false);
		start_Hash.put("tFilterRow_10", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tFilterRow_10 = 0;
		
    int nb_line_tFilterRow_10 = 0;
    int nb_line_ok_tFilterRow_10 = 0;
    int nb_line_reject_tFilterRow_10 = 0;

    class Operator_tFilterRow_10 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_10(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_10 begin ] stop
 */



	
	/**
	 * [tJavaRow_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_17", false);
		start_Hash.put("tJavaRow_17", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tJavaRow_17 = 0;
		

int nb_line_tJavaRow_17 = 0;

 



/**
 * [tJavaRow_17 begin ] stop
 */



	
	/**
	 * [tJavaRow_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_16", false);
		start_Hash.put("tJavaRow_16", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tJavaRow_16 = 0;
		

int nb_line_tJavaRow_16 = 0;

 



/**
 * [tJavaRow_16 begin ] stop
 */



	
	/**
	 * [tFilterRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_3", false);
		start_Hash.put("tFilterRow_3", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tFilterRow_3 = 0;
		
    int nb_line_tFilterRow_3 = 0;
    int nb_line_ok_tFilterRow_3 = 0;
    int nb_line_reject_tFilterRow_3 = 0;

    class Operator_tFilterRow_3 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_3(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_12", false);
		start_Hash.put("tJavaRow_12", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_12 = 0;
		

int nb_line_tJavaRow_12 = 0;

 



/**
 * [tJavaRow_12 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida1");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PrecoAny");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
					globalMap.get( "tHash_Lookup_row9" ))
					;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida1Struct saida1_tmp = new saida1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
					globalMap.get( "tHash_Lookup_row20" ))
					;					
					
	

row20Struct row20HashKey = new row20Struct();
row20Struct row20Default = new row20Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
PrecoAnyStruct PrecoAny_tmp = new PrecoAnyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfanymarket_0Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_15");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOfanymarket_0Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    copyOfanymarket_0Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row22.SKU_INTERNO = next_tHashInput_7.SKU_INTERNO;
	row22.SKU_MARKETPLACE = next_tHashInput_7.SKU_MARKETPLACE;
	row22.COD_MARKETPLACE = next_tHashInput_7.COD_MARKETPLACE;
	row22.PRECO_DE = next_tHashInput_7.PRECO_DE;
	row22.PRECO_POR = next_tHashInput_7.PRECO_POR;
	row22.MARKUP_ADICIONAL = next_tHashInput_7.MARKUP_ADICIONAL;
	row22.CUSTO = next_tHashInput_7.CUSTO;
	row22.DESCONTO_1E2 = next_tHashInput_7.DESCONTO_1E2;
	row22.DESCONTO_3A6 = next_tHashInput_7.DESCONTO_3A6;
	row22.CALCULO_PRECO = next_tHashInput_7.CALCULO_PRECO;
	row22.MARKETPLACE = next_tHashInput_7.MARKETPLACE;
	row22.NOME_CONTA = next_tHashInput_7.NOME_CONTA;
	row22.TITULO_PRODUTO = next_tHashInput_7.TITULO_PRODUTO;
	row22.CATEGORIA = next_tHashInput_7.CATEGORIA;
	row22.LOJA_OFICIAL = next_tHashInput_7.LOJA_OFICIAL;
	row22.TIPO_LISTAGEM = next_tHashInput_7.TIPO_LISTAGEM;
	row22.FRETE_GRATIS = next_tHashInput_7.FRETE_GRATIS;
	row22.FORMA_ENVIO = next_tHashInput_7.FORMA_ENVIO;
	row22.VARIACAO_PRINCIPAL = next_tHashInput_7.VARIACAO_PRINCIPAL;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row20Struct row20 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row20" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow20 = false;
       		  	    	
       		  	    	
 							row20Struct row20ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row20HashKey.cd_produto = row22.SKU_INTERNO ;
                        		    		

								
		                        	row20HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row20.lookup( row20HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row20.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_4 = true;
	  								
						
									
	
		  								forceLooprow20 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow20 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row20 != null && tHash_Lookup_row20.hasNext()) || forceLooprow20) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row20'
									
                    		  	 
							   
                    		  	 
	       		  	    	row20Struct fromLookup_row20 = null;
							row20 = row20Default;
										 
							
								
								if(!forceLooprow20) { // G 46
								
							
								 
							
								
								fromLookup_row20 = tHash_Lookup_row20.next();

							

							if(fromLookup_row20 != null) {
								row20 = fromLookup_row20;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow20 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

PrecoAny = null;

if(!rejectedInnerJoin_tMap_4 ) {

// # Output table : 'PrecoAny'
PrecoAny_tmp.SKU_INTERNO = row22.SKU_INTERNO ;
PrecoAny_tmp.SKU_MARKETPLACE = row22.SKU_MARKETPLACE ;
PrecoAny_tmp.COD_MARKETPLACE = row22.COD_MARKETPLACE ;
PrecoAny_tmp.PRECO_DE = row22.PRECO_DE != null ? row22.PRECO_DE : 0.0 ;
PrecoAny_tmp.PRECO_POR = row22.PRECO_POR != null ? row22.PRECO_POR : 0.0 ;
PrecoAny_tmp.MARKUP_ADICIONAL = row22.MARKUP_ADICIONAL ;
PrecoAny_tmp.CUSTO = row22.CUSTO ;
PrecoAny_tmp.DESCONTO_1E2 = row22.DESCONTO_1E2 ;
PrecoAny_tmp.DESCONTO_3A6 = row22.DESCONTO_3A6 ;
PrecoAny_tmp.CALCULO_PRECO = row22.CALCULO_PRECO ;
PrecoAny_tmp.MARKETPLACE = row22.MARKETPLACE ;
PrecoAny_tmp.NOME_CONTA = row22.NOME_CONTA ;
PrecoAny_tmp.TITULO_PRODUTO = row22.TITULO_PRODUTO ;
PrecoAny_tmp.CATEGORIA = row22.CATEGORIA ;
PrecoAny_tmp.LOJA_OFICIAL = row22.LOJA_OFICIAL ;
PrecoAny_tmp.TIPO_LISTAGEM = row22.TIPO_LISTAGEM ;
PrecoAny_tmp.FRETE_GRATIS = row22.FRETE_GRATIS ;
PrecoAny_tmp.FORMA_ENVIO = row22.FORMA_ENVIO ;
PrecoAny_tmp.VARIACAO_PRINCIPAL = row22.VARIACAO_PRINCIPAL ;
PrecoAny_tmp.SALDO_DISPONIVEL = null;
PrecoAny_tmp.tabela3_preco_venda = row20.tabela3_preco_venda != null ? row20.tabela3_preco_venda : 0.0 ;
PrecoAny_tmp.tabela4_preco_venda = row20.tabela4_preco_venda != null ? row20.tabela4_preco_venda : 0.0 ;
PrecoAny_tmp.tabela7_preco_venda = row20.tabela7_preco_venda  != null ? row20.tabela7_preco_venda : 0.0 ;
PrecoAny_tmp.tabela3_preco_vendac = row20.tabela3_preco_vendac  != null ? row20.tabela3_preco_vendac : 0.0 ;
PrecoAny_tmp.tabela4_preco_vendac = row20.tabela4_preco_vendac  != null ? row20.tabela4_preco_vendac : 0.0 ;
PrecoAny_tmp.tabela7_preco_vendac = row20.tabela7_preco_vendac  != null ? row20.tabela7_preco_vendac : 0.0 ;
PrecoAny_tmp.situacao_produto = null;
PrecoAny = PrecoAny_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "PrecoAny"
if(PrecoAny != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PrecoAny"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row9Struct row9 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row9HashKey.CD_PRODUTO = PrecoAny.SKU_INTERNO ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row9.lookup( row9HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row9 != null && tHash_Lookup_row9.getCount(row9HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row9' and it contains more one result from keys :  row9.CD_PRODUTO = '" + row9HashKey.CD_PRODUTO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								 
							
							
								if (tHash_Lookup_row9 !=null && tHash_Lookup_row9.hasNext()) { // G 099
								
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							
							
								} // G 099
							
							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

saida1 = null;


// # Output table : 'saida1'
saida1_tmp.SKU_INTERNO = PrecoAny.SKU_INTERNO;
saida1_tmp.SKU_MARKETPLACE = PrecoAny.SKU_MARKETPLACE;
saida1_tmp.COD_MARKETPLACE = PrecoAny.COD_MARKETPLACE;
saida1_tmp.PRECO_DE = PrecoAny.PRECO_DE;
saida1_tmp.PRECO_POR = PrecoAny.PRECO_POR;
saida1_tmp.MARKUP_ADICIONAL = PrecoAny.MARKUP_ADICIONAL ;
saida1_tmp.CUSTO = PrecoAny.CUSTO ;
saida1_tmp.DESCONTO_1E2 = PrecoAny.DESCONTO_1E2 ;
saida1_tmp.DESCONTO_3A6 = PrecoAny.DESCONTO_3A6 ;
saida1_tmp.CALCULO_PRECO = PrecoAny.CALCULO_PRECO ;
saida1_tmp.MARKETPLACE = PrecoAny.MARKETPLACE;
saida1_tmp.NOME_CONTA = PrecoAny.NOME_CONTA ;
saida1_tmp.TITULO_PRODUTO = PrecoAny.TITULO_PRODUTO ;
saida1_tmp.CATEGORIA = PrecoAny.CATEGORIA ;
saida1_tmp.LOJA_OFICIAL = PrecoAny.LOJA_OFICIAL ;
saida1_tmp.TIPO_LISTAGEM = PrecoAny.TIPO_LISTAGEM ;
saida1_tmp.FRETE_GRATIS = PrecoAny.FRETE_GRATIS ;
saida1_tmp.FORMA_ENVIO = PrecoAny.FORMA_ENVIO ;
saida1_tmp.VARIACAO_PRINCIPAL = PrecoAny.VARIACAO_PRINCIPAL ;
saida1_tmp.SALDO_DISPONIVEL = row9.SALDO_DISPONIVEL != null ? row9.SALDO_DISPONIVEL : 0 ;
saida1_tmp.tabela3_preco_venda = PrecoAny.tabela3_preco_venda;
saida1_tmp.tabela4_preco_venda = PrecoAny.tabela4_preco_venda;
saida1_tmp.tabela7_preco_venda = PrecoAny.tabela7_preco_venda;
saida1_tmp.tabela3_preco_vendac = PrecoAny.tabela3_preco_vendac;
saida1_tmp.tabela4_preco_vendac = PrecoAny.tabela4_preco_vendac;
saida1_tmp.tabela7_preco_vendac = PrecoAny.tabela7_preco_vendac;
saida1_tmp.situacao_produto = row9.SITUACAO_PRODUTO != null ? row9.SITUACAO_PRODUTO : "001" ;
saida1 = saida1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "saida1"
if(saida1 != null) { 



	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row1.SKU_INTERNO = saida1.SKU_INTERNO;
row1.SKU_MARKETPLACE = saida1.SKU_MARKETPLACE;
row1.COD_MARKETPLACE = saida1.COD_MARKETPLACE;
row1.PRECO_DE = saida1.PRECO_DE;
if ((saida1.MARKETPLACE.equals("Mercado Livre"))) {
row1.PRECO_POR = saida1.tabela3_preco_venda;
} else{
row1.PRECO_POR = saida1.tabela4_preco_venda;
}
row1.MARKUP_ADICIONAL = saida1.MARKUP_ADICIONAL;
row1.CUSTO = saida1.CUSTO;
row1.DESCONTO_1E2 = saida1.DESCONTO_1E2;
row1.DESCONTO_3A6 = saida1.DESCONTO_3A6;
row1.CALCULO_PRECO = saida1.CALCULO_PRECO;
row1.MARKETPLACE = saida1.MARKETPLACE;
row1.NOME_CONTA = saida1.NOME_CONTA;
row1.TITULO_PRODUTO = saida1.TITULO_PRODUTO;
row1.CATEGORIA = saida1.CATEGORIA;
row1.LOJA_OFICIAL = saida1.LOJA_OFICIAL;
row1.TIPO_LISTAGEM = saida1.TIPO_LISTAGEM;
row1.FRETE_GRATIS = saida1.FRETE_GRATIS;
row1.FORMA_ENVIO = saida1.FORMA_ENVIO;
row1.VARIACAO_PRINCIPAL = saida1.VARIACAO_PRINCIPAL;
row1.SALDO_DISPONIVEL = saida1.SALDO_DISPONIVEL;
row1.tabela3_preco_venda = saida1.tabela3_preco_venda;
row1.tabela4_preco_venda = saida1.tabela4_preco_venda;
row1.tabela7_preco_venda = saida1.tabela7_preco_venda;
row1.tabela3_preco_vendac = saida1.tabela3_preco_vendac;
row1.tabela4_preco_vendac = saida1.tabela4_preco_vendac;
row1.tabela7_preco_vendac = saida1.tabela7_preco_vendac;
row1.situacao_produto = saida1.situacao_produto;

    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_12 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row29.SKU_INTERNO = row1.SKU_INTERNO;
row29.SKU_MARKETPLACE = row1.SKU_MARKETPLACE;
row29.COD_MARKETPLACE = row1.COD_MARKETPLACE;
row29.PRECO_DE = row1.PRECO_DE;
row29.PRECO_POR = row1.PRECO_POR;
row29.MARKUP_ADICIONAL = row1.MARKUP_ADICIONAL;
row29.CUSTO = row1.CUSTO;
row29.DESCONTO_1E2 = row1.DESCONTO_1E2;
row29.DESCONTO_3A6 = row1.DESCONTO_3A6;
row29.CALCULO_PRECO = row1.CALCULO_PRECO;
row29.MARKETPLACE = row1.MARKETPLACE;
row29.NOME_CONTA = row1.NOME_CONTA;
row29.TITULO_PRODUTO = row1.TITULO_PRODUTO;
row29.CATEGORIA = row1.CATEGORIA;
row29.LOJA_OFICIAL = row1.LOJA_OFICIAL;
row29.TIPO_LISTAGEM = row1.TIPO_LISTAGEM;
row29.FRETE_GRATIS = row1.FRETE_GRATIS;
row29.FORMA_ENVIO = row1.FORMA_ENVIO;
row29.VARIACAO_PRINCIPAL = row1.VARIACAO_PRINCIPAL;
row29.SALDO_DISPONIVEL = row1.SALDO_DISPONIVEL;
row29.tabela3_preco_venda = row1.tabela3_preco_venda;
row29.tabela4_preco_venda = row1.tabela4_preco_venda;
row29.tabela7_preco_venda = row1.tabela7_preco_venda;
row29.tabela3_preco_vendac = row1.tabela3_preco_vendac;
row29.tabela4_preco_vendac = row1.tabela4_preco_vendac;
row29.tabela7_preco_vendac = row1.tabela7_preco_vendac;
row29.situacao_produto = row1.situacao_produto;
if (row1.PRECO_POR.compareTo(row1.PRECO_DE) != 0) {
row29.validapreco = 1;
} else{
row29.validapreco = 0;
}

    nb_line_tJavaRow_12++;   

 


	tos_count_tJavaRow_12++;

/**
 * [tJavaRow_12 main ] stop
 */
	
	/**
	 * [tJavaRow_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_3 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

          row26 = null;
    Operator_tFilterRow_3 ope_tFilterRow_3 = new Operator_tFilterRow_3("&&");
            ope_tFilterRow_3.matches((row29.validapreco == null? false : row29.validapreco.compareTo(ParserUtils.parseTo_Integer(String.valueOf(1))) == 0)
                           , "validapreco.compareTo(1) == 0 failed");
		 	
    
    if (ope_tFilterRow_3.getMatchFlag()) {
              if(row26 == null){ 
                row26 = new row26Struct();
              }
               row26.SKU_INTERNO = row29.SKU_INTERNO;
               row26.SKU_MARKETPLACE = row29.SKU_MARKETPLACE;
               row26.COD_MARKETPLACE = row29.COD_MARKETPLACE;
               row26.PRECO_DE = row29.PRECO_DE;
               row26.PRECO_POR = row29.PRECO_POR;
               row26.MARKUP_ADICIONAL = row29.MARKUP_ADICIONAL;
               row26.CUSTO = row29.CUSTO;
               row26.DESCONTO_1E2 = row29.DESCONTO_1E2;
               row26.DESCONTO_3A6 = row29.DESCONTO_3A6;
               row26.CALCULO_PRECO = row29.CALCULO_PRECO;
               row26.MARKETPLACE = row29.MARKETPLACE;
               row26.NOME_CONTA = row29.NOME_CONTA;
               row26.TITULO_PRODUTO = row29.TITULO_PRODUTO;
               row26.CATEGORIA = row29.CATEGORIA;
               row26.LOJA_OFICIAL = row29.LOJA_OFICIAL;
               row26.TIPO_LISTAGEM = row29.TIPO_LISTAGEM;
               row26.FRETE_GRATIS = row29.FRETE_GRATIS;
               row26.FORMA_ENVIO = row29.FORMA_ENVIO;
               row26.VARIACAO_PRINCIPAL = row29.VARIACAO_PRINCIPAL;
               row26.SALDO_DISPONIVEL = row29.SALDO_DISPONIVEL;
               row26.tabela3_preco_venda = row29.tabela3_preco_venda;
               row26.tabela4_preco_venda = row29.tabela4_preco_venda;
               row26.tabela7_preco_venda = row29.tabela7_preco_venda;
               row26.tabela3_preco_vendac = row29.tabela3_preco_vendac;
               row26.tabela4_preco_vendac = row29.tabela4_preco_vendac;
               row26.tabela7_preco_vendac = row29.tabela7_preco_vendac;
               row26.situacao_produto = row29.situacao_produto;
               row26.validapreco = row29.validapreco;    
      nb_line_ok_tFilterRow_3++;
    } else {
      nb_line_reject_tFilterRow_3++;
    }

nb_line_tFilterRow_3++;

 


	tos_count_tFilterRow_3++;

/**
 * [tFilterRow_3 main ] stop
 */
	
	/**
	 * [tFilterRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_begin ] stop
 */
// Start of branch "row26"
if(row26 != null) { 



	
	/**
	 * [tJavaRow_16 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

    //Code generated according to input schema and output schema
row34.SKU_INTERNO = row26.SKU_INTERNO;
row34.SKU_MARKETPLACE = row26.SKU_MARKETPLACE;
row34.COD_MARKETPLACE = row26.COD_MARKETPLACE;
row34.PRECO_DE = row26.PRECO_DE;
row34.PRECO_POR = row26.PRECO_POR;
row34.MARKUP_ADICIONAL = row26.MARKUP_ADICIONAL;
row34.CUSTO = row26.CUSTO;
row34.DESCONTO_1E2 = row26.DESCONTO_1E2;
row34.DESCONTO_3A6 = row26.DESCONTO_3A6;
row34.CALCULO_PRECO = row26.CALCULO_PRECO;
row34.MARKETPLACE = row26.MARKETPLACE;
row34.NOME_CONTA = row26.NOME_CONTA;
row34.TITULO_PRODUTO = row26.TITULO_PRODUTO;
row34.CATEGORIA = row26.CATEGORIA;
row34.LOJA_OFICIAL = row26.LOJA_OFICIAL;
row34.TIPO_LISTAGEM = row26.TIPO_LISTAGEM;
row34.FRETE_GRATIS = row26.FRETE_GRATIS;
row34.FORMA_ENVIO = row26.FORMA_ENVIO;
row34.VARIACAO_PRINCIPAL = row26.VARIACAO_PRINCIPAL;
row34.SALDO_DISPONIVEL = row26.SALDO_DISPONIVEL;
row34.tabela3_preco_venda = row26.tabela3_preco_venda;
row34.tabela4_preco_venda = row26.tabela4_preco_venda;
row34.tabela7_preco_venda = row26.tabela7_preco_venda;
row34.tabela3_preco_vendac = row26.tabela3_preco_vendac;
row34.tabela4_preco_vendac = row26.tabela4_preco_vendac;
row34.tabela7_preco_vendac = row26.tabela7_preco_vendac;
row34.situacao_produto = row26.situacao_produto;
row34.validapreco = row26.validapreco;
row34.VALOR_DIFF = row34.PRECO_POR - row34.PRECO_DE;

    nb_line_tJavaRow_16++;   

 


	tos_count_tJavaRow_16++;

/**
 * [tJavaRow_16 main ] stop
 */
	
	/**
	 * [tJavaRow_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_17 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					

    //Code generated according to input schema and output schema
row42.SKU_INTERNO = row34.SKU_INTERNO;
row42.SKU_MARKETPLACE = row34.SKU_MARKETPLACE;
row42.COD_MARKETPLACE = row34.COD_MARKETPLACE;
row42.PRECO_DE = row34.PRECO_DE;
row42.PRECO_POR = row34.PRECO_POR;
row42.MARKUP_ADICIONAL = row34.MARKUP_ADICIONAL;
row42.CUSTO = row34.CUSTO;
row42.DESCONTO_1E2 = row34.DESCONTO_1E2;
row42.DESCONTO_3A6 = row34.DESCONTO_3A6;
row42.CALCULO_PRECO = row34.CALCULO_PRECO;
row42.MARKETPLACE = row34.MARKETPLACE;
row42.NOME_CONTA = row34.NOME_CONTA;
row42.TITULO_PRODUTO = row34.TITULO_PRODUTO;
row42.CATEGORIA = row34.CATEGORIA;
row42.LOJA_OFICIAL = row34.LOJA_OFICIAL;
row42.TIPO_LISTAGEM = row34.TIPO_LISTAGEM;
row42.FRETE_GRATIS = row34.FRETE_GRATIS;
row42.FORMA_ENVIO = row34.FORMA_ENVIO;
row42.VARIACAO_PRINCIPAL = row34.VARIACAO_PRINCIPAL;
row42.SALDO_DISPONIVEL = row34.SALDO_DISPONIVEL;
row42.tabela3_preco_venda = row34.tabela3_preco_venda;
row42.tabela4_preco_venda = row34.tabela4_preco_venda;
row42.tabela7_preco_venda = row34.tabela7_preco_venda;
row42.tabela3_preco_vendac = row34.tabela3_preco_vendac;
row42.tabela4_preco_vendac = row34.tabela4_preco_vendac;
row42.tabela7_preco_vendac = row34.tabela7_preco_vendac;
row42.situacao_produto = row34.situacao_produto;
row42.validapreco = row34.validapreco;
row42.VALOR_DIFF = String.format("%.2f",row34.VALOR_DIFF);

    nb_line_tJavaRow_17++;   

 


	tos_count_tJavaRow_17++;

/**
 * [tJavaRow_17 main ] stop
 */
	
	/**
	 * [tJavaRow_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_10 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					

          row32 = null;
    Operator_tFilterRow_10 ope_tFilterRow_10 = new Operator_tFilterRow_10("&&");
            ope_tFilterRow_10.matches((row42.VALOR_DIFF == null? false : row42.VALOR_DIFF.compareTo("0,01") != 0)
                           , "VALOR_DIFF.compareTo(\"0,01\") != 0 failed");
    
    if (ope_tFilterRow_10.getMatchFlag()) {
              if(row32 == null){ 
                row32 = new row32Struct();
              }
               row32.SKU_INTERNO = row42.SKU_INTERNO;
               row32.SKU_MARKETPLACE = row42.SKU_MARKETPLACE;
               row32.COD_MARKETPLACE = row42.COD_MARKETPLACE;
               row32.PRECO_DE = row42.PRECO_DE;
               row32.PRECO_POR = row42.PRECO_POR;
               row32.MARKUP_ADICIONAL = row42.MARKUP_ADICIONAL;
               row32.CUSTO = row42.CUSTO;
               row32.DESCONTO_1E2 = row42.DESCONTO_1E2;
               row32.DESCONTO_3A6 = row42.DESCONTO_3A6;
               row32.CALCULO_PRECO = row42.CALCULO_PRECO;
               row32.MARKETPLACE = row42.MARKETPLACE;
               row32.NOME_CONTA = row42.NOME_CONTA;
               row32.TITULO_PRODUTO = row42.TITULO_PRODUTO;
               row32.CATEGORIA = row42.CATEGORIA;
               row32.LOJA_OFICIAL = row42.LOJA_OFICIAL;
               row32.TIPO_LISTAGEM = row42.TIPO_LISTAGEM;
               row32.FRETE_GRATIS = row42.FRETE_GRATIS;
               row32.FORMA_ENVIO = row42.FORMA_ENVIO;
               row32.VARIACAO_PRINCIPAL = row42.VARIACAO_PRINCIPAL;
               row32.SALDO_DISPONIVEL = row42.SALDO_DISPONIVEL;
               row32.tabela3_preco_venda = row42.tabela3_preco_venda;
               row32.tabela4_preco_venda = row42.tabela4_preco_venda;
               row32.tabela7_preco_venda = row42.tabela7_preco_venda;
               row32.tabela3_preco_vendac = row42.tabela3_preco_vendac;
               row32.tabela4_preco_vendac = row42.tabela4_preco_vendac;
               row32.tabela7_preco_vendac = row42.tabela7_preco_vendac;
               row32.situacao_produto = row42.situacao_produto;
               row32.validapreco = row42.validapreco;
               row32.VALOR_DIFF = row42.VALOR_DIFF;    
      nb_line_ok_tFilterRow_10++;
    } else {
      nb_line_reject_tFilterRow_10++;
    }

nb_line_tFilterRow_10++;

 


	tos_count_tFilterRow_10++;

/**
 * [tFilterRow_10 main ] stop
 */
	
	/**
	 * [tFilterRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	

 



/**
 * [tFilterRow_10 process_data_begin ] stop
 */
// Start of branch "row32"
if(row32 != null) { 



	
	/**
	 * [tFilterRow_11 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

          row33 = null;
    Operator_tFilterRow_11 ope_tFilterRow_11 = new Operator_tFilterRow_11("&&");
            ope_tFilterRow_11.matches((row32.VALOR_DIFF == null? false : row32.VALOR_DIFF.compareTo("0,00") != 0)
                           , "VALOR_DIFF.compareTo(\"0,00\") != 0 failed");
    
    if (ope_tFilterRow_11.getMatchFlag()) {
              if(row33 == null){ 
                row33 = new row33Struct();
              }
               row33.SKU_INTERNO = row32.SKU_INTERNO;
               row33.SKU_MARKETPLACE = row32.SKU_MARKETPLACE;
               row33.COD_MARKETPLACE = row32.COD_MARKETPLACE;
               row33.PRECO_DE = row32.PRECO_DE;
               row33.PRECO_POR = row32.PRECO_POR;
               row33.MARKUP_ADICIONAL = row32.MARKUP_ADICIONAL;
               row33.CUSTO = row32.CUSTO;
               row33.DESCONTO_1E2 = row32.DESCONTO_1E2;
               row33.DESCONTO_3A6 = row32.DESCONTO_3A6;
               row33.CALCULO_PRECO = row32.CALCULO_PRECO;
               row33.MARKETPLACE = row32.MARKETPLACE;
               row33.NOME_CONTA = row32.NOME_CONTA;
               row33.TITULO_PRODUTO = row32.TITULO_PRODUTO;
               row33.CATEGORIA = row32.CATEGORIA;
               row33.LOJA_OFICIAL = row32.LOJA_OFICIAL;
               row33.TIPO_LISTAGEM = row32.TIPO_LISTAGEM;
               row33.FRETE_GRATIS = row32.FRETE_GRATIS;
               row33.FORMA_ENVIO = row32.FORMA_ENVIO;
               row33.VARIACAO_PRINCIPAL = row32.VARIACAO_PRINCIPAL;
               row33.SALDO_DISPONIVEL = row32.SALDO_DISPONIVEL;
               row33.tabela3_preco_venda = row32.tabela3_preco_venda;
               row33.tabela4_preco_venda = row32.tabela4_preco_venda;
               row33.tabela7_preco_venda = row32.tabela7_preco_venda;
               row33.tabela3_preco_vendac = row32.tabela3_preco_vendac;
               row33.tabela4_preco_vendac = row32.tabela4_preco_vendac;
               row33.tabela7_preco_vendac = row32.tabela7_preco_vendac;
               row33.situacao_produto = row32.situacao_produto;
               row33.validapreco = row32.validapreco;
               row33.VALOR_DIFF = row32.VALOR_DIFF;    
      nb_line_ok_tFilterRow_11++;
    } else {
      nb_line_reject_tFilterRow_11++;
    }

nb_line_tFilterRow_11++;

 


	tos_count_tFilterRow_11++;

/**
 * [tFilterRow_11 main ] stop
 */
	
	/**
	 * [tFilterRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_11";
	
	

 



/**
 * [tFilterRow_11 process_data_begin ] stop
 */
// Start of branch "row33"
if(row33 != null) { 



	
	/**
	 * [tFilterRow_12 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					

          row39 = null;
    Operator_tFilterRow_12 ope_tFilterRow_12 = new Operator_tFilterRow_12("&&");
            ope_tFilterRow_12.matches((row33.VALOR_DIFF == null? false : row33.VALOR_DIFF.compareTo("-0,01") != 0)
                           , "VALOR_DIFF.compareTo(\"-0,01\") != 0 failed");
    
    if (ope_tFilterRow_12.getMatchFlag()) {
              if(row39 == null){ 
                row39 = new row39Struct();
              }
               row39.SKU_INTERNO = row33.SKU_INTERNO;
               row39.SKU_MARKETPLACE = row33.SKU_MARKETPLACE;
               row39.COD_MARKETPLACE = row33.COD_MARKETPLACE;
               row39.PRECO_DE = row33.PRECO_DE;
               row39.PRECO_POR = row33.PRECO_POR;
               row39.MARKUP_ADICIONAL = row33.MARKUP_ADICIONAL;
               row39.CUSTO = row33.CUSTO;
               row39.DESCONTO_1E2 = row33.DESCONTO_1E2;
               row39.DESCONTO_3A6 = row33.DESCONTO_3A6;
               row39.CALCULO_PRECO = row33.CALCULO_PRECO;
               row39.MARKETPLACE = row33.MARKETPLACE;
               row39.NOME_CONTA = row33.NOME_CONTA;
               row39.TITULO_PRODUTO = row33.TITULO_PRODUTO;
               row39.CATEGORIA = row33.CATEGORIA;
               row39.LOJA_OFICIAL = row33.LOJA_OFICIAL;
               row39.TIPO_LISTAGEM = row33.TIPO_LISTAGEM;
               row39.FRETE_GRATIS = row33.FRETE_GRATIS;
               row39.FORMA_ENVIO = row33.FORMA_ENVIO;
               row39.VARIACAO_PRINCIPAL = row33.VARIACAO_PRINCIPAL;
               row39.SALDO_DISPONIVEL = row33.SALDO_DISPONIVEL;
               row39.tabela3_preco_venda = row33.tabela3_preco_venda;
               row39.tabela4_preco_venda = row33.tabela4_preco_venda;
               row39.tabela7_preco_venda = row33.tabela7_preco_venda;
               row39.tabela3_preco_vendac = row33.tabela3_preco_vendac;
               row39.tabela4_preco_vendac = row33.tabela4_preco_vendac;
               row39.tabela7_preco_vendac = row33.tabela7_preco_vendac;
               row39.situacao_produto = row33.situacao_produto;
               row39.validapreco = row33.validapreco;
               row39.VALOR_DIFF = row33.VALOR_DIFF;    
      nb_line_ok_tFilterRow_12++;
    } else {
      nb_line_reject_tFilterRow_12++;
    }

nb_line_tFilterRow_12++;

 


	tos_count_tFilterRow_12++;

/**
 * [tFilterRow_12 main ] stop
 */
	
	/**
	 * [tFilterRow_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_12";
	
	

 



/**
 * [tFilterRow_12 process_data_begin ] stop
 */
// Start of branch "row39"
if(row39 != null) { 



	
	/**
	 * [tFilterRow_13 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					

          row43 = null;
    Operator_tFilterRow_13 ope_tFilterRow_13 = new Operator_tFilterRow_13("&&");
            ope_tFilterRow_13.matches((row39.VALOR_DIFF == null? false : row39.VALOR_DIFF.compareTo("-0,00") != 0)
                           , "VALOR_DIFF.compareTo(\"-0,00\") != 0 failed");
    
    if (ope_tFilterRow_13.getMatchFlag()) {
              if(row43 == null){ 
                row43 = new row43Struct();
              }
               row43.SKU_INTERNO = row39.SKU_INTERNO;
               row43.SKU_MARKETPLACE = row39.SKU_MARKETPLACE;
               row43.COD_MARKETPLACE = row39.COD_MARKETPLACE;
               row43.PRECO_DE = row39.PRECO_DE;
               row43.PRECO_POR = row39.PRECO_POR;
               row43.MARKUP_ADICIONAL = row39.MARKUP_ADICIONAL;
               row43.CUSTO = row39.CUSTO;
               row43.DESCONTO_1E2 = row39.DESCONTO_1E2;
               row43.DESCONTO_3A6 = row39.DESCONTO_3A6;
               row43.CALCULO_PRECO = row39.CALCULO_PRECO;
               row43.MARKETPLACE = row39.MARKETPLACE;
               row43.NOME_CONTA = row39.NOME_CONTA;
               row43.TITULO_PRODUTO = row39.TITULO_PRODUTO;
               row43.CATEGORIA = row39.CATEGORIA;
               row43.LOJA_OFICIAL = row39.LOJA_OFICIAL;
               row43.TIPO_LISTAGEM = row39.TIPO_LISTAGEM;
               row43.FRETE_GRATIS = row39.FRETE_GRATIS;
               row43.FORMA_ENVIO = row39.FORMA_ENVIO;
               row43.VARIACAO_PRINCIPAL = row39.VARIACAO_PRINCIPAL;
               row43.SALDO_DISPONIVEL = row39.SALDO_DISPONIVEL;
               row43.tabela3_preco_venda = row39.tabela3_preco_venda;
               row43.tabela4_preco_venda = row39.tabela4_preco_venda;
               row43.tabela7_preco_venda = row39.tabela7_preco_venda;
               row43.tabela3_preco_vendac = row39.tabela3_preco_vendac;
               row43.tabela4_preco_vendac = row39.tabela4_preco_vendac;
               row43.tabela7_preco_vendac = row39.tabela7_preco_vendac;
               row43.situacao_produto = row39.situacao_produto;
               row43.validapreco = row39.validapreco;
               row43.VALOR_DIFF = row39.VALOR_DIFF;    
      nb_line_ok_tFilterRow_13++;
    } else {
      nb_line_reject_tFilterRow_13++;
    }

nb_line_tFilterRow_13++;

 


	tos_count_tFilterRow_13++;

/**
 * [tFilterRow_13 main ] stop
 */
	
	/**
	 * [tFilterRow_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_13";
	
	

 



/**
 * [tFilterRow_13 process_data_begin ] stop
 */
// Start of branch "row43"
if(row43 != null) { 



	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					



    
		row43Struct oneRow_tHashOutput_10 = new row43Struct();
				
					oneRow_tHashOutput_10.SKU_INTERNO = row43.SKU_INTERNO;
					oneRow_tHashOutput_10.SKU_MARKETPLACE = row43.SKU_MARKETPLACE;
					oneRow_tHashOutput_10.COD_MARKETPLACE = row43.COD_MARKETPLACE;
					oneRow_tHashOutput_10.PRECO_DE = row43.PRECO_DE;
					oneRow_tHashOutput_10.PRECO_POR = row43.PRECO_POR;
					oneRow_tHashOutput_10.MARKUP_ADICIONAL = row43.MARKUP_ADICIONAL;
					oneRow_tHashOutput_10.CUSTO = row43.CUSTO;
					oneRow_tHashOutput_10.DESCONTO_1E2 = row43.DESCONTO_1E2;
					oneRow_tHashOutput_10.DESCONTO_3A6 = row43.DESCONTO_3A6;
					oneRow_tHashOutput_10.CALCULO_PRECO = row43.CALCULO_PRECO;
					oneRow_tHashOutput_10.MARKETPLACE = row43.MARKETPLACE;
					oneRow_tHashOutput_10.NOME_CONTA = row43.NOME_CONTA;
					oneRow_tHashOutput_10.TITULO_PRODUTO = row43.TITULO_PRODUTO;
					oneRow_tHashOutput_10.CATEGORIA = row43.CATEGORIA;
					oneRow_tHashOutput_10.LOJA_OFICIAL = row43.LOJA_OFICIAL;
					oneRow_tHashOutput_10.TIPO_LISTAGEM = row43.TIPO_LISTAGEM;
					oneRow_tHashOutput_10.FRETE_GRATIS = row43.FRETE_GRATIS;
					oneRow_tHashOutput_10.FORMA_ENVIO = row43.FORMA_ENVIO;
					oneRow_tHashOutput_10.VARIACAO_PRINCIPAL = row43.VARIACAO_PRINCIPAL;
					oneRow_tHashOutput_10.SALDO_DISPONIVEL = row43.SALDO_DISPONIVEL;
					oneRow_tHashOutput_10.tabela3_preco_venda = row43.tabela3_preco_venda;
					oneRow_tHashOutput_10.tabela4_preco_venda = row43.tabela4_preco_venda;
					oneRow_tHashOutput_10.tabela7_preco_venda = row43.tabela7_preco_venda;
					oneRow_tHashOutput_10.tabela3_preco_vendac = row43.tabela3_preco_vendac;
					oneRow_tHashOutput_10.tabela4_preco_vendac = row43.tabela4_preco_vendac;
					oneRow_tHashOutput_10.tabela7_preco_vendac = row43.tabela7_preco_vendac;
					oneRow_tHashOutput_10.situacao_produto = row43.situacao_produto;
					oneRow_tHashOutput_10.validapreco = row43.validapreco;
					oneRow_tHashOutput_10.VALOR_DIFF = row43.VALOR_DIFF;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */

} // End of branch "row43"




	
	/**
	 * [tFilterRow_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_13";
	
	

 



/**
 * [tFilterRow_13 process_data_end ] stop
 */

} // End of branch "row39"




	
	/**
	 * [tFilterRow_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_12";
	
	

 



/**
 * [tFilterRow_12 process_data_end ] stop
 */

} // End of branch "row33"




	
	/**
	 * [tFilterRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_11";
	
	

 



/**
 * [tFilterRow_11 process_data_end ] stop
 */

} // End of branch "row32"




	
	/**
	 * [tFilterRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	

 



/**
 * [tFilterRow_10 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 process_data_end ] stop
 */

} // End of branch "row26"




	
	/**
	 * [tFilterRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */

} // End of branch "saida1"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "PrecoAny"



	
		} // close loop of lookup 'row20' // G_TM_M_043
	
	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_15");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row20 != null) {
						tHash_Lookup_row20.endGet();
					}
					globalMap.remove( "tHash_Lookup_row20" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PrecoAny");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tJavaRow_12 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

globalMap.put("tJavaRow_12_NB_LINE",nb_line_tJavaRow_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_12", true);
end_Hash.put("tJavaRow_12", System.currentTimeMillis());




/**
 * [tJavaRow_12 end ] stop
 */

	
	/**
	 * [tFilterRow_3 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
    globalMap.put("tFilterRow_3_NB_LINE", nb_line_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_OK", nb_line_ok_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_REJECT", nb_line_reject_tFilterRow_3);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tFilterRow_3", true);
end_Hash.put("tFilterRow_3", System.currentTimeMillis());




/**
 * [tFilterRow_3 end ] stop
 */

	
	/**
	 * [tJavaRow_16 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

globalMap.put("tJavaRow_16_NB_LINE",nb_line_tJavaRow_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tJavaRow_16", true);
end_Hash.put("tJavaRow_16", System.currentTimeMillis());




/**
 * [tJavaRow_16 end ] stop
 */

	
	/**
	 * [tJavaRow_17 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

globalMap.put("tJavaRow_17_NB_LINE",nb_line_tJavaRow_17);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tJavaRow_17", true);
end_Hash.put("tJavaRow_17", System.currentTimeMillis());




/**
 * [tJavaRow_17 end ] stop
 */

	
	/**
	 * [tFilterRow_10 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	
    globalMap.put("tFilterRow_10_NB_LINE", nb_line_tFilterRow_10);
    globalMap.put("tFilterRow_10_NB_LINE_OK", nb_line_ok_tFilterRow_10);
    globalMap.put("tFilterRow_10_NB_LINE_REJECT", nb_line_reject_tFilterRow_10);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tFilterRow_10", true);
end_Hash.put("tFilterRow_10", System.currentTimeMillis());




/**
 * [tFilterRow_10 end ] stop
 */

	
	/**
	 * [tFilterRow_11 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_11";
	
	
    globalMap.put("tFilterRow_11_NB_LINE", nb_line_tFilterRow_11);
    globalMap.put("tFilterRow_11_NB_LINE_OK", nb_line_ok_tFilterRow_11);
    globalMap.put("tFilterRow_11_NB_LINE_REJECT", nb_line_reject_tFilterRow_11);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tFilterRow_11", true);
end_Hash.put("tFilterRow_11", System.currentTimeMillis());




/**
 * [tFilterRow_11 end ] stop
 */

	
	/**
	 * [tFilterRow_12 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_12";
	
	
    globalMap.put("tFilterRow_12_NB_LINE", nb_line_tFilterRow_12);
    globalMap.put("tFilterRow_12_NB_LINE_OK", nb_line_ok_tFilterRow_12);
    globalMap.put("tFilterRow_12_NB_LINE_REJECT", nb_line_reject_tFilterRow_12);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tFilterRow_12", true);
end_Hash.put("tFilterRow_12", System.currentTimeMillis());




/**
 * [tFilterRow_12 end ] stop
 */

	
	/**
	 * [tFilterRow_13 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_13";
	
	
    globalMap.put("tFilterRow_13_NB_LINE", nb_line_tFilterRow_13);
    globalMap.put("tFilterRow_13_NB_LINE_OK", nb_line_ok_tFilterRow_13);
    globalMap.put("tFilterRow_13_NB_LINE_REJECT", nb_line_reject_tFilterRow_13);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tFilterRow_13", true);
end_Hash.put("tFilterRow_13", System.currentTimeMillis());




/**
 * [tFilterRow_13 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */




































				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tHashInput_8Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row20"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tJavaRow_12 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 finally ] stop
 */

	
	/**
	 * [tFilterRow_3 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_16 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 finally ] stop
 */

	
	/**
	 * [tJavaRow_17 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 finally ] stop
 */

	
	/**
	 * [tFilterRow_10 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	

 



/**
 * [tFilterRow_10 finally ] stop
 */

	
	/**
	 * [tFilterRow_11 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_11";
	
	

 



/**
 * [tFilterRow_11 finally ] stop
 */

	
	/**
	 * [tFilterRow_12 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_12";
	
	

 



/**
 * [tFilterRow_12 finally ] stop
 */

	
	/**
	 * [tFilterRow_13 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_13";
	
	

 



/**
 * [tFilterRow_13 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */




































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row74Struct implements routines.system.IPersistableRow<row74Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row74Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row73Struct implements routines.system.IPersistableRow<row73Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row73Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfSaida4Struct implements routines.system.IPersistableRow<copyOfSaida4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfSaida4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row72Struct implements routines.system.IPersistableRow<row72Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row72Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row71Struct implements routines.system.IPersistableRow<row71Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row71Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_4> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_4 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row70Struct implements routines.system.IPersistableRow<row70Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row70Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfSaida3Struct implements routines.system.IPersistableRow<copyOfSaida3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfSaida3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row69Struct implements routines.system.IPersistableRow<row69Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row69Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfsaodaStruct implements routines.system.IPersistableRow<copyOfsaodaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfsaodaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row67Struct implements routines.system.IPersistableRow<row67Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row67Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row64Struct implements routines.system.IPersistableRow<row64Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row64Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfnaokitStruct implements routines.system.IPersistableRow<copyOfnaokitStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfnaokitStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfehKitStruct implements routines.system.IPersistableRow<copyOfehKitStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfehKitStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida2Struct implements routines.system.IPersistableRow<saida2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class EstoqueAnyStruct implements routines.system.IPersistableRow<EstoqueAnyStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(EstoqueAnyStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_8Struct implements routines.system.IPersistableRow<after_tHashInput_8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public String QTD_ESTOQUE;

				public String getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
					this.QTD_ESTOQUE = readString(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// String
				
						writeString(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+QTD_ESTOQUE);
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_10Process(globalMap);
		tHashInput_11Process(globalMap);
		tHashInput_15Process(globalMap);
		tHashInput_19Process(globalMap);

		row4Struct row4 = new row4Struct();
EstoqueAnyStruct EstoqueAny = new EstoqueAnyStruct();
saida2Struct saida2 = new saida2Struct();
row30Struct row30 = new row30Struct();
row27Struct row27 = new row27Struct();
row28Struct row28 = new row28Struct();
copyOfnaokitStruct copyOfnaokit = new copyOfnaokitStruct();
row64Struct row64 = new row64Struct();
row67Struct row67 = new row67Struct();
copyOfsaodaStruct copyOfsaoda = new copyOfsaodaStruct();
row69Struct row69 = new row69Struct();
copyOfehKitStruct copyOfehKit = new copyOfehKitStruct();
copyOfSaida3Struct copyOfSaida3 = new copyOfSaida3Struct();
row70Struct row70 = new row70Struct();
row71Struct row71 = new row71Struct();
row72Struct row72 = new row72Struct();
copyOfSaida4Struct copyOfSaida4 = new copyOfSaida4Struct();
row73Struct row73 = new row73Struct();
row74Struct row74 = new row74Struct();














	
	/**
	 * [tHashOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_14", false);
		start_Hash.put("tHashOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row69");
					}
				
		int tos_count_tHashOutput_14 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashOutput_14 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_14.getKeyMap().put("tHashFile_relatorio_preco_estoque_" +pid + "_tHashOutput_14", "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_11");
        int nb_line_tHashOutput_14 = 0;

 



/**
 * [tHashOutput_14 begin ] stop
 */



	
	/**
	 * [tJavaRow_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_25", false);
		start_Hash.put("tJavaRow_25", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfsaoda");
					}
				
		int tos_count_tJavaRow_25 = 0;
		

int nb_line_tJavaRow_25 = 0;

 



/**
 * [tJavaRow_25 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row67");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfsaodaStruct copyOfsaoda_tmp = new copyOfsaodaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tConvertType_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_7", false);
		start_Hash.put("tConvertType_7", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row64");
					}
				
		int tos_count_tConvertType_7 = 0;
		
	int nb_line_tConvertType_7 = 0;  
 



/**
 * [tConvertType_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_24", false);
		start_Hash.put("tJavaRow_24", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_24";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfnaokit");
					}
				
		int tos_count_tJavaRow_24 = 0;
		

int nb_line_tJavaRow_24 = 0;

 



/**
 * [tJavaRow_24 begin ] stop
 */






	
	/**
	 * [tSortRow_4_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_4_SortOut", false);
		start_Hash.put("tSortRow_4_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row70");
					}
				
		int tos_count_tSortRow_4_SortOut = 0;
		


class Comparablerow70Struct extends row70Struct implements Comparable<Comparablerow70Struct> {
	
	public int compareTo(Comparablerow70Struct other) {

		if(this.sku == null && other.sku != null){
			return -1;
						
		}else if(this.sku != null && other.sku == null){
			return 1;
						
		}else if(this.sku != null && other.sku != null){
			if(!this.sku.equals(other.sku)){
				return this.sku.compareTo(other.sku);
			}
		}
		if(this.SALDO_DISPONIVEL == null && other.SALDO_DISPONIVEL != null){
			return -1;
						
		}else if(this.SALDO_DISPONIVEL != null && other.SALDO_DISPONIVEL == null){
			return 1;
						
		}else if(this.SALDO_DISPONIVEL != null && other.SALDO_DISPONIVEL != null){
			if(!this.SALDO_DISPONIVEL.equals(other.SALDO_DISPONIVEL)){
				return this.SALDO_DISPONIVEL.compareTo(other.SALDO_DISPONIVEL);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow70Struct> list_tSortRow_4_SortOut = new java.util.ArrayList<Comparablerow70Struct>();


 



/**
 * [tSortRow_4_SortOut begin ] stop
 */



	
	/**
	 * [tJavaRow_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_26", false);
		start_Hash.put("tJavaRow_26", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfSaida3");
					}
				
		int tos_count_tJavaRow_26 = 0;
		

int nb_line_tJavaRow_26 = 0;

 



/**
 * [tJavaRow_26 begin ] stop
 */



	
	/**
	 * [tMap_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_22", false);
		start_Hash.put("tMap_22", System.currentTimeMillis());
		
	
	currentComponent="tMap_22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfehKit");
					}
				
		int tos_count_tMap_22 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct> tHash_Lookup_row77 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct>) 
					globalMap.get( "tHash_Lookup_row77" ))
					;					
					
	

row77Struct row77HashKey = new row77Struct();
row77Struct row77Default = new row77Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_22__Struct  {
}
Var__tMap_22__Struct Var__tMap_22 = new Var__tMap_22__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfSaida3Struct copyOfSaida3_tmp = new copyOfSaida3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_22 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct> tHash_Lookup_row68 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct>) 
					globalMap.get( "tHash_Lookup_row68" ))
					;					
					
	

row68Struct row68HashKey = new row68Struct();
row68Struct row68Default = new row68Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfnaokitStruct copyOfnaokit_tmp = new copyOfnaokitStruct();
copyOfehKitStruct copyOfehKit_tmp = new copyOfehKitStruct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tFilterRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_9", false);
		start_Hash.put("tFilterRow_9", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tFilterRow_9 = 0;
		
    int nb_line_tFilterRow_9 = 0;
    int nb_line_ok_tFilterRow_9 = 0;
    int nb_line_reject_tFilterRow_9 = 0;

    class Operator_tFilterRow_9 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_9(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_10", false);
		start_Hash.put("tJavaRow_10", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tJavaRow_10 = 0;
		

int nb_line_tJavaRow_10 = 0;

 



/**
 * [tJavaRow_10 begin ] stop
 */



	
	/**
	 * [tConvertType_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_5", false);
		start_Hash.put("tConvertType_5", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida2");
					}
				
		int tos_count_tConvertType_5 = 0;
		
	int nb_line_tConvertType_5 = 0;  
 



/**
 * [tConvertType_5 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"EstoqueAny");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct> tHash_Lookup_row23 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct>) 
					globalMap.get( "tHash_Lookup_row23" ))
					;					
					
	

row23Struct row23HashKey = new row23Struct();
row23Struct row23Default = new row23Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida2Struct saida2_tmp = new saida2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
					globalMap.get( "tHash_Lookup_row21" ))
					;					
					
	

row21Struct row21HashKey = new row21Struct();
row21Struct row21Default = new row21Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
EstoqueAnyStruct EstoqueAny_tmp = new EstoqueAnyStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfanymarket_0Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOfcopyOfanymarket_0Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    copyOfcopyOfanymarket_0Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row4.SKU_INTERNO = next_tHashInput_8.SKU_INTERNO;
	row4.CUSTO = next_tHashInput_8.CUSTO;
	row4.PRAZO_ADICIONAL = next_tHashInput_8.PRAZO_ADICIONAL;
	row4.QTD_ESTOQUE = next_tHashInput_8.QTD_ESTOQUE;
	row4.QTD_DISPONIVEL = next_tHashInput_8.QTD_DISPONIVEL;
	row4.QTD_PEDIDO = next_tHashInput_8.QTD_PEDIDO;
	row4.LOCALIZACAO_ESTOQUE = next_tHashInput_8.LOCALIZACAO_ESTOQUE;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row21Struct row21 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row21" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow21 = false;
       		  	    	
       		  	    	
 							row21Struct row21ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row21HashKey.cd_produto = row4.SKU_INTERNO ;
                        		    		

								
		                        	row21HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row21.lookup( row21HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row21.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_5 = true;
	  								
						
									
	
		  								forceLooprow21 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow21 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row21 != null && tHash_Lookup_row21.hasNext()) || forceLooprow21) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row21'
									
                    		  	 
							   
                    		  	 
	       		  	    	row21Struct fromLookup_row21 = null;
							row21 = row21Default;
										 
							
								
								if(!forceLooprow21) { // G 46
								
							
								 
							
								
								fromLookup_row21 = tHash_Lookup_row21.next();

							

							if(fromLookup_row21 != null) {
								row21 = fromLookup_row21;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow21 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

EstoqueAny = null;

if(!rejectedInnerJoin_tMap_5 ) {

// # Output table : 'EstoqueAny'
EstoqueAny_tmp.SKU_INTERNO = row4.SKU_INTERNO ;
EstoqueAny_tmp.CUSTO = row4.CUSTO ;
EstoqueAny_tmp.PRAZO_ADICIONAL = row4.PRAZO_ADICIONAL ;
EstoqueAny_tmp.QTD_ESTOQUE = row4.QTD_ESTOQUE ;
EstoqueAny_tmp.QTD_DISPONIVEL = row4.QTD_DISPONIVEL ;
EstoqueAny_tmp.QTD_PEDIDO = row4.QTD_PEDIDO ;
EstoqueAny_tmp.LOCALIZACAO_ESTOQUE = row4.LOCALIZACAO_ESTOQUE ;
EstoqueAny_tmp.SALDO_DISPONIVEL = row21.SALDO_DISPONIVEL ;
EstoqueAny_tmp.tabela3_preco_venda = row21.tabela3_preco_venda ;
EstoqueAny_tmp.tabela4_preco_venda = row21.tabela4_preco_venda ;
EstoqueAny_tmp.situacao_produto = row21.situacao_produto ;
EstoqueAny = EstoqueAny_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "EstoqueAny"
if(EstoqueAny != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"EstoqueAny"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row23Struct row23 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row23" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow23 = false;
       		  	    	
       		  	    	
 							row23Struct row23ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row23HashKey.CD_PRODUTO = EstoqueAny.SKU_INTERNO ;
                        		    		

								
		                        	row23HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row23.lookup( row23HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row23 != null && tHash_Lookup_row23.getCount(row23HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row23' and it contains more one result from keys :  row23.CD_PRODUTO = '" + row23HashKey.CD_PRODUTO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row23Struct fromLookup_row23 = null;
							row23 = row23Default;
										 
							
								 
							
							
								if (tHash_Lookup_row23 !=null && tHash_Lookup_row23.hasNext()) { // G 099
								
							
								
								fromLookup_row23 = tHash_Lookup_row23.next();

							
							
								} // G 099
							
							

							if(fromLookup_row23 != null) {
								row23 = fromLookup_row23;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

saida2 = null;


// # Output table : 'saida2'
saida2_tmp.SKU_INTERNO = EstoqueAny.SKU_INTERNO;
saida2_tmp.CUSTO = EstoqueAny.CUSTO;
saida2_tmp.PRAZO_ADICIONAL = EstoqueAny.PRAZO_ADICIONAL;
saida2_tmp.QTD_ESTOQUE = EstoqueAny.QTD_ESTOQUE;
saida2_tmp.QTD_DISPONIVEL = EstoqueAny.QTD_DISPONIVEL;
saida2_tmp.QTD_PEDIDO = EstoqueAny.QTD_PEDIDO;
saida2_tmp.LOCALIZACAO_ESTOQUE = EstoqueAny.LOCALIZACAO_ESTOQUE;
saida2_tmp.SALDO_DISPONIVEL = row23.SALDO_DISPONIVEL != null ? row23.SALDO_DISPONIVEL : 0 ;
saida2_tmp.tabela3_preco_venda = EstoqueAny.tabela3_preco_venda;
saida2_tmp.tabela4_preco_venda = EstoqueAny.tabela4_preco_venda;
saida2_tmp.situacao_produto = row23.SITUACAO_PRODUTO != null ? row23.SITUACAO_PRODUTO : "001" ;
saida2 = saida2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "saida2"
if(saida2 != null) { 



	
	/**
	 * [tConvertType_5 main ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida2"
						
						);
					}
					


  row30 = new row30Struct();
  boolean bHasError_tConvertType_5 = false;             
          try {
              row30.SKU_INTERNO=TypeConvert.String2String(saida2.SKU_INTERNO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.CUSTO=TypeConvert.String2String(saida2.CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.PRAZO_ADICIONAL=TypeConvert.String2String(saida2.PRAZO_ADICIONAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.QTD_ESTOQUE=TypeConvert.String2Integer(saida2.QTD_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.QTD_DISPONIVEL=TypeConvert.String2String(saida2.QTD_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.QTD_PEDIDO=TypeConvert.String2String(saida2.QTD_PEDIDO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.LOCALIZACAO_ESTOQUE=TypeConvert.String2String(saida2.LOCALIZACAO_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(saida2.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.tabela3_preco_venda=TypeConvert.Double2Double(saida2.tabela3_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.tabela4_preco_venda=TypeConvert.Double2Double(saida2.tabela4_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row30.situacao_produto=TypeConvert.String2String(saida2.situacao_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_5) {row30 = null;}

  nb_line_tConvertType_5 ++ ;

 


	tos_count_tConvertType_5++;

/**
 * [tConvertType_5 main ] stop
 */
	
	/**
	 * [tConvertType_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 process_data_begin ] stop
 */
// Start of branch "row30"
if(row30 != null) { 



	
	/**
	 * [tJavaRow_10 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

    //Code generated according to input schema and output schema
row27.SKU_INTERNO = row30.SKU_INTERNO;
row27.CUSTO = row30.CUSTO;
row27.PRAZO_ADICIONAL = row30.PRAZO_ADICIONAL;
row27.QTD_ESTOQUE = row30.QTD_ESTOQUE;
row27.QTD_DISPONIVEL = row30.QTD_DISPONIVEL;
row27.QTD_PEDIDO = row30.QTD_PEDIDO;
row27.LOCALIZACAO_ESTOQUE = row30.LOCALIZACAO_ESTOQUE;
row27.SALDO_DISPONIVEL = row30.SALDO_DISPONIVEL;
row27.tabela3_preco_venda = row30.tabela3_preco_venda;
row27.tabela4_preco_venda = row30.tabela4_preco_venda;
row27.situacao_produto = row30.situacao_produto;

if (row30.SALDO_DISPONIVEL - row30.QTD_ESTOQUE != 0) {
row27.validaestoque = 1;
} else{
row27.validaestoque = 0;
}
    nb_line_tJavaRow_10++;   

 


	tos_count_tJavaRow_10++;

/**
 * [tJavaRow_10 main ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_9 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

          row28 = null;
    Operator_tFilterRow_9 ope_tFilterRow_9 = new Operator_tFilterRow_9("&&");
    
    if (ope_tFilterRow_9.getMatchFlag()) {
              if(row28 == null){ 
                row28 = new row28Struct();
              }
               row28.SKU_INTERNO = row27.SKU_INTERNO;
               row28.CUSTO = row27.CUSTO;
               row28.PRAZO_ADICIONAL = row27.PRAZO_ADICIONAL;
               row28.QTD_ESTOQUE = row27.QTD_ESTOQUE;
               row28.QTD_DISPONIVEL = row27.QTD_DISPONIVEL;
               row28.QTD_PEDIDO = row27.QTD_PEDIDO;
               row28.LOCALIZACAO_ESTOQUE = row27.LOCALIZACAO_ESTOQUE;
               row28.SALDO_DISPONIVEL = row27.SALDO_DISPONIVEL;
               row28.tabela3_preco_venda = row27.tabela3_preco_venda;
               row28.tabela4_preco_venda = row27.tabela4_preco_venda;
               row28.situacao_produto = row27.situacao_produto;
               row28.validaestoque = row27.validaestoque;    
      nb_line_ok_tFilterRow_9++;
    } else {
      nb_line_reject_tFilterRow_9++;
    }

nb_line_tFilterRow_9++;

 


	tos_count_tFilterRow_9++;

/**
 * [tFilterRow_9 main ] stop
 */
	
	/**
	 * [tFilterRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_9";
	
	

 



/**
 * [tFilterRow_9 process_data_begin ] stop
 */
// Start of branch "row28"
if(row28 != null) { 



	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
						row68Struct row68 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row68" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow68 = false;
       		  	    	
       		  	    	
 							row68Struct row68ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row68HashKey.cd_combo = row28.SKU_INTERNO ;
                        		    		

								
		                        	row68HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row68.lookup( row68HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row68.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_15 = true;
	  								
						
									
	
		  								forceLooprow68 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow68 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row68 != null && tHash_Lookup_row68.hasNext()) || forceLooprow68) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row68'
									
                    		  	 
							   
                    		  	 
	       		  	    	row68Struct fromLookup_row68 = null;
							row68 = row68Default;
										 
							
								
								if(!forceLooprow68) { // G 46
								
							
								 
							
								
								fromLookup_row68 = tHash_Lookup_row68.next();

							

							if(fromLookup_row68 != null) {
								row68 = fromLookup_row68;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow68 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

copyOfehKit = null;
copyOfnaokit = null;

if(!rejectedInnerJoin_tMap_15 ) {

// # Output table : 'copyOfehKit'
copyOfehKit_tmp.SKU_INTERNO = row28.SKU_INTERNO ;
copyOfehKit_tmp.CUSTO = row28.CUSTO ;
copyOfehKit_tmp.PRAZO_ADICIONAL = row28.PRAZO_ADICIONAL ;
copyOfehKit_tmp.QTD_ESTOQUE = row28.QTD_ESTOQUE ;
copyOfehKit_tmp.QTD_DISPONIVEL = row28.QTD_DISPONIVEL ;
copyOfehKit_tmp.QTD_PEDIDO = row28.QTD_PEDIDO ;
copyOfehKit_tmp.LOCALIZACAO_ESTOQUE = row28.LOCALIZACAO_ESTOQUE ;
copyOfehKit_tmp.SALDO_DISPONIVEL = row28.SALDO_DISPONIVEL ;
copyOfehKit_tmp.tabela3_preco_venda = row28.tabela3_preco_venda ;
copyOfehKit_tmp.tabela4_preco_venda = row28.tabela4_preco_venda ;
copyOfehKit_tmp.situacao_produto = row28.situacao_produto ;
copyOfehKit_tmp.validaestoque = row28.validaestoque ;
copyOfehKit_tmp.cd_produto = row68.cd_produto ;
copyOfehKit_tmp.qtde = row68.qtde ;
copyOfehKit = copyOfehKit_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'copyOfnaokit'
// # Filter conditions 
if( rejectedInnerJoin_tMap_15 ) {
copyOfnaokit_tmp.SKU_INTERNO = row28.SKU_INTERNO ;
copyOfnaokit_tmp.CUSTO = row28.CUSTO ;
copyOfnaokit_tmp.PRAZO_ADICIONAL = row28.PRAZO_ADICIONAL ;
copyOfnaokit_tmp.QTD_ESTOQUE = row28.QTD_ESTOQUE ;
copyOfnaokit_tmp.QTD_DISPONIVEL = row28.QTD_DISPONIVEL ;
copyOfnaokit_tmp.QTD_PEDIDO = row28.QTD_PEDIDO ;
copyOfnaokit_tmp.LOCALIZACAO_ESTOQUE = row28.LOCALIZACAO_ESTOQUE ;
copyOfnaokit_tmp.SALDO_DISPONIVEL = row28.SALDO_DISPONIVEL ;
copyOfnaokit_tmp.tabela3_preco_venda = row28.tabela3_preco_venda ;
copyOfnaokit_tmp.tabela4_preco_venda = row28.tabela4_preco_venda ;
copyOfnaokit_tmp.situacao_produto = row28.situacao_produto ;
copyOfnaokit_tmp.validaestoque = row28.validaestoque ;
copyOfnaokit = copyOfnaokit_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "copyOfnaokit"
if(copyOfnaokit != null) { 



	
	/**
	 * [tJavaRow_24 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfnaokit"
						
						);
					}
					

    //Code generated according to input schema and output schema
row64.SKU_INTERNO = copyOfnaokit.SKU_INTERNO;
row64.CUSTO = copyOfnaokit.CUSTO;
row64.PRAZO_ADICIONAL = copyOfnaokit.PRAZO_ADICIONAL;
row64.QTD_ESTOQUE = copyOfnaokit.QTD_ESTOQUE;
row64.QTD_DISPONIVEL = copyOfnaokit.QTD_DISPONIVEL;
row64.QTD_PEDIDO = copyOfnaokit.QTD_PEDIDO;
row64.LOCALIZACAO_ESTOQUE = copyOfnaokit.LOCALIZACAO_ESTOQUE;
row64.SALDO_DISPONIVEL = copyOfnaokit.SALDO_DISPONIVEL;
row64.tabela3_preco_venda = copyOfnaokit.tabela3_preco_venda;
row64.tabela4_preco_venda = copyOfnaokit.tabela4_preco_venda;
row64.situacao_produto = copyOfnaokit.situacao_produto;
row64.validaestoque = copyOfnaokit.validaestoque;

    nb_line_tJavaRow_24++;   

 


	tos_count_tJavaRow_24++;

/**
 * [tJavaRow_24 main ] stop
 */
	
	/**
	 * [tJavaRow_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

 



/**
 * [tJavaRow_24 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_7 main ] start
	 */

	

	
	
	currentComponent="tConvertType_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row64"
						
						);
					}
					


  row67 = new row67Struct();
  boolean bHasError_tConvertType_7 = false;             
          try {
              row67.SKU_INTERNO=TypeConvert.String2String(row64.SKU_INTERNO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.CUSTO=TypeConvert.String2String(row64.CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.PRAZO_ADICIONAL=TypeConvert.String2String(row64.PRAZO_ADICIONAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.QTD_ESTOQUE=TypeConvert.Integer2Integer(row64.QTD_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.QTD_DISPONIVEL=TypeConvert.String2String(row64.QTD_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.QTD_PEDIDO=TypeConvert.String2String(row64.QTD_PEDIDO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.LOCALIZACAO_ESTOQUE=TypeConvert.String2String(row64.LOCALIZACAO_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(row64.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.tabela3_preco_venda=TypeConvert.Double2Double(row64.tabela3_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.tabela4_preco_venda=TypeConvert.Double2Double(row64.tabela4_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.situacao_produto=TypeConvert.String2String(row64.situacao_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row67.validaestoque=TypeConvert.Integer2Integer(row64.validaestoque);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_7_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_7 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_7) {row67 = null;}

  nb_line_tConvertType_7 ++ ;

 


	tos_count_tConvertType_7++;

/**
 * [tConvertType_7 main ] stop
 */
	
	/**
	 * [tConvertType_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_7";
	
	

 



/**
 * [tConvertType_7 process_data_begin ] stop
 */
// Start of branch "row67"
if(row67 != null) { 



	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row67"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_21 = false;
		boolean mainRowRejected_tMap_21 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

copyOfsaoda = null;


// # Output table : 'copyOfsaoda'
copyOfsaoda_tmp.sku = row67.SKU_INTERNO ;
copyOfsaoda_tmp.CUSTO = row67.CUSTO ;
copyOfsaoda_tmp.PRAZO_ADICIONAL = row67.PRAZO_ADICIONAL ;
copyOfsaoda_tmp.QTD_ESTOQUE = row67.QTD_ESTOQUE ;
copyOfsaoda_tmp.QTD_DISPONIVEL = row67.QTD_DISPONIVEL ;
copyOfsaoda_tmp.QTD_PEDIDO = row67.QTD_PEDIDO ;
copyOfsaoda_tmp.LOCALIZACAO_ESTOQUE = row67.LOCALIZACAO_ESTOQUE ;
copyOfsaoda_tmp.SALDO_DISPONIVEL = row67.SALDO_DISPONIVEL != null ? row67.SALDO_DISPONIVEL : 0 ;
copyOfsaoda_tmp.tabela3_preco_venda = row67.tabela3_preco_venda ;
copyOfsaoda_tmp.tabela4_preco_venda = row67.tabela4_preco_venda ;
copyOfsaoda_tmp.situacao_produto = row67.situacao_produto ;
copyOfsaoda_tmp.validaestoque = row67.validaestoque ;
copyOfsaoda = copyOfsaoda_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "copyOfsaoda"
if(copyOfsaoda != null) { 



	
	/**
	 * [tJavaRow_25 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfsaoda"
						
						);
					}
					

    //Code generated according to input schema and output schema
row69.sku = copyOfsaoda.sku;
row69.CUSTO = copyOfsaoda.CUSTO;
row69.PRAZO_ADICIONAL = copyOfsaoda.PRAZO_ADICIONAL;
row69.QTD_ESTOQUE = copyOfsaoda.QTD_ESTOQUE;
row69.QTD_DISPONIVEL = copyOfsaoda.QTD_DISPONIVEL;
row69.QTD_PEDIDO = copyOfsaoda.QTD_PEDIDO;
row69.LOCALIZACAO_ESTOQUE = copyOfsaoda.LOCALIZACAO_ESTOQUE;
row69.SALDO_DISPONIVEL = copyOfsaoda.SALDO_DISPONIVEL;
row69.tabela3_preco_venda = copyOfsaoda.tabela3_preco_venda;
row69.tabela4_preco_venda = copyOfsaoda.tabela4_preco_venda;
row69.situacao_produto = copyOfsaoda.situacao_produto;
row69.validaestoque = copyOfsaoda.validaestoque;

    nb_line_tJavaRow_25++;   

 


	tos_count_tJavaRow_25++;

/**
 * [tJavaRow_25 main ] stop
 */
	
	/**
	 * [tJavaRow_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

 



/**
 * [tJavaRow_25 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_14 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row69"
						
						);
					}
					




		if(tHashFile_tHashOutput_14 == null){
			tHashFile_tHashOutput_14 = mf_tHashOutput_14.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_11");
			mf_tHashOutput_14.getResourceMap().put("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_14", tHashFile_tHashOutput_14);
		}
		row82Struct oneRow_tHashOutput_14 = new row82Struct();
			oneRow_tHashOutput_14.sku = row69.sku;
			oneRow_tHashOutput_14.CUSTO = row69.CUSTO;
			oneRow_tHashOutput_14.PRAZO_ADICIONAL = row69.PRAZO_ADICIONAL;
			oneRow_tHashOutput_14.QTD_ESTOQUE = row69.QTD_ESTOQUE;
			oneRow_tHashOutput_14.QTD_DISPONIVEL = row69.QTD_DISPONIVEL;
			oneRow_tHashOutput_14.QTD_PEDIDO = row69.QTD_PEDIDO;
			oneRow_tHashOutput_14.LOCALIZACAO_ESTOQUE = row69.LOCALIZACAO_ESTOQUE;
			oneRow_tHashOutput_14.SALDO_DISPONIVEL = row69.SALDO_DISPONIVEL;
			oneRow_tHashOutput_14.tabela3_preco_venda = row69.tabela3_preco_venda;
			oneRow_tHashOutput_14.tabela4_preco_venda = row69.tabela4_preco_venda;
			oneRow_tHashOutput_14.situacao_produto = row69.situacao_produto;
			oneRow_tHashOutput_14.validaestoque = row69.validaestoque;
        tHashFile_tHashOutput_14.put(oneRow_tHashOutput_14);
        nb_line_tHashOutput_14 ++;	

 


	tos_count_tHashOutput_14++;

/**
 * [tHashOutput_14 main ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

 



/**
 * [tJavaRow_25 process_data_end ] stop
 */

} // End of branch "copyOfsaoda"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_end ] stop
 */

} // End of branch "row67"




	
	/**
	 * [tConvertType_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_7";
	
	

 



/**
 * [tConvertType_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

 



/**
 * [tJavaRow_24 process_data_end ] stop
 */

} // End of branch "copyOfnaokit"




// Start of branch "copyOfehKit"
if(copyOfehKit != null) { 



	
	/**
	 * [tMap_22 main ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfehKit"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_22 = false;
		
						row77Struct row77 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_22 = false;
		boolean mainRowRejected_tMap_22 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row77" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow77 = false;
       		  	    	
       		  	    	
 							row77Struct row77ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_22) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_22 = false;
								
                        		    		    row77HashKey.CD_PRODUTO = copyOfehKit.cd_produto ;
                        		    		

								
		                        	row77HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row77.lookup( row77HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row77 != null && tHash_Lookup_row77.getCount(row77HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row77' and it contains more one result from keys :  row77.CD_PRODUTO = '" + row77HashKey.CD_PRODUTO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row77Struct fromLookup_row77 = null;
							row77 = row77Default;
										 
							
								 
							
							
								if (tHash_Lookup_row77 !=null && tHash_Lookup_row77.hasNext()) { // G 099
								
							
								
								fromLookup_row77 = tHash_Lookup_row77.next();

							
							
								} // G 099
							
							

							if(fromLookup_row77 != null) {
								row77 = fromLookup_row77;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_22__Struct Var = Var__tMap_22;// ###############################
        // ###############################
        // # Output tables

copyOfSaida3 = null;


// # Output table : 'copyOfSaida3'
copyOfSaida3_tmp.sku = copyOfehKit.SKU_INTERNO ;
copyOfSaida3_tmp.CUSTO = copyOfehKit.CUSTO ;
copyOfSaida3_tmp.PRAZO_ADICIONAL = copyOfehKit.PRAZO_ADICIONAL ;
copyOfSaida3_tmp.QTD_ESTOQUE = copyOfehKit.QTD_ESTOQUE ;
copyOfSaida3_tmp.QTD_DISPONIVEL = copyOfehKit.QTD_DISPONIVEL ;
copyOfSaida3_tmp.QTD_PEDIDO = copyOfehKit.QTD_PEDIDO ;
copyOfSaida3_tmp.LOCALIZACAO_ESTOQUE = copyOfehKit.LOCALIZACAO_ESTOQUE ;
copyOfSaida3_tmp.SALDO_DISPONIVEL = row77.SALDO_DISPONIVEL != null ? row77.SALDO_DISPONIVEL : 0 ;
copyOfSaida3_tmp.tabela3_preco_venda = copyOfehKit.tabela3_preco_venda ;
copyOfSaida3_tmp.tabela4_preco_venda = copyOfehKit.tabela4_preco_venda ;
copyOfSaida3_tmp.situacao_produto = copyOfehKit.situacao_produto ;
copyOfSaida3_tmp.validaestoque = copyOfehKit.validaestoque ;
copyOfSaida3_tmp.cd_produto = copyOfehKit.cd_produto;
copyOfSaida3_tmp.qtde = copyOfehKit.qtde != null ? copyOfehKit.qtde : 0 ;
copyOfSaida3 = copyOfSaida3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_22 = false;










 


	tos_count_tMap_22++;

/**
 * [tMap_22 main ] stop
 */
	
	/**
	 * [tMap_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 process_data_begin ] stop
 */
// Start of branch "copyOfSaida3"
if(copyOfSaida3 != null) { 



	
	/**
	 * [tJavaRow_26 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfSaida3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row70.sku = copyOfSaida3.sku;
row70.CUSTO = copyOfSaida3.CUSTO;
row70.PRAZO_ADICIONAL = copyOfSaida3.PRAZO_ADICIONAL;
row70.QTD_ESTOQUE = copyOfSaida3.QTD_ESTOQUE;
row70.QTD_DISPONIVEL = copyOfSaida3.QTD_DISPONIVEL;
row70.QTD_PEDIDO = copyOfSaida3.QTD_PEDIDO;
row70.LOCALIZACAO_ESTOQUE = copyOfSaida3.LOCALIZACAO_ESTOQUE;
row70.SALDO_DISPONIVEL = copyOfSaida3.SALDO_DISPONIVEL/copyOfSaida3.qtde;
row70.tabela3_preco_venda = copyOfSaida3.tabela3_preco_venda;
row70.tabela4_preco_venda = copyOfSaida3.tabela4_preco_venda;
row70.situacao_produto = copyOfSaida3.situacao_produto;
row70.validaestoque = copyOfSaida3.validaestoque;
row70.cd_produto = copyOfSaida3.cd_produto;
row70.qtde = copyOfSaida3.qtde;

    nb_line_tJavaRow_26++;   

 


	tos_count_tJavaRow_26++;

/**
 * [tJavaRow_26 main ] stop
 */
	
	/**
	 * [tJavaRow_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

 



/**
 * [tJavaRow_26 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_4_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row70"
						
						);
					}
					



	Comparablerow70Struct arrayRowtSortRow_4_SortOut = new Comparablerow70Struct();

	arrayRowtSortRow_4_SortOut.sku = row70.sku;
	arrayRowtSortRow_4_SortOut.CUSTO = row70.CUSTO;
	arrayRowtSortRow_4_SortOut.PRAZO_ADICIONAL = row70.PRAZO_ADICIONAL;
	arrayRowtSortRow_4_SortOut.QTD_ESTOQUE = row70.QTD_ESTOQUE;
	arrayRowtSortRow_4_SortOut.QTD_DISPONIVEL = row70.QTD_DISPONIVEL;
	arrayRowtSortRow_4_SortOut.QTD_PEDIDO = row70.QTD_PEDIDO;
	arrayRowtSortRow_4_SortOut.LOCALIZACAO_ESTOQUE = row70.LOCALIZACAO_ESTOQUE;
	arrayRowtSortRow_4_SortOut.SALDO_DISPONIVEL = row70.SALDO_DISPONIVEL;
	arrayRowtSortRow_4_SortOut.tabela3_preco_venda = row70.tabela3_preco_venda;
	arrayRowtSortRow_4_SortOut.tabela4_preco_venda = row70.tabela4_preco_venda;
	arrayRowtSortRow_4_SortOut.situacao_produto = row70.situacao_produto;
	arrayRowtSortRow_4_SortOut.validaestoque = row70.validaestoque;
	arrayRowtSortRow_4_SortOut.cd_produto = row70.cd_produto;
	arrayRowtSortRow_4_SortOut.qtde = row70.qtde;	
	list_tSortRow_4_SortOut.add(arrayRowtSortRow_4_SortOut);

 


	tos_count_tSortRow_4_SortOut++;

/**
 * [tSortRow_4_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_4_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

 



/**
 * [tSortRow_4_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_4_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

 



/**
 * [tSortRow_4_SortOut process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

 



/**
 * [tJavaRow_26 process_data_end ] stop
 */

} // End of branch "copyOfSaida3"




	
	/**
	 * [tMap_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 process_data_end ] stop
 */

} // End of branch "copyOfehKit"



	
		} // close loop of lookup 'row68' // G_TM_M_043
	
	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */

} // End of branch "row28"




	
	/**
	 * [tFilterRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_9";
	
	

 



/**
 * [tFilterRow_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_end ] stop
 */

} // End of branch "row30"




	
	/**
	 * [tConvertType_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 process_data_end ] stop
 */

} // End of branch "saida2"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "EstoqueAny"



	
		} // close loop of lookup 'row21' // G_TM_M_043
	
	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row21 != null) {
						tHash_Lookup_row21.endGet();
					}
					globalMap.remove( "tHash_Lookup_row21" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row23 != null) {
						tHash_Lookup_row23.endGet();
					}
					globalMap.remove( "tHash_Lookup_row23" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"EstoqueAny");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tConvertType_5 end ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	
      globalMap.put("tConvertType_5_NB_LINE", nb_line_tConvertType_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida2");
			  	}
			  	
 

ok_Hash.put("tConvertType_5", true);
end_Hash.put("tConvertType_5", System.currentTimeMillis());




/**
 * [tConvertType_5 end ] stop
 */

	
	/**
	 * [tJavaRow_10 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

globalMap.put("tJavaRow_10_NB_LINE",nb_line_tJavaRow_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tJavaRow_10", true);
end_Hash.put("tJavaRow_10", System.currentTimeMillis());




/**
 * [tJavaRow_10 end ] stop
 */

	
	/**
	 * [tFilterRow_9 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_9";
	
	
    globalMap.put("tFilterRow_9_NB_LINE", nb_line_tFilterRow_9);
    globalMap.put("tFilterRow_9_NB_LINE_OK", nb_line_ok_tFilterRow_9);
    globalMap.put("tFilterRow_9_NB_LINE_REJECT", nb_line_reject_tFilterRow_9);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tFilterRow_9", true);
end_Hash.put("tFilterRow_9", System.currentTimeMillis());




/**
 * [tFilterRow_9 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row68 != null) {
						tHash_Lookup_row68.endGet();
					}
					globalMap.remove( "tHash_Lookup_row68" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tJavaRow_24 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

globalMap.put("tJavaRow_24_NB_LINE",nb_line_tJavaRow_24);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfnaokit");
			  	}
			  	
 

ok_Hash.put("tJavaRow_24", true);
end_Hash.put("tJavaRow_24", System.currentTimeMillis());




/**
 * [tJavaRow_24 end ] stop
 */

	
	/**
	 * [tConvertType_7 end ] start
	 */

	

	
	
	currentComponent="tConvertType_7";
	
	
      globalMap.put("tConvertType_7_NB_LINE", nb_line_tConvertType_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row64");
			  	}
			  	
 

ok_Hash.put("tConvertType_7", true);
end_Hash.put("tConvertType_7", System.currentTimeMillis());




/**
 * [tConvertType_7 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row67");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tJavaRow_25 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

globalMap.put("tJavaRow_25_NB_LINE",nb_line_tJavaRow_25);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfsaoda");
			  	}
			  	
 

ok_Hash.put("tJavaRow_25", true);
end_Hash.put("tJavaRow_25", System.currentTimeMillis());




/**
 * [tJavaRow_25 end ] stop
 */

	
	/**
	 * [tHashOutput_14 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
globalMap.put("tHashOutput_14_NB_LINE", nb_line_tHashOutput_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row69");
			  	}
			  	
 

ok_Hash.put("tHashOutput_14", true);
end_Hash.put("tHashOutput_14", System.currentTimeMillis());




/**
 * [tHashOutput_14 end ] stop
 */
















	
	/**
	 * [tMap_22 end ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row77 != null) {
						tHash_Lookup_row77.endGet();
					}
					globalMap.remove( "tHash_Lookup_row77" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfehKit");
			  	}
			  	
 

ok_Hash.put("tMap_22", true);
end_Hash.put("tMap_22", System.currentTimeMillis());




/**
 * [tMap_22 end ] stop
 */

	
	/**
	 * [tJavaRow_26 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

globalMap.put("tJavaRow_26_NB_LINE",nb_line_tJavaRow_26);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfSaida3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_26", true);
end_Hash.put("tJavaRow_26", System.currentTimeMillis());




/**
 * [tJavaRow_26 end ] stop
 */

	
	/**
	 * [tSortRow_4_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

row70Struct[] array_tSortRow_4_SortOut = list_tSortRow_4_SortOut.toArray(new Comparablerow70Struct[0]);

java.util.Arrays.sort(array_tSortRow_4_SortOut);

globalMap.put("tSortRow_4",array_tSortRow_4_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row70");
			  	}
			  	
 

ok_Hash.put("tSortRow_4_SortOut", true);
end_Hash.put("tSortRow_4_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_4_SortOut end ] stop
 */






	
	/**
	 * [tHashOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_16", false);
		start_Hash.put("tHashOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row74");
					}
				
		int tos_count_tHashOutput_16 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashOutput_16 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_16.getKeyMap().put("tHashFile_relatorio_preco_estoque_" +pid + "_tHashOutput_16", "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_11");
        int nb_line_tHashOutput_16 = 0;

 



/**
 * [tHashOutput_16 begin ] stop
 */



	
	/**
	 * [tJavaRow_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_27", false);
		start_Hash.put("tJavaRow_27", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row73");
					}
				
		int tos_count_tJavaRow_27 = 0;
		

int nb_line_tJavaRow_27 = 0;

 



/**
 * [tJavaRow_27 begin ] stop
 */



	
	/**
	 * [tConvertType_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_9", false);
		start_Hash.put("tConvertType_9", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfSaida4");
					}
				
		int tos_count_tConvertType_9 = 0;
		
	int nb_line_tConvertType_9 = 0;  
 



/**
 * [tConvertType_9 begin ] stop
 */



	
	/**
	 * [tMap_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_23", false);
		start_Hash.put("tMap_23", System.currentTimeMillis());
		
	
	currentComponent="tMap_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row72");
					}
				
		int tos_count_tMap_23 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_23__Struct  {
}
Var__tMap_23__Struct Var__tMap_23 = new Var__tMap_23__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfSaida4Struct copyOfSaida4_tmp = new copyOfSaida4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_23 begin ] stop
 */



	
	/**
	 * [tUniqRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_3", false);
		start_Hash.put("tUniqRow_3", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row71");
					}
				
		int tos_count_tUniqRow_3 = 0;
		

	
		class KeyStruct_tUniqRow_3 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String sku;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.sku == null) ? 0 : this.sku.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;
				
									if (this.sku == null) {
										if (other.sku != null) 
											return false;
								
									} else if (!this.sku.equals(other.sku))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_3 = 0;
int nb_duplicates_tUniqRow_3 = 0;
KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>(); 

 



/**
 * [tUniqRow_3 begin ] stop
 */



	
	/**
	 * [tSortRow_4_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_4_SortIn", false);
		start_Hash.put("tSortRow_4_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	
		int tos_count_tSortRow_4_SortIn = 0;
		


row70Struct[] array_tSortRow_4_SortIn = (row70Struct[]) globalMap.remove("tSortRow_4");

int nb_line_tSortRow_4_SortIn = 0;

row70Struct current_tSortRow_4_SortIn = null;

for(int i_tSortRow_4_SortIn = 0; i_tSortRow_4_SortIn < array_tSortRow_4_SortIn.length; i_tSortRow_4_SortIn++){
	current_tSortRow_4_SortIn = array_tSortRow_4_SortIn[i_tSortRow_4_SortIn];
	row71.sku = current_tSortRow_4_SortIn.sku;
	row71.CUSTO = current_tSortRow_4_SortIn.CUSTO;
	row71.PRAZO_ADICIONAL = current_tSortRow_4_SortIn.PRAZO_ADICIONAL;
	row71.QTD_ESTOQUE = current_tSortRow_4_SortIn.QTD_ESTOQUE;
	row71.QTD_DISPONIVEL = current_tSortRow_4_SortIn.QTD_DISPONIVEL;
	row71.QTD_PEDIDO = current_tSortRow_4_SortIn.QTD_PEDIDO;
	row71.LOCALIZACAO_ESTOQUE = current_tSortRow_4_SortIn.LOCALIZACAO_ESTOQUE;
	row71.SALDO_DISPONIVEL = current_tSortRow_4_SortIn.SALDO_DISPONIVEL;
	row71.tabela3_preco_venda = current_tSortRow_4_SortIn.tabela3_preco_venda;
	row71.tabela4_preco_venda = current_tSortRow_4_SortIn.tabela4_preco_venda;
	row71.situacao_produto = current_tSortRow_4_SortIn.situacao_produto;
	row71.validaestoque = current_tSortRow_4_SortIn.validaestoque;
	row71.cd_produto = current_tSortRow_4_SortIn.cd_produto;
	row71.qtde = current_tSortRow_4_SortIn.qtde;
	// increase number of line sorted
	nb_line_tSortRow_4_SortIn++;

 



/**
 * [tSortRow_4_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_4_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 


	tos_count_tSortRow_4_SortIn++;

/**
 * [tSortRow_4_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_4_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 



/**
 * [tSortRow_4_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row71"
						
						);
					}
					
row72 = null;			
if(row71.sku == null){
	finder_tUniqRow_3.sku = null;
}else{
	finder_tUniqRow_3.sku = row71.sku.toLowerCase();
}	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
if(row71.sku == null){
	new_tUniqRow_3.sku = null;
}else{
	new_tUniqRow_3.sku = row71.sku.toLowerCase();
}
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row72 == null){ 
	
	row72 = new row72Struct();
}row72.sku = row71.sku;			row72.CUSTO = row71.CUSTO;			row72.PRAZO_ADICIONAL = row71.PRAZO_ADICIONAL;			row72.QTD_ESTOQUE = row71.QTD_ESTOQUE;			row72.QTD_DISPONIVEL = row71.QTD_DISPONIVEL;			row72.QTD_PEDIDO = row71.QTD_PEDIDO;			row72.LOCALIZACAO_ESTOQUE = row71.LOCALIZACAO_ESTOQUE;			row72.SALDO_DISPONIVEL = row71.SALDO_DISPONIVEL;			row72.tabela3_preco_venda = row71.tabela3_preco_venda;			row72.tabela4_preco_venda = row71.tabela4_preco_venda;			row72.situacao_produto = row71.situacao_produto;			row72.validaestoque = row71.validaestoque;			row72.cd_produto = row71.cd_produto;			row72.qtde = row71.qtde;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row72"
if(row72 != null) { 



	
	/**
	 * [tMap_23 main ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row72"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_23 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_23 = false;
		boolean mainRowRejected_tMap_23 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_23__Struct Var = Var__tMap_23;// ###############################
        // ###############################
        // # Output tables

copyOfSaida4 = null;


// # Output table : 'copyOfSaida4'
copyOfSaida4_tmp.sku = row72.sku ;
copyOfSaida4_tmp.CUSTO = row72.CUSTO ;
copyOfSaida4_tmp.PRAZO_ADICIONAL = row72.PRAZO_ADICIONAL ;
copyOfSaida4_tmp.QTD_ESTOQUE = row72.QTD_ESTOQUE ;
copyOfSaida4_tmp.QTD_DISPONIVEL = row72.QTD_DISPONIVEL ;
copyOfSaida4_tmp.QTD_PEDIDO = row72.QTD_PEDIDO ;
copyOfSaida4_tmp.LOCALIZACAO_ESTOQUE = row72.LOCALIZACAO_ESTOQUE ;
copyOfSaida4_tmp.SALDO_DISPONIVEL = row72.SALDO_DISPONIVEL ;
copyOfSaida4_tmp.tabela3_preco_venda = row72.tabela3_preco_venda ;
copyOfSaida4_tmp.tabela4_preco_venda = row72.tabela4_preco_venda ;
copyOfSaida4_tmp.situacao_produto = row72.situacao_produto ;
copyOfSaida4_tmp.validaestoque = row72.validaestoque ;
copyOfSaida4 = copyOfSaida4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_23 = false;










 


	tos_count_tMap_23++;

/**
 * [tMap_23 main ] stop
 */
	
	/**
	 * [tMap_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 process_data_begin ] stop
 */
// Start of branch "copyOfSaida4"
if(copyOfSaida4 != null) { 



	
	/**
	 * [tConvertType_9 main ] start
	 */

	

	
	
	currentComponent="tConvertType_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfSaida4"
						
						);
					}
					


  row73 = new row73Struct();
  boolean bHasError_tConvertType_9 = false;             
          try {
              row73.sku=TypeConvert.String2String(copyOfSaida4.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.CUSTO=TypeConvert.String2String(copyOfSaida4.CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.PRAZO_ADICIONAL=TypeConvert.String2String(copyOfSaida4.PRAZO_ADICIONAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.QTD_ESTOQUE=TypeConvert.Integer2Integer(copyOfSaida4.QTD_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.QTD_DISPONIVEL=TypeConvert.String2String(copyOfSaida4.QTD_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.QTD_PEDIDO=TypeConvert.String2String(copyOfSaida4.QTD_PEDIDO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.LOCALIZACAO_ESTOQUE=TypeConvert.String2String(copyOfSaida4.LOCALIZACAO_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(copyOfSaida4.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.tabela3_preco_venda=TypeConvert.Double2Double(copyOfSaida4.tabela3_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.tabela4_preco_venda=TypeConvert.Double2Double(copyOfSaida4.tabela4_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.situacao_produto=TypeConvert.String2String(copyOfSaida4.situacao_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row73.validaestoque=TypeConvert.Integer2Integer(copyOfSaida4.validaestoque);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_9_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_9 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_9) {row73 = null;}

  nb_line_tConvertType_9 ++ ;

 


	tos_count_tConvertType_9++;

/**
 * [tConvertType_9 main ] stop
 */
	
	/**
	 * [tConvertType_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_9";
	
	

 



/**
 * [tConvertType_9 process_data_begin ] stop
 */
// Start of branch "row73"
if(row73 != null) { 



	
	/**
	 * [tJavaRow_27 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row73"
						
						);
					}
					

    //Code generated according to input schema and output schema
row74.sku = row73.sku;
row74.CUSTO = row73.CUSTO;
row74.PRAZO_ADICIONAL = row73.PRAZO_ADICIONAL;
row74.QTD_ESTOQUE = row73.QTD_ESTOQUE;
row74.QTD_DISPONIVEL = row73.QTD_DISPONIVEL;
row74.QTD_PEDIDO = row73.QTD_PEDIDO;
row74.LOCALIZACAO_ESTOQUE = row73.LOCALIZACAO_ESTOQUE;
row74.SALDO_DISPONIVEL = row73.SALDO_DISPONIVEL;
row74.tabela3_preco_venda = row73.tabela3_preco_venda;
row74.tabela4_preco_venda = row73.tabela4_preco_venda;
row74.situacao_produto = row73.situacao_produto;
row74.validaestoque = row73.validaestoque;

    nb_line_tJavaRow_27++;   

 


	tos_count_tJavaRow_27++;

/**
 * [tJavaRow_27 main ] stop
 */
	
	/**
	 * [tJavaRow_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

 



/**
 * [tJavaRow_27 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_16 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row74"
						
						);
					}
					




		if(tHashFile_tHashOutput_16 == null){
			tHashFile_tHashOutput_16 = mf_tHashOutput_16.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_11");
			mf_tHashOutput_16.getResourceMap().put("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_16", tHashFile_tHashOutput_16);
		}
		row82Struct oneRow_tHashOutput_16 = new row82Struct();
			oneRow_tHashOutput_16.sku = row74.sku;
			oneRow_tHashOutput_16.CUSTO = row74.CUSTO;
			oneRow_tHashOutput_16.PRAZO_ADICIONAL = row74.PRAZO_ADICIONAL;
			oneRow_tHashOutput_16.QTD_ESTOQUE = row74.QTD_ESTOQUE;
			oneRow_tHashOutput_16.QTD_DISPONIVEL = row74.QTD_DISPONIVEL;
			oneRow_tHashOutput_16.QTD_PEDIDO = row74.QTD_PEDIDO;
			oneRow_tHashOutput_16.LOCALIZACAO_ESTOQUE = row74.LOCALIZACAO_ESTOQUE;
			oneRow_tHashOutput_16.SALDO_DISPONIVEL = row74.SALDO_DISPONIVEL;
			oneRow_tHashOutput_16.tabela3_preco_venda = row74.tabela3_preco_venda;
			oneRow_tHashOutput_16.tabela4_preco_venda = row74.tabela4_preco_venda;
			oneRow_tHashOutput_16.situacao_produto = row74.situacao_produto;
			oneRow_tHashOutput_16.validaestoque = row74.validaestoque;
        tHashFile_tHashOutput_16.put(oneRow_tHashOutput_16);
        nb_line_tHashOutput_16 ++;	

 


	tos_count_tHashOutput_16++;

/**
 * [tHashOutput_16 main ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

 



/**
 * [tJavaRow_27 process_data_end ] stop
 */

} // End of branch "row73"




	
	/**
	 * [tConvertType_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_9";
	
	

 



/**
 * [tConvertType_9 process_data_end ] stop
 */

} // End of branch "copyOfSaida4"




	
	/**
	 * [tMap_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 process_data_end ] stop
 */

} // End of branch "row72"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_4_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 



/**
 * [tSortRow_4_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_4_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	


}

globalMap.put("tSortRow_4_SortIn_NB_LINE",nb_line_tSortRow_4_SortIn);

 

ok_Hash.put("tSortRow_4_SortIn", true);
end_Hash.put("tSortRow_4_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_4_SortIn end ] stop
 */

	
	/**
	 * [tUniqRow_3 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

globalMap.put("tUniqRow_3_NB_UNIQUES",nb_uniques_tUniqRow_3);
globalMap.put("tUniqRow_3_NB_DUPLICATES",nb_duplicates_tUniqRow_3);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row71");
			  	}
			  	
 

ok_Hash.put("tUniqRow_3", true);
end_Hash.put("tUniqRow_3", System.currentTimeMillis());




/**
 * [tUniqRow_3 end ] stop
 */

	
	/**
	 * [tMap_23 end ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row72");
			  	}
			  	
 

ok_Hash.put("tMap_23", true);
end_Hash.put("tMap_23", System.currentTimeMillis());




/**
 * [tMap_23 end ] stop
 */

	
	/**
	 * [tConvertType_9 end ] start
	 */

	

	
	
	currentComponent="tConvertType_9";
	
	
      globalMap.put("tConvertType_9_NB_LINE", nb_line_tConvertType_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfSaida4");
			  	}
			  	
 

ok_Hash.put("tConvertType_9", true);
end_Hash.put("tConvertType_9", System.currentTimeMillis());




/**
 * [tConvertType_9 end ] stop
 */

	
	/**
	 * [tJavaRow_27 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

globalMap.put("tJavaRow_27_NB_LINE",nb_line_tJavaRow_27);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row73");
			  	}
			  	
 

ok_Hash.put("tJavaRow_27", true);
end_Hash.put("tJavaRow_27", System.currentTimeMillis());




/**
 * [tJavaRow_27 end ] stop
 */

	
	/**
	 * [tHashOutput_16 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
globalMap.put("tHashOutput_16_NB_LINE", nb_line_tHashOutput_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row74");
			  	}
			  	
 

ok_Hash.put("tHashOutput_16", true);
end_Hash.put("tHashOutput_16", System.currentTimeMillis());




/**
 * [tHashOutput_16 end ] stop
 */













































				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_4_SortIn"
							globalMap.remove("tSortRow_4");
						
					     			//free memory for "tMap_22"
					     			globalMap.remove("tHash_Lookup_row77"); 
				     			
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row68"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row23"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row21"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tConvertType_5 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_10 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 finally ] stop
 */

	
	/**
	 * [tFilterRow_9 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_9";
	
	

 



/**
 * [tFilterRow_9 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tJavaRow_24 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

 



/**
 * [tJavaRow_24 finally ] stop
 */

	
	/**
	 * [tConvertType_7 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_7";
	
	

 



/**
 * [tConvertType_7 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tJavaRow_25 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

 



/**
 * [tJavaRow_25 finally ] stop
 */

	
	/**
	 * [tHashOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 finally ] stop
 */
















	
	/**
	 * [tMap_22 finally ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 finally ] stop
 */

	
	/**
	 * [tJavaRow_26 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

 



/**
 * [tJavaRow_26 finally ] stop
 */

	
	/**
	 * [tSortRow_4_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

 



/**
 * [tSortRow_4_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_4_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 



/**
 * [tSortRow_4_SortIn finally ] stop
 */

	
	/**
	 * [tUniqRow_3 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 finally ] stop
 */

	
	/**
	 * [tMap_23 finally ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 finally ] stop
 */

	
	/**
	 * [tConvertType_9 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_9";
	
	

 



/**
 * [tConvertType_9 finally ] stop
 */

	
	/**
	 * [tJavaRow_27 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

 



/**
 * [tJavaRow_27 finally ] stop
 */

	
	/**
	 * [tHashOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 finally ] stop
 */













































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableRow<row54Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row56Struct implements routines.system.IPersistableRow<row56Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row56Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida4Struct implements routines.system.IPersistableRow<Saida4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row53Struct implements routines.system.IPersistableRow<row53Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public Integer SALDO_DISPONIVEL_1;

				public Integer getSALDO_DISPONIVEL_1 () {
					return this.SALDO_DISPONIVEL_1;
				}

				public Boolean SALDO_DISPONIVEL_1IsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVEL_1IsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVEL_1Length(){
				    return null;
				}
				public Integer SALDO_DISPONIVEL_1Precision(){
				    return null;
				}
				public String SALDO_DISPONIVEL_1Default(){
				
					return null;
				
				}
				public String SALDO_DISPONIVEL_1Comment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVEL_1Pattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVEL_1OriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",SALDO_DISPONIVEL_1="+String.valueOf(SALDO_DISPONIVEL_1));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row47Struct implements routines.system.IPersistableRow<row47Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public Integer SALDO_DISPONIVEL_1;

				public Integer getSALDO_DISPONIVEL_1 () {
					return this.SALDO_DISPONIVEL_1;
				}

				public Boolean SALDO_DISPONIVEL_1IsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVEL_1IsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVEL_1Length(){
				    return null;
				}
				public Integer SALDO_DISPONIVEL_1Precision(){
				    return null;
				}
				public String SALDO_DISPONIVEL_1Default(){
				
					return null;
				
				}
				public String SALDO_DISPONIVEL_1Comment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVEL_1Pattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVEL_1OriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",SALDO_DISPONIVEL_1="+String.valueOf(SALDO_DISPONIVEL_1));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_3 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_3> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public Integer SALDO_DISPONIVEL_1;

				public Integer getSALDO_DISPONIVEL_1 () {
					return this.SALDO_DISPONIVEL_1;
				}

				public Boolean SALDO_DISPONIVEL_1IsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVEL_1IsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVEL_1Length(){
				    return null;
				}
				public Integer SALDO_DISPONIVEL_1Precision(){
				    return null;
				}
				public String SALDO_DISPONIVEL_1Default(){
				
					return null;
				
				}
				public String SALDO_DISPONIVEL_1Comment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVEL_1Pattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVEL_1OriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",SALDO_DISPONIVEL_1="+String.valueOf(SALDO_DISPONIVEL_1));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_3 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row52Struct implements routines.system.IPersistableRow<row52Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public Integer SALDO_DISPONIVEL_1;

				public Integer getSALDO_DISPONIVEL_1 () {
					return this.SALDO_DISPONIVEL_1;
				}

				public Boolean SALDO_DISPONIVEL_1IsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVEL_1IsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVEL_1Length(){
				    return null;
				}
				public Integer SALDO_DISPONIVEL_1Precision(){
				    return null;
				}
				public String SALDO_DISPONIVEL_1Default(){
				
					return null;
				
				}
				public String SALDO_DISPONIVEL_1Comment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVEL_1Pattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVEL_1OriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",SALDO_DISPONIVEL_1="+String.valueOf(SALDO_DISPONIVEL_1));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida3Struct implements routines.system.IPersistableRow<Saida3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public Integer SALDO_DISPONIVEL_1;

				public Integer getSALDO_DISPONIVEL_1 () {
					return this.SALDO_DISPONIVEL_1;
				}

				public Boolean SALDO_DISPONIVEL_1IsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVEL_1IsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVEL_1Length(){
				    return null;
				}
				public Integer SALDO_DISPONIVEL_1Precision(){
				    return null;
				}
				public String SALDO_DISPONIVEL_1Default(){
				
					return null;
				
				}
				public String SALDO_DISPONIVEL_1Comment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVEL_1Pattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVEL_1OriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
						this.SALDO_DISPONIVEL_1 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL_1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",SALDO_DISPONIVEL_1="+String.valueOf(SALDO_DISPONIVEL_1));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saodaStruct implements routines.system.IPersistableRow<saodaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saodaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class naokitStruct implements routines.system.IPersistableRow<naokitStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(naokitStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ehKitStruct implements routines.system.IPersistableRow<ehKitStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ehKitStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row49Struct implements routines.system.IPersistableRow<row49Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public Double VALOR_DIFF;

				public Double getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_DIFF = null;
           				} else {
           			    	this.VALOR_DIFF = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_DIFF = null;
           				} else {
           			    	this.VALOR_DIFF = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// Double
				
						if(this.VALOR_DIFF == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_DIFF);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// Double
				
						if(this.VALOR_DIFF == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_DIFF);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+String.valueOf(VALOR_DIFF));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String tabela7_preco_venda;

				public String getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public String PRECO_CALC;

				public String getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
					this.tabela7_preco_venda = readString(dis);
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
					this.PRECO_CALC = readString(dis);
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
					this.tabela7_preco_venda = readString(dis);
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
					this.PRECO_CALC = readString(dis);
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// String
				
						writeString(this.tabela7_preco_venda,dos);
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// String
				
						writeString(this.PRECO_CALC,dos);
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// String
				
						writeString(this.tabela7_preco_venda,dos);
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// String
				
						writeString(this.PRECO_CALC,dos);
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+tabela7_preco_venda);
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+PRECO_CALC);
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String tabela7_preco_venda;

				public String getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public String PRECO_CALC;

				public String getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
					this.tabela7_preco_venda = readString(dis);
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
					this.PRECO_CALC = readString(dis);
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
					this.tabela7_preco_venda = readString(dis);
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
					this.PRECO_CALC = readString(dis);
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// String
				
						writeString(this.tabela7_preco_venda,dos);
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// String
				
						writeString(this.PRECO_CALC,dos);
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// String
				
						writeString(this.tabela7_preco_venda,dos);
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// String
				
						writeString(this.PRECO_CALC,dos);
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+tabela7_preco_venda);
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+PRECO_CALC);
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal price;

				public BigDecimal getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Float tabela7_preco_vendac;

				public Float getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.price = (BigDecimal) dis.readObject();
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readFloat();
           				}
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.price = (BigDecimal) dis.readObject();
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readFloat();
           				}
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.price);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Float
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.price);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Float
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class precoStruct implements routines.system.IPersistableRow<precoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(precoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Estoque1Struct implements routines.system.IPersistableRow<Estoque1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Estoque1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida5Struct implements routines.system.IPersistableRow<Saida5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_4Process(globalMap);
		tHashInput_16Process(globalMap);
		tHashInput_12Process(globalMap);
		tHashInput_13Process(globalMap);

		row6Struct row6 = new row6Struct();
Saida5Struct Saida5 = new Saida5Struct();
precoStruct preco = new precoStruct();
row10Struct row10 = new row10Struct();
row36Struct row36 = new row36Struct();
row14Struct row14 = new row14Struct();
row16Struct row16 = new row16Struct();
row13Struct row13 = new row13Struct();
row17Struct row17 = new row17Struct();
row15Struct row15 = new row15Struct();
row46Struct row46 = new row46Struct();
row18Struct row18 = new row18Struct();
row44Struct row44 = new row44Struct();
row45Struct row45 = new row45Struct();
row19Struct row19 = new row19Struct();
row49Struct row49 = new row49Struct();
Estoque1Struct Estoque1 = new Estoque1Struct();
naokitStruct naokit = new naokitStruct();
row37Struct row37 = new row37Struct();
row40Struct row40 = new row40Struct();
saodaStruct saoda = new saodaStruct();
row41Struct row41 = new row41Struct();
ehKitStruct ehKit = new ehKitStruct();
Saida3Struct Saida3 = new Saida3Struct();
row52Struct row52 = new row52Struct();
row47Struct row47 = new row47Struct();
row53Struct row53 = new row53Struct();
Saida4Struct Saida4 = new Saida4Struct();
row56Struct row56 = new row56Struct();
row54Struct row54 = new row54Struct();



















	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row49Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row49Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String sku;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.sku == null) ? 0 : this.sku.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.sku == null) {
										if (other.sku != null) 
											return false;
								
									} else if (!this.sku.equals(other.sku))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tFilterRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_6", false);
		start_Hash.put("tFilterRow_6", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tFilterRow_6 = 0;
		
    int nb_line_tFilterRow_6 = 0;
    int nb_line_ok_tFilterRow_6 = 0;
    int nb_line_reject_tFilterRow_6 = 0;

    class Operator_tFilterRow_6 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_6(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_6 begin ] stop
 */



	
	/**
	 * [tFilterRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_5", false);
		start_Hash.put("tFilterRow_5", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tFilterRow_5 = 0;
		
    int nb_line_tFilterRow_5 = 0;
    int nb_line_ok_tFilterRow_5 = 0;
    int nb_line_reject_tFilterRow_5 = 0;

    class Operator_tFilterRow_5 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_5(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_5 begin ] stop
 */



	
	/**
	 * [tFilterRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_2", false);
		start_Hash.put("tFilterRow_2", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tFilterRow_2 = 0;
		
    int nb_line_tFilterRow_2 = 0;
    int nb_line_ok_tFilterRow_2 = 0;
    int nb_line_reject_tFilterRow_2 = 0;

    class Operator_tFilterRow_2 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_2(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_14", false);
		start_Hash.put("tJavaRow_14", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tJavaRow_14 = 0;
		

int nb_line_tJavaRow_14 = 0;

 



/**
 * [tJavaRow_14 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tConvertType_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_2", false);
		start_Hash.put("tConvertType_2", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tConvertType_2 = 0;
		
	int nb_line_tConvertType_2 = 0;  
 



/**
 * [tConvertType_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tConvertType_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_3", false);
		start_Hash.put("tConvertType_3", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tConvertType_3 = 0;
		
	int nb_line_tConvertType_3 = 0;  
 



/**
 * [tConvertType_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"preco");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */









	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct> tHashFile_tHashOutput_8 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_8.getKeyMap().put("tHashFile_relatorio_preco_estoque_" +pid + "_tHashOutput_8", "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_7");
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_15", false);
		start_Hash.put("tJavaRow_15", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saoda");
					}
				
		int tos_count_tJavaRow_15 = 0;
		

int nb_line_tJavaRow_15 = 0;

 



/**
 * [tJavaRow_15 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
saodaStruct saoda_tmp = new saodaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tConvertType_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_4", false);
		start_Hash.put("tConvertType_4", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tConvertType_4 = 0;
		
	int nb_line_tConvertType_4 = 0;  
 



/**
 * [tConvertType_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_13", false);
		start_Hash.put("tJavaRow_13", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"naokit");
					}
				
		int tos_count_tJavaRow_13 = 0;
		

int nb_line_tJavaRow_13 = 0;

 



/**
 * [tJavaRow_13 begin ] stop
 */






	
	/**
	 * [tSortRow_3_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_3_SortOut", false);
		start_Hash.put("tSortRow_3_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tSortRow_3_SortOut = 0;
		


class Comparablerow52Struct extends row52Struct implements Comparable<Comparablerow52Struct> {
	
	public int compareTo(Comparablerow52Struct other) {

		if(this.sku == null && other.sku != null){
			return -1;
						
		}else if(this.sku != null && other.sku == null){
			return 1;
						
		}else if(this.sku != null && other.sku != null){
			if(!this.sku.equals(other.sku)){
				return this.sku.compareTo(other.sku);
			}
		}
		if(this.SALDO_DISPONIVEL_1 == null && other.SALDO_DISPONIVEL_1 != null){
			return -1;
						
		}else if(this.SALDO_DISPONIVEL_1 != null && other.SALDO_DISPONIVEL_1 == null){
			return 1;
						
		}else if(this.SALDO_DISPONIVEL_1 != null && other.SALDO_DISPONIVEL_1 != null){
			if(!this.SALDO_DISPONIVEL_1.equals(other.SALDO_DISPONIVEL_1)){
				return this.SALDO_DISPONIVEL_1.compareTo(other.SALDO_DISPONIVEL_1);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow52Struct> list_tSortRow_3_SortOut = new java.util.ArrayList<Comparablerow52Struct>();


 



/**
 * [tSortRow_3_SortOut begin ] stop
 */



	
	/**
	 * [tJavaRow_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_19", false);
		start_Hash.put("tJavaRow_19", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida3");
					}
				
		int tos_count_tJavaRow_19 = 0;
		

int nb_line_tJavaRow_19 = 0;

 



/**
 * [tJavaRow_19 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ehKit");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct> tHash_Lookup_row51 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct>) 
					globalMap.get( "tHash_Lookup_row51" ))
					;					
					
	

row51Struct row51HashKey = new row51Struct();
row51Struct row51Default = new row51Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida3Struct Saida3_tmp = new Saida3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Estoque1");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
					globalMap.get( "tHash_Lookup_row50" ))
					;					
					
	

row50Struct row50HashKey = new row50Struct();
row50Struct row50Default = new row50Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
naokitStruct naokit_tmp = new naokitStruct();
ehKitStruct ehKit_tmp = new ehKitStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida5");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
precoStruct preco_tmp = new precoStruct();
Estoque1Struct Estoque1_tmp = new Estoque1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) 
					globalMap.get( "tHash_Lookup_row65" ))
					;					
					
	

row65Struct row65HashKey = new row65Struct();
row65Struct row65Default = new row65Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida5Struct Saida5_tmp = new Saida5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida10Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<Saida10Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    Saida10Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.sku = next_tHashInput_1.sku;
	row6.price = next_tHashInput_1.price;
	row6.qty = next_tHashInput_1.qty;
	row6.is_in_stock = next_tHashInput_1.is_in_stock;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
						row65Struct row65 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_16 = false;
		boolean mainRowRejected_tMap_16 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row65" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow65 = false;
       		  	    	
       		  	    	
 							row65Struct row65ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_16) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_16 = false;
								
                        		    		    row65HashKey.CD_PRODUTO = row6.sku ;
                        		    		

								
		                        	row65HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row65.lookup( row65HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row65 != null && tHash_Lookup_row65.getCount(row65HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row65' and it contains more one result from keys :  row65.CD_PRODUTO = '" + row65HashKey.CD_PRODUTO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row65Struct fromLookup_row65 = null;
							row65 = row65Default;
										 
							
								 
							
							
								if (tHash_Lookup_row65 !=null && tHash_Lookup_row65.hasNext()) { // G 099
								
							
								
								fromLookup_row65 = tHash_Lookup_row65.next();

							
							
								} // G 099
							
							

							if(fromLookup_row65 != null) {
								row65 = fromLookup_row65;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

Saida5 = null;


// # Output table : 'Saida5'
Saida5_tmp.sku = row6.sku;
Saida5_tmp.price = row6.price;
Saida5_tmp.qty = row6.qty;
Saida5_tmp.is_in_stock = row6.is_in_stock;
Saida5_tmp.SALDO_DISPONIVEL = row65.SALDO_DISPONIVEL ;
Saida5_tmp.SITUACAO_PRODUTO = row65.SITUACAO_PRODUTO ;
Saida5 = Saida5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "Saida5"
if(Saida5 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row7Struct row7 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row7HashKey.cd_produto = Saida5.sku ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row7.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_2 = true;
	  								
						
									
	
		  								forceLooprow7 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow7 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row7 != null && tHash_Lookup_row7.hasNext()) || forceLooprow7) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row7'
									
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								
								if(!forceLooprow7) { // G 46
								
							
								 
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow7 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

preco = null;
Estoque1 = null;

if(!rejectedInnerJoin_tMap_2 ) {

// # Output table : 'preco'
preco_tmp.sku = Saida5.sku ;
preco_tmp.price = Saida5.price != null ? Saida5.price : "0.00" ;
preco_tmp.qty = Saida5.qty ;
preco_tmp.is_in_stock = Saida5.is_in_stock ;
preco_tmp.SALDO_DISPONIVEL = Saida5.SALDO_DISPONIVEL ;
preco_tmp.tabela3_preco_venda = row7.tabela3_preco_venda != null ? row7.tabela3_preco_venda : 0.00;
preco_tmp.tabela4_preco_venda = row7.tabela4_preco_venda != null ? row7.tabela4_preco_venda : 0.00;
preco_tmp.tabela7_preco_venda = row7.tabela7_preco_venda  != null ? row7.tabela7_preco_venda : 0.00;
preco_tmp.tabela3_preco_vendac = row7.tabela3_preco_vendac  != null ? row7.tabela3_preco_vendac : 0.00;
preco_tmp.tabela4_preco_vendac = row7.tabela4_preco_vendac  != null ? row7.tabela4_preco_vendac : 0.00;
preco_tmp.tabela7_preco_vendac = row7.tabela7_preco_vendac  != null ? row7.tabela7_preco_vendac : 0.00;
preco_tmp.situacao_produto = Saida5.SITUACAO_PRODUTO  != null ? Saida5.SITUACAO_PRODUTO  : "001" ;
preco = preco_tmp;

// # Output table : 'Estoque1'
Estoque1_tmp.sku = Saida5.sku  ;
Estoque1_tmp.qty = Saida5.qty;
Estoque1_tmp.is_in_stock = Saida5.is_in_stock  ;
Estoque1_tmp.SALDO_DISPONIVEL = Saida5.SALDO_DISPONIVEL ;
Estoque1 = Estoque1_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "preco"
if(preco != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"preco"
						
						);
					}
					

    //Code generate according to input schema and output schema
row10.sku = preco.sku;
row10.price = preco.price;
row10.qty = preco.qty;
row10.is_in_stock = preco.is_in_stock;
row10.SALDO_DISPONIVEL = preco.SALDO_DISPONIVEL;
row10.tabela3_preco_venda = preco.tabela3_preco_venda;
row10.tabela4_preco_venda = preco.tabela4_preco_venda;
row10.tabela7_preco_venda = preco.tabela7_preco_venda;
row10.tabela3_preco_vendac = preco.tabela3_preco_vendac;
row10.tabela4_preco_vendac = preco.tabela4_preco_vendac;
row10.tabela7_preco_vendac = preco.tabela7_preco_vendac;
row10.situacao_produto = preco.situacao_produto;



if ((preco.tabela7_preco_venda < 100.00) && (!preco.situacao_produto.equals("007"))) {
row10.PRECO_CALC = preco.tabela7_preco_venda / 0.9;
} else if ((preco.tabela7_preco_venda < 100.00) && (preco.situacao_produto.equals("007"))) {
row10.PRECO_CALC = preco.tabela7_preco_venda / 0.9;
} else if ((preco.tabela7_preco_venda >= 100.00) && (!preco.situacao_produto.equals("007"))) {
row10.PRECO_CALC = preco.tabela7_preco_vendac / 0.9;
} else if ((preco.tabela7_preco_venda >= 100.00) && (preco.situacao_produto.equals("007"))) {
row10.PRECO_CALC = preco.tabela7_preco_venda / 0.9;
} else{
row10.PRECO_CALC = preco.tabela7_preco_venda;
}




/*NumberFormat formatter = new DecimalFormat("#0.00");     
System.out.println(formatter.format(4.0));*/


/*if (preco.STATUS.equals("PAID_WAITING_SHIP")) {
row10.STATUS = "Aguardando Envio";
} else if (preco.STATUS.equals("INVOICED")){
row10.STATUS = "Faturado";
} else if (preco.STATUS.equals("PAID_WAITING_DELIVERY")){
row10.STATUS = "Aguardando Entrega";
} else if (preco.STATUS.equals("CANCELED")){
row10.STATUS = "Cancelado";
} else if (preco.STATUS.equals("CONCLUDED")){
row10.STATUS = "Concluido";
} else if (preco.STATUS.equals("")){
row10.STATUS = "Concluido";
}
else row10.STATUS = "Indefinido";*/
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_3 main ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


  row36 = new row36Struct();
  boolean bHasError_tConvertType_3 = false;             
          try {
              row36.sku=TypeConvert.String2String(row10.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.price=TypeConvert.String2BigDecimal(row10.price);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.qty=TypeConvert.String2String(row10.qty);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.is_in_stock=TypeConvert.String2String(row10.is_in_stock);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(row10.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.tabela3_preco_venda=TypeConvert.Double2Double(row10.tabela3_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.tabela4_preco_venda=TypeConvert.Double2Double(row10.tabela4_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.tabela7_preco_venda=TypeConvert.Double2Double(row10.tabela7_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.tabela3_preco_vendac=TypeConvert.Double2Double(row10.tabela3_preco_vendac);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.tabela4_preco_vendac=TypeConvert.Double2Double(row10.tabela4_preco_vendac);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.tabela7_preco_vendac=TypeConvert.Double2Float(row10.tabela7_preco_vendac);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.situacao_produto=TypeConvert.String2String(row10.situacao_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row36.PRECO_CALC=TypeConvert.Double2Double(row10.PRECO_CALC);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_3) {row36 = null;}

  nb_line_tConvertType_3 ++ ;

 


	tos_count_tConvertType_3++;

/**
 * [tConvertType_3 main ] stop
 */
	
	/**
	 * [tConvertType_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_begin ] stop
 */
// Start of branch "row36"
if(row36 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					

    //Code generate according to input schema and output schema
row14.sku = row36.sku;
row14.price = String.format("%.2f",row36.price);
row14.qty = row36.qty;
row14.is_in_stock = row36.is_in_stock;
row14.SALDO_DISPONIVEL = row36.SALDO_DISPONIVEL;
row14.tabela3_preco_venda = String.format("%.2f",row36.tabela3_preco_venda);
row14.tabela4_preco_venda = String.format("%.2f",row36.tabela4_preco_venda);
row14.tabela7_preco_venda = String.format("%.2f",row36.tabela7_preco_venda);
row14.tabela3_preco_vendac = String.format("%.2f",row36.tabela3_preco_vendac);
row14.tabela4_preco_vendac = String.format("%.2f",row36.tabela4_preco_vendac);
row14.tabela7_preco_vendac = String.format("%.2f",row36.tabela7_preco_vendac);
row14.situacao_produto = row36.situacao_produto;
row14.PRECO_CALC = String.format("%.2f",row36.PRECO_CALC);
if (row36.price.equals(row36.PRECO_CALC)) {
row14.VALIDACAO_MAGENTO = "IGUAL";
} else{
row14.VALIDACAO_MAGENTO = "DIFERENTE";
}
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

    //Code generate according to input schema and output schema
row16.sku = row14.sku;
row16.price = row14.price.replaceAll(",", ".");
row16.qty = row14.qty;
row16.is_in_stock = row14.is_in_stock;
row16.SALDO_DISPONIVEL = row14.SALDO_DISPONIVEL;
row16.tabela3_preco_venda = row14.tabela3_preco_venda.replaceAll(",", ".");
row16.tabela4_preco_venda = row14.tabela4_preco_venda;
row16.tabela7_preco_venda = row14.tabela7_preco_venda.replaceAll(",", ".");
row16.tabela3_preco_vendac = row14.tabela3_preco_vendac;
row16.tabela4_preco_vendac = row14.tabela4_preco_vendac;
row16.tabela7_preco_vendac = row14.tabela7_preco_vendac;
row16.situacao_produto = row14.situacao_produto;
row16.PRECO_CALC = row14.PRECO_CALC.replaceAll(",", ".");
row16.VALIDACAO_MAGENTO = row14.VALIDACAO_MAGENTO;


    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_2 main ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


  row13 = new row13Struct();
  boolean bHasError_tConvertType_2 = false;             
          try {
              row13.sku=TypeConvert.String2String(row16.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.price=TypeConvert.String2Double(row16.price);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.qty=TypeConvert.String2String(row16.qty);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.is_in_stock=TypeConvert.String2String(row16.is_in_stock);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(row16.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.tabela3_preco_venda=TypeConvert.String2String(row16.tabela3_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.tabela4_preco_venda=TypeConvert.String2String(row16.tabela4_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.tabela7_preco_venda=TypeConvert.String2Double(row16.tabela7_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.tabela3_preco_vendac=TypeConvert.String2String(row16.tabela3_preco_vendac);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.tabela4_preco_vendac=TypeConvert.String2String(row16.tabela4_preco_vendac);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.tabela7_preco_vendac=TypeConvert.String2String(row16.tabela7_preco_vendac);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.situacao_produto=TypeConvert.String2String(row16.situacao_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.PRECO_CALC=TypeConvert.String2Double(row16.PRECO_CALC);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.VALIDACAO_MAGENTO=TypeConvert.String2String(row16.VALIDACAO_MAGENTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_2) {row13 = null;}

  nb_line_tConvertType_2 ++ ;

 


	tos_count_tConvertType_2++;

/**
 * [tConvertType_2 main ] stop
 */
	
	/**
	 * [tConvertType_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

          row17 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
            ope_tFilterRow_1.matches((row13.VALIDACAO_MAGENTO == null? false : row13.VALIDACAO_MAGENTO.compareTo("DIFERENTE") == 0)
                           , "VALIDACAO_MAGENTO.compareTo(\"DIFERENTE\") == 0 failed");
            ope_tFilterRow_1.matches((row13.situacao_produto == null? false : row13.situacao_produto.compareTo("008") != 0)
                           , "situacao_produto.compareTo(\"008\") != 0 failed");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row17 == null){ 
                row17 = new row17Struct();
              }
               row17.sku = row13.sku;
               row17.price = row13.price;
               row17.qty = row13.qty;
               row17.is_in_stock = row13.is_in_stock;
               row17.SALDO_DISPONIVEL = row13.SALDO_DISPONIVEL;
               row17.tabela3_preco_venda = row13.tabela3_preco_venda;
               row17.tabela4_preco_venda = row13.tabela4_preco_venda;
               row17.tabela7_preco_venda = row13.tabela7_preco_venda;
               row17.tabela3_preco_vendac = row13.tabela3_preco_vendac;
               row17.tabela4_preco_vendac = row13.tabela4_preco_vendac;
               row17.tabela7_preco_vendac = row13.tabela7_preco_vendac;
               row17.situacao_produto = row13.situacao_produto;
               row17.PRECO_CALC = row13.PRECO_CALC;
               row17.VALIDACAO_MAGENTO = row13.VALIDACAO_MAGENTO;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row17"
if(row17 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

    //Code generate according to input schema and output schema
row15.sku = row17.sku;
row15.price = row17.price;
row15.qty = row17.qty;
row15.is_in_stock = row17.is_in_stock;
row15.SALDO_DISPONIVEL = row17.SALDO_DISPONIVEL;
row15.tabela3_preco_venda = row17.tabela3_preco_venda;
row15.tabela4_preco_venda = row17.tabela4_preco_venda;
row15.tabela7_preco_venda = row17.tabela7_preco_venda;
row15.tabela3_preco_vendac = row17.tabela3_preco_vendac;
row15.tabela4_preco_vendac = row17.tabela4_preco_vendac;
row15.tabela7_preco_vendac = row17.tabela7_preco_vendac;
row15.situacao_produto = row17.situacao_produto;
row15.PRECO_CALC = row17.PRECO_CALC;
row15.VALIDACAO_MAGENTO = row17.VALIDACAO_MAGENTO;
row15.VALOR_DIFF = row15.price - row15.PRECO_CALC;
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_14 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

    //Code generate according to input schema and output schema
row46.sku = row15.sku;
row46.price = row15.price;
row46.qty = row15.qty;
row46.is_in_stock = row15.is_in_stock;
row46.SALDO_DISPONIVEL = row15.SALDO_DISPONIVEL;
row46.tabela3_preco_venda = row15.tabela3_preco_venda;
row46.tabela4_preco_venda = row15.tabela4_preco_venda;
row46.tabela7_preco_venda = row15.tabela7_preco_venda;
row46.tabela3_preco_vendac = row15.tabela3_preco_vendac;
row46.tabela4_preco_vendac = row15.tabela4_preco_vendac;
row46.tabela7_preco_vendac = row15.tabela7_preco_vendac;
row46.situacao_produto = row15.situacao_produto;
row46.PRECO_CALC = row15.PRECO_CALC;
row46.VALIDACAO_MAGENTO = row15.VALIDACAO_MAGENTO;
row46.VALOR_DIFF = String.format("%.2f",row15.VALOR_DIFF);

    nb_line_tJavaRow_14++;   

 


	tos_count_tJavaRow_14++;

/**
 * [tJavaRow_14 main ] stop
 */
	
	/**
	 * [tJavaRow_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_2 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					

          row18 = null;
    Operator_tFilterRow_2 ope_tFilterRow_2 = new Operator_tFilterRow_2("&&");
            ope_tFilterRow_2.matches((row46.VALOR_DIFF == null? false : row46.VALOR_DIFF.compareTo("0,01") != 0)
                           , "VALOR_DIFF.compareTo(\"0,01\") != 0 failed");
    
    if (ope_tFilterRow_2.getMatchFlag()) {
              if(row18 == null){ 
                row18 = new row18Struct();
              }
               row18.sku = row46.sku;
               row18.price = row46.price;
               row18.qty = row46.qty;
               row18.is_in_stock = row46.is_in_stock;
               row18.SALDO_DISPONIVEL = row46.SALDO_DISPONIVEL;
               row18.tabela3_preco_venda = row46.tabela3_preco_venda;
               row18.tabela4_preco_venda = row46.tabela4_preco_venda;
               row18.tabela7_preco_venda = row46.tabela7_preco_venda;
               row18.tabela3_preco_vendac = row46.tabela3_preco_vendac;
               row18.tabela4_preco_vendac = row46.tabela4_preco_vendac;
               row18.tabela7_preco_vendac = row46.tabela7_preco_vendac;
               row18.situacao_produto = row46.situacao_produto;
               row18.PRECO_CALC = row46.PRECO_CALC;
               row18.VALIDACAO_MAGENTO = row46.VALIDACAO_MAGENTO;
               row18.VALOR_DIFF = row46.VALOR_DIFF;    
      nb_line_ok_tFilterRow_2++;
    } else {
      nb_line_reject_tFilterRow_2++;
    }

nb_line_tFilterRow_2++;

 


	tos_count_tFilterRow_2++;

/**
 * [tFilterRow_2 main ] stop
 */
	
	/**
	 * [tFilterRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 process_data_begin ] stop
 */
// Start of branch "row18"
if(row18 != null) { 



	
	/**
	 * [tFilterRow_5 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

          row44 = null;
    Operator_tFilterRow_5 ope_tFilterRow_5 = new Operator_tFilterRow_5("&&");
            ope_tFilterRow_5.matches((row18.VALOR_DIFF == null? false : row18.VALOR_DIFF.compareTo("0,00") != 0)
                           , "VALOR_DIFF.compareTo(\"0,00\") != 0 failed");
    
    if (ope_tFilterRow_5.getMatchFlag()) {
              if(row44 == null){ 
                row44 = new row44Struct();
              }
               row44.sku = row18.sku;
               row44.price = row18.price;
               row44.qty = row18.qty;
               row44.is_in_stock = row18.is_in_stock;
               row44.SALDO_DISPONIVEL = row18.SALDO_DISPONIVEL;
               row44.tabela3_preco_venda = row18.tabela3_preco_venda;
               row44.tabela4_preco_venda = row18.tabela4_preco_venda;
               row44.tabela7_preco_venda = row18.tabela7_preco_venda;
               row44.tabela3_preco_vendac = row18.tabela3_preco_vendac;
               row44.tabela4_preco_vendac = row18.tabela4_preco_vendac;
               row44.tabela7_preco_vendac = row18.tabela7_preco_vendac;
               row44.situacao_produto = row18.situacao_produto;
               row44.PRECO_CALC = row18.PRECO_CALC;
               row44.VALIDACAO_MAGENTO = row18.VALIDACAO_MAGENTO;
               row44.VALOR_DIFF = row18.VALOR_DIFF;    
      nb_line_ok_tFilterRow_5++;
    } else {
      nb_line_reject_tFilterRow_5++;
    }

nb_line_tFilterRow_5++;

 


	tos_count_tFilterRow_5++;

/**
 * [tFilterRow_5 main ] stop
 */
	
	/**
	 * [tFilterRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_5";
	
	

 



/**
 * [tFilterRow_5 process_data_begin ] stop
 */
// Start of branch "row44"
if(row44 != null) { 



	
	/**
	 * [tFilterRow_6 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					

          row45 = null;
    Operator_tFilterRow_6 ope_tFilterRow_6 = new Operator_tFilterRow_6("&&");
            ope_tFilterRow_6.matches((row44.VALOR_DIFF == null? false : row44.VALOR_DIFF.compareTo("-0,01") != 0)
                           , "VALOR_DIFF.compareTo(\"-0,01\") != 0 failed");
    
    if (ope_tFilterRow_6.getMatchFlag()) {
              if(row45 == null){ 
                row45 = new row45Struct();
              }
               row45.sku = row44.sku;
               row45.price = row44.price;
               row45.qty = row44.qty;
               row45.is_in_stock = row44.is_in_stock;
               row45.SALDO_DISPONIVEL = row44.SALDO_DISPONIVEL;
               row45.tabela3_preco_venda = row44.tabela3_preco_venda;
               row45.tabela4_preco_venda = row44.tabela4_preco_venda;
               row45.tabela7_preco_venda = row44.tabela7_preco_venda;
               row45.tabela3_preco_vendac = row44.tabela3_preco_vendac;
               row45.tabela4_preco_vendac = row44.tabela4_preco_vendac;
               row45.tabela7_preco_vendac = row44.tabela7_preco_vendac;
               row45.situacao_produto = row44.situacao_produto;
               row45.PRECO_CALC = row44.PRECO_CALC;
               row45.VALIDACAO_MAGENTO = row44.VALIDACAO_MAGENTO;
               row45.VALOR_DIFF = row44.VALOR_DIFF;    
      nb_line_ok_tFilterRow_6++;
    } else {
      nb_line_reject_tFilterRow_6++;
    }

nb_line_tFilterRow_6++;

 


	tos_count_tFilterRow_6++;

/**
 * [tFilterRow_6 main ] stop
 */
	
	/**
	 * [tFilterRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_6";
	
	

 



/**
 * [tFilterRow_6 process_data_begin ] stop
 */
// Start of branch "row45"
if(row45 != null) { 



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

    //Code generate according to input schema and output schema
row19.sku = row45.sku;
row19.price = row45.price;
row19.qty = row45.qty;
row19.is_in_stock = row45.is_in_stock;
row19.SALDO_DISPONIVEL = row45.SALDO_DISPONIVEL;
row19.tabela3_preco_venda = row45.tabela3_preco_venda;
row19.tabela4_preco_venda = row45.tabela4_preco_venda;
row19.tabela7_preco_venda = row45.tabela7_preco_venda;
row19.tabela3_preco_vendac = row45.tabela3_preco_vendac;
row19.tabela4_preco_vendac = row45.tabela4_preco_vendac;
row19.tabela7_preco_vendac = row45.tabela7_preco_vendac;
row19.situacao_produto = row45.situacao_produto;
row19.PRECO_CALC = row45.PRECO_CALC;
row19.VALIDACAO_MAGENTO = row45.VALIDACAO_MAGENTO;
row19.VALOR_DIFF = row45.VALOR_DIFF;

    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					
row49 = null;			
if(row19.sku == null){
	finder_tUniqRow_1.sku = null;
}else{
	finder_tUniqRow_1.sku = row19.sku.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(row19.sku == null){
	new_tUniqRow_1.sku = null;
}else{
	new_tUniqRow_1.sku = row19.sku.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row49 == null){ 
	
	row49 = new row49Struct();
}row49.sku = row19.sku;			row49.price = row19.price;			row49.qty = row19.qty;			row49.is_in_stock = row19.is_in_stock;			row49.SALDO_DISPONIVEL = row19.SALDO_DISPONIVEL;			row49.tabela3_preco_venda = row19.tabela3_preco_venda;			row49.tabela4_preco_venda = row19.tabela4_preco_venda;			row49.tabela7_preco_venda = row19.tabela7_preco_venda;			row49.tabela3_preco_vendac = row19.tabela3_preco_vendac;			row49.tabela4_preco_vendac = row19.tabela4_preco_vendac;			row49.tabela7_preco_vendac = row19.tabela7_preco_vendac;			row49.situacao_produto = row19.situacao_produto;			row49.PRECO_CALC = row19.PRECO_CALC;			row49.VALIDACAO_MAGENTO = row19.VALIDACAO_MAGENTO;			row49.VALOR_DIFF = row19.VALOR_DIFF;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row49"
if(row49 != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					



    
		row49Struct oneRow_tHashOutput_3 = new row49Struct();
				
					oneRow_tHashOutput_3.sku = row49.sku;
					oneRow_tHashOutput_3.price = row49.price;
					oneRow_tHashOutput_3.qty = row49.qty;
					oneRow_tHashOutput_3.is_in_stock = row49.is_in_stock;
					oneRow_tHashOutput_3.SALDO_DISPONIVEL = row49.SALDO_DISPONIVEL;
					oneRow_tHashOutput_3.tabela3_preco_venda = row49.tabela3_preco_venda;
					oneRow_tHashOutput_3.tabela4_preco_venda = row49.tabela4_preco_venda;
					oneRow_tHashOutput_3.tabela7_preco_venda = row49.tabela7_preco_venda;
					oneRow_tHashOutput_3.tabela3_preco_vendac = row49.tabela3_preco_vendac;
					oneRow_tHashOutput_3.tabela4_preco_vendac = row49.tabela4_preco_vendac;
					oneRow_tHashOutput_3.tabela7_preco_vendac = row49.tabela7_preco_vendac;
					oneRow_tHashOutput_3.situacao_produto = row49.situacao_produto;
					oneRow_tHashOutput_3.PRECO_CALC = row49.PRECO_CALC;
					oneRow_tHashOutput_3.VALIDACAO_MAGENTO = row49.VALIDACAO_MAGENTO;
					oneRow_tHashOutput_3.VALOR_DIFF = row49.VALOR_DIFF;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "row49"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "row45"




	
	/**
	 * [tFilterRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_6";
	
	

 



/**
 * [tFilterRow_6 process_data_end ] stop
 */

} // End of branch "row44"




	
	/**
	 * [tFilterRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_5";
	
	

 



/**
 * [tFilterRow_5 process_data_end ] stop
 */

} // End of branch "row18"




	
	/**
	 * [tFilterRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "row17"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tConvertType_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "row36"




	
	/**
	 * [tConvertType_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "preco"




// Start of branch "Estoque1"
if(Estoque1 != null) { 



	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Estoque1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row50Struct row50 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row50" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow50 = false;
       		  	    	
       		  	    	
 							row50Struct row50ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row50HashKey.cd_combo = Estoque1.sku ;
                        		    		

								
		                        	row50HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row50.lookup( row50HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_10 = true;
	  								
						
									
	
		  								forceLooprow50 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow50 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row50 != null && tHash_Lookup_row50.hasNext()) || forceLooprow50) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row50'
									
                    		  	 
							   
                    		  	 
	       		  	    	row50Struct fromLookup_row50 = null;
							row50 = row50Default;
										 
							
								
								if(!forceLooprow50) { // G 46
								
							
								 
							
								
								fromLookup_row50 = tHash_Lookup_row50.next();

							

							if(fromLookup_row50 != null) {
								row50 = fromLookup_row50;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow50 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

ehKit = null;
naokit = null;

if(!rejectedInnerJoin_tMap_10 ) {

// # Output table : 'ehKit'
ehKit_tmp.sku = Estoque1.sku ;
ehKit_tmp.qty = Estoque1.qty ;
ehKit_tmp.is_in_stock = Estoque1.is_in_stock ;
ehKit_tmp.SALDO_DISPONIVEL = Estoque1.SALDO_DISPONIVEL ;
ehKit_tmp.cd_produto = row50.cd_produto ;
ehKit_tmp.qtde = row50.qtde ;
ehKit = ehKit_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'naokit'
// # Filter conditions 
if( rejectedInnerJoin_tMap_10 ) {
naokit_tmp.sku = Estoque1.sku;
naokit_tmp.qty = Estoque1.qty;
naokit_tmp.is_in_stock = Estoque1.is_in_stock;
naokit_tmp.SALDO_DISPONIVEL = Estoque1.SALDO_DISPONIVEL;
naokit = naokit_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "naokit"
if(naokit != null) { 



	
	/**
	 * [tJavaRow_13 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"naokit"
						
						);
					}
					

    //Code generate according to input schema and output schema
row37.sku = naokit.sku;
row37.qty = naokit.qty;
row37.is_in_stock = naokit.is_in_stock;
row37.SALDO_DISPONIVEL = naokit.SALDO_DISPONIVEL;
    nb_line_tJavaRow_13++;   

 


	tos_count_tJavaRow_13++;

/**
 * [tJavaRow_13 main ] stop
 */
	
	/**
	 * [tJavaRow_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_4 main ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					


  row40 = new row40Struct();
  boolean bHasError_tConvertType_4 = false;             
          try {
              row40.sku=TypeConvert.String2String(row37.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row40.qty=TypeConvert.String2Integer(row37.qty);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row40.is_in_stock=TypeConvert.String2Integer(row37.is_in_stock);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row40.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(row37.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_4) {row40 = null;}

  nb_line_tConvertType_4 ++ ;

 


	tos_count_tConvertType_4++;

/**
 * [tConvertType_4 main ] stop
 */
	
	/**
	 * [tConvertType_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 process_data_begin ] stop
 */
// Start of branch "row40"
if(row40 != null) { 



	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

saoda = null;


// # Output table : 'saoda'
saoda_tmp.sku = row40.sku;
saoda_tmp.qty = row40.qty != null ? row40.qty : 0;
saoda_tmp.is_in_stock = row40.is_in_stock;
saoda_tmp.SALDO_DISPONIVEL = row40.SALDO_DISPONIVEL != null ? row40.SALDO_DISPONIVEL : 0 ;
saoda = saoda_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "saoda"
if(saoda != null) { 



	
	/**
	 * [tJavaRow_15 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saoda"
						
						);
					}
					

    //Code generate according to input schema and output schema
row41.sku = saoda.sku;
row41.qty = saoda.qty;
row41.is_in_stock = saoda.is_in_stock;
row41.SALDO_DISPONIVEL = saoda.SALDO_DISPONIVEL;



//// FAZER AS VALIDAÇÕES ANTES DO AJUSTE
//SALDO AUTCOM COM MAGENTO
//IS_IN_ESTOQUE 
/*
if (saoda.SALDO_DISPONIVEL > 0){
row41.is_in_stockc = 1;
} else{
row41.is_in_stockc = 0;
}


/// VALIDAR CASO NEGATIVO
if (saoda.SALDO_DISPONIVEL != saoda.qty){
row41.SALDO_DISPONIVELc = 1;
} else if (saoda.SALDO_DISPONIVEL <= 0){
row41.SALDO_DISPONIVELc = 1;
} else {
row41.SALDO_DISPONIVELc = 0;
}*/

/*
SE ESTOQUE AUTCOM > 0 
CONSIDERAR IN_STOQUE = 1

SE ESTOQUE <= 0
CONSIDERAR IN_STOQUE = 0

BATER MAGENTO COM AUTCOM
SE <> CONSIDERAR VALOR AUTCOM
<0 CONSIDERAR 0*/

/*
if ((saoda.qty < 100.0) && (!saoda.situacao_produto.equals("007"))) {
row41.PRECO_CALC = saoda.tabela7_preco_venda/0.9;
} else if ((saoda.tabela7_preco_venda < 100.0) && (saoda.situacao_produto.equals("007"))) {
row41.PRECO_CALC = saoda.tabela7_preco_venda/0.9;
} else if ((saoda.tabela7_preco_venda >= 100.0) && (!saoda.situacao_produto.equals("007"))) {
row41.PRECO_CALC = saoda.tabela7_preco_vendac/0.9;
} else if ((saoda.tabela7_preco_venda >= 100.0) && (saoda.situacao_produto.equals("007"))) {
row41.PRECO_CALC = saoda.tabela7_preco_venda/0.9;
} else{
row41.PRECO_CALC = saoda.tabela7_preco_venda;
}*/
    nb_line_tJavaRow_15++;   

 


	tos_count_tJavaRow_15++;

/**
 * [tJavaRow_15 main ] stop
 */
	
	/**
	 * [tJavaRow_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					




		if(tHashFile_tHashOutput_8 == null){
			tHashFile_tHashOutput_8 = mf_tHashOutput_8.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_7");
			mf_tHashOutput_8.getResourceMap().put("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_8", tHashFile_tHashOutput_8);
		}
		row212Struct oneRow_tHashOutput_8 = new row212Struct();
			oneRow_tHashOutput_8.sku = row41.sku;
			oneRow_tHashOutput_8.qty = row41.qty;
			oneRow_tHashOutput_8.is_in_stock = row41.is_in_stock;
			oneRow_tHashOutput_8.SALDO_DISPONIVEL = row41.SALDO_DISPONIVEL;
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;	

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 process_data_end ] stop
 */

} // End of branch "saoda"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */

} // End of branch "row40"




	
	/**
	 * [tConvertType_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_end ] stop
 */

} // End of branch "naokit"




// Start of branch "ehKit"
if(ehKit != null) { 



	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ehKit"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
						row51Struct row51 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row51" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow51 = false;
       		  	    	
       		  	    	
 							row51Struct row51ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_11) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_11 = false;
								
                        		    		    row51HashKey.CD_PRODUTO = ehKit.cd_produto ;
                        		    		

								
		                        	row51HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row51.lookup( row51HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row51 != null && tHash_Lookup_row51.getCount(row51HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row51' and it contains more one result from keys :  row51.CD_PRODUTO = '" + row51HashKey.CD_PRODUTO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row51Struct fromLookup_row51 = null;
							row51 = row51Default;
										 
							
								 
							
							
								if (tHash_Lookup_row51 !=null && tHash_Lookup_row51.hasNext()) { // G 099
								
							
								
								fromLookup_row51 = tHash_Lookup_row51.next();

							
							
								} // G 099
							
							

							if(fromLookup_row51 != null) {
								row51 = fromLookup_row51;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

Saida3 = null;


// # Output table : 'Saida3'
Saida3_tmp.sku = ehKit.sku;
Saida3_tmp.qty = ehKit.qty;
Saida3_tmp.is_in_stock = ehKit.is_in_stock;
Saida3_tmp.SALDO_DISPONIVEL = ehKit.SALDO_DISPONIVEL;
Saida3_tmp.cd_produto = ehKit.cd_produto;
Saida3_tmp.qtde = ehKit.qtde != null ? ehKit.qtde : 0 ;
Saida3_tmp.SALDO_DISPONIVEL_1 = row51.SALDO_DISPONIVEL != null ? row51.SALDO_DISPONIVEL : 0 ;
Saida3 = Saida3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "Saida3"
if(Saida3 != null) { 



	
	/**
	 * [tJavaRow_19 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row52.sku = Saida3.sku;
row52.qty = Saida3.qty;
row52.is_in_stock = Saida3.is_in_stock;
row52.SALDO_DISPONIVEL = Saida3.SALDO_DISPONIVEL;
row52.cd_produto = Saida3.cd_produto;
row52.qtde = Saida3.qtde;
row52.SALDO_DISPONIVEL_1 = Saida3.SALDO_DISPONIVEL_1/Saida3.qtde;

    nb_line_tJavaRow_19++;   

 


	tos_count_tJavaRow_19++;

/**
 * [tJavaRow_19 main ] stop
 */
	
	/**
	 * [tJavaRow_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_3_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					



	Comparablerow52Struct arrayRowtSortRow_3_SortOut = new Comparablerow52Struct();

	arrayRowtSortRow_3_SortOut.sku = row52.sku;
	arrayRowtSortRow_3_SortOut.qty = row52.qty;
	arrayRowtSortRow_3_SortOut.is_in_stock = row52.is_in_stock;
	arrayRowtSortRow_3_SortOut.SALDO_DISPONIVEL = row52.SALDO_DISPONIVEL;
	arrayRowtSortRow_3_SortOut.cd_produto = row52.cd_produto;
	arrayRowtSortRow_3_SortOut.qtde = row52.qtde;
	arrayRowtSortRow_3_SortOut.SALDO_DISPONIVEL_1 = row52.SALDO_DISPONIVEL_1;	
	list_tSortRow_3_SortOut.add(arrayRowtSortRow_3_SortOut);

 


	tos_count_tSortRow_3_SortOut++;

/**
 * [tSortRow_3_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_3_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

 



/**
 * [tSortRow_3_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_3_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

 



/**
 * [tSortRow_3_SortOut process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 process_data_end ] stop
 */

} // End of branch "Saida3"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */

} // End of branch "ehKit"



	
		} // close loop of lookup 'row50' // G_TM_M_043
	
	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */

} // End of branch "Estoque1"



	
		} // close loop of lookup 'row7' // G_TM_M_043
	
	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "Saida5"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row65 != null) {
						tHash_Lookup_row65.endGet();
					}
					globalMap.remove( "tHash_Lookup_row65" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida5");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"preco");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tConvertType_3 end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
      globalMap.put("tConvertType_3_NB_LINE", nb_line_tConvertType_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tConvertType_3", true);
end_Hash.put("tConvertType_3", System.currentTimeMillis());




/**
 * [tConvertType_3 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tConvertType_2 end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
      globalMap.put("tConvertType_2_NB_LINE", nb_line_tConvertType_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tConvertType_2", true);
end_Hash.put("tConvertType_2", System.currentTimeMillis());




/**
 * [tConvertType_2 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tJavaRow_14 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

globalMap.put("tJavaRow_14_NB_LINE",nb_line_tJavaRow_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tJavaRow_14", true);
end_Hash.put("tJavaRow_14", System.currentTimeMillis());




/**
 * [tJavaRow_14 end ] stop
 */

	
	/**
	 * [tFilterRow_2 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	
    globalMap.put("tFilterRow_2_NB_LINE", nb_line_tFilterRow_2);
    globalMap.put("tFilterRow_2_NB_LINE_OK", nb_line_ok_tFilterRow_2);
    globalMap.put("tFilterRow_2_NB_LINE_REJECT", nb_line_reject_tFilterRow_2);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tFilterRow_2", true);
end_Hash.put("tFilterRow_2", System.currentTimeMillis());




/**
 * [tFilterRow_2 end ] stop
 */

	
	/**
	 * [tFilterRow_5 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_5";
	
	
    globalMap.put("tFilterRow_5_NB_LINE", nb_line_tFilterRow_5);
    globalMap.put("tFilterRow_5_NB_LINE_OK", nb_line_ok_tFilterRow_5);
    globalMap.put("tFilterRow_5_NB_LINE_REJECT", nb_line_reject_tFilterRow_5);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tFilterRow_5", true);
end_Hash.put("tFilterRow_5", System.currentTimeMillis());




/**
 * [tFilterRow_5 end ] stop
 */

	
	/**
	 * [tFilterRow_6 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_6";
	
	
    globalMap.put("tFilterRow_6_NB_LINE", nb_line_tFilterRow_6);
    globalMap.put("tFilterRow_6_NB_LINE_OK", nb_line_ok_tFilterRow_6);
    globalMap.put("tFilterRow_6_NB_LINE_REJECT", nb_line_reject_tFilterRow_6);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tFilterRow_6", true);
end_Hash.put("tFilterRow_6", System.currentTimeMillis());




/**
 * [tFilterRow_6 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */











































	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row50 != null) {
						tHash_Lookup_row50.endGet();
					}
					globalMap.remove( "tHash_Lookup_row50" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Estoque1");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tJavaRow_13 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

globalMap.put("tJavaRow_13_NB_LINE",nb_line_tJavaRow_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"naokit");
			  	}
			  	
 

ok_Hash.put("tJavaRow_13", true);
end_Hash.put("tJavaRow_13", System.currentTimeMillis());




/**
 * [tJavaRow_13 end ] stop
 */

	
	/**
	 * [tConvertType_4 end ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	
      globalMap.put("tConvertType_4_NB_LINE", nb_line_tConvertType_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tConvertType_4", true);
end_Hash.put("tConvertType_4", System.currentTimeMillis());




/**
 * [tConvertType_4 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tJavaRow_15 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

globalMap.put("tJavaRow_15_NB_LINE",nb_line_tJavaRow_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saoda");
			  	}
			  	
 

ok_Hash.put("tJavaRow_15", true);
end_Hash.put("tJavaRow_15", System.currentTimeMillis());




/**
 * [tJavaRow_15 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */
















	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row51 != null) {
						tHash_Lookup_row51.endGet();
					}
					globalMap.remove( "tHash_Lookup_row51" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ehKit");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tJavaRow_19 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

globalMap.put("tJavaRow_19_NB_LINE",nb_line_tJavaRow_19);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_19", true);
end_Hash.put("tJavaRow_19", System.currentTimeMillis());




/**
 * [tJavaRow_19 end ] stop
 */

	
	/**
	 * [tSortRow_3_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

row52Struct[] array_tSortRow_3_SortOut = list_tSortRow_3_SortOut.toArray(new Comparablerow52Struct[0]);

java.util.Arrays.sort(array_tSortRow_3_SortOut);

globalMap.put("tSortRow_3",array_tSortRow_3_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tSortRow_3_SortOut", true);
end_Hash.put("tSortRow_3_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_3_SortOut end ] stop
 */






	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct> tHashFile_tHashOutput_9 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_9.getKeyMap().put("tHashFile_relatorio_preco_estoque_" +pid + "_tHashOutput_9", "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_7");
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_20", false);
		start_Hash.put("tJavaRow_20", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row56");
					}
				
		int tos_count_tJavaRow_20 = 0;
		

int nb_line_tJavaRow_20 = 0;

 



/**
 * [tJavaRow_20 begin ] stop
 */



	
	/**
	 * [tConvertType_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_6", false);
		start_Hash.put("tConvertType_6", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida4");
					}
				
		int tos_count_tConvertType_6 = 0;
		
	int nb_line_tConvertType_6 = 0;  
 



/**
 * [tConvertType_6 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida4Struct Saida4_tmp = new Saida4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String sku;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.sku == null) ? 0 : this.sku.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.sku == null) {
										if (other.sku != null) 
											return false;
								
									} else if (!this.sku.equals(other.sku))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tSortRow_3_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_3_SortIn", false);
		start_Hash.put("tSortRow_3_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	
		int tos_count_tSortRow_3_SortIn = 0;
		


row52Struct[] array_tSortRow_3_SortIn = (row52Struct[]) globalMap.remove("tSortRow_3");

int nb_line_tSortRow_3_SortIn = 0;

row52Struct current_tSortRow_3_SortIn = null;

for(int i_tSortRow_3_SortIn = 0; i_tSortRow_3_SortIn < array_tSortRow_3_SortIn.length; i_tSortRow_3_SortIn++){
	current_tSortRow_3_SortIn = array_tSortRow_3_SortIn[i_tSortRow_3_SortIn];
	row47.sku = current_tSortRow_3_SortIn.sku;
	row47.qty = current_tSortRow_3_SortIn.qty;
	row47.is_in_stock = current_tSortRow_3_SortIn.is_in_stock;
	row47.SALDO_DISPONIVEL = current_tSortRow_3_SortIn.SALDO_DISPONIVEL;
	row47.cd_produto = current_tSortRow_3_SortIn.cd_produto;
	row47.qtde = current_tSortRow_3_SortIn.qtde;
	row47.SALDO_DISPONIVEL_1 = current_tSortRow_3_SortIn.SALDO_DISPONIVEL_1;
	// increase number of line sorted
	nb_line_tSortRow_3_SortIn++;

 



/**
 * [tSortRow_3_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_3_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 


	tos_count_tSortRow_3_SortIn++;

/**
 * [tSortRow_3_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_3_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 



/**
 * [tSortRow_3_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					
row53 = null;			
if(row47.sku == null){
	finder_tUniqRow_2.sku = null;
}else{
	finder_tUniqRow_2.sku = row47.sku.toLowerCase();
}	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
if(row47.sku == null){
	new_tUniqRow_2.sku = null;
}else{
	new_tUniqRow_2.sku = row47.sku.toLowerCase();
}
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row53 == null){ 
	
	row53 = new row53Struct();
}row53.sku = row47.sku;			row53.qty = row47.qty;			row53.is_in_stock = row47.is_in_stock;			row53.SALDO_DISPONIVEL = row47.SALDO_DISPONIVEL;			row53.cd_produto = row47.cd_produto;			row53.qtde = row47.qtde;			row53.SALDO_DISPONIVEL_1 = row47.SALDO_DISPONIVEL_1;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row53"
if(row53 != null) { 



	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_14 = false;
		boolean mainRowRejected_tMap_14 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

Saida4 = null;


// # Output table : 'Saida4'
Saida4_tmp.sku = row53.sku;
Saida4_tmp.qty = row53.qty;
Saida4_tmp.is_in_stock = row53.is_in_stock;
Saida4_tmp.SALDO_DISPONIVEL = row53.SALDO_DISPONIVEL_1;
Saida4 = Saida4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "Saida4"
if(Saida4 != null) { 



	
	/**
	 * [tConvertType_6 main ] start
	 */

	

	
	
	currentComponent="tConvertType_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida4"
						
						);
					}
					


  row56 = new row56Struct();
  boolean bHasError_tConvertType_6 = false;             
          try {
              row56.sku=TypeConvert.String2String(Saida4.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_6_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_6 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row56.qty=TypeConvert.String2Integer(Saida4.qty);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_6_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_6 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row56.is_in_stock=TypeConvert.String2Integer(Saida4.is_in_stock);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_6_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_6 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row56.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(Saida4.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_6_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_6 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_6) {row56 = null;}

  nb_line_tConvertType_6 ++ ;

 


	tos_count_tConvertType_6++;

/**
 * [tConvertType_6 main ] stop
 */
	
	/**
	 * [tConvertType_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_6";
	
	

 



/**
 * [tConvertType_6 process_data_begin ] stop
 */
// Start of branch "row56"
if(row56 != null) { 



	
	/**
	 * [tJavaRow_20 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row56"
						
						);
					}
					

    //Code generate according to input schema and output schema
row54.sku = row56.sku;
row54.qty = row56.qty;
row54.is_in_stock = row56.is_in_stock;
row54.SALDO_DISPONIVEL = row56.SALDO_DISPONIVEL;



//// FAZER AS VALIDAÇÕES ANTES DO AJUSTE
//SALDO AUTCOM COM MAGENTO
//IS_IN_ESTOQUE 
/*
if (row56.SALDO_DISPONIVEL > 0){
row54.is_in_stockc = 1;
} else{
row54.is_in_stockc = 0;
}


/// VALIDAR CASO NEGATIVO
if (row56.SALDO_DISPONIVEL != row56.qty && row56.SALDO_DISPONIVEL > 0){
row54.SALDO_DISPONIVELc = 1;
} else if (row56.SALDO_DISPONIVEL <= 0){
row54.SALDO_DISPONIVELc = 1;
} else {
row54.SALDO_DISPONIVELc = 0;
}*/

/*
SE ESTOQUE AUTCOM > 0 
CONSIDERAR IN_STOQUE = 1

SE ESTOQUE <= 0
CONSIDERAR IN_STOQUE = 0

BATER MAGENTO COM AUTCOM
SE <> CONSIDERAR VALOR AUTCOM
<0 CONSIDERAR 0*/

/*
if ((row56.qty < 100.0) && (!row56.situacao_produto.equals("007"))) {
row54.PRECO_CALC = row56.tabela7_preco_venda/0.9;
} else if ((row56.tabela7_preco_venda < 100.0) && (row56.situacao_produto.equals("007"))) {
row54.PRECO_CALC = row56.tabela7_preco_venda/0.9;
} else if ((row56.tabela7_preco_venda >= 100.0) && (!row56.situacao_produto.equals("007"))) {
row54.PRECO_CALC = row56.tabela7_preco_vendac/0.9;
} else if ((row56.tabela7_preco_venda >= 100.0) && (row56.situacao_produto.equals("007"))) {
row54.PRECO_CALC = row56.tabela7_preco_venda/0.9;
} else{
row54.PRECO_CALC = row56.tabela7_preco_venda;
}*/
    nb_line_tJavaRow_20++;   

 


	tos_count_tJavaRow_20++;

/**
 * [tJavaRow_20 main ] stop
 */
	
	/**
	 * [tJavaRow_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					




		if(tHashFile_tHashOutput_9 == null){
			tHashFile_tHashOutput_9 = mf_tHashOutput_9.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_7");
			mf_tHashOutput_9.getResourceMap().put("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_9", tHashFile_tHashOutput_9);
		}
		row212Struct oneRow_tHashOutput_9 = new row212Struct();
			oneRow_tHashOutput_9.sku = row54.sku;
			oneRow_tHashOutput_9.qty = row54.qty;
			oneRow_tHashOutput_9.is_in_stock = row54.is_in_stock;
			oneRow_tHashOutput_9.SALDO_DISPONIVEL = row54.SALDO_DISPONIVEL;
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;	

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 process_data_end ] stop
 */

} // End of branch "row56"




	
	/**
	 * [tConvertType_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_6";
	
	

 



/**
 * [tConvertType_6 process_data_end ] stop
 */

} // End of branch "Saida4"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_end ] stop
 */

} // End of branch "row53"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_3_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 



/**
 * [tSortRow_3_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_3_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	


}

globalMap.put("tSortRow_3_SortIn_NB_LINE",nb_line_tSortRow_3_SortIn);

 

ok_Hash.put("tSortRow_3_SortIn", true);
end_Hash.put("tSortRow_3_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_3_SortIn end ] stop
 */

	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tConvertType_6 end ] start
	 */

	

	
	
	currentComponent="tConvertType_6";
	
	
      globalMap.put("tConvertType_6_NB_LINE", nb_line_tConvertType_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida4");
			  	}
			  	
 

ok_Hash.put("tConvertType_6", true);
end_Hash.put("tConvertType_6", System.currentTimeMillis());




/**
 * [tConvertType_6 end ] stop
 */

	
	/**
	 * [tJavaRow_20 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

globalMap.put("tJavaRow_20_NB_LINE",nb_line_tJavaRow_20);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row56");
			  	}
			  	
 

ok_Hash.put("tJavaRow_20", true);
end_Hash.put("tJavaRow_20", System.currentTimeMillis());




/**
 * [tJavaRow_20 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */




































				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tHashInput_17Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_3_SortIn"
							globalMap.remove("tSortRow_3");
						
					     			//free memory for "tMap_11"
					     			globalMap.remove("tHash_Lookup_row51"); 
				     			
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row50"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
					     			//free memory for "tMap_16"
					     			globalMap.remove("tHash_Lookup_row65"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tConvertType_3 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tConvertType_2 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_14 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 finally ] stop
 */

	
	/**
	 * [tFilterRow_2 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 finally ] stop
 */

	
	/**
	 * [tFilterRow_5 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_5";
	
	

 



/**
 * [tFilterRow_5 finally ] stop
 */

	
	/**
	 * [tFilterRow_6 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_6";
	
	

 



/**
 * [tFilterRow_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */











































	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tJavaRow_13 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 finally ] stop
 */

	
	/**
	 * [tConvertType_4 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tJavaRow_15 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */
















	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tJavaRow_19 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 finally ] stop
 */

	
	/**
	 * [tSortRow_3_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

 



/**
 * [tSortRow_3_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_3_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 



/**
 * [tSortRow_3_SortIn finally ] stop
 */

	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tConvertType_6 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_6";
	
	

 



/**
 * [tConvertType_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_20 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */




































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class Saida6Struct implements routines.system.IPersistableRow<Saida6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row63Struct implements routines.system.IPersistableRow<row63Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return 8;
				}
				public Integer PRECO_DEPrecision(){
				    return 2;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return 8;
				}
				public Integer PRECO_PORPrecision(){
				    return 2;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 8;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 2;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validapreco;

				public Integer getValidapreco () {
					return this.validapreco;
				}

				public Boolean validaprecoIsNullable(){
				    return true;
				}
				public Boolean validaprecoIsKey(){
				    return false;
				}
				public Integer validaprecoLength(){
				    return null;
				}
				public Integer validaprecoPrecision(){
				    return null;
				}
				public String validaprecoDefault(){
				
					return null;
				
				}
				public String validaprecoComment(){
				
				    return "";
				
				}
				public String validaprecoPattern(){
				
					return "";
				
				}
				public String validaprecoOriginalDbColumnName(){
				
					return "validapreco";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 8;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 2;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validapreco = readInteger(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
					// Double
				
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validapreco,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validapreco="+String.valueOf(validapreco));
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row63Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row63Struct row63 = new row63Struct();
Saida6Struct Saida6 = new Saida6Struct();





	
	/**
	 * [tFileOutputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_3", false);
		start_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida6");
					}
				
		int tos_count_tFileOutputExcel_3 = 0;
		


		
		int columnIndex_tFileOutputExcel_3 = 0;
		boolean headerIsInserted_tFileOutputExcel_3 = false;
		
		
		String fileName_tFileOutputExcel_3=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/PrecoAnyMarketing"+context.data_atual1+".xlsx";
		int nb_line_tFileOutputExcel_3 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_3 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_3.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_3.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_3.setSheet("Preco_Any");
		xlsxTool_tFileOutputExcel_3.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_3.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_3.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_3 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_3 = chm_tFileOutputExcel_3.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_3", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_3) {
			
				xlsxTool_tFileOutputExcel_3.prepareXlsxFile(fileName_tFileOutputExcel_3);
			
		}
		
		xlsxTool_tFileOutputExcel_3.setFont("");
		
		if (xlsxTool_tFileOutputExcel_3.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_3.addRow();
		
		xlsxTool_tFileOutputExcel_3.addCellValue("SKU_INTERNO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("SKU_MARKETPLACE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("COD_MARKETPLACE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PRECO_DE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PRECO_POR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("MARKUP_ADICIONAL");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CUSTO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("DESCONTO_1E2");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("DESCONTO_3A6");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CALCULO_PRECO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("MARKETPLACE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NOME_CONTA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("TITULO_PRODUTO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CATEGORIA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("LOJA_OFICIAL");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("TIPO_LISTAGEM");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FRETE_GRATIS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FORMA_ENVIO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VARIACAO_PRINCIPAL");
		
		nb_line_tFileOutputExcel_3++;
		headerIsInserted_tFileOutputExcel_3 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_3 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row63");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida6Struct Saida6_tmp = new Saida6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tHashInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_17", false);
		start_Hash.put("tHashInput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_17";
	
	
		int tos_count_tHashInput_17 = 0;
		


int nb_line_tHashInput_17 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row43Struct> tHashFile_tHashInput_17 = mf_tHashInput_17.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_17==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row43Struct> iterator_tHashInput_17 = tHashFile_tHashInput_17.iterator();
while (iterator_tHashInput_17.hasNext()) {
    row43Struct next_tHashInput_17 = iterator_tHashInput_17.next();

	row63.SKU_INTERNO = next_tHashInput_17.SKU_INTERNO;
	row63.SKU_MARKETPLACE = next_tHashInput_17.SKU_MARKETPLACE;
	row63.COD_MARKETPLACE = next_tHashInput_17.COD_MARKETPLACE;
	row63.PRECO_DE = next_tHashInput_17.PRECO_DE;
	row63.PRECO_POR = next_tHashInput_17.PRECO_POR;
	row63.MARKUP_ADICIONAL = next_tHashInput_17.MARKUP_ADICIONAL;
	row63.CUSTO = next_tHashInput_17.CUSTO;
	row63.DESCONTO_1E2 = next_tHashInput_17.DESCONTO_1E2;
	row63.DESCONTO_3A6 = next_tHashInput_17.DESCONTO_3A6;
	row63.CALCULO_PRECO = next_tHashInput_17.CALCULO_PRECO;
	row63.MARKETPLACE = next_tHashInput_17.MARKETPLACE;
	row63.NOME_CONTA = next_tHashInput_17.NOME_CONTA;
	row63.TITULO_PRODUTO = next_tHashInput_17.TITULO_PRODUTO;
	row63.CATEGORIA = next_tHashInput_17.CATEGORIA;
	row63.LOJA_OFICIAL = next_tHashInput_17.LOJA_OFICIAL;
	row63.TIPO_LISTAGEM = next_tHashInput_17.TIPO_LISTAGEM;
	row63.FRETE_GRATIS = next_tHashInput_17.FRETE_GRATIS;
	row63.FORMA_ENVIO = next_tHashInput_17.FORMA_ENVIO;
	row63.VARIACAO_PRINCIPAL = next_tHashInput_17.VARIACAO_PRINCIPAL;
	row63.SALDO_DISPONIVEL = next_tHashInput_17.SALDO_DISPONIVEL;
	row63.tabela3_preco_venda = next_tHashInput_17.tabela3_preco_venda;
	row63.tabela4_preco_venda = next_tHashInput_17.tabela4_preco_venda;
	row63.tabela7_preco_venda = next_tHashInput_17.tabela7_preco_venda;
	row63.tabela3_preco_vendac = next_tHashInput_17.tabela3_preco_vendac;
	row63.tabela4_preco_vendac = next_tHashInput_17.tabela4_preco_vendac;
	row63.tabela7_preco_vendac = next_tHashInput_17.tabela7_preco_vendac;
	row63.situacao_produto = next_tHashInput_17.situacao_produto;
	row63.validapreco = next_tHashInput_17.validapreco;
	row63.VALOR_DIFF = next_tHashInput_17.VALOR_DIFF;

 



/**
 * [tHashInput_17 begin ] stop
 */
	
	/**
	 * [tHashInput_17 main ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 


	tos_count_tHashInput_17++;

/**
 * [tHashInput_17 main ] stop
 */
	
	/**
	 * [tHashInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row63"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

Saida6 = null;


// # Output table : 'Saida6'
Saida6_tmp.SKU_INTERNO = row63.SKU_INTERNO ;
Saida6_tmp.SKU_MARKETPLACE = row63.SKU_MARKETPLACE ;
Saida6_tmp.COD_MARKETPLACE = row63.COD_MARKETPLACE ;
Saida6_tmp.PRECO_DE = row63.PRECO_POR ;
Saida6_tmp.PRECO_POR = row63.PRECO_POR ;
Saida6_tmp.MARKUP_ADICIONAL = row63.MARKUP_ADICIONAL ;
Saida6_tmp.CUSTO = row63.CUSTO ;
Saida6_tmp.DESCONTO_1E2 = row63.DESCONTO_1E2 ;
Saida6_tmp.DESCONTO_3A6 = row63.DESCONTO_3A6 ;
Saida6_tmp.CALCULO_PRECO = row63.CALCULO_PRECO ;
Saida6_tmp.MARKETPLACE = row63.MARKETPLACE ;
Saida6_tmp.NOME_CONTA = row63.NOME_CONTA ;
Saida6_tmp.TITULO_PRODUTO = row63.TITULO_PRODUTO ;
Saida6_tmp.CATEGORIA = row63.CATEGORIA ;
Saida6_tmp.LOJA_OFICIAL = row63.LOJA_OFICIAL ;
Saida6_tmp.TIPO_LISTAGEM = row63.TIPO_LISTAGEM ;
Saida6_tmp.FRETE_GRATIS = row63.FRETE_GRATIS ;
Saida6_tmp.FORMA_ENVIO = row63.FORMA_ENVIO ;
Saida6_tmp.VARIACAO_PRINCIPAL = row63.VARIACAO_PRINCIPAL ;
Saida6 = Saida6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "Saida6"
if(Saida6 != null) { 



	
	/**
	 * [tFileOutputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida6"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_3.addRow();
									   				
	    				if(Saida6.SKU_INTERNO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.SKU_INTERNO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.SKU_MARKETPLACE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.SKU_MARKETPLACE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.COD_MARKETPLACE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.COD_MARKETPLACE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.PRECO_DE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(Saida6.PRECO_DE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.PRECO_POR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(Saida6.PRECO_POR);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.MARKUP_ADICIONAL != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.MARKUP_ADICIONAL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.CUSTO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.CUSTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.DESCONTO_1E2 != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.DESCONTO_1E2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.DESCONTO_3A6 != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.DESCONTO_3A6));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.CALCULO_PRECO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.CALCULO_PRECO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.MARKETPLACE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.MARKETPLACE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.NOME_CONTA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.NOME_CONTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.TITULO_PRODUTO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.TITULO_PRODUTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.CATEGORIA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.CATEGORIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.LOJA_OFICIAL != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.LOJA_OFICIAL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.TIPO_LISTAGEM != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.TIPO_LISTAGEM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.FRETE_GRATIS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.FRETE_GRATIS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.FORMA_ENVIO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.FORMA_ENVIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(Saida6.VARIACAO_PRINCIPAL != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(Saida6.VARIACAO_PRINCIPAL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_3++;
				
 


	tos_count_tFileOutputExcel_3++;

/**
 * [tFileOutputExcel_3 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_end ] stop
 */

} // End of branch "Saida6"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_17 end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	
    

		
			nb_line_tHashInput_17++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_17_NB_LINE", nb_line_tHashInput_17);       

 

ok_Hash.put("tHashInput_17", true);
end_Hash.put("tHashInput_17", System.currentTimeMillis());




/**
 * [tHashInput_17 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row63");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

	
	
	
			xlsxTool_tFileOutputExcel_3.writeExcel(fileName_tFileOutputExcel_3,true);
	
		if(headerIsInserted_tFileOutputExcel_3 && nb_line_tFileOutputExcel_3 > 0){
			nb_line_tFileOutputExcel_3 = nb_line_tFileOutputExcel_3 -1;
		}
		globalMap.put("tFileOutputExcel_3_NB_LINE",nb_line_tFileOutputExcel_3);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida6");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_3", true);
end_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());




/**
 * [tFileOutputExcel_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_17:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tHashInput_18Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row86Struct implements routines.system.IPersistableRow<row86Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public Integer QTD_DISPONIVEL;

				public Integer getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
						this.QTD_DISPONIVEL = readInteger(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
						this.QTD_DISPONIVEL = readInteger(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+String.valueOf(QTD_DISPONIVEL));
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row86Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida9Struct implements routines.system.IPersistableRow<Saida9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public Integer QTD_DISPONIVEL;

				public Integer getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
						this.QTD_DISPONIVEL = readInteger(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
						this.QTD_DISPONIVEL = readInteger(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+String.valueOf(QTD_DISPONIVEL));
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row84Struct implements routines.system.IPersistableRow<row84Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public Integer QTD_DISPONIVEL;

				public Integer getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
						this.QTD_DISPONIVEL = readInteger(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
						this.QTD_DISPONIVEL = readInteger(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+String.valueOf(QTD_DISPONIVEL));
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row84Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row83Struct implements routines.system.IPersistableRow<row83Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row83Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row66Struct implements routines.system.IPersistableRow<row66Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row66Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row66Struct row66 = new row66Struct();
row83Struct row83 = new row83Struct();
row84Struct row84 = new row84Struct();
Saida9Struct Saida9 = new Saida9Struct();
row86Struct row86 = new row86Struct();








	
	/**
	 * [tFileOutputExcel_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_4", false);
		start_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row86");
					}
				
		int tos_count_tFileOutputExcel_4 = 0;
		


		
		int columnIndex_tFileOutputExcel_4 = 0;
		boolean headerIsInserted_tFileOutputExcel_4 = false;
		
		
		String fileName_tFileOutputExcel_4=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/EstoqueAnyMarketing"+context.data_atual1+".xlsx";
		int nb_line_tFileOutputExcel_4 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_4 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_4.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_4.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_4.setSheet("Estoque_Any");
		xlsxTool_tFileOutputExcel_4.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_4.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_4.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_4 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_4 = chm_tFileOutputExcel_4.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_4", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_4) {
			
				xlsxTool_tFileOutputExcel_4.prepareXlsxFile(fileName_tFileOutputExcel_4);
			
		}
		
		xlsxTool_tFileOutputExcel_4.setFont("");
		
		if (xlsxTool_tFileOutputExcel_4.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_4.addRow();
		
		xlsxTool_tFileOutputExcel_4.addCellValue("sku");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("CUSTO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("PRAZO_ADICIONAL");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("QTD_ESTOQUE");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("QTD_DISPONIVEL");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("QTD_PEDIDO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("LOCALIZACAO_ESTOQUE");
		
		nb_line_tFileOutputExcel_4++;
		headerIsInserted_tFileOutputExcel_4 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_18", false);
		start_Hash.put("tJavaRow_18", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida9");
					}
				
		int tos_count_tJavaRow_18 = 0;
		

int nb_line_tJavaRow_18 = 0;

 



/**
 * [tJavaRow_18 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row84");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida9Struct Saida9_tmp = new Saida9Struct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tConvertType_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_10", false);
		start_Hash.put("tConvertType_10", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row83");
					}
				
		int tos_count_tConvertType_10 = 0;
		
	int nb_line_tConvertType_10 = 0;  
 



/**
 * [tConvertType_10 begin ] stop
 */



	
	/**
	 * [tFilterRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_4", false);
		start_Hash.put("tFilterRow_4", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row66");
					}
				
		int tos_count_tFilterRow_4 = 0;
		
    int nb_line_tFilterRow_4 = 0;
    int nb_line_ok_tFilterRow_4 = 0;
    int nb_line_reject_tFilterRow_4 = 0;

    class Operator_tFilterRow_4 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_4(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_4 begin ] stop
 */



	
	/**
	 * [tHashInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_18", false);
		start_Hash.put("tHashInput_18", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_18";
	
	
		int tos_count_tHashInput_18 = 0;
		


int nb_line_tHashInput_18 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_18=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashInput_18 = mf_tHashInput_18.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_18==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row82Struct> iterator_tHashInput_18 = tHashFile_tHashInput_18.iterator();
while (iterator_tHashInput_18.hasNext()) {
    row82Struct next_tHashInput_18 = iterator_tHashInput_18.next();

	row66.sku = next_tHashInput_18.sku;
	row66.CUSTO = next_tHashInput_18.CUSTO;
	row66.PRAZO_ADICIONAL = next_tHashInput_18.PRAZO_ADICIONAL;
	row66.QTD_ESTOQUE = next_tHashInput_18.QTD_ESTOQUE;
	row66.QTD_DISPONIVEL = next_tHashInput_18.QTD_DISPONIVEL;
	row66.QTD_PEDIDO = next_tHashInput_18.QTD_PEDIDO;
	row66.LOCALIZACAO_ESTOQUE = next_tHashInput_18.LOCALIZACAO_ESTOQUE;
	row66.SALDO_DISPONIVEL = next_tHashInput_18.SALDO_DISPONIVEL;
	row66.tabela3_preco_venda = next_tHashInput_18.tabela3_preco_venda;
	row66.tabela4_preco_venda = next_tHashInput_18.tabela4_preco_venda;
	row66.situacao_produto = next_tHashInput_18.situacao_produto;
	row66.validaestoque = next_tHashInput_18.validaestoque;

 



/**
 * [tHashInput_18 begin ] stop
 */
	
	/**
	 * [tHashInput_18 main ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 


	tos_count_tHashInput_18++;

/**
 * [tHashInput_18 main ] stop
 */
	
	/**
	 * [tHashInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_4 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row66"
						
						);
					}
					

          row83 = null;
    Operator_tFilterRow_4 ope_tFilterRow_4 = new Operator_tFilterRow_4("&&");
            ope_tFilterRow_4.matches((row66.validaestoque == null? false : row66.validaestoque.compareTo(ParserUtils.parseTo_Integer(String.valueOf(1))) == 0)
                           , "validaestoque.compareTo(1) == 0 failed");
		 	
    
    if (ope_tFilterRow_4.getMatchFlag()) {
              if(row83 == null){ 
                row83 = new row83Struct();
              }
               row83.sku = row66.sku;
               row83.CUSTO = row66.CUSTO;
               row83.PRAZO_ADICIONAL = row66.PRAZO_ADICIONAL;
               row83.QTD_ESTOQUE = row66.QTD_ESTOQUE;
               row83.QTD_DISPONIVEL = row66.QTD_DISPONIVEL;
               row83.QTD_PEDIDO = row66.QTD_PEDIDO;
               row83.LOCALIZACAO_ESTOQUE = row66.LOCALIZACAO_ESTOQUE;
               row83.SALDO_DISPONIVEL = row66.SALDO_DISPONIVEL;
               row83.tabela3_preco_venda = row66.tabela3_preco_venda;
               row83.tabela4_preco_venda = row66.tabela4_preco_venda;
               row83.situacao_produto = row66.situacao_produto;
               row83.validaestoque = row66.validaestoque;    
      nb_line_ok_tFilterRow_4++;
    } else {
      nb_line_reject_tFilterRow_4++;
    }

nb_line_tFilterRow_4++;

 


	tos_count_tFilterRow_4++;

/**
 * [tFilterRow_4 main ] stop
 */
	
	/**
	 * [tFilterRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	

 



/**
 * [tFilterRow_4 process_data_begin ] stop
 */
// Start of branch "row83"
if(row83 != null) { 



	
	/**
	 * [tConvertType_10 main ] start
	 */

	

	
	
	currentComponent="tConvertType_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row83"
						
						);
					}
					


  row84 = new row84Struct();
  boolean bHasError_tConvertType_10 = false;             
          try {
              row84.sku=TypeConvert.String2String(row83.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.CUSTO=TypeConvert.String2String(row83.CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.PRAZO_ADICIONAL=TypeConvert.String2String(row83.PRAZO_ADICIONAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.QTD_ESTOQUE=TypeConvert.Integer2Integer(row83.QTD_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.QTD_DISPONIVEL=TypeConvert.String2Integer(row83.QTD_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.QTD_PEDIDO=TypeConvert.String2String(row83.QTD_PEDIDO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.LOCALIZACAO_ESTOQUE=TypeConvert.String2String(row83.LOCALIZACAO_ESTOQUE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.SALDO_DISPONIVEL=TypeConvert.Integer2Integer(row83.SALDO_DISPONIVEL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.tabela3_preco_venda=TypeConvert.Double2Double(row83.tabela3_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.tabela4_preco_venda=TypeConvert.Double2Double(row83.tabela4_preco_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.situacao_produto=TypeConvert.String2String(row83.situacao_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row84.validaestoque=TypeConvert.Integer2Integer(row83.validaestoque);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_10_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_10 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_10) {row84 = null;}

  nb_line_tConvertType_10 ++ ;

 


	tos_count_tConvertType_10++;

/**
 * [tConvertType_10 main ] stop
 */
	
	/**
	 * [tConvertType_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_10";
	
	

 



/**
 * [tConvertType_10 process_data_begin ] stop
 */
// Start of branch "row84"
if(row84 != null) { 



	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row84"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_17 = false;
		boolean mainRowRejected_tMap_17 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
        // ###############################
        // # Output tables

Saida9 = null;


// # Output table : 'Saida9'
Saida9_tmp.sku = row84.sku;
Saida9_tmp.CUSTO = row84.CUSTO;
Saida9_tmp.PRAZO_ADICIONAL = row84.PRAZO_ADICIONAL;
Saida9_tmp.QTD_ESTOQUE = row84.SALDO_DISPONIVEL;
Saida9_tmp.QTD_DISPONIVEL = row84.QTD_DISPONIVEL ;
Saida9_tmp.QTD_PEDIDO = row84.QTD_PEDIDO;
Saida9_tmp.LOCALIZACAO_ESTOQUE = row84.LOCALIZACAO_ESTOQUE;
Saida9 = Saida9_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "Saida9"
if(Saida9 != null) { 



	
	/**
	 * [tJavaRow_18 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida9"
						
						);
					}
					

    //Code generated according to input schema and output schema
row86.sku = Saida9.sku;
row86.CUSTO = Saida9.CUSTO;
row86.PRAZO_ADICIONAL = Saida9.PRAZO_ADICIONAL;
//row86.QTD_ESTOQUE = Saida9.QTD_ESTOQUE;
if (Saida9.QTD_ESTOQUE < 0){
row86.QTD_ESTOQUE = 0;
} else {
row86.QTD_ESTOQUE = Saida9.QTD_ESTOQUE;
}
row86.QTD_DISPONIVEL = Saida9.QTD_DISPONIVEL;
row86.QTD_PEDIDO = Saida9.QTD_PEDIDO;
row86.LOCALIZACAO_ESTOQUE = Saida9.LOCALIZACAO_ESTOQUE;

    nb_line_tJavaRow_18++;   

 


	tos_count_tJavaRow_18++;

/**
 * [tJavaRow_18 main ] stop
 */
	
	/**
	 * [tJavaRow_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row86"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_4.addRow();
									   				
	    				if(row86.sku != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row86.sku));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row86.CUSTO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row86.CUSTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row86.PRAZO_ADICIONAL != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row86.PRAZO_ADICIONAL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row86.QTD_ESTOQUE != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(Double.parseDouble(String.valueOf(row86.QTD_ESTOQUE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row86.QTD_DISPONIVEL != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(Double.parseDouble(String.valueOf(row86.QTD_DISPONIVEL)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row86.QTD_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row86.QTD_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row86.LOCALIZACAO_ESTOQUE != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row86.LOCALIZACAO_ESTOQUE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_4++;
				
 


	tos_count_tFileOutputExcel_4++;

/**
 * [tFileOutputExcel_4 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 process_data_end ] stop
 */

} // End of branch "Saida9"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_end ] stop
 */

} // End of branch "row84"




	
	/**
	 * [tConvertType_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_10";
	
	

 



/**
 * [tConvertType_10 process_data_end ] stop
 */

} // End of branch "row83"




	
	/**
	 * [tFilterRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	

 



/**
 * [tFilterRow_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_18 end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	
    

		
			nb_line_tHashInput_18++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_18_NB_LINE", nb_line_tHashInput_18);       

 

ok_Hash.put("tHashInput_18", true);
end_Hash.put("tHashInput_18", System.currentTimeMillis());




/**
 * [tHashInput_18 end ] stop
 */

	
	/**
	 * [tFilterRow_4 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	
    globalMap.put("tFilterRow_4_NB_LINE", nb_line_tFilterRow_4);
    globalMap.put("tFilterRow_4_NB_LINE_OK", nb_line_ok_tFilterRow_4);
    globalMap.put("tFilterRow_4_NB_LINE_REJECT", nb_line_reject_tFilterRow_4);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row66");
			  	}
			  	
 

ok_Hash.put("tFilterRow_4", true);
end_Hash.put("tFilterRow_4", System.currentTimeMillis());




/**
 * [tFilterRow_4 end ] stop
 */

	
	/**
	 * [tConvertType_10 end ] start
	 */

	

	
	
	currentComponent="tConvertType_10";
	
	
      globalMap.put("tConvertType_10_NB_LINE", nb_line_tConvertType_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row83");
			  	}
			  	
 

ok_Hash.put("tConvertType_10", true);
end_Hash.put("tConvertType_10", System.currentTimeMillis());




/**
 * [tConvertType_10 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row84");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tJavaRow_18 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

globalMap.put("tJavaRow_18_NB_LINE",nb_line_tJavaRow_18);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida9");
			  	}
			  	
 

ok_Hash.put("tJavaRow_18", true);
end_Hash.put("tJavaRow_18", System.currentTimeMillis());




/**
 * [tJavaRow_18 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

	
	
	
			xlsxTool_tFileOutputExcel_4.writeExcel(fileName_tFileOutputExcel_4,true);
	
		if(headerIsInserted_tFileOutputExcel_4 && nb_line_tFileOutputExcel_4 > 0){
			nb_line_tFileOutputExcel_4 = nb_line_tFileOutputExcel_4 -1;
		}
		globalMap.put("tFileOutputExcel_4_NB_LINE",nb_line_tFileOutputExcel_4);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row86");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_4", true);
end_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());




/**
 * [tFileOutputExcel_4 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_18:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_18 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 finally ] stop
 */

	
	/**
	 * [tFilterRow_4 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	

 



/**
 * [tFilterRow_4 finally ] stop
 */

	
	/**
	 * [tConvertType_10 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_10";
	
	

 



/**
 * [tConvertType_10 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tJavaRow_18 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class Saida7Struct implements routines.system.IPersistableRow<Saida7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row61Struct implements routines.system.IPersistableRow<row61Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row61Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row57Struct implements routines.system.IPersistableRow<row57Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row57Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return 12;
				}
				public Integer pricePrecision(){
				    return 4;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String tabela3_preco_venda;

				public String getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public String tabela4_preco_venda;

				public String getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public String tabela3_preco_vendac;

				public String getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public String tabela4_preco_vendac;

				public String getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public String tabela7_preco_vendac;

				public String getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Double PRECO_CALC;

				public Double getPRECO_CALC () {
					return this.PRECO_CALC;
				}

				public Boolean PRECO_CALCIsNullable(){
				    return true;
				}
				public Boolean PRECO_CALCIsKey(){
				    return false;
				}
				public Integer PRECO_CALCLength(){
				    return 12;
				}
				public Integer PRECO_CALCPrecision(){
				    return 4;
				}
				public String PRECO_CALCDefault(){
				
					return null;
				
				}
				public String PRECO_CALCComment(){
				
				    return "";
				
				}
				public String PRECO_CALCPattern(){
				
					return "";
				
				}
				public String PRECO_CALCOriginalDbColumnName(){
				
					return "PRECO_CALC";
				
				}

				
			    public String VALIDACAO_MAGENTO;

				public String getVALIDACAO_MAGENTO () {
					return this.VALIDACAO_MAGENTO;
				}

				public Boolean VALIDACAO_MAGENTOIsNullable(){
				    return true;
				}
				public Boolean VALIDACAO_MAGENTOIsKey(){
				    return false;
				}
				public Integer VALIDACAO_MAGENTOLength(){
				    return null;
				}
				public Integer VALIDACAO_MAGENTOPrecision(){
				    return null;
				}
				public String VALIDACAO_MAGENTODefault(){
				
					return null;
				
				}
				public String VALIDACAO_MAGENTOComment(){
				
				    return "";
				
				}
				public String VALIDACAO_MAGENTOPattern(){
				
					return "";
				
				}
				public String VALIDACAO_MAGENTOOriginalDbColumnName(){
				
					return "VALIDACAO_MAGENTO";
				
				}

				
			    public String VALOR_DIFF;

				public String getVALOR_DIFF () {
					return this.VALOR_DIFF;
				}

				public Boolean VALOR_DIFFIsNullable(){
				    return true;
				}
				public Boolean VALOR_DIFFIsKey(){
				    return false;
				}
				public Integer VALOR_DIFFLength(){
				    return 12;
				}
				public Integer VALOR_DIFFPrecision(){
				    return 4;
				}
				public String VALOR_DIFFDefault(){
				
					return null;
				
				}
				public String VALOR_DIFFComment(){
				
				    return "";
				
				}
				public String VALOR_DIFFPattern(){
				
					return "";
				
				}
				public String VALOR_DIFFOriginalDbColumnName(){
				
					return "VALOR_DIFF";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.tabela3_preco_venda = readString(dis);
					
					this.tabela4_preco_venda = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
					this.tabela3_preco_vendac = readString(dis);
					
					this.tabela4_preco_vendac = readString(dis);
					
					this.tabela7_preco_vendac = readString(dis);
					
					this.situacao_produto = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_CALC = null;
           				} else {
           			    	this.PRECO_CALC = dis.readDouble();
           				}
					
					this.VALIDACAO_MAGENTO = readString(dis);
					
					this.VALOR_DIFF = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.tabela3_preco_venda,dos);
					
					// String
				
						writeString(this.tabela4_preco_venda,dos);
					
					// Double
				
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
					// String
				
						writeString(this.tabela3_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela4_preco_vendac,dos);
					
					// String
				
						writeString(this.tabela7_preco_vendac,dos);
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Double
				
						if(this.PRECO_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_CALC);
		            	}
					
					// String
				
						writeString(this.VALIDACAO_MAGENTO,dos);
					
					// String
				
						writeString(this.VALOR_DIFF,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+tabela3_preco_venda);
		sb.append(",tabela4_preco_venda="+tabela4_preco_venda);
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+tabela3_preco_vendac);
		sb.append(",tabela4_preco_vendac="+tabela4_preco_vendac);
		sb.append(",tabela7_preco_vendac="+tabela7_preco_vendac);
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",PRECO_CALC="+String.valueOf(PRECO_CALC));
		sb.append(",VALIDACAO_MAGENTO="+VALIDACAO_MAGENTO);
		sb.append(",VALOR_DIFF="+VALOR_DIFF);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();
row57Struct row57 = new row57Struct();
row61Struct row61 = new row61Struct();
Saida7Struct Saida7 = new Saida7Struct();







	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida7");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/PrecoMagento"+context.data_atual1+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("sku");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("price");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row61");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida7Struct Saida7_tmp = new Saida7Struct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tFilterRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_7", false);
		start_Hash.put("tFilterRow_7", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row57");
					}
				
		int tos_count_tFilterRow_7 = 0;
		
    int nb_line_tFilterRow_7 = 0;
    int nb_line_ok_tFilterRow_7 = 0;
    int nb_line_reject_tFilterRow_7 = 0;

    class Operator_tFilterRow_7 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_7(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_21", false);
		start_Hash.put("tJavaRow_21", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJavaRow_21 = 0;
		

int nb_line_tJavaRow_21 = 0;

 



/**
 * [tJavaRow_21 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row49Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row49Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row49Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row8.sku = next_tHashInput_3.sku;
	row8.price = next_tHashInput_3.price;
	row8.qty = next_tHashInput_3.qty;
	row8.is_in_stock = next_tHashInput_3.is_in_stock;
	row8.SALDO_DISPONIVEL = next_tHashInput_3.SALDO_DISPONIVEL;
	row8.tabela3_preco_venda = next_tHashInput_3.tabela3_preco_venda;
	row8.tabela4_preco_venda = next_tHashInput_3.tabela4_preco_venda;
	row8.tabela7_preco_venda = next_tHashInput_3.tabela7_preco_venda;
	row8.tabela3_preco_vendac = next_tHashInput_3.tabela3_preco_vendac;
	row8.tabela4_preco_vendac = next_tHashInput_3.tabela4_preco_vendac;
	row8.tabela7_preco_vendac = next_tHashInput_3.tabela7_preco_vendac;
	row8.situacao_produto = next_tHashInput_3.situacao_produto;
	row8.PRECO_CALC = next_tHashInput_3.PRECO_CALC;
	row8.VALIDACAO_MAGENTO = next_tHashInput_3.VALIDACAO_MAGENTO;
	row8.VALOR_DIFF = next_tHashInput_3.VALOR_DIFF;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_21 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

    //Code generated according to input schema and output schema
row57.sku = row8.sku;
row57.price = row8.price;
row57.qty = row8.qty;
row57.is_in_stock = row8.is_in_stock;
row57.SALDO_DISPONIVEL = row8.SALDO_DISPONIVEL;
row57.tabela3_preco_venda = row8.tabela3_preco_venda;
row57.tabela4_preco_venda = row8.tabela4_preco_venda;
row57.tabela7_preco_venda = row8.tabela7_preco_venda;
row57.tabela3_preco_vendac = row8.tabela3_preco_vendac;
row57.tabela4_preco_vendac = row8.tabela4_preco_vendac;
row57.tabela7_preco_vendac = row8.tabela7_preco_vendac;
row57.situacao_produto = row8.situacao_produto;
row57.PRECO_CALC = row8.PRECO_CALC;
row57.VALIDACAO_MAGENTO = row8.VALIDACAO_MAGENTO;
row57.VALOR_DIFF = row8.VALOR_DIFF;

    nb_line_tJavaRow_21++;   

 


	tos_count_tJavaRow_21++;

/**
 * [tJavaRow_21 main ] stop
 */
	
	/**
	 * [tJavaRow_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_7 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row57"
						
						);
					}
					

          row61 = null;
    Operator_tFilterRow_7 ope_tFilterRow_7 = new Operator_tFilterRow_7("&&");
    
    if (ope_tFilterRow_7.getMatchFlag()) {
              if(row61 == null){ 
                row61 = new row61Struct();
              }
               row61.sku = row57.sku;
               row61.price = row57.price;
               row61.qty = row57.qty;
               row61.is_in_stock = row57.is_in_stock;
               row61.SALDO_DISPONIVEL = row57.SALDO_DISPONIVEL;
               row61.tabela3_preco_venda = row57.tabela3_preco_venda;
               row61.tabela4_preco_venda = row57.tabela4_preco_venda;
               row61.tabela7_preco_venda = row57.tabela7_preco_venda;
               row61.tabela3_preco_vendac = row57.tabela3_preco_vendac;
               row61.tabela4_preco_vendac = row57.tabela4_preco_vendac;
               row61.tabela7_preco_vendac = row57.tabela7_preco_vendac;
               row61.situacao_produto = row57.situacao_produto;
               row61.PRECO_CALC = row57.PRECO_CALC;
               row61.VALIDACAO_MAGENTO = row57.VALIDACAO_MAGENTO;
               row61.VALOR_DIFF = row57.VALOR_DIFF;    
      nb_line_ok_tFilterRow_7++;
    } else {
      nb_line_reject_tFilterRow_7++;
    }

nb_line_tFilterRow_7++;

 


	tos_count_tFilterRow_7++;

/**
 * [tFilterRow_7 main ] stop
 */
	
	/**
	 * [tFilterRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_7";
	
	

 



/**
 * [tFilterRow_7 process_data_begin ] stop
 */
// Start of branch "row61"
if(row61 != null) { 



	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row61"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_19 = false;
		boolean mainRowRejected_tMap_19 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
        // ###############################
        // # Output tables

Saida7 = null;


// # Output table : 'Saida7'
Saida7_tmp.sku = row61.sku ;
Saida7_tmp.price = row61.PRECO_CALC ;
Saida7 = Saida7_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "Saida7"
if(Saida7 != null) { 



	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida7"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(Saida7.sku != null) {
                        sb_tFileOutputDelimited_1.append(
                            Saida7.sku
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(Saida7.price != null) {
                        sb_tFileOutputDelimited_1.append(
                            Saida7.price
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

                    }



 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */

} // End of branch "Saida7"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_end ] stop
 */

} // End of branch "row61"




	
	/**
	 * [tFilterRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_7";
	
	

 



/**
 * [tFilterRow_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tJavaRow_21 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

globalMap.put("tJavaRow_21_NB_LINE",nb_line_tJavaRow_21);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJavaRow_21", true);
end_Hash.put("tJavaRow_21", System.currentTimeMillis());




/**
 * [tJavaRow_21 end ] stop
 */

	
	/**
	 * [tFilterRow_7 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_7";
	
	
    globalMap.put("tFilterRow_7_NB_LINE", nb_line_tFilterRow_7);
    globalMap.put("tFilterRow_7_NB_LINE_OK", nb_line_ok_tFilterRow_7);
    globalMap.put("tFilterRow_7_NB_LINE_REJECT", nb_line_reject_tFilterRow_7);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row57");
			  	}
			  	
 

ok_Hash.put("tFilterRow_7", true);
end_Hash.put("tFilterRow_7", System.currentTimeMillis());




/**
 * [tFilterRow_7 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row61");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida7");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tHashInput_14Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_21 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 finally ] stop
 */

	
	/**
	 * [tFilterRow_7 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_7";
	
	

 



/**
 * [tFilterRow_7 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row87Struct implements routines.system.IPersistableRow<row87Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row87Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida8Struct implements routines.system.IPersistableRow<Saida8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row59Struct implements routines.system.IPersistableRow<row59Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer is_in_stockc;

				public Integer getIs_in_stockc () {
					return this.is_in_stockc;
				}

				public Boolean is_in_stockcIsNullable(){
				    return true;
				}
				public Boolean is_in_stockcIsKey(){
				    return false;
				}
				public Integer is_in_stockcLength(){
				    return null;
				}
				public Integer is_in_stockcPrecision(){
				    return null;
				}
				public String is_in_stockcDefault(){
				
					return null;
				
				}
				public String is_in_stockcComment(){
				
				    return "";
				
				}
				public String is_in_stockcPattern(){
				
					return "";
				
				}
				public String is_in_stockcOriginalDbColumnName(){
				
					return "is_in_stockc";
				
				}

				
			    public Integer validastokc;

				public Integer getValidastokc () {
					return this.validastokc;
				}

				public Boolean validastokcIsNullable(){
				    return true;
				}
				public Boolean validastokcIsKey(){
				    return false;
				}
				public Integer validastokcLength(){
				    return null;
				}
				public Integer validastokcPrecision(){
				    return null;
				}
				public String validastokcDefault(){
				
					return null;
				
				}
				public String validastokcComment(){
				
				    return "";
				
				}
				public String validastokcPattern(){
				
					return "";
				
				}
				public String validastokcOriginalDbColumnName(){
				
					return "validastokc";
				
				}

				
			    public Integer validasaldo;

				public Integer getValidasaldo () {
					return this.validasaldo;
				}

				public Boolean validasaldoIsNullable(){
				    return true;
				}
				public Boolean validasaldoIsKey(){
				    return false;
				}
				public Integer validasaldoLength(){
				    return null;
				}
				public Integer validasaldoPrecision(){
				    return null;
				}
				public String validasaldoDefault(){
				
					return null;
				
				}
				public String validasaldoComment(){
				
				    return "";
				
				}
				public String validasaldoPattern(){
				
					return "";
				
				}
				public String validasaldoOriginalDbColumnName(){
				
					return "validasaldo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
						this.validastokc = readInteger(dis);
					
						this.validasaldo = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
						this.validastokc = readInteger(dis);
					
						this.validasaldo = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
					// Integer
				
						writeInteger(this.validastokc,dos);
					
					// Integer
				
						writeInteger(this.validasaldo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
					// Integer
				
						writeInteger(this.validastokc,dos);
					
					// Integer
				
						writeInteger(this.validasaldo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",is_in_stockc="+String.valueOf(is_in_stockc));
		sb.append(",validastokc="+String.valueOf(validastokc));
		sb.append(",validasaldo="+String.valueOf(validasaldo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row59Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row62Struct implements routines.system.IPersistableRow<row62Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer is_in_stockc;

				public Integer getIs_in_stockc () {
					return this.is_in_stockc;
				}

				public Boolean is_in_stockcIsNullable(){
				    return true;
				}
				public Boolean is_in_stockcIsKey(){
				    return false;
				}
				public Integer is_in_stockcLength(){
				    return null;
				}
				public Integer is_in_stockcPrecision(){
				    return null;
				}
				public String is_in_stockcDefault(){
				
					return null;
				
				}
				public String is_in_stockcComment(){
				
				    return "";
				
				}
				public String is_in_stockcPattern(){
				
					return "";
				
				}
				public String is_in_stockcOriginalDbColumnName(){
				
					return "is_in_stockc";
				
				}

				
			    public Integer validastokc;

				public Integer getValidastokc () {
					return this.validastokc;
				}

				public Boolean validastokcIsNullable(){
				    return true;
				}
				public Boolean validastokcIsKey(){
				    return false;
				}
				public Integer validastokcLength(){
				    return null;
				}
				public Integer validastokcPrecision(){
				    return null;
				}
				public String validastokcDefault(){
				
					return null;
				
				}
				public String validastokcComment(){
				
				    return "";
				
				}
				public String validastokcPattern(){
				
					return "";
				
				}
				public String validastokcOriginalDbColumnName(){
				
					return "validastokc";
				
				}

				
			    public Integer validasaldo;

				public Integer getValidasaldo () {
					return this.validasaldo;
				}

				public Boolean validasaldoIsNullable(){
				    return true;
				}
				public Boolean validasaldoIsKey(){
				    return false;
				}
				public Integer validasaldoLength(){
				    return null;
				}
				public Integer validasaldoPrecision(){
				    return null;
				}
				public String validasaldoDefault(){
				
					return null;
				
				}
				public String validasaldoComment(){
				
				    return "";
				
				}
				public String validasaldoPattern(){
				
					return "";
				
				}
				public String validasaldoOriginalDbColumnName(){
				
					return "validasaldo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
						this.validastokc = readInteger(dis);
					
						this.validasaldo = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
						this.validastokc = readInteger(dis);
					
						this.validasaldo = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
					// Integer
				
						writeInteger(this.validastokc,dos);
					
					// Integer
				
						writeInteger(this.validasaldo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
					// Integer
				
						writeInteger(this.validastokc,dos);
					
					// Integer
				
						writeInteger(this.validasaldo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",is_in_stockc="+String.valueOf(is_in_stockc));
		sb.append(",validastokc="+String.valueOf(validastokc));
		sb.append(",validasaldo="+String.valueOf(validasaldo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row62Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row60Struct implements routines.system.IPersistableRow<row60Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer is_in_stockc;

				public Integer getIs_in_stockc () {
					return this.is_in_stockc;
				}

				public Boolean is_in_stockcIsNullable(){
				    return true;
				}
				public Boolean is_in_stockcIsKey(){
				    return false;
				}
				public Integer is_in_stockcLength(){
				    return null;
				}
				public Integer is_in_stockcPrecision(){
				    return null;
				}
				public String is_in_stockcDefault(){
				
					return null;
				
				}
				public String is_in_stockcComment(){
				
				    return "";
				
				}
				public String is_in_stockcPattern(){
				
					return "";
				
				}
				public String is_in_stockcOriginalDbColumnName(){
				
					return "is_in_stockc";
				
				}

				
			    public Integer validastokc;

				public Integer getValidastokc () {
					return this.validastokc;
				}

				public Boolean validastokcIsNullable(){
				    return true;
				}
				public Boolean validastokcIsKey(){
				    return false;
				}
				public Integer validastokcLength(){
				    return null;
				}
				public Integer validastokcPrecision(){
				    return null;
				}
				public String validastokcDefault(){
				
					return null;
				
				}
				public String validastokcComment(){
				
				    return "";
				
				}
				public String validastokcPattern(){
				
					return "";
				
				}
				public String validastokcOriginalDbColumnName(){
				
					return "validastokc";
				
				}

				
			    public Integer validasaldo;

				public Integer getValidasaldo () {
					return this.validasaldo;
				}

				public Boolean validasaldoIsNullable(){
				    return true;
				}
				public Boolean validasaldoIsKey(){
				    return false;
				}
				public Integer validasaldoLength(){
				    return null;
				}
				public Integer validasaldoPrecision(){
				    return null;
				}
				public String validasaldoDefault(){
				
					return null;
				
				}
				public String validasaldoComment(){
				
				    return "";
				
				}
				public String validasaldoPattern(){
				
					return "";
				
				}
				public String validasaldoOriginalDbColumnName(){
				
					return "validasaldo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
						this.validastokc = readInteger(dis);
					
						this.validasaldo = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
						this.validastokc = readInteger(dis);
					
						this.validasaldo = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
					// Integer
				
						writeInteger(this.validastokc,dos);
					
					// Integer
				
						writeInteger(this.validasaldo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
					// Integer
				
						writeInteger(this.validastokc,dos);
					
					// Integer
				
						writeInteger(this.validasaldo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",is_in_stockc="+String.valueOf(is_in_stockc));
		sb.append(",validastokc="+String.valueOf(validastokc));
		sb.append(",validasaldo="+String.valueOf(validasaldo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row60Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row58Struct implements routines.system.IPersistableRow<row58Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer is_in_stockc;

				public Integer getIs_in_stockc () {
					return this.is_in_stockc;
				}

				public Boolean is_in_stockcIsNullable(){
				    return true;
				}
				public Boolean is_in_stockcIsKey(){
				    return false;
				}
				public Integer is_in_stockcLength(){
				    return null;
				}
				public Integer is_in_stockcPrecision(){
				    return null;
				}
				public String is_in_stockcDefault(){
				
					return null;
				
				}
				public String is_in_stockcComment(){
				
				    return "";
				
				}
				public String is_in_stockcPattern(){
				
					return "";
				
				}
				public String is_in_stockcOriginalDbColumnName(){
				
					return "is_in_stockc";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.is_in_stockc = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.is_in_stockc,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",is_in_stockc="+String.valueOf(is_in_stockc));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row58Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row55Struct row55 = new row55Struct();
row58Struct row58 = new row58Struct();
row60Struct row60 = new row60Struct();
row62Struct row62 = new row62Struct();
row59Struct row59 = new row59Struct();
Saida8Struct Saida8 = new Saida8Struct();
row87Struct row87 = new row87Struct();










	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row87");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/EstoqueMagento"+context.data_atual1+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("sku");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("qty");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("is_in_stock");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_28", false);
		start_Hash.put("tJavaRow_28", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida8");
					}
				
		int tos_count_tJavaRow_28 = 0;
		

int nb_line_tJavaRow_28 = 0;

 



/**
 * [tJavaRow_28 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row59");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida8Struct Saida8_tmp = new Saida8Struct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tFilterRow_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_14", false);
		start_Hash.put("tFilterRow_14", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row62");
					}
				
		int tos_count_tFilterRow_14 = 0;
		
    int nb_line_tFilterRow_14 = 0;
    int nb_line_ok_tFilterRow_14 = 0;
    int nb_line_reject_tFilterRow_14 = 0;

    class Operator_tFilterRow_14 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_14(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_14 begin ] stop
 */



	
	/**
	 * [tFilterRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_8", false);
		start_Hash.put("tFilterRow_8", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row60");
					}
				
		int tos_count_tFilterRow_8 = 0;
		
    int nb_line_tFilterRow_8 = 0;
    int nb_line_ok_tFilterRow_8 = 0;
    int nb_line_reject_tFilterRow_8 = 0;

    class Operator_tFilterRow_8 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_8(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_23", false);
		start_Hash.put("tJavaRow_23", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row58");
					}
				
		int tos_count_tJavaRow_23 = 0;
		

int nb_line_tJavaRow_23 = 0;

 



/**
 * [tJavaRow_23 begin ] stop
 */



	
	/**
	 * [tJavaRow_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_22", false);
		start_Hash.put("tJavaRow_22", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tJavaRow_22 = 0;
		

int nb_line_tJavaRow_22 = 0;

 



/**
 * [tJavaRow_22 begin ] stop
 */



	
	/**
	 * [tHashInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_14", false);
		start_Hash.put("tHashInput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_14";
	
	
		int tos_count_tHashInput_14 = 0;
		


int nb_line_tHashInput_14 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct> tHashFile_tHashInput_14 = mf_tHashInput_14.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_14==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row212Struct> iterator_tHashInput_14 = tHashFile_tHashInput_14.iterator();
while (iterator_tHashInput_14.hasNext()) {
    row212Struct next_tHashInput_14 = iterator_tHashInput_14.next();

	row55.sku = next_tHashInput_14.sku;
	row55.qty = next_tHashInput_14.qty;
	row55.is_in_stock = next_tHashInput_14.is_in_stock;
	row55.SALDO_DISPONIVEL = next_tHashInput_14.SALDO_DISPONIVEL;

 



/**
 * [tHashInput_14 begin ] stop
 */
	
	/**
	 * [tHashInput_14 main ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 


	tos_count_tHashInput_14++;

/**
 * [tHashInput_14 main ] stop
 */
	
	/**
	 * [tHashInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_22 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					

    //Code generated according to input schema and output schema
row58.sku = row55.sku;
row58.qty = row55.qty;
row58.is_in_stock = row55.is_in_stock;
row58.SALDO_DISPONIVEL = row55.SALDO_DISPONIVEL;

if (row55.SALDO_DISPONIVEL > 0){
row58.is_in_stockc = 1;
} else {
row58.is_in_stockc = 0;
}

    nb_line_tJavaRow_22++;   

 


	tos_count_tJavaRow_22++;

/**
 * [tJavaRow_22 main ] stop
 */
	
	/**
	 * [tJavaRow_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

 



/**
 * [tJavaRow_22 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_23 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row58"
						
						);
					}
					

    //Code generated according to input schema and output schema
row60.sku = row58.sku;
row60.qty = row58.qty;
row60.is_in_stock = row58.is_in_stock;
row60.SALDO_DISPONIVEL = row58.SALDO_DISPONIVEL;
row60.is_in_stockc = row58.is_in_stockc;

if (row58.is_in_stock != row58.is_in_stockc){
row60.validastokc = 1;
} else {
row60.validastokc = 0;
}

if ((row58.qty - row58.SALDO_DISPONIVEL) != 0) {
row60.validasaldo = 1;
} else {
row60.validasaldo = 0;
}

    nb_line_tJavaRow_23++;   

 


	tos_count_tJavaRow_23++;

/**
 * [tJavaRow_23 main ] stop
 */
	
	/**
	 * [tJavaRow_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

 



/**
 * [tJavaRow_23 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_8 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row60"
						
						);
					}
					

          row62 = null;
    Operator_tFilterRow_8 ope_tFilterRow_8 = new Operator_tFilterRow_8("&&");
            ope_tFilterRow_8.matches((row60.validastokc == null? false : row60.validastokc.compareTo(ParserUtils.parseTo_Integer(String.valueOf(1))) == 0)
                           , "validastokc.compareTo(1) == 0 failed");
		 	
    
    if (ope_tFilterRow_8.getMatchFlag()) {
              if(row62 == null){ 
                row62 = new row62Struct();
              }
               row62.sku = row60.sku;
               row62.qty = row60.qty;
               row62.is_in_stock = row60.is_in_stock;
               row62.SALDO_DISPONIVEL = row60.SALDO_DISPONIVEL;
               row62.is_in_stockc = row60.is_in_stockc;
               row62.validastokc = row60.validastokc;
               row62.validasaldo = row60.validasaldo;    
      nb_line_ok_tFilterRow_8++;
    } else {
      nb_line_reject_tFilterRow_8++;
    }

nb_line_tFilterRow_8++;

 


	tos_count_tFilterRow_8++;

/**
 * [tFilterRow_8 main ] stop
 */
	
	/**
	 * [tFilterRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_8";
	
	

 



/**
 * [tFilterRow_8 process_data_begin ] stop
 */
// Start of branch "row62"
if(row62 != null) { 



	
	/**
	 * [tFilterRow_14 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row62"
						
						);
					}
					

          row59 = null;
    Operator_tFilterRow_14 ope_tFilterRow_14 = new Operator_tFilterRow_14("&&");
    
    if (ope_tFilterRow_14.getMatchFlag()) {
              if(row59 == null){ 
                row59 = new row59Struct();
              }
               row59.sku = row62.sku;
               row59.qty = row62.qty;
               row59.is_in_stock = row62.is_in_stock;
               row59.SALDO_DISPONIVEL = row62.SALDO_DISPONIVEL;
               row59.is_in_stockc = row62.is_in_stockc;
               row59.validastokc = row62.validastokc;
               row59.validasaldo = row62.validasaldo;    
      nb_line_ok_tFilterRow_14++;
    } else {
      nb_line_reject_tFilterRow_14++;
    }

nb_line_tFilterRow_14++;

 


	tos_count_tFilterRow_14++;

/**
 * [tFilterRow_14 main ] stop
 */
	
	/**
	 * [tFilterRow_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_14";
	
	

 



/**
 * [tFilterRow_14 process_data_begin ] stop
 */
// Start of branch "row59"
if(row59 != null) { 



	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row59"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_20 = false;
		boolean mainRowRejected_tMap_20 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
        // ###############################
        // # Output tables

Saida8 = null;


// # Output table : 'Saida8'
Saida8_tmp.sku = row59.sku;
Saida8_tmp.qty = row59.SALDO_DISPONIVEL;
Saida8_tmp.is_in_stock = row59.is_in_stockc;
Saida8 = Saida8_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "Saida8"
if(Saida8 != null) { 



	
	/**
	 * [tJavaRow_28 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida8"
						
						);
					}
					

    //Code generated according to input schema and output schema
row87.sku = Saida8.sku;
//row87.qty = Saida8.qty;
if (Saida8.qty < 0){
row87.qty = 0;
} else {
row87.qty = Saida8.qty;
}
row87.is_in_stock = Saida8.is_in_stock;

    nb_line_tJavaRow_28++;   

 


	tos_count_tJavaRow_28++;

/**
 * [tJavaRow_28 main ] stop
 */
	
	/**
	 * [tJavaRow_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

 



/**
 * [tJavaRow_28 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row87"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row87.sku != null) {
                        sb_tFileOutputDelimited_2.append(
                            row87.sku
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row87.qty != null) {
                        sb_tFileOutputDelimited_2.append(
                            row87.qty
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row87.is_in_stock != null) {
                        sb_tFileOutputDelimited_2.append(
                            row87.is_in_stock
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());

                    }



 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

 



/**
 * [tJavaRow_28 process_data_end ] stop
 */

} // End of branch "Saida8"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_end ] stop
 */

} // End of branch "row59"




	
	/**
	 * [tFilterRow_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_14";
	
	

 



/**
 * [tFilterRow_14 process_data_end ] stop
 */

} // End of branch "row62"




	
	/**
	 * [tFilterRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_8";
	
	

 



/**
 * [tFilterRow_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

 



/**
 * [tJavaRow_23 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

 



/**
 * [tJavaRow_22 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_14 end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	
    

		
			nb_line_tHashInput_14++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_14_NB_LINE", nb_line_tHashInput_14);       

 

ok_Hash.put("tHashInput_14", true);
end_Hash.put("tHashInput_14", System.currentTimeMillis());




/**
 * [tHashInput_14 end ] stop
 */

	
	/**
	 * [tJavaRow_22 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

globalMap.put("tJavaRow_22_NB_LINE",nb_line_tJavaRow_22);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tJavaRow_22", true);
end_Hash.put("tJavaRow_22", System.currentTimeMillis());




/**
 * [tJavaRow_22 end ] stop
 */

	
	/**
	 * [tJavaRow_23 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

globalMap.put("tJavaRow_23_NB_LINE",nb_line_tJavaRow_23);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row58");
			  	}
			  	
 

ok_Hash.put("tJavaRow_23", true);
end_Hash.put("tJavaRow_23", System.currentTimeMillis());




/**
 * [tJavaRow_23 end ] stop
 */

	
	/**
	 * [tFilterRow_8 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_8";
	
	
    globalMap.put("tFilterRow_8_NB_LINE", nb_line_tFilterRow_8);
    globalMap.put("tFilterRow_8_NB_LINE_OK", nb_line_ok_tFilterRow_8);
    globalMap.put("tFilterRow_8_NB_LINE_REJECT", nb_line_reject_tFilterRow_8);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row60");
			  	}
			  	
 

ok_Hash.put("tFilterRow_8", true);
end_Hash.put("tFilterRow_8", System.currentTimeMillis());




/**
 * [tFilterRow_8 end ] stop
 */

	
	/**
	 * [tFilterRow_14 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_14";
	
	
    globalMap.put("tFilterRow_14_NB_LINE", nb_line_tFilterRow_14);
    globalMap.put("tFilterRow_14_NB_LINE_OK", nb_line_ok_tFilterRow_14);
    globalMap.put("tFilterRow_14_NB_LINE_REJECT", nb_line_reject_tFilterRow_14);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row62");
			  	}
			  	
 

ok_Hash.put("tFilterRow_14", true);
end_Hash.put("tFilterRow_14", System.currentTimeMillis());




/**
 * [tFilterRow_14 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row59");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tJavaRow_28 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

globalMap.put("tJavaRow_28_NB_LINE",nb_line_tJavaRow_28);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida8");
			  	}
			  	
 

ok_Hash.put("tJavaRow_28", true);
end_Hash.put("tJavaRow_28", System.currentTimeMillis());




/**
 * [tJavaRow_28 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row87");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */





















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_14:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 finally ] stop
 */

	
	/**
	 * [tJavaRow_22 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

 



/**
 * [tJavaRow_22 finally ] stop
 */

	
	/**
	 * [tJavaRow_23 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

 



/**
 * [tJavaRow_23 finally ] stop
 */

	
	/**
	 * [tFilterRow_8 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_8";
	
	

 



/**
 * [tFilterRow_8 finally ] stop
 */

	
	/**
	 * [tFilterRow_14 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_14";
	
	

 



/**
 * [tFilterRow_14 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tJavaRow_28 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

 



/**
 * [tJavaRow_28 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */





















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row80Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row80Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row81.nm_programa = next_tHashInput_5.nm_programa;
	row81.data_inicio_execucao = next_tHashInput_5.data_inicio_execucao;
	row81.data_termino_execucao = next_tHashInput_5.data_termino_execucao;
	row81.mensagem = next_tHashInput_5.mensagem;
	row81.uuid = next_tHashInput_5.uuid;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row81.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row81.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return 12;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return 4;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.cd_produto == null) {
							if (other.cd_produto != null)
								return false;
						
						} else if (!this.cd_produto.equals(other.cd_produto))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.cd_produto = this.cd_produto;
	            other.cd_empresa = this.cd_empresa;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.tabela3_preco_venda = this.tabela3_preco_venda;
	            other.tabela4_preco_venda = this.tabela4_preco_venda;
	            other.tabela7_preco_venda = this.tabela7_preco_venda;
	            other.tabela3_preco_vendac = this.tabela3_preco_vendac;
	            other.tabela4_preco_vendac = this.tabela4_preco_vendac;
	            other.tabela7_preco_vendac = this.tabela7_preco_vendac;
	            other.situacao_produto = this.situacao_produto;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.cd_produto = this.cd_produto;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.cd_empresa = readString(dis,ois);
					
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
						this.situacao_produto = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.cd_empresa = readString(dis,objectIn);
					
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = objectIn.readDouble();
           				}
					
						this.situacao_produto = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.cd_empresa, dos, oos);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
						writeString(this.situacao_produto, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.cd_empresa, dos, objectOut);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						if(this.tabela3_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela3_preco_venda);
		            	}
					
						if(this.tabela4_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela4_preco_venda);
		            	}
					
						if(this.tabela7_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela7_preco_venda);
		            	}
					
						if(this.tabela3_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela3_preco_vendac);
		            	}
					
						if(this.tabela4_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela4_preco_vendac);
		            	}
					
						if(this.tabela7_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela7_preco_vendac);
		            	}
					
						writeString(this.situacao_produto, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",cd_empresa="+cd_empresa);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_produto, other.cd_produto);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tHashInput_4 - inputs:(after_tHashInput_1) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_2 - inputs:(Saida5,row7) outputs:(preco,Estoque1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row31Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row31Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row7.cd_produto = next_tHashInput_4.cd_produto;
	row7.cd_empresa = next_tHashInput_4.cd_empresa;
	row7.SALDO_DISPONIVEL = next_tHashInput_4.SALDO_DISPONIVEL;
	row7.tabela3_preco_venda = next_tHashInput_4.tabela3_preco_venda;
	row7.tabela4_preco_venda = next_tHashInput_4.tabela4_preco_venda;
	row7.tabela7_preco_venda = next_tHashInput_4.tabela7_preco_venda;
	row7.tabela3_preco_vendac = next_tHashInput_4.tabela3_preco_vendac;
	row7.tabela4_preco_vendac = next_tHashInput_4.tabela4_preco_vendac;
	row7.tabela7_preco_vendac = next_tHashInput_4.tabela7_preco_vendac;
	row7.situacao_produto = next_tHashInput_4.situacao_produto;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.cd_produto = row7.cd_produto;
				
				row7_HashRow.cd_empresa = row7.cd_empresa;
				
				row7_HashRow.SALDO_DISPONIVEL = row7.SALDO_DISPONIVEL;
				
				row7_HashRow.tabela3_preco_venda = row7.tabela3_preco_venda;
				
				row7_HashRow.tabela4_preco_venda = row7.tabela4_preco_venda;
				
				row7_HashRow.tabela7_preco_venda = row7.tabela7_preco_venda;
				
				row7_HashRow.tabela3_preco_vendac = row7.tabela3_preco_vendac;
				
				row7_HashRow.tabela4_preco_vendac = row7.tabela4_preco_vendac;
				
				row7_HashRow.tabela7_preco_vendac = row7.tabela7_preco_vendac;
				
				row7_HashRow.situacao_produto = row7.situacao_produto;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row65Struct implements routines.system.IPersistableComparableLookupRow<row65Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row65Struct other = (row65Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row65Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            
	}

	public void copyKeysDataTo(row65Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row65Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row65Struct row65 = new row65Struct();




	
	/**
	 * [tAdvancedHash_row65 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row65", false);
		start_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row65";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row65");
					}
				
		int tos_count_tAdvancedHash_row65 = 0;
		

			   		// connection name:row65
			   		// source node:tHashInput_16 - inputs:(after_tHashInput_1) outputs:(row65,row65) | target node:tAdvancedHash_row65 - inputs:(row65) outputs:()
			   		// linked node: tMap_16 - inputs:(row6,row65) outputs:(Saida5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row65 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row65Struct>getLookup(matchingModeEnum_row65);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row65", tHash_Lookup_row65);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row65 begin ] stop
 */



	
	/**
	 * [tHashInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_16", false);
		start_Hash.put("tHashInput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_16";
	
	
		int tos_count_tHashInput_16 = 0;
		


int nb_line_tHashInput_16 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_16 = mf_tHashInput_16.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_16==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_16 = tHashFile_tHashInput_16.iterator();
while (iterator_tHashInput_16.hasNext()) {
    row5Struct next_tHashInput_16 = iterator_tHashInput_16.next();

	row65.CD_PRODUTO = next_tHashInput_16.CD_PRODUTO;
	row65.SALDO_DISPONIVEL = next_tHashInput_16.SALDO_DISPONIVEL;
	row65.SITUACAO_PRODUTO = next_tHashInput_16.SITUACAO_PRODUTO;

 



/**
 * [tHashInput_16 begin ] stop
 */
	
	/**
	 * [tHashInput_16 main ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 


	tos_count_tHashInput_16++;

/**
 * [tHashInput_16 main ] stop
 */
	
	/**
	 * [tHashInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row65"
						
						);
					}
					


			   
			   

					row65Struct row65_HashRow = new row65Struct();
		   	   	   
				
				row65_HashRow.CD_PRODUTO = row65.CD_PRODUTO;
				
				row65_HashRow.SALDO_DISPONIVEL = row65.SALDO_DISPONIVEL;
				
				row65_HashRow.SITUACAO_PRODUTO = row65.SITUACAO_PRODUTO;
				
			tHash_Lookup_row65.put(row65_HashRow);
			
            




 


	tos_count_tAdvancedHash_row65++;

/**
 * [tAdvancedHash_row65 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row65 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row65 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_16 end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	
    

		
			nb_line_tHashInput_16++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_16_NB_LINE", nb_line_tHashInput_16);       

 

ok_Hash.put("tHashInput_16", true);
end_Hash.put("tHashInput_16", System.currentTimeMillis());




/**
 * [tHashInput_16 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

tHash_Lookup_row65.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row65");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row65", true);
end_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());




/**
 * [tAdvancedHash_row65 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row50Struct implements routines.system.IPersistableComparableLookupRow<row50Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_combo;

				public String getCd_combo () {
					return this.cd_combo;
				}

				public Boolean cd_comboIsNullable(){
				    return true;
				}
				public Boolean cd_comboIsKey(){
				    return true;
				}
				public Integer cd_comboLength(){
				    return 5;
				}
				public Integer cd_comboPrecision(){
				    return null;
				}
				public String cd_comboDefault(){
				
					return null;
				
				}
				public String cd_comboComment(){
				
				    return "";
				
				}
				public String cd_comboPattern(){
				
					return "";
				
				}
				public String cd_comboOriginalDbColumnName(){
				
					return "cd_combo";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_combo == null) ? 0 : this.cd_combo.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row50Struct other = (row50Struct) obj;
		
						if (this.cd_combo == null) {
							if (other.cd_combo != null)
								return false;
						
						} else if (!this.cd_combo.equals(other.cd_combo))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row50Struct other) {

		other.cd_combo = this.cd_combo;
	            other.cd_produto = this.cd_produto;
	            other.qtde = this.qtde;
	            
	}

	public void copyKeysDataTo(row50Struct other) {

		other.cd_combo = this.cd_combo;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_combo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_combo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_combo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_combo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.cd_produto = readString(dis,ois);
					
						this.qtde = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.cd_produto = readString(dis,objectIn);
					
						this.qtde = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.cd_produto, dos, oos);
					
					writeInteger(this.qtde, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.cd_produto, dos, objectOut);
					
					writeInteger(this.qtde, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_combo="+cd_combo);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_combo, other.cd_combo);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row50Struct row50 = new row50Struct();




	
	/**
	 * [tAdvancedHash_row50 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row50", false);
		start_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row50";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tAdvancedHash_row50 = 0;
		

			   		// connection name:row50
			   		// source node:tHashInput_12 - inputs:(after_tHashInput_1) outputs:(row50,row50) | target node:tAdvancedHash_row50 - inputs:(row50) outputs:()
			   		// linked node: tMap_10 - inputs:(Estoque1,row50) outputs:(naokit,ehKit)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row50 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row50Struct>getLookup(matchingModeEnum_row50);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row50", tHash_Lookup_row50);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row50 begin ] stop
 */



	
	/**
	 * [tHashInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_12", false);
		start_Hash.put("tHashInput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_12";
	
	
		int tos_count_tHashInput_12 = 0;
		


int nb_line_tHashInput_12 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row48Struct> tHashFile_tHashInput_12 = mf_tHashInput_12.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_12==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row48Struct> iterator_tHashInput_12 = tHashFile_tHashInput_12.iterator();
while (iterator_tHashInput_12.hasNext()) {
    row48Struct next_tHashInput_12 = iterator_tHashInput_12.next();

	row50.cd_combo = next_tHashInput_12.cd_combo;
	row50.cd_produto = next_tHashInput_12.cd_produto;
	row50.qtde = next_tHashInput_12.qtde;

 



/**
 * [tHashInput_12 begin ] stop
 */
	
	/**
	 * [tHashInput_12 main ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 


	tos_count_tHashInput_12++;

/**
 * [tHashInput_12 main ] stop
 */
	
	/**
	 * [tHashInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					


			   
			   

					row50Struct row50_HashRow = new row50Struct();
		   	   	   
				
				row50_HashRow.cd_combo = row50.cd_combo;
				
				row50_HashRow.cd_produto = row50.cd_produto;
				
				row50_HashRow.qtde = row50.qtde;
				
			tHash_Lookup_row50.put(row50_HashRow);
			
            




 


	tos_count_tAdvancedHash_row50++;

/**
 * [tAdvancedHash_row50 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_12 end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	
    

		
			nb_line_tHashInput_12++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_12_NB_LINE", nb_line_tHashInput_12);       

 

ok_Hash.put("tHashInput_12", true);
end_Hash.put("tHashInput_12", System.currentTimeMillis());




/**
 * [tHashInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

tHash_Lookup_row50.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row50", true);
end_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());




/**
 * [tAdvancedHash_row50 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row51Struct implements routines.system.IPersistableComparableLookupRow<row51Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row51Struct other = (row51Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row51Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            
	}

	public void copyKeysDataTo(row51Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row51Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row51Struct row51 = new row51Struct();




	
	/**
	 * [tAdvancedHash_row51 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row51", false);
		start_Hash.put("tAdvancedHash_row51", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row51";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row51");
					}
				
		int tos_count_tAdvancedHash_row51 = 0;
		

			   		// connection name:row51
			   		// source node:tHashInput_13 - inputs:(after_tHashInput_1) outputs:(row51,row51) | target node:tAdvancedHash_row51 - inputs:(row51) outputs:()
			   		// linked node: tMap_11 - inputs:(ehKit,row51) outputs:(Saida3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row51 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct> tHash_Lookup_row51 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row51Struct>getLookup(matchingModeEnum_row51);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row51", tHash_Lookup_row51);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row51 begin ] stop
 */



	
	/**
	 * [tHashInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_13", false);
		start_Hash.put("tHashInput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_13";
	
	
		int tos_count_tHashInput_13 = 0;
		


int nb_line_tHashInput_13 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_13 = mf_tHashInput_13.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_13==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_13 = tHashFile_tHashInput_13.iterator();
while (iterator_tHashInput_13.hasNext()) {
    row5Struct next_tHashInput_13 = iterator_tHashInput_13.next();

	row51.CD_PRODUTO = next_tHashInput_13.CD_PRODUTO;
	row51.SALDO_DISPONIVEL = next_tHashInput_13.SALDO_DISPONIVEL;
	row51.SITUACAO_PRODUTO = next_tHashInput_13.SITUACAO_PRODUTO;

 



/**
 * [tHashInput_13 begin ] stop
 */
	
	/**
	 * [tHashInput_13 main ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 


	tos_count_tHashInput_13++;

/**
 * [tHashInput_13 main ] stop
 */
	
	/**
	 * [tHashInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					


			   
			   

					row51Struct row51_HashRow = new row51Struct();
		   	   	   
				
				row51_HashRow.CD_PRODUTO = row51.CD_PRODUTO;
				
				row51_HashRow.SALDO_DISPONIVEL = row51.SALDO_DISPONIVEL;
				
				row51_HashRow.SITUACAO_PRODUTO = row51.SITUACAO_PRODUTO;
				
			tHash_Lookup_row51.put(row51_HashRow);
			
            




 


	tos_count_tAdvancedHash_row51++;

/**
 * [tAdvancedHash_row51 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row51 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row51 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_13 end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	
    

		
			nb_line_tHashInput_13++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_13_NB_LINE", nb_line_tHashInput_13);       

 

ok_Hash.put("tHashInput_13", true);
end_Hash.put("tHashInput_13", System.currentTimeMillis());




/**
 * [tHashInput_13 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

tHash_Lookup_row51.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row51");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row51", true);
end_Hash.put("tAdvancedHash_row51", System.currentTimeMillis());




/**
 * [tAdvancedHash_row51 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableComparableLookupRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return null;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return null;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return null;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return null;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return null;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return null;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return null;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return null;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row20Struct other = (row20Struct) obj;
		
						if (this.cd_produto == null) {
							if (other.cd_produto != null)
								return false;
						
						} else if (!this.cd_produto.equals(other.cd_produto))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row20Struct other) {

		other.cd_produto = this.cd_produto;
	            other.cd_empresa = this.cd_empresa;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.tabela3_preco_venda = this.tabela3_preco_venda;
	            other.tabela4_preco_venda = this.tabela4_preco_venda;
	            other.tabela3_preco_vendac = this.tabela3_preco_vendac;
	            other.tabela7_preco_venda = this.tabela7_preco_venda;
	            other.tabela4_preco_vendac = this.tabela4_preco_vendac;
	            other.tabela7_preco_vendac = this.tabela7_preco_vendac;
	            other.situacao_produto = this.situacao_produto;
	            
	}

	public void copyKeysDataTo(row20Struct other) {

		other.cd_produto = this.cd_produto;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.cd_empresa = readString(dis,ois);
					
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
						this.situacao_produto = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.cd_empresa = readString(dis,objectIn);
					
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = objectIn.readDouble();
           				}
					
						this.situacao_produto = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.cd_empresa, dos, oos);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
						writeString(this.situacao_produto, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.cd_empresa, dos, objectOut);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						if(this.tabela3_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela3_preco_venda);
		            	}
					
						if(this.tabela4_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela4_preco_venda);
		            	}
					
						if(this.tabela3_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela3_preco_vendac);
		            	}
					
						if(this.tabela7_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela7_preco_venda);
		            	}
					
						if(this.tabela4_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela4_preco_vendac);
		            	}
					
						if(this.tabela7_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela7_preco_vendac);
		            	}
					
						writeString(this.situacao_produto, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",cd_empresa="+cd_empresa);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_produto, other.cd_produto);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tAdvancedHash_row20 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row20", false);
		start_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tAdvancedHash_row20 = 0;
		

			   		// connection name:row20
			   		// source node:tHashInput_9 - inputs:(after_tHashInput_7) outputs:(row20,row20) | target node:tAdvancedHash_row20 - inputs:(row20) outputs:()
			   		// linked node: tMap_4 - inputs:(row22,row20) outputs:(PrecoAny)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row20 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row20Struct>getLookup(matchingModeEnum_row20);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row20", tHash_Lookup_row20);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row20 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row31Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row31Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row20.cd_produto = next_tHashInput_9.cd_produto;
	row20.cd_empresa = next_tHashInput_9.cd_empresa;
	row20.SALDO_DISPONIVEL = next_tHashInput_9.SALDO_DISPONIVEL;
	row20.tabela3_preco_venda = next_tHashInput_9.tabela3_preco_venda;
	row20.tabela4_preco_venda = next_tHashInput_9.tabela4_preco_venda;
	row20.tabela3_preco_vendac = next_tHashInput_9.tabela7_preco_venda;
	row20.tabela7_preco_venda = next_tHashInput_9.tabela3_preco_vendac;
	row20.tabela4_preco_vendac = next_tHashInput_9.tabela4_preco_vendac;
	row20.tabela7_preco_vendac = next_tHashInput_9.tabela7_preco_vendac;
	row20.situacao_produto = next_tHashInput_9.situacao_produto;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


			   
			   

					row20Struct row20_HashRow = new row20Struct();
		   	   	   
				
				row20_HashRow.cd_produto = row20.cd_produto;
				
				row20_HashRow.cd_empresa = row20.cd_empresa;
				
				row20_HashRow.SALDO_DISPONIVEL = row20.SALDO_DISPONIVEL;
				
				row20_HashRow.tabela3_preco_venda = row20.tabela3_preco_venda;
				
				row20_HashRow.tabela4_preco_venda = row20.tabela4_preco_venda;
				
				row20_HashRow.tabela3_preco_vendac = row20.tabela3_preco_vendac;
				
				row20_HashRow.tabela7_preco_venda = row20.tabela7_preco_venda;
				
				row20_HashRow.tabela4_preco_vendac = row20.tabela4_preco_vendac;
				
				row20_HashRow.tabela7_preco_vendac = row20.tabela7_preco_vendac;
				
				row20_HashRow.situacao_produto = row20.situacao_produto;
				
			tHash_Lookup_row20.put(row20_HashRow);
			
            




 


	tos_count_tAdvancedHash_row20++;

/**
 * [tAdvancedHash_row20 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

tHash_Lookup_row20.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row20", true);
end_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());




/**
 * [tAdvancedHash_row20 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_7) outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_3 - inputs:(PrecoAny,row9) outputs:(saida1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row5Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row9.CD_PRODUTO = next_tHashInput_6.CD_PRODUTO;
	row9.SALDO_DISPONIVEL = next_tHashInput_6.SALDO_DISPONIVEL;
	row9.SITUACAO_PRODUTO = next_tHashInput_6.SITUACAO_PRODUTO;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.CD_PRODUTO = row9.CD_PRODUTO;
				
				row9_HashRow.SALDO_DISPONIVEL = row9.SALDO_DISPONIVEL;
				
				row9_HashRow.SITUACAO_PRODUTO = row9.SITUACAO_PRODUTO;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

tHash_Lookup_row9.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableComparableLookupRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public Double tabela3_preco_vendac;

				public Double getTabela3_preco_vendac () {
					return this.tabela3_preco_vendac;
				}

				public Boolean tabela3_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendacLength(){
				    return null;
				}
				public Integer tabela3_preco_vendacPrecision(){
				    return null;
				}
				public String tabela3_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela3_preco_vendacOriginalDbColumnName(){
				
					return "tabela3_preco_vendac";
				
				}

				
			    public Double tabela7_preco_venda;

				public Double getTabela7_preco_venda () {
					return this.tabela7_preco_venda;
				}

				public Boolean tabela7_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendaLength(){
				    return null;
				}
				public Integer tabela7_preco_vendaPrecision(){
				    return null;
				}
				public String tabela7_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendaOriginalDbColumnName(){
				
					return "tabela7_preco_venda";
				
				}

				
			    public Double tabela4_preco_vendac;

				public Double getTabela4_preco_vendac () {
					return this.tabela4_preco_vendac;
				}

				public Boolean tabela4_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendacLength(){
				    return null;
				}
				public Integer tabela4_preco_vendacPrecision(){
				    return null;
				}
				public String tabela4_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendacOriginalDbColumnName(){
				
					return "tabela4_preco_vendac";
				
				}

				
			    public Double tabela7_preco_vendac;

				public Double getTabela7_preco_vendac () {
					return this.tabela7_preco_vendac;
				}

				public Boolean tabela7_preco_vendacIsNullable(){
				    return true;
				}
				public Boolean tabela7_preco_vendacIsKey(){
				    return false;
				}
				public Integer tabela7_preco_vendacLength(){
				    return null;
				}
				public Integer tabela7_preco_vendacPrecision(){
				    return null;
				}
				public String tabela7_preco_vendacDefault(){
				
					return null;
				
				}
				public String tabela7_preco_vendacComment(){
				
				    return "";
				
				}
				public String tabela7_preco_vendacPattern(){
				
					return "";
				
				}
				public String tabela7_preco_vendacOriginalDbColumnName(){
				
					return "tabela7_preco_vendac";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.cd_produto == null) {
							if (other.cd_produto != null)
								return false;
						
						} else if (!this.cd_produto.equals(other.cd_produto))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.cd_produto = this.cd_produto;
	            other.cd_empresa = this.cd_empresa;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.tabela3_preco_venda = this.tabela3_preco_venda;
	            other.tabela4_preco_venda = this.tabela4_preco_venda;
	            other.tabela3_preco_vendac = this.tabela3_preco_vendac;
	            other.tabela7_preco_venda = this.tabela7_preco_venda;
	            other.tabela4_preco_vendac = this.tabela4_preco_vendac;
	            other.tabela7_preco_vendac = this.tabela7_preco_vendac;
	            other.situacao_produto = this.situacao_produto;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.cd_produto = this.cd_produto;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.cd_empresa = readString(dis,ois);
					
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = dis.readDouble();
           				}
					
						this.situacao_produto = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.cd_empresa = readString(dis,objectIn);
					
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_vendac = null;
           				} else {
           			    	this.tabela3_preco_vendac = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_venda = null;
           				} else {
           			    	this.tabela7_preco_venda = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_vendac = null;
           				} else {
           			    	this.tabela4_preco_vendac = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tabela7_preco_vendac = null;
           				} else {
           			    	this.tabela7_preco_vendac = objectIn.readDouble();
           				}
					
						this.situacao_produto = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.cd_empresa, dos, oos);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
						if(this.tabela3_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_vendac);
		            	}
					
						if(this.tabela7_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_venda);
		            	}
					
						if(this.tabela4_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_vendac);
		            	}
					
						if(this.tabela7_preco_vendac == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela7_preco_vendac);
		            	}
					
						writeString(this.situacao_produto, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.cd_empresa, dos, objectOut);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						if(this.tabela3_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela3_preco_venda);
		            	}
					
						if(this.tabela4_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela4_preco_venda);
		            	}
					
						if(this.tabela3_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela3_preco_vendac);
		            	}
					
						if(this.tabela7_preco_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela7_preco_venda);
		            	}
					
						if(this.tabela4_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela4_preco_vendac);
		            	}
					
						if(this.tabela7_preco_vendac == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tabela7_preco_vendac);
		            	}
					
						writeString(this.situacao_produto, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",cd_empresa="+cd_empresa);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",tabela3_preco_vendac="+String.valueOf(tabela3_preco_vendac));
		sb.append(",tabela7_preco_venda="+String.valueOf(tabela7_preco_venda));
		sb.append(",tabela4_preco_vendac="+String.valueOf(tabela4_preco_vendac));
		sb.append(",tabela7_preco_vendac="+String.valueOf(tabela7_preco_vendac));
		sb.append(",situacao_produto="+situacao_produto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_produto, other.cd_produto);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tAdvancedHash_row21 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row21", false);
		start_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tAdvancedHash_row21 = 0;
		

			   		// connection name:row21
			   		// source node:tHashInput_10 - inputs:(after_tHashInput_8) outputs:(row21,row21) | target node:tAdvancedHash_row21 - inputs:(row21) outputs:()
			   		// linked node: tMap_5 - inputs:(row4,row21) outputs:(EstoqueAny)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row21 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row21Struct>getLookup(matchingModeEnum_row21);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row21", tHash_Lookup_row21);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row21 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row31Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row31Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row21.cd_produto = next_tHashInput_10.cd_produto;
	row21.cd_empresa = next_tHashInput_10.cd_empresa;
	row21.SALDO_DISPONIVEL = next_tHashInput_10.SALDO_DISPONIVEL;
	row21.tabela3_preco_venda = next_tHashInput_10.tabela3_preco_venda;
	row21.tabela4_preco_venda = next_tHashInput_10.tabela4_preco_venda;
	row21.tabela3_preco_vendac = next_tHashInput_10.tabela7_preco_venda;
	row21.tabela7_preco_venda = next_tHashInput_10.tabela3_preco_vendac;
	row21.tabela4_preco_vendac = next_tHashInput_10.tabela4_preco_vendac;
	row21.tabela7_preco_vendac = next_tHashInput_10.tabela7_preco_vendac;
	row21.situacao_produto = next_tHashInput_10.situacao_produto;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					


			   
			   

					row21Struct row21_HashRow = new row21Struct();
		   	   	   
				
				row21_HashRow.cd_produto = row21.cd_produto;
				
				row21_HashRow.cd_empresa = row21.cd_empresa;
				
				row21_HashRow.SALDO_DISPONIVEL = row21.SALDO_DISPONIVEL;
				
				row21_HashRow.tabela3_preco_venda = row21.tabela3_preco_venda;
				
				row21_HashRow.tabela4_preco_venda = row21.tabela4_preco_venda;
				
				row21_HashRow.tabela3_preco_vendac = row21.tabela3_preco_vendac;
				
				row21_HashRow.tabela7_preco_venda = row21.tabela7_preco_venda;
				
				row21_HashRow.tabela4_preco_vendac = row21.tabela4_preco_vendac;
				
				row21_HashRow.tabela7_preco_vendac = row21.tabela7_preco_vendac;
				
				row21_HashRow.situacao_produto = row21.situacao_produto;
				
			tHash_Lookup_row21.put(row21_HashRow);
			
            




 


	tos_count_tAdvancedHash_row21++;

/**
 * [tAdvancedHash_row21 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

tHash_Lookup_row21.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row21", true);
end_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());




/**
 * [tAdvancedHash_row21 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableComparableLookupRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row23Struct other = (row23Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row23Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            
	}

	public void copyKeysDataTo(row23Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tAdvancedHash_row23 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row23", false);
		start_Hash.put("tAdvancedHash_row23", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tAdvancedHash_row23 = 0;
		

			   		// connection name:row23
			   		// source node:tHashInput_11 - inputs:(after_tHashInput_8) outputs:(row23,row23) | target node:tAdvancedHash_row23 - inputs:(row23) outputs:()
			   		// linked node: tMap_7 - inputs:(EstoqueAny,row23) outputs:(saida2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row23 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct> tHash_Lookup_row23 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row23Struct>getLookup(matchingModeEnum_row23);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row23", tHash_Lookup_row23);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row23 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    row5Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row23.CD_PRODUTO = next_tHashInput_11.CD_PRODUTO;
	row23.SALDO_DISPONIVEL = next_tHashInput_11.SALDO_DISPONIVEL;
	row23.SITUACAO_PRODUTO = next_tHashInput_11.SITUACAO_PRODUTO;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					


			   
			   

					row23Struct row23_HashRow = new row23Struct();
		   	   	   
				
				row23_HashRow.CD_PRODUTO = row23.CD_PRODUTO;
				
				row23_HashRow.SALDO_DISPONIVEL = row23.SALDO_DISPONIVEL;
				
				row23_HashRow.SITUACAO_PRODUTO = row23.SITUACAO_PRODUTO;
				
			tHash_Lookup_row23.put(row23_HashRow);
			
            




 


	tos_count_tAdvancedHash_row23++;

/**
 * [tAdvancedHash_row23 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row23 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

tHash_Lookup_row23.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row23", true);
end_Hash.put("tAdvancedHash_row23", System.currentTimeMillis());




/**
 * [tAdvancedHash_row23 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row68Struct implements routines.system.IPersistableComparableLookupRow<row68Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_combo;

				public String getCd_combo () {
					return this.cd_combo;
				}

				public Boolean cd_comboIsNullable(){
				    return true;
				}
				public Boolean cd_comboIsKey(){
				    return true;
				}
				public Integer cd_comboLength(){
				    return 5;
				}
				public Integer cd_comboPrecision(){
				    return null;
				}
				public String cd_comboDefault(){
				
					return null;
				
				}
				public String cd_comboComment(){
				
				    return "";
				
				}
				public String cd_comboPattern(){
				
					return "";
				
				}
				public String cd_comboOriginalDbColumnName(){
				
					return "cd_combo";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_combo == null) ? 0 : this.cd_combo.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row68Struct other = (row68Struct) obj;
		
						if (this.cd_combo == null) {
							if (other.cd_combo != null)
								return false;
						
						} else if (!this.cd_combo.equals(other.cd_combo))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row68Struct other) {

		other.cd_combo = this.cd_combo;
	            other.cd_produto = this.cd_produto;
	            other.qtde = this.qtde;
	            
	}

	public void copyKeysDataTo(row68Struct other) {

		other.cd_combo = this.cd_combo;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_combo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_combo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_combo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_combo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.cd_produto = readString(dis,ois);
					
						this.qtde = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.cd_produto = readString(dis,objectIn);
					
						this.qtde = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.cd_produto, dos, oos);
					
					writeInteger(this.qtde, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.cd_produto, dos, objectOut);
					
					writeInteger(this.qtde, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_combo="+cd_combo);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row68Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_combo, other.cd_combo);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row68Struct row68 = new row68Struct();




	
	/**
	 * [tAdvancedHash_row68 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row68", false);
		start_Hash.put("tAdvancedHash_row68", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row68";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row68");
					}
				
		int tos_count_tAdvancedHash_row68 = 0;
		

			   		// connection name:row68
			   		// source node:tHashInput_15 - inputs:(after_tHashInput_8) outputs:(row68,row68) | target node:tAdvancedHash_row68 - inputs:(row68) outputs:()
			   		// linked node: tMap_15 - inputs:(row28,row68) outputs:(copyOfnaokit,copyOfehKit)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row68 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct> tHash_Lookup_row68 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row68Struct>getLookup(matchingModeEnum_row68);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row68", tHash_Lookup_row68);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row68 begin ] stop
 */



	
	/**
	 * [tHashInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_15", false);
		start_Hash.put("tHashInput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_15";
	
	
		int tos_count_tHashInput_15 = 0;
		


int nb_line_tHashInput_15 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row48Struct> tHashFile_tHashInput_15 = mf_tHashInput_15.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_15==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row48Struct> iterator_tHashInput_15 = tHashFile_tHashInput_15.iterator();
while (iterator_tHashInput_15.hasNext()) {
    row48Struct next_tHashInput_15 = iterator_tHashInput_15.next();

	row68.cd_combo = next_tHashInput_15.cd_combo;
	row68.cd_produto = next_tHashInput_15.cd_produto;
	row68.qtde = next_tHashInput_15.qtde;

 



/**
 * [tHashInput_15 begin ] stop
 */
	
	/**
	 * [tHashInput_15 main ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 


	tos_count_tHashInput_15++;

/**
 * [tHashInput_15 main ] stop
 */
	
	/**
	 * [tHashInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row68"
						
						);
					}
					


			   
			   

					row68Struct row68_HashRow = new row68Struct();
		   	   	   
				
				row68_HashRow.cd_combo = row68.cd_combo;
				
				row68_HashRow.cd_produto = row68.cd_produto;
				
				row68_HashRow.qtde = row68.qtde;
				
			tHash_Lookup_row68.put(row68_HashRow);
			
            




 


	tos_count_tAdvancedHash_row68++;

/**
 * [tAdvancedHash_row68 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row68 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row68 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_15 end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	
    

		
			nb_line_tHashInput_15++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_15_NB_LINE", nb_line_tHashInput_15);       

 

ok_Hash.put("tHashInput_15", true);
end_Hash.put("tHashInput_15", System.currentTimeMillis());




/**
 * [tHashInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

tHash_Lookup_row68.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row68");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row68", true);
end_Hash.put("tAdvancedHash_row68", System.currentTimeMillis());




/**
 * [tAdvancedHash_row68 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row77Struct implements routines.system.IPersistableComparableLookupRow<row77Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row77Struct other = (row77Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row77Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            
	}

	public void copyKeysDataTo(row77Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row77Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row77Struct row77 = new row77Struct();




	
	/**
	 * [tAdvancedHash_row77 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row77", false);
		start_Hash.put("tAdvancedHash_row77", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row77";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row77");
					}
				
		int tos_count_tAdvancedHash_row77 = 0;
		

			   		// connection name:row77
			   		// source node:tHashInput_19 - inputs:(after_tHashInput_8) outputs:(row77,row77) | target node:tAdvancedHash_row77 - inputs:(row77) outputs:()
			   		// linked node: tMap_22 - inputs:(copyOfehKit,row77) outputs:(copyOfSaida3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row77 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct> tHash_Lookup_row77 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row77Struct>getLookup(matchingModeEnum_row77);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row77", tHash_Lookup_row77);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row77 begin ] stop
 */



	
	/**
	 * [tHashInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_19", false);
		start_Hash.put("tHashInput_19", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_19";
	
	
		int tos_count_tHashInput_19 = 0;
		


int nb_line_tHashInput_19 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_19=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_19 = mf_tHashInput_19.getAdvancedMemoryHashFile("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_19==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_19 = tHashFile_tHashInput_19.iterator();
while (iterator_tHashInput_19.hasNext()) {
    row5Struct next_tHashInput_19 = iterator_tHashInput_19.next();

	row77.CD_PRODUTO = next_tHashInput_19.CD_PRODUTO;
	row77.SALDO_DISPONIVEL = next_tHashInput_19.SALDO_DISPONIVEL;
	row77.SITUACAO_PRODUTO = next_tHashInput_19.SITUACAO_PRODUTO;

 



/**
 * [tHashInput_19 begin ] stop
 */
	
	/**
	 * [tHashInput_19 main ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 


	tos_count_tHashInput_19++;

/**
 * [tHashInput_19 main ] stop
 */
	
	/**
	 * [tHashInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row77 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row77"
						
						);
					}
					


			   
			   

					row77Struct row77_HashRow = new row77Struct();
		   	   	   
				
				row77_HashRow.CD_PRODUTO = row77.CD_PRODUTO;
				
				row77_HashRow.SALDO_DISPONIVEL = row77.SALDO_DISPONIVEL;
				
				row77_HashRow.SITUACAO_PRODUTO = row77.SITUACAO_PRODUTO;
				
			tHash_Lookup_row77.put(row77_HashRow);
			
            




 


	tos_count_tAdvancedHash_row77++;

/**
 * [tAdvancedHash_row77 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row77 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

 



/**
 * [tAdvancedHash_row77 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row77 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

 



/**
 * [tAdvancedHash_row77 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_19 end ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	
    

		
			nb_line_tHashInput_19++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_preco_estoque_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_19_NB_LINE", nb_line_tHashInput_19);       

 

ok_Hash.put("tHashInput_19", true);
end_Hash.put("tHashInput_19", System.currentTimeMillis());




/**
 * [tHashInput_19 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row77 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

tHash_Lookup_row77.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row77");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row77", true);
end_Hash.put("tAdvancedHash_row77", System.currentTimeMillis());




/**
 * [tAdvancedHash_row77 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_19 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row77 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

 



/**
 * [tAdvancedHash_row77 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class Saida10Struct implements routines.system.IPersistableRow<Saida10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row85Struct implements routines.system.IPersistableRow<row85Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row85Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saidaStruct implements routines.system.IPersistableRow<saidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.price = readString(dis);
					
					this.qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",price="+price);
		sb.append(",qty="+qty);
		sb.append(",is_in_stock="+is_in_stock);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String store_view_code;

				public String getStore_view_code () {
					return this.store_view_code;
				}

				public Boolean store_view_codeIsNullable(){
				    return true;
				}
				public Boolean store_view_codeIsKey(){
				    return false;
				}
				public Integer store_view_codeLength(){
				    return null;
				}
				public Integer store_view_codePrecision(){
				    return null;
				}
				public String store_view_codeDefault(){
				
					return null;
				
				}
				public String store_view_codeComment(){
				
				    return "";
				
				}
				public String store_view_codePattern(){
				
					return "";
				
				}
				public String store_view_codeOriginalDbColumnName(){
				
					return "store_view_code";
				
				}

				
			    public String attribute_set_code;

				public String getAttribute_set_code () {
					return this.attribute_set_code;
				}

				public Boolean attribute_set_codeIsNullable(){
				    return true;
				}
				public Boolean attribute_set_codeIsKey(){
				    return false;
				}
				public Integer attribute_set_codeLength(){
				    return null;
				}
				public Integer attribute_set_codePrecision(){
				    return null;
				}
				public String attribute_set_codeDefault(){
				
					return null;
				
				}
				public String attribute_set_codeComment(){
				
				    return "";
				
				}
				public String attribute_set_codePattern(){
				
					return "";
				
				}
				public String attribute_set_codeOriginalDbColumnName(){
				
					return "attribute_set_code";
				
				}

				
			    public String product_type;

				public String getProduct_type () {
					return this.product_type;
				}

				public Boolean product_typeIsNullable(){
				    return true;
				}
				public Boolean product_typeIsKey(){
				    return false;
				}
				public Integer product_typeLength(){
				    return null;
				}
				public Integer product_typePrecision(){
				    return null;
				}
				public String product_typeDefault(){
				
					return null;
				
				}
				public String product_typeComment(){
				
				    return "";
				
				}
				public String product_typePattern(){
				
					return "";
				
				}
				public String product_typeOriginalDbColumnName(){
				
					return "product_type";
				
				}

				
			    public String categories;

				public String getCategories () {
					return this.categories;
				}

				public Boolean categoriesIsNullable(){
				    return true;
				}
				public Boolean categoriesIsKey(){
				    return false;
				}
				public Integer categoriesLength(){
				    return null;
				}
				public Integer categoriesPrecision(){
				    return null;
				}
				public String categoriesDefault(){
				
					return null;
				
				}
				public String categoriesComment(){
				
				    return "";
				
				}
				public String categoriesPattern(){
				
					return "";
				
				}
				public String categoriesOriginalDbColumnName(){
				
					return "categories";
				
				}

				
			    public String product_websites;

				public String getProduct_websites () {
					return this.product_websites;
				}

				public Boolean product_websitesIsNullable(){
				    return true;
				}
				public Boolean product_websitesIsKey(){
				    return false;
				}
				public Integer product_websitesLength(){
				    return null;
				}
				public Integer product_websitesPrecision(){
				    return null;
				}
				public String product_websitesDefault(){
				
					return null;
				
				}
				public String product_websitesComment(){
				
				    return "";
				
				}
				public String product_websitesPattern(){
				
					return "";
				
				}
				public String product_websitesOriginalDbColumnName(){
				
					return "product_websites";
				
				}

				
			    public String name;

				public String getName () {
					return this.name;
				}

				public Boolean nameIsNullable(){
				    return true;
				}
				public Boolean nameIsKey(){
				    return false;
				}
				public Integer nameLength(){
				    return null;
				}
				public Integer namePrecision(){
				    return null;
				}
				public String nameDefault(){
				
					return null;
				
				}
				public String nameComment(){
				
				    return "";
				
				}
				public String namePattern(){
				
					return "";
				
				}
				public String nameOriginalDbColumnName(){
				
					return "name";
				
				}

				
			    public String short_description;

				public String getShort_description () {
					return this.short_description;
				}

				public Boolean short_descriptionIsNullable(){
				    return true;
				}
				public Boolean short_descriptionIsKey(){
				    return false;
				}
				public Integer short_descriptionLength(){
				    return null;
				}
				public Integer short_descriptionPrecision(){
				    return null;
				}
				public String short_descriptionDefault(){
				
					return null;
				
				}
				public String short_descriptionComment(){
				
				    return "";
				
				}
				public String short_descriptionPattern(){
				
					return "";
				
				}
				public String short_descriptionOriginalDbColumnName(){
				
					return "short_description";
				
				}

				
			    public String weight;

				public String getWeight () {
					return this.weight;
				}

				public Boolean weightIsNullable(){
				    return true;
				}
				public Boolean weightIsKey(){
				    return false;
				}
				public Integer weightLength(){
				    return null;
				}
				public Integer weightPrecision(){
				    return null;
				}
				public String weightDefault(){
				
					return null;
				
				}
				public String weightComment(){
				
				    return "";
				
				}
				public String weightPattern(){
				
					return "";
				
				}
				public String weightOriginalDbColumnName(){
				
					return "weight";
				
				}

				
			    public String product_online;

				public String getProduct_online () {
					return this.product_online;
				}

				public Boolean product_onlineIsNullable(){
				    return true;
				}
				public Boolean product_onlineIsKey(){
				    return false;
				}
				public Integer product_onlineLength(){
				    return null;
				}
				public Integer product_onlinePrecision(){
				    return null;
				}
				public String product_onlineDefault(){
				
					return null;
				
				}
				public String product_onlineComment(){
				
				    return "";
				
				}
				public String product_onlinePattern(){
				
					return "";
				
				}
				public String product_onlineOriginalDbColumnName(){
				
					return "product_online";
				
				}

				
			    public String tax_class_name;

				public String getTax_class_name () {
					return this.tax_class_name;
				}

				public Boolean tax_class_nameIsNullable(){
				    return true;
				}
				public Boolean tax_class_nameIsKey(){
				    return false;
				}
				public Integer tax_class_nameLength(){
				    return null;
				}
				public Integer tax_class_namePrecision(){
				    return null;
				}
				public String tax_class_nameDefault(){
				
					return null;
				
				}
				public String tax_class_nameComment(){
				
				    return "";
				
				}
				public String tax_class_namePattern(){
				
					return "";
				
				}
				public String tax_class_nameOriginalDbColumnName(){
				
					return "tax_class_name";
				
				}

				
			    public String visibility;

				public String getVisibility () {
					return this.visibility;
				}

				public Boolean visibilityIsNullable(){
				    return true;
				}
				public Boolean visibilityIsKey(){
				    return false;
				}
				public Integer visibilityLength(){
				    return null;
				}
				public Integer visibilityPrecision(){
				    return null;
				}
				public String visibilityDefault(){
				
					return null;
				
				}
				public String visibilityComment(){
				
				    return "";
				
				}
				public String visibilityPattern(){
				
					return "";
				
				}
				public String visibilityOriginalDbColumnName(){
				
					return "visibility";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public String special_price_from_date;

				public String getSpecial_price_from_date () {
					return this.special_price_from_date;
				}

				public Boolean special_price_from_dateIsNullable(){
				    return true;
				}
				public Boolean special_price_from_dateIsKey(){
				    return false;
				}
				public Integer special_price_from_dateLength(){
				    return null;
				}
				public Integer special_price_from_datePrecision(){
				    return null;
				}
				public String special_price_from_dateDefault(){
				
					return null;
				
				}
				public String special_price_from_dateComment(){
				
				    return "";
				
				}
				public String special_price_from_datePattern(){
				
					return "";
				
				}
				public String special_price_from_dateOriginalDbColumnName(){
				
					return "special_price_from_date";
				
				}

				
			    public String special_price_to_date;

				public String getSpecial_price_to_date () {
					return this.special_price_to_date;
				}

				public Boolean special_price_to_dateIsNullable(){
				    return true;
				}
				public Boolean special_price_to_dateIsKey(){
				    return false;
				}
				public Integer special_price_to_dateLength(){
				    return null;
				}
				public Integer special_price_to_datePrecision(){
				    return null;
				}
				public String special_price_to_dateDefault(){
				
					return null;
				
				}
				public String special_price_to_dateComment(){
				
				    return "";
				
				}
				public String special_price_to_datePattern(){
				
					return "";
				
				}
				public String special_price_to_dateOriginalDbColumnName(){
				
					return "special_price_to_date";
				
				}

				
			    public String url_key;

				public String getUrl_key () {
					return this.url_key;
				}

				public Boolean url_keyIsNullable(){
				    return true;
				}
				public Boolean url_keyIsKey(){
				    return false;
				}
				public Integer url_keyLength(){
				    return null;
				}
				public Integer url_keyPrecision(){
				    return null;
				}
				public String url_keyDefault(){
				
					return null;
				
				}
				public String url_keyComment(){
				
				    return "";
				
				}
				public String url_keyPattern(){
				
					return "";
				
				}
				public String url_keyOriginalDbColumnName(){
				
					return "url_key";
				
				}

				
			    public String meta_title;

				public String getMeta_title () {
					return this.meta_title;
				}

				public Boolean meta_titleIsNullable(){
				    return true;
				}
				public Boolean meta_titleIsKey(){
				    return false;
				}
				public Integer meta_titleLength(){
				    return null;
				}
				public Integer meta_titlePrecision(){
				    return null;
				}
				public String meta_titleDefault(){
				
					return null;
				
				}
				public String meta_titleComment(){
				
				    return "";
				
				}
				public String meta_titlePattern(){
				
					return "";
				
				}
				public String meta_titleOriginalDbColumnName(){
				
					return "meta_title";
				
				}

				
			    public String meta_keywords;

				public String getMeta_keywords () {
					return this.meta_keywords;
				}

				public Boolean meta_keywordsIsNullable(){
				    return true;
				}
				public Boolean meta_keywordsIsKey(){
				    return false;
				}
				public Integer meta_keywordsLength(){
				    return null;
				}
				public Integer meta_keywordsPrecision(){
				    return null;
				}
				public String meta_keywordsDefault(){
				
					return null;
				
				}
				public String meta_keywordsComment(){
				
				    return "";
				
				}
				public String meta_keywordsPattern(){
				
					return "";
				
				}
				public String meta_keywordsOriginalDbColumnName(){
				
					return "meta_keywords";
				
				}

				
			    public String meta_description;

				public String getMeta_description () {
					return this.meta_description;
				}

				public Boolean meta_descriptionIsNullable(){
				    return true;
				}
				public Boolean meta_descriptionIsKey(){
				    return false;
				}
				public Integer meta_descriptionLength(){
				    return null;
				}
				public Integer meta_descriptionPrecision(){
				    return null;
				}
				public String meta_descriptionDefault(){
				
					return null;
				
				}
				public String meta_descriptionComment(){
				
				    return "";
				
				}
				public String meta_descriptionPattern(){
				
					return "";
				
				}
				public String meta_descriptionOriginalDbColumnName(){
				
					return "meta_description";
				
				}

				
			    public String base_image;

				public String getBase_image () {
					return this.base_image;
				}

				public Boolean base_imageIsNullable(){
				    return true;
				}
				public Boolean base_imageIsKey(){
				    return false;
				}
				public Integer base_imageLength(){
				    return null;
				}
				public Integer base_imagePrecision(){
				    return null;
				}
				public String base_imageDefault(){
				
					return null;
				
				}
				public String base_imageComment(){
				
				    return "";
				
				}
				public String base_imagePattern(){
				
					return "";
				
				}
				public String base_imageOriginalDbColumnName(){
				
					return "base_image";
				
				}

				
			    public String base_image_label;

				public String getBase_image_label () {
					return this.base_image_label;
				}

				public Boolean base_image_labelIsNullable(){
				    return true;
				}
				public Boolean base_image_labelIsKey(){
				    return false;
				}
				public Integer base_image_labelLength(){
				    return null;
				}
				public Integer base_image_labelPrecision(){
				    return null;
				}
				public String base_image_labelDefault(){
				
					return null;
				
				}
				public String base_image_labelComment(){
				
				    return "";
				
				}
				public String base_image_labelPattern(){
				
					return "";
				
				}
				public String base_image_labelOriginalDbColumnName(){
				
					return "base_image_label";
				
				}

				
			    public String small_image;

				public String getSmall_image () {
					return this.small_image;
				}

				public Boolean small_imageIsNullable(){
				    return true;
				}
				public Boolean small_imageIsKey(){
				    return false;
				}
				public Integer small_imageLength(){
				    return null;
				}
				public Integer small_imagePrecision(){
				    return null;
				}
				public String small_imageDefault(){
				
					return null;
				
				}
				public String small_imageComment(){
				
				    return "";
				
				}
				public String small_imagePattern(){
				
					return "";
				
				}
				public String small_imageOriginalDbColumnName(){
				
					return "small_image";
				
				}

				
			    public String small_image_label;

				public String getSmall_image_label () {
					return this.small_image_label;
				}

				public Boolean small_image_labelIsNullable(){
				    return true;
				}
				public Boolean small_image_labelIsKey(){
				    return false;
				}
				public Integer small_image_labelLength(){
				    return null;
				}
				public Integer small_image_labelPrecision(){
				    return null;
				}
				public String small_image_labelDefault(){
				
					return null;
				
				}
				public String small_image_labelComment(){
				
				    return "";
				
				}
				public String small_image_labelPattern(){
				
					return "";
				
				}
				public String small_image_labelOriginalDbColumnName(){
				
					return "small_image_label";
				
				}

				
			    public String thumbnail_image;

				public String getThumbnail_image () {
					return this.thumbnail_image;
				}

				public Boolean thumbnail_imageIsNullable(){
				    return true;
				}
				public Boolean thumbnail_imageIsKey(){
				    return false;
				}
				public Integer thumbnail_imageLength(){
				    return null;
				}
				public Integer thumbnail_imagePrecision(){
				    return null;
				}
				public String thumbnail_imageDefault(){
				
					return null;
				
				}
				public String thumbnail_imageComment(){
				
				    return "";
				
				}
				public String thumbnail_imagePattern(){
				
					return "";
				
				}
				public String thumbnail_imageOriginalDbColumnName(){
				
					return "thumbnail_image";
				
				}

				
			    public String thumbnail_image_label;

				public String getThumbnail_image_label () {
					return this.thumbnail_image_label;
				}

				public Boolean thumbnail_image_labelIsNullable(){
				    return true;
				}
				public Boolean thumbnail_image_labelIsKey(){
				    return false;
				}
				public Integer thumbnail_image_labelLength(){
				    return null;
				}
				public Integer thumbnail_image_labelPrecision(){
				    return null;
				}
				public String thumbnail_image_labelDefault(){
				
					return null;
				
				}
				public String thumbnail_image_labelComment(){
				
				    return "";
				
				}
				public String thumbnail_image_labelPattern(){
				
					return "";
				
				}
				public String thumbnail_image_labelOriginalDbColumnName(){
				
					return "thumbnail_image_label";
				
				}

				
			    public String swatch_image;

				public String getSwatch_image () {
					return this.swatch_image;
				}

				public Boolean swatch_imageIsNullable(){
				    return true;
				}
				public Boolean swatch_imageIsKey(){
				    return false;
				}
				public Integer swatch_imageLength(){
				    return null;
				}
				public Integer swatch_imagePrecision(){
				    return null;
				}
				public String swatch_imageDefault(){
				
					return null;
				
				}
				public String swatch_imageComment(){
				
				    return "";
				
				}
				public String swatch_imagePattern(){
				
					return "";
				
				}
				public String swatch_imageOriginalDbColumnName(){
				
					return "swatch_image";
				
				}

				
			    public String swatch_image_label;

				public String getSwatch_image_label () {
					return this.swatch_image_label;
				}

				public Boolean swatch_image_labelIsNullable(){
				    return true;
				}
				public Boolean swatch_image_labelIsKey(){
				    return false;
				}
				public Integer swatch_image_labelLength(){
				    return null;
				}
				public Integer swatch_image_labelPrecision(){
				    return null;
				}
				public String swatch_image_labelDefault(){
				
					return null;
				
				}
				public String swatch_image_labelComment(){
				
				    return "";
				
				}
				public String swatch_image_labelPattern(){
				
					return "";
				
				}
				public String swatch_image_labelOriginalDbColumnName(){
				
					return "swatch_image_label";
				
				}

				
			    public String created_at;

				public String getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String updated_at;

				public String getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				
			    public String new_from_date;

				public String getNew_from_date () {
					return this.new_from_date;
				}

				public Boolean new_from_dateIsNullable(){
				    return true;
				}
				public Boolean new_from_dateIsKey(){
				    return false;
				}
				public Integer new_from_dateLength(){
				    return null;
				}
				public Integer new_from_datePrecision(){
				    return null;
				}
				public String new_from_dateDefault(){
				
					return null;
				
				}
				public String new_from_dateComment(){
				
				    return "";
				
				}
				public String new_from_datePattern(){
				
					return "";
				
				}
				public String new_from_dateOriginalDbColumnName(){
				
					return "new_from_date";
				
				}

				
			    public String new_to_date;

				public String getNew_to_date () {
					return this.new_to_date;
				}

				public Boolean new_to_dateIsNullable(){
				    return true;
				}
				public Boolean new_to_dateIsKey(){
				    return false;
				}
				public Integer new_to_dateLength(){
				    return null;
				}
				public Integer new_to_datePrecision(){
				    return null;
				}
				public String new_to_dateDefault(){
				
					return null;
				
				}
				public String new_to_dateComment(){
				
				    return "";
				
				}
				public String new_to_datePattern(){
				
					return "";
				
				}
				public String new_to_dateOriginalDbColumnName(){
				
					return "new_to_date";
				
				}

				
			    public String display_product_options_in;

				public String getDisplay_product_options_in () {
					return this.display_product_options_in;
				}

				public Boolean display_product_options_inIsNullable(){
				    return true;
				}
				public Boolean display_product_options_inIsKey(){
				    return false;
				}
				public Integer display_product_options_inLength(){
				    return null;
				}
				public Integer display_product_options_inPrecision(){
				    return null;
				}
				public String display_product_options_inDefault(){
				
					return null;
				
				}
				public String display_product_options_inComment(){
				
				    return "";
				
				}
				public String display_product_options_inPattern(){
				
					return "";
				
				}
				public String display_product_options_inOriginalDbColumnName(){
				
					return "display_product_options_in";
				
				}

				
			    public String map_price;

				public String getMap_price () {
					return this.map_price;
				}

				public Boolean map_priceIsNullable(){
				    return true;
				}
				public Boolean map_priceIsKey(){
				    return false;
				}
				public Integer map_priceLength(){
				    return null;
				}
				public Integer map_pricePrecision(){
				    return null;
				}
				public String map_priceDefault(){
				
					return null;
				
				}
				public String map_priceComment(){
				
				    return "";
				
				}
				public String map_pricePattern(){
				
					return "";
				
				}
				public String map_priceOriginalDbColumnName(){
				
					return "map_price";
				
				}

				
			    public String msrp_price;

				public String getMsrp_price () {
					return this.msrp_price;
				}

				public Boolean msrp_priceIsNullable(){
				    return true;
				}
				public Boolean msrp_priceIsKey(){
				    return false;
				}
				public Integer msrp_priceLength(){
				    return null;
				}
				public Integer msrp_pricePrecision(){
				    return null;
				}
				public String msrp_priceDefault(){
				
					return null;
				
				}
				public String msrp_priceComment(){
				
				    return "";
				
				}
				public String msrp_pricePattern(){
				
					return "";
				
				}
				public String msrp_priceOriginalDbColumnName(){
				
					return "msrp_price";
				
				}

				
			    public String map_enabled;

				public String getMap_enabled () {
					return this.map_enabled;
				}

				public Boolean map_enabledIsNullable(){
				    return true;
				}
				public Boolean map_enabledIsKey(){
				    return false;
				}
				public Integer map_enabledLength(){
				    return null;
				}
				public Integer map_enabledPrecision(){
				    return null;
				}
				public String map_enabledDefault(){
				
					return null;
				
				}
				public String map_enabledComment(){
				
				    return "";
				
				}
				public String map_enabledPattern(){
				
					return "";
				
				}
				public String map_enabledOriginalDbColumnName(){
				
					return "map_enabled";
				
				}

				
			    public String gift_message_available;

				public String getGift_message_available () {
					return this.gift_message_available;
				}

				public Boolean gift_message_availableIsNullable(){
				    return true;
				}
				public Boolean gift_message_availableIsKey(){
				    return false;
				}
				public Integer gift_message_availableLength(){
				    return null;
				}
				public Integer gift_message_availablePrecision(){
				    return null;
				}
				public String gift_message_availableDefault(){
				
					return null;
				
				}
				public String gift_message_availableComment(){
				
				    return "";
				
				}
				public String gift_message_availablePattern(){
				
					return "";
				
				}
				public String gift_message_availableOriginalDbColumnName(){
				
					return "gift_message_available";
				
				}

				
			    public String custom_design;

				public String getCustom_design () {
					return this.custom_design;
				}

				public Boolean custom_designIsNullable(){
				    return true;
				}
				public Boolean custom_designIsKey(){
				    return false;
				}
				public Integer custom_designLength(){
				    return null;
				}
				public Integer custom_designPrecision(){
				    return null;
				}
				public String custom_designDefault(){
				
					return null;
				
				}
				public String custom_designComment(){
				
				    return "";
				
				}
				public String custom_designPattern(){
				
					return "";
				
				}
				public String custom_designOriginalDbColumnName(){
				
					return "custom_design";
				
				}

				
			    public String custom_design_from;

				public String getCustom_design_from () {
					return this.custom_design_from;
				}

				public Boolean custom_design_fromIsNullable(){
				    return true;
				}
				public Boolean custom_design_fromIsKey(){
				    return false;
				}
				public Integer custom_design_fromLength(){
				    return null;
				}
				public Integer custom_design_fromPrecision(){
				    return null;
				}
				public String custom_design_fromDefault(){
				
					return null;
				
				}
				public String custom_design_fromComment(){
				
				    return "";
				
				}
				public String custom_design_fromPattern(){
				
					return "";
				
				}
				public String custom_design_fromOriginalDbColumnName(){
				
					return "custom_design_from";
				
				}

				
			    public String custom_design_to;

				public String getCustom_design_to () {
					return this.custom_design_to;
				}

				public Boolean custom_design_toIsNullable(){
				    return true;
				}
				public Boolean custom_design_toIsKey(){
				    return false;
				}
				public Integer custom_design_toLength(){
				    return null;
				}
				public Integer custom_design_toPrecision(){
				    return null;
				}
				public String custom_design_toDefault(){
				
					return null;
				
				}
				public String custom_design_toComment(){
				
				    return "";
				
				}
				public String custom_design_toPattern(){
				
					return "";
				
				}
				public String custom_design_toOriginalDbColumnName(){
				
					return "custom_design_to";
				
				}

				
			    public String custom_layout_update;

				public String getCustom_layout_update () {
					return this.custom_layout_update;
				}

				public Boolean custom_layout_updateIsNullable(){
				    return true;
				}
				public Boolean custom_layout_updateIsKey(){
				    return false;
				}
				public Integer custom_layout_updateLength(){
				    return null;
				}
				public Integer custom_layout_updatePrecision(){
				    return null;
				}
				public String custom_layout_updateDefault(){
				
					return null;
				
				}
				public String custom_layout_updateComment(){
				
				    return "";
				
				}
				public String custom_layout_updatePattern(){
				
					return "";
				
				}
				public String custom_layout_updateOriginalDbColumnName(){
				
					return "custom_layout_update";
				
				}

				
			    public String page_layout;

				public String getPage_layout () {
					return this.page_layout;
				}

				public Boolean page_layoutIsNullable(){
				    return true;
				}
				public Boolean page_layoutIsKey(){
				    return false;
				}
				public Integer page_layoutLength(){
				    return null;
				}
				public Integer page_layoutPrecision(){
				    return null;
				}
				public String page_layoutDefault(){
				
					return null;
				
				}
				public String page_layoutComment(){
				
				    return "";
				
				}
				public String page_layoutPattern(){
				
					return "";
				
				}
				public String page_layoutOriginalDbColumnName(){
				
					return "page_layout";
				
				}

				
			    public String product_options_container;

				public String getProduct_options_container () {
					return this.product_options_container;
				}

				public Boolean product_options_containerIsNullable(){
				    return true;
				}
				public Boolean product_options_containerIsKey(){
				    return false;
				}
				public Integer product_options_containerLength(){
				    return null;
				}
				public Integer product_options_containerPrecision(){
				    return null;
				}
				public String product_options_containerDefault(){
				
					return null;
				
				}
				public String product_options_containerComment(){
				
				    return "";
				
				}
				public String product_options_containerPattern(){
				
					return "";
				
				}
				public String product_options_containerOriginalDbColumnName(){
				
					return "product_options_container";
				
				}

				
			    public String msrp_display_actual_price_type;

				public String getMsrp_display_actual_price_type () {
					return this.msrp_display_actual_price_type;
				}

				public Boolean msrp_display_actual_price_typeIsNullable(){
				    return true;
				}
				public Boolean msrp_display_actual_price_typeIsKey(){
				    return false;
				}
				public Integer msrp_display_actual_price_typeLength(){
				    return null;
				}
				public Integer msrp_display_actual_price_typePrecision(){
				    return null;
				}
				public String msrp_display_actual_price_typeDefault(){
				
					return null;
				
				}
				public String msrp_display_actual_price_typeComment(){
				
				    return "";
				
				}
				public String msrp_display_actual_price_typePattern(){
				
					return "";
				
				}
				public String msrp_display_actual_price_typeOriginalDbColumnName(){
				
					return "msrp_display_actual_price_type";
				
				}

				
			    public String country_of_manufacture;

				public String getCountry_of_manufacture () {
					return this.country_of_manufacture;
				}

				public Boolean country_of_manufactureIsNullable(){
				    return true;
				}
				public Boolean country_of_manufactureIsKey(){
				    return false;
				}
				public Integer country_of_manufactureLength(){
				    return null;
				}
				public Integer country_of_manufacturePrecision(){
				    return null;
				}
				public String country_of_manufactureDefault(){
				
					return null;
				
				}
				public String country_of_manufactureComment(){
				
				    return "";
				
				}
				public String country_of_manufacturePattern(){
				
					return "";
				
				}
				public String country_of_manufactureOriginalDbColumnName(){
				
					return "country_of_manufacture";
				
				}

				
			    public String additional_attributes;

				public String getAdditional_attributes () {
					return this.additional_attributes;
				}

				public Boolean additional_attributesIsNullable(){
				    return true;
				}
				public Boolean additional_attributesIsKey(){
				    return false;
				}
				public Integer additional_attributesLength(){
				    return null;
				}
				public Integer additional_attributesPrecision(){
				    return null;
				}
				public String additional_attributesDefault(){
				
					return null;
				
				}
				public String additional_attributesComment(){
				
				    return "";
				
				}
				public String additional_attributesPattern(){
				
					return "";
				
				}
				public String additional_attributesOriginalDbColumnName(){
				
					return "additional_attributes";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String out_of_stock_qty;

				public String getOut_of_stock_qty () {
					return this.out_of_stock_qty;
				}

				public Boolean out_of_stock_qtyIsNullable(){
				    return true;
				}
				public Boolean out_of_stock_qtyIsKey(){
				    return false;
				}
				public Integer out_of_stock_qtyLength(){
				    return null;
				}
				public Integer out_of_stock_qtyPrecision(){
				    return null;
				}
				public String out_of_stock_qtyDefault(){
				
					return null;
				
				}
				public String out_of_stock_qtyComment(){
				
				    return "";
				
				}
				public String out_of_stock_qtyPattern(){
				
					return "";
				
				}
				public String out_of_stock_qtyOriginalDbColumnName(){
				
					return "out_of_stock_qty";
				
				}

				
			    public String use_config_min_qty;

				public String getUse_config_min_qty () {
					return this.use_config_min_qty;
				}

				public Boolean use_config_min_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_min_qtyIsKey(){
				    return false;
				}
				public Integer use_config_min_qtyLength(){
				    return null;
				}
				public Integer use_config_min_qtyPrecision(){
				    return null;
				}
				public String use_config_min_qtyDefault(){
				
					return null;
				
				}
				public String use_config_min_qtyComment(){
				
				    return "";
				
				}
				public String use_config_min_qtyPattern(){
				
					return "";
				
				}
				public String use_config_min_qtyOriginalDbColumnName(){
				
					return "use_config_min_qty";
				
				}

				
			    public String is_qty_decimal;

				public String getIs_qty_decimal () {
					return this.is_qty_decimal;
				}

				public Boolean is_qty_decimalIsNullable(){
				    return true;
				}
				public Boolean is_qty_decimalIsKey(){
				    return false;
				}
				public Integer is_qty_decimalLength(){
				    return null;
				}
				public Integer is_qty_decimalPrecision(){
				    return null;
				}
				public String is_qty_decimalDefault(){
				
					return null;
				
				}
				public String is_qty_decimalComment(){
				
				    return "";
				
				}
				public String is_qty_decimalPattern(){
				
					return "";
				
				}
				public String is_qty_decimalOriginalDbColumnName(){
				
					return "is_qty_decimal";
				
				}

				
			    public String allow_backorders;

				public String getAllow_backorders () {
					return this.allow_backorders;
				}

				public Boolean allow_backordersIsNullable(){
				    return true;
				}
				public Boolean allow_backordersIsKey(){
				    return false;
				}
				public Integer allow_backordersLength(){
				    return null;
				}
				public Integer allow_backordersPrecision(){
				    return null;
				}
				public String allow_backordersDefault(){
				
					return null;
				
				}
				public String allow_backordersComment(){
				
				    return "";
				
				}
				public String allow_backordersPattern(){
				
					return "";
				
				}
				public String allow_backordersOriginalDbColumnName(){
				
					return "allow_backorders";
				
				}

				
			    public String use_config_backorders;

				public String getUse_config_backorders () {
					return this.use_config_backorders;
				}

				public Boolean use_config_backordersIsNullable(){
				    return true;
				}
				public Boolean use_config_backordersIsKey(){
				    return false;
				}
				public Integer use_config_backordersLength(){
				    return null;
				}
				public Integer use_config_backordersPrecision(){
				    return null;
				}
				public String use_config_backordersDefault(){
				
					return null;
				
				}
				public String use_config_backordersComment(){
				
				    return "";
				
				}
				public String use_config_backordersPattern(){
				
					return "";
				
				}
				public String use_config_backordersOriginalDbColumnName(){
				
					return "use_config_backorders";
				
				}

				
			    public String min_cart_qty;

				public String getMin_cart_qty () {
					return this.min_cart_qty;
				}

				public Boolean min_cart_qtyIsNullable(){
				    return true;
				}
				public Boolean min_cart_qtyIsKey(){
				    return false;
				}
				public Integer min_cart_qtyLength(){
				    return null;
				}
				public Integer min_cart_qtyPrecision(){
				    return null;
				}
				public String min_cart_qtyDefault(){
				
					return null;
				
				}
				public String min_cart_qtyComment(){
				
				    return "";
				
				}
				public String min_cart_qtyPattern(){
				
					return "";
				
				}
				public String min_cart_qtyOriginalDbColumnName(){
				
					return "min_cart_qty";
				
				}

				
			    public String use_config_min_sale_qty;

				public String getUse_config_min_sale_qty () {
					return this.use_config_min_sale_qty;
				}

				public Boolean use_config_min_sale_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_min_sale_qtyIsKey(){
				    return false;
				}
				public Integer use_config_min_sale_qtyLength(){
				    return null;
				}
				public Integer use_config_min_sale_qtyPrecision(){
				    return null;
				}
				public String use_config_min_sale_qtyDefault(){
				
					return null;
				
				}
				public String use_config_min_sale_qtyComment(){
				
				    return "";
				
				}
				public String use_config_min_sale_qtyPattern(){
				
					return "";
				
				}
				public String use_config_min_sale_qtyOriginalDbColumnName(){
				
					return "use_config_min_sale_qty";
				
				}

				
			    public String max_cart_qty;

				public String getMax_cart_qty () {
					return this.max_cart_qty;
				}

				public Boolean max_cart_qtyIsNullable(){
				    return true;
				}
				public Boolean max_cart_qtyIsKey(){
				    return false;
				}
				public Integer max_cart_qtyLength(){
				    return null;
				}
				public Integer max_cart_qtyPrecision(){
				    return null;
				}
				public String max_cart_qtyDefault(){
				
					return null;
				
				}
				public String max_cart_qtyComment(){
				
				    return "";
				
				}
				public String max_cart_qtyPattern(){
				
					return "";
				
				}
				public String max_cart_qtyOriginalDbColumnName(){
				
					return "max_cart_qty";
				
				}

				
			    public String use_config_max_sale_qty;

				public String getUse_config_max_sale_qty () {
					return this.use_config_max_sale_qty;
				}

				public Boolean use_config_max_sale_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_max_sale_qtyIsKey(){
				    return false;
				}
				public Integer use_config_max_sale_qtyLength(){
				    return null;
				}
				public Integer use_config_max_sale_qtyPrecision(){
				    return null;
				}
				public String use_config_max_sale_qtyDefault(){
				
					return null;
				
				}
				public String use_config_max_sale_qtyComment(){
				
				    return "";
				
				}
				public String use_config_max_sale_qtyPattern(){
				
					return "";
				
				}
				public String use_config_max_sale_qtyOriginalDbColumnName(){
				
					return "use_config_max_sale_qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public String notify_on_stock_below;

				public String getNotify_on_stock_below () {
					return this.notify_on_stock_below;
				}

				public Boolean notify_on_stock_belowIsNullable(){
				    return true;
				}
				public Boolean notify_on_stock_belowIsKey(){
				    return false;
				}
				public Integer notify_on_stock_belowLength(){
				    return null;
				}
				public Integer notify_on_stock_belowPrecision(){
				    return null;
				}
				public String notify_on_stock_belowDefault(){
				
					return null;
				
				}
				public String notify_on_stock_belowComment(){
				
				    return "";
				
				}
				public String notify_on_stock_belowPattern(){
				
					return "";
				
				}
				public String notify_on_stock_belowOriginalDbColumnName(){
				
					return "notify_on_stock_below";
				
				}

				
			    public String use_config_notify_stock_qty;

				public String getUse_config_notify_stock_qty () {
					return this.use_config_notify_stock_qty;
				}

				public Boolean use_config_notify_stock_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_notify_stock_qtyIsKey(){
				    return false;
				}
				public Integer use_config_notify_stock_qtyLength(){
				    return null;
				}
				public Integer use_config_notify_stock_qtyPrecision(){
				    return null;
				}
				public String use_config_notify_stock_qtyDefault(){
				
					return null;
				
				}
				public String use_config_notify_stock_qtyComment(){
				
				    return "";
				
				}
				public String use_config_notify_stock_qtyPattern(){
				
					return "";
				
				}
				public String use_config_notify_stock_qtyOriginalDbColumnName(){
				
					return "use_config_notify_stock_qty";
				
				}

				
			    public String manage_stock;

				public String getManage_stock () {
					return this.manage_stock;
				}

				public Boolean manage_stockIsNullable(){
				    return true;
				}
				public Boolean manage_stockIsKey(){
				    return false;
				}
				public Integer manage_stockLength(){
				    return null;
				}
				public Integer manage_stockPrecision(){
				    return null;
				}
				public String manage_stockDefault(){
				
					return null;
				
				}
				public String manage_stockComment(){
				
				    return "";
				
				}
				public String manage_stockPattern(){
				
					return "";
				
				}
				public String manage_stockOriginalDbColumnName(){
				
					return "manage_stock";
				
				}

				
			    public String use_config_manage_stock;

				public String getUse_config_manage_stock () {
					return this.use_config_manage_stock;
				}

				public Boolean use_config_manage_stockIsNullable(){
				    return true;
				}
				public Boolean use_config_manage_stockIsKey(){
				    return false;
				}
				public Integer use_config_manage_stockLength(){
				    return null;
				}
				public Integer use_config_manage_stockPrecision(){
				    return null;
				}
				public String use_config_manage_stockDefault(){
				
					return null;
				
				}
				public String use_config_manage_stockComment(){
				
				    return "";
				
				}
				public String use_config_manage_stockPattern(){
				
					return "";
				
				}
				public String use_config_manage_stockOriginalDbColumnName(){
				
					return "use_config_manage_stock";
				
				}

				
			    public String use_config_qty_increments;

				public String getUse_config_qty_increments () {
					return this.use_config_qty_increments;
				}

				public Boolean use_config_qty_incrementsIsNullable(){
				    return true;
				}
				public Boolean use_config_qty_incrementsIsKey(){
				    return false;
				}
				public Integer use_config_qty_incrementsLength(){
				    return null;
				}
				public Integer use_config_qty_incrementsPrecision(){
				    return null;
				}
				public String use_config_qty_incrementsDefault(){
				
					return null;
				
				}
				public String use_config_qty_incrementsComment(){
				
				    return "";
				
				}
				public String use_config_qty_incrementsPattern(){
				
					return "";
				
				}
				public String use_config_qty_incrementsOriginalDbColumnName(){
				
					return "use_config_qty_increments";
				
				}

				
			    public String qty_increments;

				public String getQty_increments () {
					return this.qty_increments;
				}

				public Boolean qty_incrementsIsNullable(){
				    return true;
				}
				public Boolean qty_incrementsIsKey(){
				    return false;
				}
				public Integer qty_incrementsLength(){
				    return null;
				}
				public Integer qty_incrementsPrecision(){
				    return null;
				}
				public String qty_incrementsDefault(){
				
					return null;
				
				}
				public String qty_incrementsComment(){
				
				    return "";
				
				}
				public String qty_incrementsPattern(){
				
					return "";
				
				}
				public String qty_incrementsOriginalDbColumnName(){
				
					return "qty_increments";
				
				}

				
			    public String use_config_enable_qty_inc;

				public String getUse_config_enable_qty_inc () {
					return this.use_config_enable_qty_inc;
				}

				public Boolean use_config_enable_qty_incIsNullable(){
				    return true;
				}
				public Boolean use_config_enable_qty_incIsKey(){
				    return false;
				}
				public Integer use_config_enable_qty_incLength(){
				    return null;
				}
				public Integer use_config_enable_qty_incPrecision(){
				    return null;
				}
				public String use_config_enable_qty_incDefault(){
				
					return null;
				
				}
				public String use_config_enable_qty_incComment(){
				
				    return "";
				
				}
				public String use_config_enable_qty_incPattern(){
				
					return "";
				
				}
				public String use_config_enable_qty_incOriginalDbColumnName(){
				
					return "use_config_enable_qty_inc";
				
				}

				
			    public String enable_qty_increments;

				public String getEnable_qty_increments () {
					return this.enable_qty_increments;
				}

				public Boolean enable_qty_incrementsIsNullable(){
				    return true;
				}
				public Boolean enable_qty_incrementsIsKey(){
				    return false;
				}
				public Integer enable_qty_incrementsLength(){
				    return null;
				}
				public Integer enable_qty_incrementsPrecision(){
				    return null;
				}
				public String enable_qty_incrementsDefault(){
				
					return null;
				
				}
				public String enable_qty_incrementsComment(){
				
				    return "";
				
				}
				public String enable_qty_incrementsPattern(){
				
					return "";
				
				}
				public String enable_qty_incrementsOriginalDbColumnName(){
				
					return "enable_qty_increments";
				
				}

				
			    public String is_decimal_divided;

				public String getIs_decimal_divided () {
					return this.is_decimal_divided;
				}

				public Boolean is_decimal_dividedIsNullable(){
				    return true;
				}
				public Boolean is_decimal_dividedIsKey(){
				    return false;
				}
				public Integer is_decimal_dividedLength(){
				    return null;
				}
				public Integer is_decimal_dividedPrecision(){
				    return null;
				}
				public String is_decimal_dividedDefault(){
				
					return null;
				
				}
				public String is_decimal_dividedComment(){
				
				    return "";
				
				}
				public String is_decimal_dividedPattern(){
				
					return "";
				
				}
				public String is_decimal_dividedOriginalDbColumnName(){
				
					return "is_decimal_divided";
				
				}

				
			    public String website_id;

				public String getWebsite_id () {
					return this.website_id;
				}

				public Boolean website_idIsNullable(){
				    return true;
				}
				public Boolean website_idIsKey(){
				    return false;
				}
				public Integer website_idLength(){
				    return null;
				}
				public Integer website_idPrecision(){
				    return null;
				}
				public String website_idDefault(){
				
					return null;
				
				}
				public String website_idComment(){
				
				    return "";
				
				}
				public String website_idPattern(){
				
					return "";
				
				}
				public String website_idOriginalDbColumnName(){
				
					return "website_id";
				
				}

				
			    public String deferred_stock_update;

				public String getDeferred_stock_update () {
					return this.deferred_stock_update;
				}

				public Boolean deferred_stock_updateIsNullable(){
				    return true;
				}
				public Boolean deferred_stock_updateIsKey(){
				    return false;
				}
				public Integer deferred_stock_updateLength(){
				    return null;
				}
				public Integer deferred_stock_updatePrecision(){
				    return null;
				}
				public String deferred_stock_updateDefault(){
				
					return null;
				
				}
				public String deferred_stock_updateComment(){
				
				    return "";
				
				}
				public String deferred_stock_updatePattern(){
				
					return "";
				
				}
				public String deferred_stock_updateOriginalDbColumnName(){
				
					return "deferred_stock_update";
				
				}

				
			    public String use_config_deferred_stock_update;

				public String getUse_config_deferred_stock_update () {
					return this.use_config_deferred_stock_update;
				}

				public Boolean use_config_deferred_stock_updateIsNullable(){
				    return true;
				}
				public Boolean use_config_deferred_stock_updateIsKey(){
				    return false;
				}
				public Integer use_config_deferred_stock_updateLength(){
				    return null;
				}
				public Integer use_config_deferred_stock_updatePrecision(){
				    return null;
				}
				public String use_config_deferred_stock_updateDefault(){
				
					return null;
				
				}
				public String use_config_deferred_stock_updateComment(){
				
				    return "";
				
				}
				public String use_config_deferred_stock_updatePattern(){
				
					return "";
				
				}
				public String use_config_deferred_stock_updateOriginalDbColumnName(){
				
					return "use_config_deferred_stock_update";
				
				}

				
			    public String related_skus;

				public String getRelated_skus () {
					return this.related_skus;
				}

				public Boolean related_skusIsNullable(){
				    return true;
				}
				public Boolean related_skusIsKey(){
				    return false;
				}
				public Integer related_skusLength(){
				    return null;
				}
				public Integer related_skusPrecision(){
				    return null;
				}
				public String related_skusDefault(){
				
					return null;
				
				}
				public String related_skusComment(){
				
				    return "";
				
				}
				public String related_skusPattern(){
				
					return "";
				
				}
				public String related_skusOriginalDbColumnName(){
				
					return "related_skus";
				
				}

				
			    public String related_position;

				public String getRelated_position () {
					return this.related_position;
				}

				public Boolean related_positionIsNullable(){
				    return true;
				}
				public Boolean related_positionIsKey(){
				    return false;
				}
				public Integer related_positionLength(){
				    return null;
				}
				public Integer related_positionPrecision(){
				    return null;
				}
				public String related_positionDefault(){
				
					return null;
				
				}
				public String related_positionComment(){
				
				    return "";
				
				}
				public String related_positionPattern(){
				
					return "";
				
				}
				public String related_positionOriginalDbColumnName(){
				
					return "related_position";
				
				}

				
			    public String crosssell_skus;

				public String getCrosssell_skus () {
					return this.crosssell_skus;
				}

				public Boolean crosssell_skusIsNullable(){
				    return true;
				}
				public Boolean crosssell_skusIsKey(){
				    return false;
				}
				public Integer crosssell_skusLength(){
				    return null;
				}
				public Integer crosssell_skusPrecision(){
				    return null;
				}
				public String crosssell_skusDefault(){
				
					return null;
				
				}
				public String crosssell_skusComment(){
				
				    return "";
				
				}
				public String crosssell_skusPattern(){
				
					return "";
				
				}
				public String crosssell_skusOriginalDbColumnName(){
				
					return "crosssell_skus";
				
				}

				
			    public String crosssell_position;

				public String getCrosssell_position () {
					return this.crosssell_position;
				}

				public Boolean crosssell_positionIsNullable(){
				    return true;
				}
				public Boolean crosssell_positionIsKey(){
				    return false;
				}
				public Integer crosssell_positionLength(){
				    return null;
				}
				public Integer crosssell_positionPrecision(){
				    return null;
				}
				public String crosssell_positionDefault(){
				
					return null;
				
				}
				public String crosssell_positionComment(){
				
				    return "";
				
				}
				public String crosssell_positionPattern(){
				
					return "";
				
				}
				public String crosssell_positionOriginalDbColumnName(){
				
					return "crosssell_position";
				
				}

				
			    public String upsell_skus;

				public String getUpsell_skus () {
					return this.upsell_skus;
				}

				public Boolean upsell_skusIsNullable(){
				    return true;
				}
				public Boolean upsell_skusIsKey(){
				    return false;
				}
				public Integer upsell_skusLength(){
				    return null;
				}
				public Integer upsell_skusPrecision(){
				    return null;
				}
				public String upsell_skusDefault(){
				
					return null;
				
				}
				public String upsell_skusComment(){
				
				    return "";
				
				}
				public String upsell_skusPattern(){
				
					return "";
				
				}
				public String upsell_skusOriginalDbColumnName(){
				
					return "upsell_skus";
				
				}

				
			    public String upsell_position;

				public String getUpsell_position () {
					return this.upsell_position;
				}

				public Boolean upsell_positionIsNullable(){
				    return true;
				}
				public Boolean upsell_positionIsKey(){
				    return false;
				}
				public Integer upsell_positionLength(){
				    return null;
				}
				public Integer upsell_positionPrecision(){
				    return null;
				}
				public String upsell_positionDefault(){
				
					return null;
				
				}
				public String upsell_positionComment(){
				
				    return "";
				
				}
				public String upsell_positionPattern(){
				
					return "";
				
				}
				public String upsell_positionOriginalDbColumnName(){
				
					return "upsell_position";
				
				}

				
			    public String additional_images;

				public String getAdditional_images () {
					return this.additional_images;
				}

				public Boolean additional_imagesIsNullable(){
				    return true;
				}
				public Boolean additional_imagesIsKey(){
				    return false;
				}
				public Integer additional_imagesLength(){
				    return null;
				}
				public Integer additional_imagesPrecision(){
				    return null;
				}
				public String additional_imagesDefault(){
				
					return null;
				
				}
				public String additional_imagesComment(){
				
				    return "";
				
				}
				public String additional_imagesPattern(){
				
					return "";
				
				}
				public String additional_imagesOriginalDbColumnName(){
				
					return "additional_images";
				
				}

				
			    public String additional_image_labels;

				public String getAdditional_image_labels () {
					return this.additional_image_labels;
				}

				public Boolean additional_image_labelsIsNullable(){
				    return true;
				}
				public Boolean additional_image_labelsIsKey(){
				    return false;
				}
				public Integer additional_image_labelsLength(){
				    return null;
				}
				public Integer additional_image_labelsPrecision(){
				    return null;
				}
				public String additional_image_labelsDefault(){
				
					return null;
				
				}
				public String additional_image_labelsComment(){
				
				    return "";
				
				}
				public String additional_image_labelsPattern(){
				
					return "";
				
				}
				public String additional_image_labelsOriginalDbColumnName(){
				
					return "additional_image_labels";
				
				}

				
			    public String hide_from_product_page;

				public String getHide_from_product_page () {
					return this.hide_from_product_page;
				}

				public Boolean hide_from_product_pageIsNullable(){
				    return true;
				}
				public Boolean hide_from_product_pageIsKey(){
				    return false;
				}
				public Integer hide_from_product_pageLength(){
				    return null;
				}
				public Integer hide_from_product_pagePrecision(){
				    return null;
				}
				public String hide_from_product_pageDefault(){
				
					return null;
				
				}
				public String hide_from_product_pageComment(){
				
				    return "";
				
				}
				public String hide_from_product_pagePattern(){
				
					return "";
				
				}
				public String hide_from_product_pageOriginalDbColumnName(){
				
					return "hide_from_product_page";
				
				}

				
			    public String custom_options;

				public String getCustom_options () {
					return this.custom_options;
				}

				public Boolean custom_optionsIsNullable(){
				    return true;
				}
				public Boolean custom_optionsIsKey(){
				    return false;
				}
				public Integer custom_optionsLength(){
				    return null;
				}
				public Integer custom_optionsPrecision(){
				    return null;
				}
				public String custom_optionsDefault(){
				
					return null;
				
				}
				public String custom_optionsComment(){
				
				    return "";
				
				}
				public String custom_optionsPattern(){
				
					return "";
				
				}
				public String custom_optionsOriginalDbColumnName(){
				
					return "custom_options";
				
				}

				
			    public String bundle_price_type;

				public String getBundle_price_type () {
					return this.bundle_price_type;
				}

				public Boolean bundle_price_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_price_typeIsKey(){
				    return false;
				}
				public Integer bundle_price_typeLength(){
				    return null;
				}
				public Integer bundle_price_typePrecision(){
				    return null;
				}
				public String bundle_price_typeDefault(){
				
					return null;
				
				}
				public String bundle_price_typeComment(){
				
				    return "";
				
				}
				public String bundle_price_typePattern(){
				
					return "";
				
				}
				public String bundle_price_typeOriginalDbColumnName(){
				
					return "bundle_price_type";
				
				}

				
			    public String bundle_sku_type;

				public String getBundle_sku_type () {
					return this.bundle_sku_type;
				}

				public Boolean bundle_sku_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_sku_typeIsKey(){
				    return false;
				}
				public Integer bundle_sku_typeLength(){
				    return null;
				}
				public Integer bundle_sku_typePrecision(){
				    return null;
				}
				public String bundle_sku_typeDefault(){
				
					return null;
				
				}
				public String bundle_sku_typeComment(){
				
				    return "";
				
				}
				public String bundle_sku_typePattern(){
				
					return "";
				
				}
				public String bundle_sku_typeOriginalDbColumnName(){
				
					return "bundle_sku_type";
				
				}

				
			    public String bundle_price_view;

				public String getBundle_price_view () {
					return this.bundle_price_view;
				}

				public Boolean bundle_price_viewIsNullable(){
				    return true;
				}
				public Boolean bundle_price_viewIsKey(){
				    return false;
				}
				public Integer bundle_price_viewLength(){
				    return null;
				}
				public Integer bundle_price_viewPrecision(){
				    return null;
				}
				public String bundle_price_viewDefault(){
				
					return null;
				
				}
				public String bundle_price_viewComment(){
				
				    return "";
				
				}
				public String bundle_price_viewPattern(){
				
					return "";
				
				}
				public String bundle_price_viewOriginalDbColumnName(){
				
					return "bundle_price_view";
				
				}

				
			    public String bundle_weight_type;

				public String getBundle_weight_type () {
					return this.bundle_weight_type;
				}

				public Boolean bundle_weight_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_weight_typeIsKey(){
				    return false;
				}
				public Integer bundle_weight_typeLength(){
				    return null;
				}
				public Integer bundle_weight_typePrecision(){
				    return null;
				}
				public String bundle_weight_typeDefault(){
				
					return null;
				
				}
				public String bundle_weight_typeComment(){
				
				    return "";
				
				}
				public String bundle_weight_typePattern(){
				
					return "";
				
				}
				public String bundle_weight_typeOriginalDbColumnName(){
				
					return "bundle_weight_type";
				
				}

				
			    public String bundle_values;

				public String getBundle_values () {
					return this.bundle_values;
				}

				public Boolean bundle_valuesIsNullable(){
				    return true;
				}
				public Boolean bundle_valuesIsKey(){
				    return false;
				}
				public Integer bundle_valuesLength(){
				    return null;
				}
				public Integer bundle_valuesPrecision(){
				    return null;
				}
				public String bundle_valuesDefault(){
				
					return null;
				
				}
				public String bundle_valuesComment(){
				
				    return "";
				
				}
				public String bundle_valuesPattern(){
				
					return "";
				
				}
				public String bundle_valuesOriginalDbColumnName(){
				
					return "bundle_values";
				
				}

				
			    public String bundle_shipment_type;

				public String getBundle_shipment_type () {
					return this.bundle_shipment_type;
				}

				public Boolean bundle_shipment_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_shipment_typeIsKey(){
				    return false;
				}
				public Integer bundle_shipment_typeLength(){
				    return null;
				}
				public Integer bundle_shipment_typePrecision(){
				    return null;
				}
				public String bundle_shipment_typeDefault(){
				
					return null;
				
				}
				public String bundle_shipment_typeComment(){
				
				    return "";
				
				}
				public String bundle_shipment_typePattern(){
				
					return "";
				
				}
				public String bundle_shipment_typeOriginalDbColumnName(){
				
					return "bundle_shipment_type";
				
				}

				
			    public String configurable_variations;

				public String getConfigurable_variations () {
					return this.configurable_variations;
				}

				public Boolean configurable_variationsIsNullable(){
				    return true;
				}
				public Boolean configurable_variationsIsKey(){
				    return false;
				}
				public Integer configurable_variationsLength(){
				    return null;
				}
				public Integer configurable_variationsPrecision(){
				    return null;
				}
				public String configurable_variationsDefault(){
				
					return null;
				
				}
				public String configurable_variationsComment(){
				
				    return "";
				
				}
				public String configurable_variationsPattern(){
				
					return "";
				
				}
				public String configurable_variationsOriginalDbColumnName(){
				
					return "configurable_variations";
				
				}

				
			    public String configurable_variation_labels;

				public String getConfigurable_variation_labels () {
					return this.configurable_variation_labels;
				}

				public Boolean configurable_variation_labelsIsNullable(){
				    return true;
				}
				public Boolean configurable_variation_labelsIsKey(){
				    return false;
				}
				public Integer configurable_variation_labelsLength(){
				    return null;
				}
				public Integer configurable_variation_labelsPrecision(){
				    return null;
				}
				public String configurable_variation_labelsDefault(){
				
					return null;
				
				}
				public String configurable_variation_labelsComment(){
				
				    return "";
				
				}
				public String configurable_variation_labelsPattern(){
				
					return "";
				
				}
				public String configurable_variation_labelsOriginalDbColumnName(){
				
					return "configurable_variation_labels";
				
				}

				
			    public String downloadable_links;

				public String getDownloadable_links () {
					return this.downloadable_links;
				}

				public Boolean downloadable_linksIsNullable(){
				    return true;
				}
				public Boolean downloadable_linksIsKey(){
				    return false;
				}
				public Integer downloadable_linksLength(){
				    return null;
				}
				public Integer downloadable_linksPrecision(){
				    return null;
				}
				public String downloadable_linksDefault(){
				
					return null;
				
				}
				public String downloadable_linksComment(){
				
				    return "";
				
				}
				public String downloadable_linksPattern(){
				
					return "";
				
				}
				public String downloadable_linksOriginalDbColumnName(){
				
					return "downloadable_links";
				
				}

				
			    public String downloadable_samples;

				public String getDownloadable_samples () {
					return this.downloadable_samples;
				}

				public Boolean downloadable_samplesIsNullable(){
				    return true;
				}
				public Boolean downloadable_samplesIsKey(){
				    return false;
				}
				public Integer downloadable_samplesLength(){
				    return null;
				}
				public Integer downloadable_samplesPrecision(){
				    return null;
				}
				public String downloadable_samplesDefault(){
				
					return null;
				
				}
				public String downloadable_samplesComment(){
				
				    return "";
				
				}
				public String downloadable_samplesPattern(){
				
					return "";
				
				}
				public String downloadable_samplesOriginalDbColumnName(){
				
					return "downloadable_samples";
				
				}

				
			    public String associated_skus;

				public String getAssociated_skus () {
					return this.associated_skus;
				}

				public Boolean associated_skusIsNullable(){
				    return true;
				}
				public Boolean associated_skusIsKey(){
				    return false;
				}
				public Integer associated_skusLength(){
				    return null;
				}
				public Integer associated_skusPrecision(){
				    return null;
				}
				public String associated_skusDefault(){
				
					return null;
				
				}
				public String associated_skusComment(){
				
				    return "";
				
				}
				public String associated_skusPattern(){
				
					return "";
				
				}
				public String associated_skusOriginalDbColumnName(){
				
					return "associated_skus";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.store_view_code = readString(dis);
					
					this.attribute_set_code = readString(dis);
					
					this.product_type = readString(dis);
					
					this.categories = readString(dis);
					
					this.product_websites = readString(dis);
					
					this.name = readString(dis);
					
					this.short_description = readString(dis);
					
					this.weight = readString(dis);
					
					this.product_online = readString(dis);
					
					this.tax_class_name = readString(dis);
					
					this.visibility = readString(dis);
					
					this.price = readString(dis);
					
					this.special_price = readString(dis);
					
					this.special_price_from_date = readString(dis);
					
					this.special_price_to_date = readString(dis);
					
					this.url_key = readString(dis);
					
					this.meta_title = readString(dis);
					
					this.meta_keywords = readString(dis);
					
					this.meta_description = readString(dis);
					
					this.base_image = readString(dis);
					
					this.base_image_label = readString(dis);
					
					this.small_image = readString(dis);
					
					this.small_image_label = readString(dis);
					
					this.thumbnail_image = readString(dis);
					
					this.thumbnail_image_label = readString(dis);
					
					this.swatch_image = readString(dis);
					
					this.swatch_image_label = readString(dis);
					
					this.created_at = readString(dis);
					
					this.updated_at = readString(dis);
					
					this.new_from_date = readString(dis);
					
					this.new_to_date = readString(dis);
					
					this.display_product_options_in = readString(dis);
					
					this.map_price = readString(dis);
					
					this.msrp_price = readString(dis);
					
					this.map_enabled = readString(dis);
					
					this.gift_message_available = readString(dis);
					
					this.custom_design = readString(dis);
					
					this.custom_design_from = readString(dis);
					
					this.custom_design_to = readString(dis);
					
					this.custom_layout_update = readString(dis);
					
					this.page_layout = readString(dis);
					
					this.product_options_container = readString(dis);
					
					this.msrp_display_actual_price_type = readString(dis);
					
					this.country_of_manufacture = readString(dis);
					
					this.additional_attributes = readString(dis);
					
					this.qty = readString(dis);
					
					this.out_of_stock_qty = readString(dis);
					
					this.use_config_min_qty = readString(dis);
					
					this.is_qty_decimal = readString(dis);
					
					this.allow_backorders = readString(dis);
					
					this.use_config_backorders = readString(dis);
					
					this.min_cart_qty = readString(dis);
					
					this.use_config_min_sale_qty = readString(dis);
					
					this.max_cart_qty = readString(dis);
					
					this.use_config_max_sale_qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
					this.notify_on_stock_below = readString(dis);
					
					this.use_config_notify_stock_qty = readString(dis);
					
					this.manage_stock = readString(dis);
					
					this.use_config_manage_stock = readString(dis);
					
					this.use_config_qty_increments = readString(dis);
					
					this.qty_increments = readString(dis);
					
					this.use_config_enable_qty_inc = readString(dis);
					
					this.enable_qty_increments = readString(dis);
					
					this.is_decimal_divided = readString(dis);
					
					this.website_id = readString(dis);
					
					this.deferred_stock_update = readString(dis);
					
					this.use_config_deferred_stock_update = readString(dis);
					
					this.related_skus = readString(dis);
					
					this.related_position = readString(dis);
					
					this.crosssell_skus = readString(dis);
					
					this.crosssell_position = readString(dis);
					
					this.upsell_skus = readString(dis);
					
					this.upsell_position = readString(dis);
					
					this.additional_images = readString(dis);
					
					this.additional_image_labels = readString(dis);
					
					this.hide_from_product_page = readString(dis);
					
					this.custom_options = readString(dis);
					
					this.bundle_price_type = readString(dis);
					
					this.bundle_sku_type = readString(dis);
					
					this.bundle_price_view = readString(dis);
					
					this.bundle_weight_type = readString(dis);
					
					this.bundle_values = readString(dis);
					
					this.bundle_shipment_type = readString(dis);
					
					this.configurable_variations = readString(dis);
					
					this.configurable_variation_labels = readString(dis);
					
					this.downloadable_links = readString(dis);
					
					this.downloadable_samples = readString(dis);
					
					this.associated_skus = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.store_view_code = readString(dis);
					
					this.attribute_set_code = readString(dis);
					
					this.product_type = readString(dis);
					
					this.categories = readString(dis);
					
					this.product_websites = readString(dis);
					
					this.name = readString(dis);
					
					this.short_description = readString(dis);
					
					this.weight = readString(dis);
					
					this.product_online = readString(dis);
					
					this.tax_class_name = readString(dis);
					
					this.visibility = readString(dis);
					
					this.price = readString(dis);
					
					this.special_price = readString(dis);
					
					this.special_price_from_date = readString(dis);
					
					this.special_price_to_date = readString(dis);
					
					this.url_key = readString(dis);
					
					this.meta_title = readString(dis);
					
					this.meta_keywords = readString(dis);
					
					this.meta_description = readString(dis);
					
					this.base_image = readString(dis);
					
					this.base_image_label = readString(dis);
					
					this.small_image = readString(dis);
					
					this.small_image_label = readString(dis);
					
					this.thumbnail_image = readString(dis);
					
					this.thumbnail_image_label = readString(dis);
					
					this.swatch_image = readString(dis);
					
					this.swatch_image_label = readString(dis);
					
					this.created_at = readString(dis);
					
					this.updated_at = readString(dis);
					
					this.new_from_date = readString(dis);
					
					this.new_to_date = readString(dis);
					
					this.display_product_options_in = readString(dis);
					
					this.map_price = readString(dis);
					
					this.msrp_price = readString(dis);
					
					this.map_enabled = readString(dis);
					
					this.gift_message_available = readString(dis);
					
					this.custom_design = readString(dis);
					
					this.custom_design_from = readString(dis);
					
					this.custom_design_to = readString(dis);
					
					this.custom_layout_update = readString(dis);
					
					this.page_layout = readString(dis);
					
					this.product_options_container = readString(dis);
					
					this.msrp_display_actual_price_type = readString(dis);
					
					this.country_of_manufacture = readString(dis);
					
					this.additional_attributes = readString(dis);
					
					this.qty = readString(dis);
					
					this.out_of_stock_qty = readString(dis);
					
					this.use_config_min_qty = readString(dis);
					
					this.is_qty_decimal = readString(dis);
					
					this.allow_backorders = readString(dis);
					
					this.use_config_backorders = readString(dis);
					
					this.min_cart_qty = readString(dis);
					
					this.use_config_min_sale_qty = readString(dis);
					
					this.max_cart_qty = readString(dis);
					
					this.use_config_max_sale_qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
					this.notify_on_stock_below = readString(dis);
					
					this.use_config_notify_stock_qty = readString(dis);
					
					this.manage_stock = readString(dis);
					
					this.use_config_manage_stock = readString(dis);
					
					this.use_config_qty_increments = readString(dis);
					
					this.qty_increments = readString(dis);
					
					this.use_config_enable_qty_inc = readString(dis);
					
					this.enable_qty_increments = readString(dis);
					
					this.is_decimal_divided = readString(dis);
					
					this.website_id = readString(dis);
					
					this.deferred_stock_update = readString(dis);
					
					this.use_config_deferred_stock_update = readString(dis);
					
					this.related_skus = readString(dis);
					
					this.related_position = readString(dis);
					
					this.crosssell_skus = readString(dis);
					
					this.crosssell_position = readString(dis);
					
					this.upsell_skus = readString(dis);
					
					this.upsell_position = readString(dis);
					
					this.additional_images = readString(dis);
					
					this.additional_image_labels = readString(dis);
					
					this.hide_from_product_page = readString(dis);
					
					this.custom_options = readString(dis);
					
					this.bundle_price_type = readString(dis);
					
					this.bundle_sku_type = readString(dis);
					
					this.bundle_price_view = readString(dis);
					
					this.bundle_weight_type = readString(dis);
					
					this.bundle_values = readString(dis);
					
					this.bundle_shipment_type = readString(dis);
					
					this.configurable_variations = readString(dis);
					
					this.configurable_variation_labels = readString(dis);
					
					this.downloadable_links = readString(dis);
					
					this.downloadable_samples = readString(dis);
					
					this.associated_skus = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.store_view_code,dos);
					
					// String
				
						writeString(this.attribute_set_code,dos);
					
					// String
				
						writeString(this.product_type,dos);
					
					// String
				
						writeString(this.categories,dos);
					
					// String
				
						writeString(this.product_websites,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.short_description,dos);
					
					// String
				
						writeString(this.weight,dos);
					
					// String
				
						writeString(this.product_online,dos);
					
					// String
				
						writeString(this.tax_class_name,dos);
					
					// String
				
						writeString(this.visibility,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// String
				
						writeString(this.special_price_from_date,dos);
					
					// String
				
						writeString(this.special_price_to_date,dos);
					
					// String
				
						writeString(this.url_key,dos);
					
					// String
				
						writeString(this.meta_title,dos);
					
					// String
				
						writeString(this.meta_keywords,dos);
					
					// String
				
						writeString(this.meta_description,dos);
					
					// String
				
						writeString(this.base_image,dos);
					
					// String
				
						writeString(this.base_image_label,dos);
					
					// String
				
						writeString(this.small_image,dos);
					
					// String
				
						writeString(this.small_image_label,dos);
					
					// String
				
						writeString(this.thumbnail_image,dos);
					
					// String
				
						writeString(this.thumbnail_image_label,dos);
					
					// String
				
						writeString(this.swatch_image,dos);
					
					// String
				
						writeString(this.swatch_image_label,dos);
					
					// String
				
						writeString(this.created_at,dos);
					
					// String
				
						writeString(this.updated_at,dos);
					
					// String
				
						writeString(this.new_from_date,dos);
					
					// String
				
						writeString(this.new_to_date,dos);
					
					// String
				
						writeString(this.display_product_options_in,dos);
					
					// String
				
						writeString(this.map_price,dos);
					
					// String
				
						writeString(this.msrp_price,dos);
					
					// String
				
						writeString(this.map_enabled,dos);
					
					// String
				
						writeString(this.gift_message_available,dos);
					
					// String
				
						writeString(this.custom_design,dos);
					
					// String
				
						writeString(this.custom_design_from,dos);
					
					// String
				
						writeString(this.custom_design_to,dos);
					
					// String
				
						writeString(this.custom_layout_update,dos);
					
					// String
				
						writeString(this.page_layout,dos);
					
					// String
				
						writeString(this.product_options_container,dos);
					
					// String
				
						writeString(this.msrp_display_actual_price_type,dos);
					
					// String
				
						writeString(this.country_of_manufacture,dos);
					
					// String
				
						writeString(this.additional_attributes,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.out_of_stock_qty,dos);
					
					// String
				
						writeString(this.use_config_min_qty,dos);
					
					// String
				
						writeString(this.is_qty_decimal,dos);
					
					// String
				
						writeString(this.allow_backorders,dos);
					
					// String
				
						writeString(this.use_config_backorders,dos);
					
					// String
				
						writeString(this.min_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_min_sale_qty,dos);
					
					// String
				
						writeString(this.max_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_max_sale_qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// String
				
						writeString(this.notify_on_stock_below,dos);
					
					// String
				
						writeString(this.use_config_notify_stock_qty,dos);
					
					// String
				
						writeString(this.manage_stock,dos);
					
					// String
				
						writeString(this.use_config_manage_stock,dos);
					
					// String
				
						writeString(this.use_config_qty_increments,dos);
					
					// String
				
						writeString(this.qty_increments,dos);
					
					// String
				
						writeString(this.use_config_enable_qty_inc,dos);
					
					// String
				
						writeString(this.enable_qty_increments,dos);
					
					// String
				
						writeString(this.is_decimal_divided,dos);
					
					// String
				
						writeString(this.website_id,dos);
					
					// String
				
						writeString(this.deferred_stock_update,dos);
					
					// String
				
						writeString(this.use_config_deferred_stock_update,dos);
					
					// String
				
						writeString(this.related_skus,dos);
					
					// String
				
						writeString(this.related_position,dos);
					
					// String
				
						writeString(this.crosssell_skus,dos);
					
					// String
				
						writeString(this.crosssell_position,dos);
					
					// String
				
						writeString(this.upsell_skus,dos);
					
					// String
				
						writeString(this.upsell_position,dos);
					
					// String
				
						writeString(this.additional_images,dos);
					
					// String
				
						writeString(this.additional_image_labels,dos);
					
					// String
				
						writeString(this.hide_from_product_page,dos);
					
					// String
				
						writeString(this.custom_options,dos);
					
					// String
				
						writeString(this.bundle_price_type,dos);
					
					// String
				
						writeString(this.bundle_sku_type,dos);
					
					// String
				
						writeString(this.bundle_price_view,dos);
					
					// String
				
						writeString(this.bundle_weight_type,dos);
					
					// String
				
						writeString(this.bundle_values,dos);
					
					// String
				
						writeString(this.bundle_shipment_type,dos);
					
					// String
				
						writeString(this.configurable_variations,dos);
					
					// String
				
						writeString(this.configurable_variation_labels,dos);
					
					// String
				
						writeString(this.downloadable_links,dos);
					
					// String
				
						writeString(this.downloadable_samples,dos);
					
					// String
				
						writeString(this.associated_skus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.store_view_code,dos);
					
					// String
				
						writeString(this.attribute_set_code,dos);
					
					// String
				
						writeString(this.product_type,dos);
					
					// String
				
						writeString(this.categories,dos);
					
					// String
				
						writeString(this.product_websites,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.short_description,dos);
					
					// String
				
						writeString(this.weight,dos);
					
					// String
				
						writeString(this.product_online,dos);
					
					// String
				
						writeString(this.tax_class_name,dos);
					
					// String
				
						writeString(this.visibility,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// String
				
						writeString(this.special_price_from_date,dos);
					
					// String
				
						writeString(this.special_price_to_date,dos);
					
					// String
				
						writeString(this.url_key,dos);
					
					// String
				
						writeString(this.meta_title,dos);
					
					// String
				
						writeString(this.meta_keywords,dos);
					
					// String
				
						writeString(this.meta_description,dos);
					
					// String
				
						writeString(this.base_image,dos);
					
					// String
				
						writeString(this.base_image_label,dos);
					
					// String
				
						writeString(this.small_image,dos);
					
					// String
				
						writeString(this.small_image_label,dos);
					
					// String
				
						writeString(this.thumbnail_image,dos);
					
					// String
				
						writeString(this.thumbnail_image_label,dos);
					
					// String
				
						writeString(this.swatch_image,dos);
					
					// String
				
						writeString(this.swatch_image_label,dos);
					
					// String
				
						writeString(this.created_at,dos);
					
					// String
				
						writeString(this.updated_at,dos);
					
					// String
				
						writeString(this.new_from_date,dos);
					
					// String
				
						writeString(this.new_to_date,dos);
					
					// String
				
						writeString(this.display_product_options_in,dos);
					
					// String
				
						writeString(this.map_price,dos);
					
					// String
				
						writeString(this.msrp_price,dos);
					
					// String
				
						writeString(this.map_enabled,dos);
					
					// String
				
						writeString(this.gift_message_available,dos);
					
					// String
				
						writeString(this.custom_design,dos);
					
					// String
				
						writeString(this.custom_design_from,dos);
					
					// String
				
						writeString(this.custom_design_to,dos);
					
					// String
				
						writeString(this.custom_layout_update,dos);
					
					// String
				
						writeString(this.page_layout,dos);
					
					// String
				
						writeString(this.product_options_container,dos);
					
					// String
				
						writeString(this.msrp_display_actual_price_type,dos);
					
					// String
				
						writeString(this.country_of_manufacture,dos);
					
					// String
				
						writeString(this.additional_attributes,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.out_of_stock_qty,dos);
					
					// String
				
						writeString(this.use_config_min_qty,dos);
					
					// String
				
						writeString(this.is_qty_decimal,dos);
					
					// String
				
						writeString(this.allow_backorders,dos);
					
					// String
				
						writeString(this.use_config_backorders,dos);
					
					// String
				
						writeString(this.min_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_min_sale_qty,dos);
					
					// String
				
						writeString(this.max_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_max_sale_qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// String
				
						writeString(this.notify_on_stock_below,dos);
					
					// String
				
						writeString(this.use_config_notify_stock_qty,dos);
					
					// String
				
						writeString(this.manage_stock,dos);
					
					// String
				
						writeString(this.use_config_manage_stock,dos);
					
					// String
				
						writeString(this.use_config_qty_increments,dos);
					
					// String
				
						writeString(this.qty_increments,dos);
					
					// String
				
						writeString(this.use_config_enable_qty_inc,dos);
					
					// String
				
						writeString(this.enable_qty_increments,dos);
					
					// String
				
						writeString(this.is_decimal_divided,dos);
					
					// String
				
						writeString(this.website_id,dos);
					
					// String
				
						writeString(this.deferred_stock_update,dos);
					
					// String
				
						writeString(this.use_config_deferred_stock_update,dos);
					
					// String
				
						writeString(this.related_skus,dos);
					
					// String
				
						writeString(this.related_position,dos);
					
					// String
				
						writeString(this.crosssell_skus,dos);
					
					// String
				
						writeString(this.crosssell_position,dos);
					
					// String
				
						writeString(this.upsell_skus,dos);
					
					// String
				
						writeString(this.upsell_position,dos);
					
					// String
				
						writeString(this.additional_images,dos);
					
					// String
				
						writeString(this.additional_image_labels,dos);
					
					// String
				
						writeString(this.hide_from_product_page,dos);
					
					// String
				
						writeString(this.custom_options,dos);
					
					// String
				
						writeString(this.bundle_price_type,dos);
					
					// String
				
						writeString(this.bundle_sku_type,dos);
					
					// String
				
						writeString(this.bundle_price_view,dos);
					
					// String
				
						writeString(this.bundle_weight_type,dos);
					
					// String
				
						writeString(this.bundle_values,dos);
					
					// String
				
						writeString(this.bundle_shipment_type,dos);
					
					// String
				
						writeString(this.configurable_variations,dos);
					
					// String
				
						writeString(this.configurable_variation_labels,dos);
					
					// String
				
						writeString(this.downloadable_links,dos);
					
					// String
				
						writeString(this.downloadable_samples,dos);
					
					// String
				
						writeString(this.associated_skus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",store_view_code="+store_view_code);
		sb.append(",attribute_set_code="+attribute_set_code);
		sb.append(",product_type="+product_type);
		sb.append(",categories="+categories);
		sb.append(",product_websites="+product_websites);
		sb.append(",name="+name);
		sb.append(",short_description="+short_description);
		sb.append(",weight="+weight);
		sb.append(",product_online="+product_online);
		sb.append(",tax_class_name="+tax_class_name);
		sb.append(",visibility="+visibility);
		sb.append(",price="+price);
		sb.append(",special_price="+special_price);
		sb.append(",special_price_from_date="+special_price_from_date);
		sb.append(",special_price_to_date="+special_price_to_date);
		sb.append(",url_key="+url_key);
		sb.append(",meta_title="+meta_title);
		sb.append(",meta_keywords="+meta_keywords);
		sb.append(",meta_description="+meta_description);
		sb.append(",base_image="+base_image);
		sb.append(",base_image_label="+base_image_label);
		sb.append(",small_image="+small_image);
		sb.append(",small_image_label="+small_image_label);
		sb.append(",thumbnail_image="+thumbnail_image);
		sb.append(",thumbnail_image_label="+thumbnail_image_label);
		sb.append(",swatch_image="+swatch_image);
		sb.append(",swatch_image_label="+swatch_image_label);
		sb.append(",created_at="+created_at);
		sb.append(",updated_at="+updated_at);
		sb.append(",new_from_date="+new_from_date);
		sb.append(",new_to_date="+new_to_date);
		sb.append(",display_product_options_in="+display_product_options_in);
		sb.append(",map_price="+map_price);
		sb.append(",msrp_price="+msrp_price);
		sb.append(",map_enabled="+map_enabled);
		sb.append(",gift_message_available="+gift_message_available);
		sb.append(",custom_design="+custom_design);
		sb.append(",custom_design_from="+custom_design_from);
		sb.append(",custom_design_to="+custom_design_to);
		sb.append(",custom_layout_update="+custom_layout_update);
		sb.append(",page_layout="+page_layout);
		sb.append(",product_options_container="+product_options_container);
		sb.append(",msrp_display_actual_price_type="+msrp_display_actual_price_type);
		sb.append(",country_of_manufacture="+country_of_manufacture);
		sb.append(",additional_attributes="+additional_attributes);
		sb.append(",qty="+qty);
		sb.append(",out_of_stock_qty="+out_of_stock_qty);
		sb.append(",use_config_min_qty="+use_config_min_qty);
		sb.append(",is_qty_decimal="+is_qty_decimal);
		sb.append(",allow_backorders="+allow_backorders);
		sb.append(",use_config_backorders="+use_config_backorders);
		sb.append(",min_cart_qty="+min_cart_qty);
		sb.append(",use_config_min_sale_qty="+use_config_min_sale_qty);
		sb.append(",max_cart_qty="+max_cart_qty);
		sb.append(",use_config_max_sale_qty="+use_config_max_sale_qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",notify_on_stock_below="+notify_on_stock_below);
		sb.append(",use_config_notify_stock_qty="+use_config_notify_stock_qty);
		sb.append(",manage_stock="+manage_stock);
		sb.append(",use_config_manage_stock="+use_config_manage_stock);
		sb.append(",use_config_qty_increments="+use_config_qty_increments);
		sb.append(",qty_increments="+qty_increments);
		sb.append(",use_config_enable_qty_inc="+use_config_enable_qty_inc);
		sb.append(",enable_qty_increments="+enable_qty_increments);
		sb.append(",is_decimal_divided="+is_decimal_divided);
		sb.append(",website_id="+website_id);
		sb.append(",deferred_stock_update="+deferred_stock_update);
		sb.append(",use_config_deferred_stock_update="+use_config_deferred_stock_update);
		sb.append(",related_skus="+related_skus);
		sb.append(",related_position="+related_position);
		sb.append(",crosssell_skus="+crosssell_skus);
		sb.append(",crosssell_position="+crosssell_position);
		sb.append(",upsell_skus="+upsell_skus);
		sb.append(",upsell_position="+upsell_position);
		sb.append(",additional_images="+additional_images);
		sb.append(",additional_image_labels="+additional_image_labels);
		sb.append(",hide_from_product_page="+hide_from_product_page);
		sb.append(",custom_options="+custom_options);
		sb.append(",bundle_price_type="+bundle_price_type);
		sb.append(",bundle_sku_type="+bundle_sku_type);
		sb.append(",bundle_price_view="+bundle_price_view);
		sb.append(",bundle_weight_type="+bundle_weight_type);
		sb.append(",bundle_values="+bundle_values);
		sb.append(",bundle_shipment_type="+bundle_shipment_type);
		sb.append(",configurable_variations="+configurable_variations);
		sb.append(",configurable_variation_labels="+configurable_variation_labels);
		sb.append(",downloadable_links="+downloadable_links);
		sb.append(",downloadable_samples="+downloadable_samples);
		sb.append(",associated_skus="+associated_skus);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();
saidaStruct saida = new saidaStruct();
row25Struct row25 = new row25Struct();
row85Struct row85 = new row85Struct();
Saida10Struct Saida10 = new Saida10Struct();








	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida10");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida10Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida10Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row85");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida10Struct Saida10_tmp = new Saida10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tFilterRow_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_17", false);
		start_Hash.put("tFilterRow_17", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tFilterRow_17 = 0;
		
    int nb_line_tFilterRow_17 = 0;
    int nb_line_ok_tFilterRow_17 = 0;
    int nb_line_reject_tFilterRow_17 = 0;

    class Operator_tFilterRow_17 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_17(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_17 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
saidaStruct saida_tmp = new saidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_2", false);
		start_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_2";
	
	
		int tos_count_tFileInputDelimited_2 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_2 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_2 = 0;
				int footer_tFileInputDelimited_2 = 0;
				int totalLinetFileInputDelimited_2 = 0;
				int limittFileInputDelimited_2 = -1;
				int lastLinetFileInputDelimited_2 = -1;	
				
				char fieldSeparator_tFileInputDelimited_2[] = null;
				
				//support passing value (property: Field Separator) by 'context.fs' or 'globalMap.get("fs")'. 
				if ( ((String)",").length() > 0 ){
					fieldSeparator_tFileInputDelimited_2 = ((String)",").toCharArray();
				}else {			
					throw new IllegalArgumentException("Field Separator must be assigned a char."); 
				}
			
				char rowSeparator_tFileInputDelimited_2[] = null;
			
				//support passing value (property: Row Separator) by 'context.rs' or 'globalMap.get("rs")'. 
				if ( ((String)"\r\n").length() > 0 ){
					rowSeparator_tFileInputDelimited_2 = ((String)"\r\n").toCharArray();
				}else {
					throw new IllegalArgumentException("Row Separator must be assigned a char."); 
				}
			
				Object filename_tFileInputDelimited_2 = /** Start field tFileInputDelimited_2:FILENAME */""+context.Pasta_Rede+"/export_catalog_product.csv"/** End field tFileInputDelimited_2:FILENAME */;		
				com.talend.csv.CSVReader csvReadertFileInputDelimited_2 = null;
	
				try{
					
						String[] rowtFileInputDelimited_2=null;
						int currentLinetFileInputDelimited_2 = 0;
	        			int outputLinetFileInputDelimited_2 = 0;
						try {//TD110 begin
							if(filename_tFileInputDelimited_2 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_2 = 0;
			if(footer_value_tFileInputDelimited_2 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer shouldn't be bigger than 0.");
			}
		
								csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader((java.io.InputStream)filename_tFileInputDelimited_2, fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
							}else{
								csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader(String.valueOf(filename_tFileInputDelimited_2),fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
		        			}
					
					
					csvReadertFileInputDelimited_2.setTrimWhitespace(false);
					if ( (rowSeparator_tFileInputDelimited_2[0] != '\n') && (rowSeparator_tFileInputDelimited_2[0] != '\r') )
	        			csvReadertFileInputDelimited_2.setLineEnd(""+rowSeparator_tFileInputDelimited_2[0]);
						
	        				csvReadertFileInputDelimited_2.setQuoteChar('"');
						
	            				csvReadertFileInputDelimited_2.setEscapeChar(csvReadertFileInputDelimited_2.getQuoteChar());
							      
		
			
						if(footer_tFileInputDelimited_2 > 0){
						for(totalLinetFileInputDelimited_2=0;totalLinetFileInputDelimited_2 < 1; totalLinetFileInputDelimited_2++){
							csvReadertFileInputDelimited_2.readNext();
						}
						csvReadertFileInputDelimited_2.setSkipEmptyRecords(true);
			            while (csvReadertFileInputDelimited_2.readNext()) {
							
								rowtFileInputDelimited_2=csvReadertFileInputDelimited_2.getValues();
								if(!(rowtFileInputDelimited_2.length == 1 && ("\015").equals(rowtFileInputDelimited_2[0]))){//empty line when row separator is '\n'
							
	                
	                		totalLinetFileInputDelimited_2++;
	                
							
								}
							
	                
			            }
	            		int lastLineTemptFileInputDelimited_2 = totalLinetFileInputDelimited_2 - footer_tFileInputDelimited_2   < 0? 0 : totalLinetFileInputDelimited_2 - footer_tFileInputDelimited_2 ;
	            		if(lastLinetFileInputDelimited_2 > 0){
	                		lastLinetFileInputDelimited_2 = lastLinetFileInputDelimited_2 < lastLineTemptFileInputDelimited_2 ? lastLinetFileInputDelimited_2 : lastLineTemptFileInputDelimited_2; 
	            		}else {
	                		lastLinetFileInputDelimited_2 = lastLineTemptFileInputDelimited_2;
	            		}
	         
			          	csvReadertFileInputDelimited_2.close();
				        if(filename_tFileInputDelimited_2 instanceof java.io.InputStream){
				 			csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader((java.io.InputStream)filename_tFileInputDelimited_2, fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
		        		}else{
							csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader(String.valueOf(filename_tFileInputDelimited_2),fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
						}
						csvReadertFileInputDelimited_2.setTrimWhitespace(false);
						if ( (rowSeparator_tFileInputDelimited_2[0] != '\n') && (rowSeparator_tFileInputDelimited_2[0] != '\r') )	
	        				csvReadertFileInputDelimited_2.setLineEnd(""+rowSeparator_tFileInputDelimited_2[0]);
						
							csvReadertFileInputDelimited_2.setQuoteChar('"');
						
	        				csvReadertFileInputDelimited_2.setEscapeChar(csvReadertFileInputDelimited_2.getQuoteChar());
							  
	        		}
	        
			        if(limittFileInputDelimited_2 != 0){
			        	for(currentLinetFileInputDelimited_2=0;currentLinetFileInputDelimited_2 < 1;currentLinetFileInputDelimited_2++){
			        		csvReadertFileInputDelimited_2.readNext();
			        	}
			        }
			        csvReadertFileInputDelimited_2.setSkipEmptyRecords(true);
	        
	    		} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",e.getMessage());
					
						
						System.err.println(e.getMessage());
					
	    		}//TD110 end
	        
			    
	        	while ( limittFileInputDelimited_2 != 0 && csvReadertFileInputDelimited_2!=null && csvReadertFileInputDelimited_2.readNext() ) { 
	        		rowstate_tFileInputDelimited_2.reset();
	        
		        	rowtFileInputDelimited_2=csvReadertFileInputDelimited_2.getValues();
		        	
					
	        			if(rowtFileInputDelimited_2.length == 1 && ("\015").equals(rowtFileInputDelimited_2[0])){//empty line when row separator is '\n'
	        				continue;
	        			}
					
	        	
	        	
	        		currentLinetFileInputDelimited_2++;
	            
		            if(lastLinetFileInputDelimited_2 > -1 && currentLinetFileInputDelimited_2 > lastLinetFileInputDelimited_2) {
		                break;
	    	        }
	        	    outputLinetFileInputDelimited_2++;
	            	if (limittFileInputDelimited_2 > 0 && outputLinetFileInputDelimited_2 > limittFileInputDelimited_2) {
	                	break;
	            	}  
	                                                                      
					
	    							row24 = null;			
								
								boolean whetherReject_tFileInputDelimited_2 = false;
								row24 = new row24Struct();
								try {			
									
				char fieldSeparator_tFileInputDelimited_2_ListType[] = null;
				//support passing value (property: Field Separator) by 'context.fs' or 'globalMap.get("fs")'. 
				if ( ((String)",").length() > 0 ){
					fieldSeparator_tFileInputDelimited_2_ListType = ((String)",").toCharArray();
				}else {			
					throw new IllegalArgumentException("Field Separator must be assigned a char."); 
				}
				if(rowtFileInputDelimited_2.length == 1 && ("\015").equals(rowtFileInputDelimited_2[0])){//empty line when row separator is '\n'
					
							row24.sku = null;
					
							row24.store_view_code = null;
					
							row24.attribute_set_code = null;
					
							row24.product_type = null;
					
							row24.categories = null;
					
							row24.product_websites = null;
					
							row24.name = null;
					
							row24.short_description = null;
					
							row24.weight = null;
					
							row24.product_online = null;
					
							row24.tax_class_name = null;
					
							row24.visibility = null;
					
							row24.price = null;
					
							row24.special_price = null;
					
							row24.special_price_from_date = null;
					
							row24.special_price_to_date = null;
					
							row24.url_key = null;
					
							row24.meta_title = null;
					
							row24.meta_keywords = null;
					
							row24.meta_description = null;
					
							row24.base_image = null;
					
							row24.base_image_label = null;
					
							row24.small_image = null;
					
							row24.small_image_label = null;
					
							row24.thumbnail_image = null;
					
							row24.thumbnail_image_label = null;
					
							row24.swatch_image = null;
					
							row24.swatch_image_label = null;
					
							row24.created_at = null;
					
							row24.updated_at = null;
					
							row24.new_from_date = null;
					
							row24.new_to_date = null;
					
							row24.display_product_options_in = null;
					
							row24.map_price = null;
					
							row24.msrp_price = null;
					
							row24.map_enabled = null;
					
							row24.gift_message_available = null;
					
							row24.custom_design = null;
					
							row24.custom_design_from = null;
					
							row24.custom_design_to = null;
					
							row24.custom_layout_update = null;
					
							row24.page_layout = null;
					
							row24.product_options_container = null;
					
							row24.msrp_display_actual_price_type = null;
					
							row24.country_of_manufacture = null;
					
							row24.additional_attributes = null;
					
							row24.qty = null;
					
							row24.out_of_stock_qty = null;
					
							row24.use_config_min_qty = null;
					
							row24.is_qty_decimal = null;
					
							row24.allow_backorders = null;
					
							row24.use_config_backorders = null;
					
							row24.min_cart_qty = null;
					
							row24.use_config_min_sale_qty = null;
					
							row24.max_cart_qty = null;
					
							row24.use_config_max_sale_qty = null;
					
							row24.is_in_stock = null;
					
							row24.notify_on_stock_below = null;
					
							row24.use_config_notify_stock_qty = null;
					
							row24.manage_stock = null;
					
							row24.use_config_manage_stock = null;
					
							row24.use_config_qty_increments = null;
					
							row24.qty_increments = null;
					
							row24.use_config_enable_qty_inc = null;
					
							row24.enable_qty_increments = null;
					
							row24.is_decimal_divided = null;
					
							row24.website_id = null;
					
							row24.deferred_stock_update = null;
					
							row24.use_config_deferred_stock_update = null;
					
							row24.related_skus = null;
					
							row24.related_position = null;
					
							row24.crosssell_skus = null;
					
							row24.crosssell_position = null;
					
							row24.upsell_skus = null;
					
							row24.upsell_position = null;
					
							row24.additional_images = null;
					
							row24.additional_image_labels = null;
					
							row24.hide_from_product_page = null;
					
							row24.custom_options = null;
					
							row24.bundle_price_type = null;
					
							row24.bundle_sku_type = null;
					
							row24.bundle_price_view = null;
					
							row24.bundle_weight_type = null;
					
							row24.bundle_values = null;
					
							row24.bundle_shipment_type = null;
					
							row24.configurable_variations = null;
					
							row24.configurable_variation_labels = null;
					
							row24.downloadable_links = null;
					
							row24.downloadable_samples = null;
					
							row24.associated_skus = null;
					
				}else{
					
					for(int i_tFileInputDelimited_2=0;i_tFileInputDelimited_2<rowtFileInputDelimited_2.length;i_tFileInputDelimited_2++){
						rowtFileInputDelimited_2[i_tFileInputDelimited_2]=rowtFileInputDelimited_2[i_tFileInputDelimited_2].trim();
					}
					
	                int columnIndexWithD_tFileInputDelimited_2 = 0; //Column Index 
	                
						columnIndexWithD_tFileInputDelimited_2 = 0;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.sku = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.sku = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 1;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.store_view_code = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.store_view_code = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 2;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.attribute_set_code = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.attribute_set_code = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 3;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 4;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.categories = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.categories = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 5;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_websites = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_websites = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 6;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.name = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.name = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 7;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.short_description = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.short_description = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 8;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.weight = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.weight = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 9;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_online = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_online = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 10;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.tax_class_name = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.tax_class_name = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 11;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.visibility = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.visibility = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 12;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 13;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.special_price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.special_price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 14;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.special_price_from_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.special_price_from_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 15;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.special_price_to_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.special_price_to_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 16;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.url_key = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.url_key = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 17;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.meta_title = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.meta_title = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 18;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.meta_keywords = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.meta_keywords = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 19;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.meta_description = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.meta_description = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 20;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.base_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.base_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 21;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.base_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.base_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 22;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.small_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.small_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 23;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.small_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.small_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 24;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.thumbnail_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.thumbnail_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 25;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.thumbnail_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.thumbnail_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 26;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.swatch_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.swatch_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 27;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.swatch_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.swatch_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 28;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.created_at = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.created_at = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 29;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.updated_at = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.updated_at = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 30;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.new_from_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.new_from_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 31;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.new_to_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.new_to_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 32;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.display_product_options_in = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.display_product_options_in = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 33;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.map_price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.map_price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 34;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.msrp_price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.msrp_price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 35;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.map_enabled = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.map_enabled = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 36;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.gift_message_available = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.gift_message_available = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 37;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_design = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_design = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 38;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_design_from = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_design_from = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 39;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_design_to = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_design_to = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 40;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_layout_update = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_layout_update = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 41;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.page_layout = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.page_layout = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 42;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_options_container = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_options_container = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 43;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.msrp_display_actual_price_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.msrp_display_actual_price_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 44;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.country_of_manufacture = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.country_of_manufacture = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 45;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.additional_attributes = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.additional_attributes = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 46;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 47;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.out_of_stock_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.out_of_stock_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 48;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_min_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_min_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 49;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.is_qty_decimal = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.is_qty_decimal = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 50;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.allow_backorders = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.allow_backorders = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 51;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_backorders = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_backorders = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 52;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.min_cart_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.min_cart_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 53;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_min_sale_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_min_sale_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 54;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.max_cart_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.max_cart_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 55;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_max_sale_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_max_sale_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 56;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.is_in_stock = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.is_in_stock = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 57;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.notify_on_stock_below = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.notify_on_stock_below = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 58;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_notify_stock_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_notify_stock_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 59;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.manage_stock = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.manage_stock = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 60;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_manage_stock = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_manage_stock = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 61;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_qty_increments = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_qty_increments = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 62;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.qty_increments = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.qty_increments = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 63;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_enable_qty_inc = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_enable_qty_inc = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 64;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.enable_qty_increments = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.enable_qty_increments = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 65;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.is_decimal_divided = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.is_decimal_divided = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 66;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.website_id = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.website_id = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 67;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.deferred_stock_update = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.deferred_stock_update = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 68;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_deferred_stock_update = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_deferred_stock_update = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 69;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.related_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.related_skus = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 70;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.related_position = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.related_position = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 71;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.crosssell_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.crosssell_skus = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 72;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.crosssell_position = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.crosssell_position = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 73;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.upsell_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.upsell_skus = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 74;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.upsell_position = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.upsell_position = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 75;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.additional_images = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.additional_images = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 76;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.additional_image_labels = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.additional_image_labels = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 77;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.hide_from_product_page = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.hide_from_product_page = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 78;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_options = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_options = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 79;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_price_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_price_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 80;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_sku_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_sku_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 81;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_price_view = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_price_view = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 82;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_weight_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_weight_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 83;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_values = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_values = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 84;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_shipment_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_shipment_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 85;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.configurable_variations = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.configurable_variations = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 86;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.configurable_variation_labels = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.configurable_variation_labels = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 87;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.downloadable_links = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.downloadable_links = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 88;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.downloadable_samples = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.downloadable_samples = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 89;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.associated_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.associated_skus = null;
							
						
						}
						
						
					
				}
				
									
									if(rowstate_tFileInputDelimited_2.getException()!=null) {
										throw rowstate_tFileInputDelimited_2.getException();
									}
									
									
	    						} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",e.getMessage());
							        whetherReject_tFileInputDelimited_2 = true;
        							
                							System.err.println(e.getMessage());
                							row24 = null;
                						
            							globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE", e.getMessage());
            							
	    						}
	
							

 



/**
 * [tFileInputDelimited_2 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 


	tos_count_tFileInputDelimited_2++;

/**
 * [tFileInputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

saida = null;


// # Output table : 'saida'
saida_tmp.sku = row24.sku;
saida_tmp.price = row24.price;
saida_tmp.qty = row24.qty ;
saida_tmp.is_in_stock = row24.is_in_stock;
saida = saida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "saida"
if(saida != null) { 



	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida"
						
						);
					}
					

    //Code generate according to input schema and output schema
row25.sku = saida.sku;
row25.price = saida.price;
row25.qty = saida.qty.replaceAll(".0000", "");
row25.is_in_stock = saida.is_in_stock;


if (saida.sku.length() <= 5) {
row25.validaproduto = 1;
} else{
row25.validaproduto = 0;
}
    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_17 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

          row85 = null;
    Operator_tFilterRow_17 ope_tFilterRow_17 = new Operator_tFilterRow_17("&&");
            ope_tFilterRow_17.matches((row25.validaproduto == null? false : row25.validaproduto.compareTo(ParserUtils.parseTo_Integer(String.valueOf(1))) == 0)
                           , "validaproduto.compareTo(1) == 0 failed");
		 	
    
    if (ope_tFilterRow_17.getMatchFlag()) {
              if(row85 == null){ 
                row85 = new row85Struct();
              }
               row85.sku = row25.sku;
               row85.price = row25.price;
               row85.qty = row25.qty;
               row85.is_in_stock = row25.is_in_stock;
               row85.validaproduto = row25.validaproduto;    
      nb_line_ok_tFilterRow_17++;
    } else {
      nb_line_reject_tFilterRow_17++;
    }

nb_line_tFilterRow_17++;

 


	tos_count_tFilterRow_17++;

/**
 * [tFilterRow_17 main ] stop
 */
	
	/**
	 * [tFilterRow_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	

 



/**
 * [tFilterRow_17 process_data_begin ] stop
 */
// Start of branch "row85"
if(row85 != null) { 



	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row85"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_18 = false;
		boolean mainRowRejected_tMap_18 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

Saida10 = null;


// # Output table : 'Saida10'
Saida10_tmp.sku = row85.sku;
Saida10_tmp.price = row85.price;
Saida10_tmp.qty = row85.qty;
Saida10_tmp.is_in_stock = row85.is_in_stock;
Saida10 = Saida10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "Saida10"
if(Saida10 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida10"
						
						);
					}
					



    
		Saida10Struct oneRow_tHashOutput_2 = new Saida10Struct();
				
					oneRow_tHashOutput_2.sku = Saida10.sku;
					oneRow_tHashOutput_2.price = Saida10.price;
					oneRow_tHashOutput_2.qty = Saida10.qty;
					oneRow_tHashOutput_2.is_in_stock = Saida10.is_in_stock;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "Saida10"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_end ] stop
 */

} // End of branch "row85"




	
	/**
	 * [tFilterRow_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	

 



/**
 * [tFilterRow_17 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */

} // End of branch "saida"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tFileInputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	


				nb_line_tFileInputDelimited_2++;
			}
			
			}finally{
    			if(!(filename_tFileInputDelimited_2 instanceof java.io.InputStream)){
    				if(csvReadertFileInputDelimited_2!=null){
    					csvReadertFileInputDelimited_2.close();
    				}
    			}
    			if(csvReadertFileInputDelimited_2!=null){
    				globalMap.put("tFileInputDelimited_2_NB_LINE",nb_line_tFileInputDelimited_2);
    			}
				
			}
						  

 

ok_Hash.put("tFileInputDelimited_2", true);
end_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());




/**
 * [tFileInputDelimited_2 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tFilterRow_17 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	
    globalMap.put("tFilterRow_17_NB_LINE", nb_line_tFilterRow_17);
    globalMap.put("tFilterRow_17_NB_LINE_OK", nb_line_ok_tFilterRow_17);
    globalMap.put("tFilterRow_17_NB_LINE_REJECT", nb_line_reject_tFilterRow_17);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tFilterRow_17", true);
end_Hash.put("tFilterRow_17", System.currentTimeMillis());




/**
 * [tFilterRow_17 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row85");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tJava_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tFilterRow_17 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	

 



/**
 * [tFilterRow_17 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura Dados do Magento: "+data);

 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return 10;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return 5;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row5Struct other = (row5Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row5Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            
	}

	public void copyKeysDataTo(row5Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT I.ITE_CODITE CD_PRODUTO,\n     (G.ITE_SALDOS - ITE_QTPD_P - ITE_QTPD_V - ITE_QTPD_F - ITE_SALREG - ITE_SALEXT) S"
+"ALDO_DISPONIVEL,\n       I.ITE_SITPRO SITUACAO_PRODUTO\n  FROM CADITE I,\n       ITEGER G\n WHERE G.ITE_CODITE = I.ITE_C"
+"ODITE\n   and G.ITE_CODEMP = '001'";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row5.CD_PRODUTO = null;
							} else {
	                         		
        	row5.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row5.SALDO_DISPONIVEL = null;
							} else {
		                          
            row5.SALDO_DISPONIVEL = rs_tDBInput_2.getInt(2);
            if(rs_tDBInput_2.wasNull()){
                    row5.SALDO_DISPONIVEL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row5.SITUACAO_PRODUTO = null;
							} else {
	                         		
        	row5.SITUACAO_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_4 = new row5Struct();
				
					oneRow_tHashOutput_4.CD_PRODUTO = row5.CD_PRODUTO;
					oneRow_tHashOutput_4.SALDO_DISPONIVEL = row5.SALDO_DISPONIVEL;
					oneRow_tHashOutput_4.SITUACAO_PRODUTO = row5.SITUACAO_PRODUTO;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tJava_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura dos Dados Banco Autcom: "+data);

 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_combo;

				public String getCd_combo () {
					return this.cd_combo;
				}

				public Boolean cd_comboIsNullable(){
				    return true;
				}
				public Boolean cd_comboIsKey(){
				    return true;
				}
				public Integer cd_comboLength(){
				    return 5;
				}
				public Integer cd_comboPrecision(){
				    return null;
				}
				public String cd_comboDefault(){
				
					return null;
				
				}
				public String cd_comboComment(){
				
				    return "";
				
				}
				public String cd_comboPattern(){
				
					return "";
				
				}
				public String cd_comboOriginalDbColumnName(){
				
					return "cd_combo";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 10;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_combo == null) ? 0 : this.cd_combo.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row48Struct other = (row48Struct) obj;
		
						if (this.cd_combo == null) {
							if (other.cd_combo != null)
								return false;
						
						} else if (!this.cd_combo.equals(other.cd_combo))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row48Struct other) {

		other.cd_combo = this.cd_combo;
	            other.cd_produto = this.cd_produto;
	            other.qtde = this.qtde;
	            
	}

	public void copyKeysDataTo(row48Struct other) {

		other.cd_combo = this.cd_combo;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_combo = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.cd_combo = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.qtde = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_combo,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_combo,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_combo="+cd_combo);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",qtde="+String.valueOf(qtde));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_combo, other.cd_combo);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row48Struct row48 = new row48Struct();




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row48Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row48Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select cd_combo, cd_produto, qtde from dw_t_produto_combo";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row48.cd_combo = null;
							} else {
	                         		
        	row48.cd_combo = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row48.cd_produto = null;
							} else {
	                         		
        	row48.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row48.qtde = null;
							} else {
		                          
            row48.qtde = rs_tDBInput_4.getInt(3);
            if(rs_tDBInput_4.wasNull()){
                    row48.qtde = null;
            }
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					



    
		row48Struct oneRow_tHashOutput_5 = new row48Struct();
				
					oneRow_tHashOutput_5.cd_combo = row48.cd_combo;
					oneRow_tHashOutput_5.cd_produto = row48.cd_produto;
					oneRow_tHashOutput_5.qtde = row48.qtde;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tJava_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura dos Dados de Combo de Produtos: "+data);

 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());




/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class row212Struct implements routines.system.IPersistableRow<row212Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public Integer qty;

				public Integer getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public Integer is_in_stock;

				public Integer getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.qty = readInteger(dis);
					
						this.is_in_stock = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// Integer
				
						writeInteger(this.qty,dos);
					
					// Integer
				
						writeInteger(this.is_in_stock,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",qty="+String.valueOf(qty));
		sb.append(",is_in_stock="+String.valueOf(is_in_stock));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row212Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row212Struct row212 = new row212Struct();




	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row212");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row212.sku = "";
    	            	        	            	
    	            		row212.qty = 0;
    	            	        	            	
    	            		row212.is_in_stock = 0;
    	            	        	            	
    	            		row212.SALDO_DISPONIVEL = 0;
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row212"
						
						);
					}
					



    
		row212Struct oneRow_tHashOutput_7 = new row212Struct();
				
					oneRow_tHashOutput_7.sku = row212.sku;
					oneRow_tHashOutput_7.qty = row212.qty;
					oneRow_tHashOutput_7.is_in_stock = row212.is_in_stock;
					oneRow_tHashOutput_7.SALDO_DISPONIVEL = row212.SALDO_DISPONIVEL;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row212");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row82Struct implements routines.system.IPersistableRow<row82Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String PRAZO_ADICIONAL;

				public String getPRAZO_ADICIONAL () {
					return this.PRAZO_ADICIONAL;
				}

				public Boolean PRAZO_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean PRAZO_ADICIONALIsKey(){
				    return false;
				}
				public Integer PRAZO_ADICIONALLength(){
				    return null;
				}
				public Integer PRAZO_ADICIONALPrecision(){
				    return null;
				}
				public String PRAZO_ADICIONALDefault(){
				
					return null;
				
				}
				public String PRAZO_ADICIONALComment(){
				
				    return "";
				
				}
				public String PRAZO_ADICIONALPattern(){
				
					return "";
				
				}
				public String PRAZO_ADICIONALOriginalDbColumnName(){
				
					return "PRAZO_ADICIONAL";
				
				}

				
			    public Integer QTD_ESTOQUE;

				public Integer getQTD_ESTOQUE () {
					return this.QTD_ESTOQUE;
				}

				public Boolean QTD_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean QTD_ESTOQUEIsKey(){
				    return false;
				}
				public Integer QTD_ESTOQUELength(){
				    return null;
				}
				public Integer QTD_ESTOQUEPrecision(){
				    return null;
				}
				public String QTD_ESTOQUEDefault(){
				
					return null;
				
				}
				public String QTD_ESTOQUEComment(){
				
				    return "";
				
				}
				public String QTD_ESTOQUEPattern(){
				
					return "";
				
				}
				public String QTD_ESTOQUEOriginalDbColumnName(){
				
					return "QTD_ESTOQUE";
				
				}

				
			    public String QTD_DISPONIVEL;

				public String getQTD_DISPONIVEL () {
					return this.QTD_DISPONIVEL;
				}

				public Boolean QTD_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean QTD_DISPONIVELIsKey(){
				    return false;
				}
				public Integer QTD_DISPONIVELLength(){
				    return null;
				}
				public Integer QTD_DISPONIVELPrecision(){
				    return null;
				}
				public String QTD_DISPONIVELDefault(){
				
					return null;
				
				}
				public String QTD_DISPONIVELComment(){
				
				    return "";
				
				}
				public String QTD_DISPONIVELPattern(){
				
					return "";
				
				}
				public String QTD_DISPONIVELOriginalDbColumnName(){
				
					return "QTD_DISPONIVEL";
				
				}

				
			    public String QTD_PEDIDO;

				public String getQTD_PEDIDO () {
					return this.QTD_PEDIDO;
				}

				public Boolean QTD_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTD_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTD_PEDIDOLength(){
				    return null;
				}
				public Integer QTD_PEDIDOPrecision(){
				    return null;
				}
				public String QTD_PEDIDODefault(){
				
					return null;
				
				}
				public String QTD_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTD_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTD_PEDIDOOriginalDbColumnName(){
				
					return "QTD_PEDIDO";
				
				}

				
			    public String LOCALIZACAO_ESTOQUE;

				public String getLOCALIZACAO_ESTOQUE () {
					return this.LOCALIZACAO_ESTOQUE;
				}

				public Boolean LOCALIZACAO_ESTOQUEIsNullable(){
				    return true;
				}
				public Boolean LOCALIZACAO_ESTOQUEIsKey(){
				    return false;
				}
				public Integer LOCALIZACAO_ESTOQUELength(){
				    return null;
				}
				public Integer LOCALIZACAO_ESTOQUEPrecision(){
				    return null;
				}
				public String LOCALIZACAO_ESTOQUEDefault(){
				
					return null;
				
				}
				public String LOCALIZACAO_ESTOQUEComment(){
				
				    return "";
				
				}
				public String LOCALIZACAO_ESTOQUEPattern(){
				
					return "";
				
				}
				public String LOCALIZACAO_ESTOQUEOriginalDbColumnName(){
				
					return "LOCALIZACAO_ESTOQUE";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double tabela3_preco_venda;

				public Double getTabela3_preco_venda () {
					return this.tabela3_preco_venda;
				}

				public Boolean tabela3_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela3_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela3_preco_vendaLength(){
				    return null;
				}
				public Integer tabela3_preco_vendaPrecision(){
				    return null;
				}
				public String tabela3_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela3_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela3_preco_vendaPattern(){
				
					return "dd-MM-yyyy HH:mm:ss";
				
				}
				public String tabela3_preco_vendaOriginalDbColumnName(){
				
					return "tabela3_preco_venda";
				
				}

				
			    public Double tabela4_preco_venda;

				public Double getTabela4_preco_venda () {
					return this.tabela4_preco_venda;
				}

				public Boolean tabela4_preco_vendaIsNullable(){
				    return true;
				}
				public Boolean tabela4_preco_vendaIsKey(){
				    return false;
				}
				public Integer tabela4_preco_vendaLength(){
				    return null;
				}
				public Integer tabela4_preco_vendaPrecision(){
				    return null;
				}
				public String tabela4_preco_vendaDefault(){
				
					return null;
				
				}
				public String tabela4_preco_vendaComment(){
				
				    return "";
				
				}
				public String tabela4_preco_vendaPattern(){
				
					return "";
				
				}
				public String tabela4_preco_vendaOriginalDbColumnName(){
				
					return "tabela4_preco_venda";
				
				}

				
			    public String situacao_produto;

				public String getSituacao_produto () {
					return this.situacao_produto;
				}

				public Boolean situacao_produtoIsNullable(){
				    return true;
				}
				public Boolean situacao_produtoIsKey(){
				    return false;
				}
				public Integer situacao_produtoLength(){
				    return null;
				}
				public Integer situacao_produtoPrecision(){
				    return null;
				}
				public String situacao_produtoDefault(){
				
					return null;
				
				}
				public String situacao_produtoComment(){
				
				    return "";
				
				}
				public String situacao_produtoPattern(){
				
					return "";
				
				}
				public String situacao_produtoOriginalDbColumnName(){
				
					return "situacao_produto";
				
				}

				
			    public Integer validaestoque;

				public Integer getValidaestoque () {
					return this.validaestoque;
				}

				public Boolean validaestoqueIsNullable(){
				    return true;
				}
				public Boolean validaestoqueIsKey(){
				    return false;
				}
				public Integer validaestoqueLength(){
				    return null;
				}
				public Integer validaestoquePrecision(){
				    return null;
				}
				public String validaestoqueDefault(){
				
					return null;
				
				}
				public String validaestoqueComment(){
				
				    return "";
				
				}
				public String validaestoquePattern(){
				
					return "";
				
				}
				public String validaestoqueOriginalDbColumnName(){
				
					return "validaestoque";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.PRAZO_ADICIONAL = readString(dis);
					
						this.QTD_ESTOQUE = readInteger(dis);
					
					this.QTD_DISPONIVEL = readString(dis);
					
					this.QTD_PEDIDO = readString(dis);
					
					this.LOCALIZACAO_ESTOQUE = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela3_preco_venda = null;
           				} else {
           			    	this.tabela3_preco_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tabela4_preco_venda = null;
           				} else {
           			    	this.tabela4_preco_venda = dis.readDouble();
           				}
					
					this.situacao_produto = readString(dis);
					
						this.validaestoque = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.PRAZO_ADICIONAL,dos);
					
					// Integer
				
						writeInteger(this.QTD_ESTOQUE,dos);
					
					// String
				
						writeString(this.QTD_DISPONIVEL,dos);
					
					// String
				
						writeString(this.QTD_PEDIDO,dos);
					
					// String
				
						writeString(this.LOCALIZACAO_ESTOQUE,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.tabela3_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela3_preco_venda);
		            	}
					
					// Double
				
						if(this.tabela4_preco_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tabela4_preco_venda);
		            	}
					
					// String
				
						writeString(this.situacao_produto,dos);
					
					// Integer
				
						writeInteger(this.validaestoque,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",PRAZO_ADICIONAL="+PRAZO_ADICIONAL);
		sb.append(",QTD_ESTOQUE="+String.valueOf(QTD_ESTOQUE));
		sb.append(",QTD_DISPONIVEL="+QTD_DISPONIVEL);
		sb.append(",QTD_PEDIDO="+QTD_PEDIDO);
		sb.append(",LOCALIZACAO_ESTOQUE="+LOCALIZACAO_ESTOQUE);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",tabela3_preco_venda="+String.valueOf(tabela3_preco_venda));
		sb.append(",tabela4_preco_venda="+String.valueOf(tabela4_preco_venda));
		sb.append(",situacao_produto="+situacao_produto);
		sb.append(",validaestoque="+String.valueOf(validaestoque));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row82Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row82Struct row82 = new row82Struct();




	
	/**
	 * [tHashOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_11", false);
		start_Hash.put("tHashOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row82");
					}
				
		int tos_count_tHashOutput_11 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashOutput_11 = null;
		String hashKey_tHashOutput_11 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_11";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_11)){
			    if(mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11) == null){
	      		    mf_tHashOutput_11.getResourceMap().put(hashKey_tHashOutput_11, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }else{
			    	tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }
			}
        int nb_line_tHashOutput_11 = 0;

 



/**
 * [tHashOutput_11 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row82.sku = "";
    	            	        	            	
    	            		row82.CUSTO = "";
    	            	        	            	
    	            		row82.PRAZO_ADICIONAL = "";
    	            	        	            	
    	            		row82.QTD_ESTOQUE = 0;
    	            	        	            	
    	            		row82.QTD_DISPONIVEL = "";
    	            	        	            	
    	            		row82.QTD_PEDIDO = "";
    	            	        	            	
    	            		row82.LOCALIZACAO_ESTOQUE = "";
    	            	        	            	
    	            		row82.SALDO_DISPONIVEL = 0;
    	            	        	            	
    	            		row82.tabela3_preco_venda = 0.00;
    	            	        	            	
    	            		row82.tabela4_preco_venda = 0.00;
    	            	        	            	
    	            		row82.situacao_produto = "";
    	            	        	            	
    	            		row82.validaestoque = 0;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_11 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row82"
						
						);
					}
					



    
		row82Struct oneRow_tHashOutput_11 = new row82Struct();
				
					oneRow_tHashOutput_11.sku = row82.sku;
					oneRow_tHashOutput_11.CUSTO = row82.CUSTO;
					oneRow_tHashOutput_11.PRAZO_ADICIONAL = row82.PRAZO_ADICIONAL;
					oneRow_tHashOutput_11.QTD_ESTOQUE = row82.QTD_ESTOQUE;
					oneRow_tHashOutput_11.QTD_DISPONIVEL = row82.QTD_DISPONIVEL;
					oneRow_tHashOutput_11.QTD_PEDIDO = row82.QTD_PEDIDO;
					oneRow_tHashOutput_11.LOCALIZACAO_ESTOQUE = row82.LOCALIZACAO_ESTOQUE;
					oneRow_tHashOutput_11.SALDO_DISPONIVEL = row82.SALDO_DISPONIVEL;
					oneRow_tHashOutput_11.tabela3_preco_venda = row82.tabela3_preco_venda;
					oneRow_tHashOutput_11.tabela4_preco_venda = row82.tabela4_preco_venda;
					oneRow_tHashOutput_11.situacao_produto = row82.situacao_produto;
					oneRow_tHashOutput_11.validaestoque = row82.validaestoque;
		
        tHashFile_tHashOutput_11.put(oneRow_tHashOutput_11);
        nb_line_tHashOutput_11 ++;

 


	tos_count_tHashOutput_11++;

/**
 * [tHashOutput_11 main ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_11 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
globalMap.put("tHashOutput_11_NB_LINE", nb_line_tHashOutput_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row82");
			  	}
			  	
 

ok_Hash.put("tHashOutput_11", true);
end_Hash.put("tHashOutput_11", System.currentTimeMillis());




/**
 * [tHashOutput_11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfanymarket_0Struct implements routines.system.IPersistableRow<copyOfanymarket_0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return null;
				}
				public Integer PRECO_DEPrecision(){
				    return null;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return null;
				}
				public Integer PRECO_PORPrecision(){
				    return null;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfanymarket_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public Double PRECO_DE;

				public Double getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return null;
				}
				public Integer PRECO_DEPrecision(){
				    return null;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public Double PRECO_POR;

				public Double getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return null;
				}
				public Integer PRECO_PORPrecision(){
				    return null;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_DE = null;
           				} else {
           			    	this.PRECO_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRECO_POR = null;
           				} else {
           			    	this.PRECO_POR = dis.readDouble();
           				}
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// Double
				
						if(this.PRECO_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_DE);
		            	}
					
					// Double
				
						if(this.PRECO_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PRECO_POR);
		            	}
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+String.valueOf(PRECO_DE));
		sb.append(",PRECO_POR="+String.valueOf(PRECO_POR));
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public String PRECO_DE;

				public String getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return null;
				}
				public Integer PRECO_DEPrecision(){
				    return null;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public String PRECO_POR;

				public String getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return null;
				}
				public Integer PRECO_PORPrecision(){
				    return null;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
					this.PRECO_DE = readString(dis);
					
					this.PRECO_POR = readString(dis);
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
					this.PRECO_DE = readString(dis);
					
					this.PRECO_POR = readString(dis);
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// String
				
						writeString(this.PRECO_DE,dos);
					
					// String
				
						writeString(this.PRECO_POR,dos);
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// String
				
						writeString(this.PRECO_DE,dos);
					
					// String
				
						writeString(this.PRECO_POR,dos);
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+PRECO_DE);
		sb.append(",PRECO_POR="+PRECO_POR);
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[0];

	
			    public String SKU_INTERNO;

				public String getSKU_INTERNO () {
					return this.SKU_INTERNO;
				}

				public Boolean SKU_INTERNOIsNullable(){
				    return true;
				}
				public Boolean SKU_INTERNOIsKey(){
				    return false;
				}
				public Integer SKU_INTERNOLength(){
				    return null;
				}
				public Integer SKU_INTERNOPrecision(){
				    return null;
				}
				public String SKU_INTERNODefault(){
				
					return null;
				
				}
				public String SKU_INTERNOComment(){
				
				    return "";
				
				}
				public String SKU_INTERNOPattern(){
				
					return "";
				
				}
				public String SKU_INTERNOOriginalDbColumnName(){
				
					return "SKU_INTERNO";
				
				}

				
			    public String SKU_MARKETPLACE;

				public String getSKU_MARKETPLACE () {
					return this.SKU_MARKETPLACE;
				}

				public Boolean SKU_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean SKU_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer SKU_MARKETPLACELength(){
				    return null;
				}
				public Integer SKU_MARKETPLACEPrecision(){
				    return null;
				}
				public String SKU_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String SKU_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String SKU_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String SKU_MARKETPLACEOriginalDbColumnName(){
				
					return "SKU_MARKETPLACE";
				
				}

				
			    public String COD_MARKETPLACE;

				public String getCOD_MARKETPLACE () {
					return this.COD_MARKETPLACE;
				}

				public Boolean COD_MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean COD_MARKETPLACEIsKey(){
				    return false;
				}
				public Integer COD_MARKETPLACELength(){
				    return null;
				}
				public Integer COD_MARKETPLACEPrecision(){
				    return null;
				}
				public String COD_MARKETPLACEDefault(){
				
					return null;
				
				}
				public String COD_MARKETPLACEComment(){
				
				    return "";
				
				}
				public String COD_MARKETPLACEPattern(){
				
					return "";
				
				}
				public String COD_MARKETPLACEOriginalDbColumnName(){
				
					return "COD_MARKETPLACE";
				
				}

				
			    public String PRECO_DE;

				public String getPRECO_DE () {
					return this.PRECO_DE;
				}

				public Boolean PRECO_DEIsNullable(){
				    return true;
				}
				public Boolean PRECO_DEIsKey(){
				    return false;
				}
				public Integer PRECO_DELength(){
				    return null;
				}
				public Integer PRECO_DEPrecision(){
				    return null;
				}
				public String PRECO_DEDefault(){
				
					return null;
				
				}
				public String PRECO_DEComment(){
				
				    return "";
				
				}
				public String PRECO_DEPattern(){
				
					return "";
				
				}
				public String PRECO_DEOriginalDbColumnName(){
				
					return "PRECO_DE";
				
				}

				
			    public String PRECO_POR;

				public String getPRECO_POR () {
					return this.PRECO_POR;
				}

				public Boolean PRECO_PORIsNullable(){
				    return true;
				}
				public Boolean PRECO_PORIsKey(){
				    return false;
				}
				public Integer PRECO_PORLength(){
				    return null;
				}
				public Integer PRECO_PORPrecision(){
				    return null;
				}
				public String PRECO_PORDefault(){
				
					return null;
				
				}
				public String PRECO_PORComment(){
				
				    return "";
				
				}
				public String PRECO_PORPattern(){
				
					return "";
				
				}
				public String PRECO_POROriginalDbColumnName(){
				
					return "PRECO_POR";
				
				}

				
			    public String MARKUP_ADICIONAL;

				public String getMARKUP_ADICIONAL () {
					return this.MARKUP_ADICIONAL;
				}

				public Boolean MARKUP_ADICIONALIsNullable(){
				    return true;
				}
				public Boolean MARKUP_ADICIONALIsKey(){
				    return false;
				}
				public Integer MARKUP_ADICIONALLength(){
				    return null;
				}
				public Integer MARKUP_ADICIONALPrecision(){
				    return null;
				}
				public String MARKUP_ADICIONALDefault(){
				
					return null;
				
				}
				public String MARKUP_ADICIONALComment(){
				
				    return "";
				
				}
				public String MARKUP_ADICIONALPattern(){
				
					return "";
				
				}
				public String MARKUP_ADICIONALOriginalDbColumnName(){
				
					return "MARKUP_ADICIONAL";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return null;
				}
				public Integer CUSTOPrecision(){
				    return null;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DESCONTO_1E2;

				public String getDESCONTO_1E2 () {
					return this.DESCONTO_1E2;
				}

				public Boolean DESCONTO_1E2IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_1E2IsKey(){
				    return false;
				}
				public Integer DESCONTO_1E2Length(){
				    return null;
				}
				public Integer DESCONTO_1E2Precision(){
				    return null;
				}
				public String DESCONTO_1E2Default(){
				
					return null;
				
				}
				public String DESCONTO_1E2Comment(){
				
				    return "";
				
				}
				public String DESCONTO_1E2Pattern(){
				
					return "";
				
				}
				public String DESCONTO_1E2OriginalDbColumnName(){
				
					return "DESCONTO_1E2";
				
				}

				
			    public String DESCONTO_3A6;

				public String getDESCONTO_3A6 () {
					return this.DESCONTO_3A6;
				}

				public Boolean DESCONTO_3A6IsNullable(){
				    return true;
				}
				public Boolean DESCONTO_3A6IsKey(){
				    return false;
				}
				public Integer DESCONTO_3A6Length(){
				    return null;
				}
				public Integer DESCONTO_3A6Precision(){
				    return null;
				}
				public String DESCONTO_3A6Default(){
				
					return null;
				
				}
				public String DESCONTO_3A6Comment(){
				
				    return "";
				
				}
				public String DESCONTO_3A6Pattern(){
				
					return "";
				
				}
				public String DESCONTO_3A6OriginalDbColumnName(){
				
					return "DESCONTO_3A6";
				
				}

				
			    public String CALCULO_PRECO;

				public String getCALCULO_PRECO () {
					return this.CALCULO_PRECO;
				}

				public Boolean CALCULO_PRECOIsNullable(){
				    return true;
				}
				public Boolean CALCULO_PRECOIsKey(){
				    return false;
				}
				public Integer CALCULO_PRECOLength(){
				    return null;
				}
				public Integer CALCULO_PRECOPrecision(){
				    return null;
				}
				public String CALCULO_PRECODefault(){
				
					return null;
				
				}
				public String CALCULO_PRECOComment(){
				
				    return "";
				
				}
				public String CALCULO_PRECOPattern(){
				
					return "";
				
				}
				public String CALCULO_PRECOOriginalDbColumnName(){
				
					return "CALCULO_PRECO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public String NOME_CONTA;

				public String getNOME_CONTA () {
					return this.NOME_CONTA;
				}

				public Boolean NOME_CONTAIsNullable(){
				    return true;
				}
				public Boolean NOME_CONTAIsKey(){
				    return false;
				}
				public Integer NOME_CONTALength(){
				    return null;
				}
				public Integer NOME_CONTAPrecision(){
				    return null;
				}
				public String NOME_CONTADefault(){
				
					return null;
				
				}
				public String NOME_CONTAComment(){
				
				    return "";
				
				}
				public String NOME_CONTAPattern(){
				
					return "";
				
				}
				public String NOME_CONTAOriginalDbColumnName(){
				
					return "NOME_CONTA";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String LOJA_OFICIAL;

				public String getLOJA_OFICIAL () {
					return this.LOJA_OFICIAL;
				}

				public Boolean LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer LOJA_OFICIALLength(){
				    return null;
				}
				public Integer LOJA_OFICIALPrecision(){
				    return null;
				}
				public String LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String LOJA_OFICIALOriginalDbColumnName(){
				
					return "LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public String FRETE_GRATIS;

				public String getFRETE_GRATIS () {
					return this.FRETE_GRATIS;
				}

				public Boolean FRETE_GRATISIsNullable(){
				    return true;
				}
				public Boolean FRETE_GRATISIsKey(){
				    return false;
				}
				public Integer FRETE_GRATISLength(){
				    return null;
				}
				public Integer FRETE_GRATISPrecision(){
				    return null;
				}
				public String FRETE_GRATISDefault(){
				
					return null;
				
				}
				public String FRETE_GRATISComment(){
				
				    return "";
				
				}
				public String FRETE_GRATISPattern(){
				
					return "";
				
				}
				public String FRETE_GRATISOriginalDbColumnName(){
				
					return "FRETE_GRATIS";
				
				}

				
			    public String FORMA_ENVIO;

				public String getFORMA_ENVIO () {
					return this.FORMA_ENVIO;
				}

				public Boolean FORMA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean FORMA_ENVIOIsKey(){
				    return false;
				}
				public Integer FORMA_ENVIOLength(){
				    return null;
				}
				public Integer FORMA_ENVIOPrecision(){
				    return null;
				}
				public String FORMA_ENVIODefault(){
				
					return null;
				
				}
				public String FORMA_ENVIOComment(){
				
				    return "";
				
				}
				public String FORMA_ENVIOPattern(){
				
					return "";
				
				}
				public String FORMA_ENVIOOriginalDbColumnName(){
				
					return "FORMA_ENVIO";
				
				}

				
			    public String VARIACAO_PRINCIPAL;

				public String getVARIACAO_PRINCIPAL () {
					return this.VARIACAO_PRINCIPAL;
				}

				public Boolean VARIACAO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer VARIACAO_PRINCIPALLength(){
				    return null;
				}
				public Integer VARIACAO_PRINCIPALPrecision(){
				    return null;
				}
				public String VARIACAO_PRINCIPALDefault(){
				
					return null;
				
				}
				public String VARIACAO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String VARIACAO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String VARIACAO_PRINCIPALOriginalDbColumnName(){
				
					return "VARIACAO_PRINCIPAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_preco_estoque, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
					this.PRECO_DE = readString(dis);
					
					this.PRECO_POR = readString(dis);
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_preco_estoque) {

        	try {

        		int length = 0;
		
					this.SKU_INTERNO = readString(dis);
					
					this.SKU_MARKETPLACE = readString(dis);
					
					this.COD_MARKETPLACE = readString(dis);
					
					this.PRECO_DE = readString(dis);
					
					this.PRECO_POR = readString(dis);
					
					this.MARKUP_ADICIONAL = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.DESCONTO_1E2 = readString(dis);
					
					this.DESCONTO_3A6 = readString(dis);
					
					this.CALCULO_PRECO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
					this.NOME_CONTA = readString(dis);
					
					this.TITULO_PRODUTO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
					this.FRETE_GRATIS = readString(dis);
					
					this.FORMA_ENVIO = readString(dis);
					
					this.VARIACAO_PRINCIPAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// String
				
						writeString(this.PRECO_DE,dos);
					
					// String
				
						writeString(this.PRECO_POR,dos);
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_INTERNO,dos);
					
					// String
				
						writeString(this.SKU_MARKETPLACE,dos);
					
					// String
				
						writeString(this.COD_MARKETPLACE,dos);
					
					// String
				
						writeString(this.PRECO_DE,dos);
					
					// String
				
						writeString(this.PRECO_POR,dos);
					
					// String
				
						writeString(this.MARKUP_ADICIONAL,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.DESCONTO_1E2,dos);
					
					// String
				
						writeString(this.DESCONTO_3A6,dos);
					
					// String
				
						writeString(this.CALCULO_PRECO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// String
				
						writeString(this.NOME_CONTA,dos);
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// String
				
						writeString(this.FRETE_GRATIS,dos);
					
					// String
				
						writeString(this.FORMA_ENVIO,dos);
					
					// String
				
						writeString(this.VARIACAO_PRINCIPAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_INTERNO="+SKU_INTERNO);
		sb.append(",SKU_MARKETPLACE="+SKU_MARKETPLACE);
		sb.append(",COD_MARKETPLACE="+COD_MARKETPLACE);
		sb.append(",PRECO_DE="+PRECO_DE);
		sb.append(",PRECO_POR="+PRECO_POR);
		sb.append(",MARKUP_ADICIONAL="+MARKUP_ADICIONAL);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",DESCONTO_1E2="+DESCONTO_1E2);
		sb.append(",DESCONTO_3A6="+DESCONTO_3A6);
		sb.append(",CALCULO_PRECO="+CALCULO_PRECO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",NOME_CONTA="+NOME_CONTA);
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",LOJA_OFICIAL="+LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",FRETE_GRATIS="+FRETE_GRATIS);
		sb.append(",FORMA_ENVIO="+FORMA_ENVIO);
		sb.append(",VARIACAO_PRINCIPAL="+VARIACAO_PRINCIPAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileList_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileList_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();
row11Struct row11 = new row11Struct();
row38Struct row38 = new row38Struct();
copyOfanymarket_0Struct copyOfanymarket_0 = new copyOfanymarket_0Struct();



	
	/**
	 * [tFileList_1 begin ] start
	 */

				
			int NB_ITERATE_tFileInputExcel_3 = 0; //for statistics
			

	
		
		ok_Hash.put("tFileList_1", false);
		start_Hash.put("tFileList_1", System.currentTimeMillis());
		
	
	currentComponent="tFileList_1";
	
	
		int tos_count_tFileList_1 = 0;
		
	
 
     
    
  String directory_tFileList_1 = ""+context.Pasta_Rede+"/TODOS_MARKETPLACES";
  final java.util.List<String> maskList_tFileList_1 = new java.util.ArrayList<String>();
  final java.util.List<java.util.regex.Pattern> patternList_tFileList_1 = new java.util.ArrayList<java.util.regex.Pattern>(); 
    maskList_tFileList_1.add("*.xlsx");  
  for (final String filemask_tFileList_1 : maskList_tFileList_1) {
	String filemask_compile_tFileList_1 = filemask_tFileList_1;
	
		filemask_compile_tFileList_1 = org.apache.oro.text.GlobCompiler.globToPerl5(filemask_tFileList_1.toCharArray(), org.apache.oro.text.GlobCompiler.DEFAULT_MASK);
	
		java.util.regex.Pattern fileNamePattern_tFileList_1 = java.util.regex.Pattern.compile(filemask_compile_tFileList_1);
	patternList_tFileList_1.add(fileNamePattern_tFileList_1);
  }
  int NB_FILEtFileList_1 = 0;

  final boolean case_sensitive_tFileList_1 = true;
	
	
	
    final java.util.List<java.io.File> list_tFileList_1 = new java.util.ArrayList<java.io.File>();
    final java.util.Set<String> filePath_tFileList_1 = new java.util.HashSet<String>();
	java.io.File file_tFileList_1 = new java.io.File(directory_tFileList_1);
     
		file_tFileList_1.listFiles(new java.io.FilenameFilter() {
			public boolean accept(java.io.File dir, String name) {
				java.io.File file = new java.io.File(dir, name);
                if (!file.isDirectory()) {
                	
    	String fileName_tFileList_1 = file.getName();
		for (final java.util.regex.Pattern fileNamePattern_tFileList_1 : patternList_tFileList_1) {
          	if (fileNamePattern_tFileList_1.matcher(fileName_tFileList_1).matches()){
					if(!filePath_tFileList_1.contains(file.getAbsolutePath())) {
			          list_tFileList_1.add(file);
			          filePath_tFileList_1.add(file.getAbsolutePath());
			        }
			}
		}
                }
              return true;
            }
          }
      ); 
      java.util.Collections.sort(list_tFileList_1);
    
    for (int i_tFileList_1 = 0; i_tFileList_1 < list_tFileList_1.size(); i_tFileList_1++){
      java.io.File files_tFileList_1 = list_tFileList_1.get(i_tFileList_1);
      String fileName_tFileList_1 = files_tFileList_1.getName();
      
      String currentFileName_tFileList_1 = files_tFileList_1.getName(); 
      String currentFilePath_tFileList_1 = files_tFileList_1.getAbsolutePath();
      String currentFileDirectory_tFileList_1 = files_tFileList_1.getParent();
      String currentFileExtension_tFileList_1 = null;
      
      if (files_tFileList_1.getName().contains(".") && files_tFileList_1.isFile()){
        currentFileExtension_tFileList_1 = files_tFileList_1.getName().substring(files_tFileList_1.getName().lastIndexOf(".") + 1);
      } else{
        currentFileExtension_tFileList_1 = "";
      }
      
      NB_FILEtFileList_1 ++;
      globalMap.put("tFileList_1_CURRENT_FILE", currentFileName_tFileList_1);
      globalMap.put("tFileList_1_CURRENT_FILEPATH", currentFilePath_tFileList_1);
      globalMap.put("tFileList_1_CURRENT_FILEDIRECTORY", currentFileDirectory_tFileList_1);
      globalMap.put("tFileList_1_CURRENT_FILEEXTENSION", currentFileExtension_tFileList_1);
      globalMap.put("tFileList_1_NB_FILE", NB_FILEtFileList_1);
      
 



/**
 * [tFileList_1 begin ] stop
 */
	
	/**
	 * [tFileList_1 main ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 


	tos_count_tFileList_1++;

/**
 * [tFileList_1 main ] stop
 */
	
	/**
	 * [tFileList_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 



/**
 * [tFileList_1 process_data_begin ] stop
 */
	NB_ITERATE_tFileInputExcel_3++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("copyOfanymarket_0", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row38", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row35", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tFileInputExcel_3);
					//Thread.sleep(1000);
				}				
			





	
	/**
	 * [tHashOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_15", false);
		start_Hash.put("tHashOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfanymarket_0");
					}
				
		int tos_count_tHashOutput_15 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfanymarket_0Struct> tHashFile_tHashOutput_15 = null;
		String hashKey_tHashOutput_15 = "tHashFile_relatorio_preco_estoque_" + pid + "_tHashOutput_15";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_15)){
			    if(mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15) == null){
	      		    mf_tHashOutput_15.getResourceMap().put(hashKey_tHashOutput_15, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfanymarket_0Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }else{
			    	tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }
			}
        int nb_line_tHashOutput_15 = 0;

 



/**
 * [tHashOutput_15 begin ] stop
 */



	
	/**
	 * [tMap_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_28", false);
		start_Hash.put("tMap_28", System.currentTimeMillis());
		
	
	currentComponent="tMap_28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tMap_28 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_28__Struct  {
}
Var__tMap_28__Struct Var__tMap_28 = new Var__tMap_28__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfanymarket_0Struct copyOfanymarket_0_tmp = new copyOfanymarket_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_28 begin ] stop
 */



	
	/**
	 * [tConvertType_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_8", false);
		start_Hash.put("tConvertType_8", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tConvertType_8 = 0;
		
	int nb_line_tConvertType_8 = 0;  
 



/**
 * [tConvertType_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_3", false);
		start_Hash.put("tFileInputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_3";
	
	
		int tos_count_tFileInputExcel_3 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_3 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:u8IM6fGY3bpz5P1tI6k9CZD9K8hQs5Kf/6TfLw==");
        String password_tFileInputExcel_3 = decryptedPassword_tFileInputExcel_3;
        if (password_tFileInputExcel_3.isEmpty()){
            password_tFileInputExcel_3 = null;
        }
		Object source_tFileInputExcel_3 = ""+context.Pasta_Rede+"/TODOS_MARKETPLACES/"+((String)globalMap.get("tFileList_1_CURRENT_FILE"));
		com.talend.excel.xssf.event.ExcelReader excelReader_tFileInputExcel_3 = null;

		
		if(source_tFileInputExcel_3 instanceof java.io.InputStream || source_tFileInputExcel_3 instanceof String){
			excelReader_tFileInputExcel_3 = new com.talend.excel.xssf.event.ExcelReader();
			excelReader_tFileInputExcel_3.setIncludePhoneticRuns(true);
		}else{
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}

		try {
		excelReader_tFileInputExcel_3.addSheetName("Dados", false);
		int start_column_tFileInputExcel_3 = 1-1;
		int end_column_tFileInputExcel_3 = -1;
		if(start_column_tFileInputExcel_3 >=0) {//follow start column
			
				end_column_tFileInputExcel_3 = start_column_tFileInputExcel_3 + 19 - 1;
			
		} else if(end_column_tFileInputExcel_3 >= 0) {//follow end column
			start_column_tFileInputExcel_3 = end_column_tFileInputExcel_3 - 19 + 1;
		}

		if(end_column_tFileInputExcel_3<0 || start_column_tFileInputExcel_3<0) {
			throw new RuntimeException("Error start column and end column.");
		}
		int actual_end_column_tFileInputExcel_3 = end_column_tFileInputExcel_3 ;

		int header_tFileInputExcel_3 = 1;
		int limit_tFileInputExcel_3 = -1;

		int nb_line_tFileInputExcel_3 = 0;

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_3 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_3 = df_tFileInputExcel_3.getDecimalFormatSymbols().getDecimalSeparator();


		if(source_tFileInputExcel_3 instanceof String){
			excelReader_tFileInputExcel_3.parse((String)source_tFileInputExcel_3,"ISO-8859-15", password_tFileInputExcel_3);
		} else if(source_tFileInputExcel_3 instanceof java.io.InputStream) {
			excelReader_tFileInputExcel_3.parse((java.io.InputStream)source_tFileInputExcel_3,"ISO-8859-15", password_tFileInputExcel_3);
		}
		


		while((header_tFileInputExcel_3--)>0 && excelReader_tFileInputExcel_3.hasNext()) {//skip the header
			excelReader_tFileInputExcel_3.next();
		}

		
		while(excelReader_tFileInputExcel_3.hasNext()) {
			int emptyColumnCount_tFileInputExcel_3 = 0;

			if (limit_tFileInputExcel_3 != -1 && nb_line_tFileInputExcel_3 >= limit_tFileInputExcel_3) {
				excelReader_tFileInputExcel_3.stopRead();
        		break;
        	}

        	java.util.List<String> row_tFileInputExcel_3 = excelReader_tFileInputExcel_3.next();
		row35 = null;
					int tempRowLength_tFileInputExcel_3 = 19;
				
				int columnIndex_tFileInputExcel_3 = 0;
			
					
		String[] temp_row_tFileInputExcel_3 = new String[tempRowLength_tFileInputExcel_3];
		
		for(int i_tFileInputExcel_3=0;i_tFileInputExcel_3 < tempRowLength_tFileInputExcel_3;i_tFileInputExcel_3++){
			int current_tFileInputExcel_3 = i_tFileInputExcel_3 + start_column_tFileInputExcel_3;
			if(current_tFileInputExcel_3 <= actual_end_column_tFileInputExcel_3){
				if(current_tFileInputExcel_3 < row_tFileInputExcel_3.size()){
					String column_tFileInputExcel_3 = row_tFileInputExcel_3.get(current_tFileInputExcel_3);
					if(column_tFileInputExcel_3!=null) {
						temp_row_tFileInputExcel_3[i_tFileInputExcel_3] = column_tFileInputExcel_3;
					} else {
						temp_row_tFileInputExcel_3[i_tFileInputExcel_3]="";
					}
				} else {
					temp_row_tFileInputExcel_3[i_tFileInputExcel_3]="";
				}
			} else {
				temp_row_tFileInputExcel_3[i_tFileInputExcel_3]="";
			}
		}

		boolean whetherReject_tFileInputExcel_3 = false;
		row35 = new row35Struct();
		int curColNum_tFileInputExcel_3 = -1;
		String curColName_tFileInputExcel_3 = "";

		try{
							columnIndex_tFileInputExcel_3 = 0;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "SKU_INTERNO";

				row35.SKU_INTERNO = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.SKU_INTERNO = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 1;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "SKU_MARKETPLACE";

				row35.SKU_MARKETPLACE = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.SKU_MARKETPLACE = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 2;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "COD_MARKETPLACE";

				row35.COD_MARKETPLACE = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.COD_MARKETPLACE = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 3;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "PRECO_DE";

				row35.PRECO_DE = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.PRECO_DE = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 4;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "PRECO_POR";

				row35.PRECO_POR = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.PRECO_POR = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 5;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "MARKUP_ADICIONAL";

				row35.MARKUP_ADICIONAL = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.MARKUP_ADICIONAL = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 6;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "CUSTO";

				row35.CUSTO = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.CUSTO = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 7;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "DESCONTO_1E2";

				row35.DESCONTO_1E2 = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.DESCONTO_1E2 = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 8;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "DESCONTO_3A6";

				row35.DESCONTO_3A6 = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.DESCONTO_3A6 = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 9;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "CALCULO_PRECO";

				row35.CALCULO_PRECO = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.CALCULO_PRECO = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 10;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "MARKETPLACE";

				row35.MARKETPLACE = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.MARKETPLACE = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 11;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "NOME_CONTA";

				row35.NOME_CONTA = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.NOME_CONTA = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 12;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "TITULO_PRODUTO";

				row35.TITULO_PRODUTO = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.TITULO_PRODUTO = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 13;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "CATEGORIA";

				row35.CATEGORIA = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.CATEGORIA = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 14;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "LOJA_OFICIAL";

				row35.LOJA_OFICIAL = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.LOJA_OFICIAL = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 15;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "TIPO_LISTAGEM";

				row35.TIPO_LISTAGEM = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.TIPO_LISTAGEM = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 16;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "FRETE_GRATIS";

				row35.FRETE_GRATIS = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.FRETE_GRATIS = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 17;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "FORMA_ENVIO";

				row35.FORMA_ENVIO = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.FORMA_ENVIO = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 18;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim().length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "VARIACAO_PRINCIPAL";

				row35.VARIACAO_PRINCIPAL = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].trim();
			}else{
				row35.VARIACAO_PRINCIPAL = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
			nb_line_tFileInputExcel_3++;
			
		} catch(java.lang.Exception e) {
globalMap.put("tFileInputExcel_3_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_3 = true;
					 System.err.println(e.getMessage());
					 row35 = null;
			}

        		




 



/**
 * [tFileInputExcel_3 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 


	tos_count_tFileInputExcel_3++;

/**
 * [tFileInputExcel_3 main ] stop
 */
	
	/**
	 * [tFileInputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 



/**
 * [tFileInputExcel_3 process_data_begin ] stop
 */
// Start of branch "row35"
if(row35 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					

    //Code generate according to input schema and output schema
row11.SKU_INTERNO = row35.SKU_INTERNO;
row11.SKU_MARKETPLACE = row35.SKU_MARKETPLACE;
row11.COD_MARKETPLACE = row35.COD_MARKETPLACE;
row11.PRECO_DE = row35.PRECO_DE.replaceAll(",", ".");
row11.PRECO_POR = row35.PRECO_POR.replaceAll(",", ".");
row11.MARKUP_ADICIONAL = row35.MARKUP_ADICIONAL;
row11.CUSTO = row35.CUSTO;
row11.DESCONTO_1E2 = row35.DESCONTO_1E2;
row11.DESCONTO_3A6 = row35.DESCONTO_3A6;
row11.CALCULO_PRECO = row35.CALCULO_PRECO;
row11.MARKETPLACE = row35.MARKETPLACE;
row11.NOME_CONTA = row35.NOME_CONTA;
row11.TITULO_PRODUTO = row35.TITULO_PRODUTO;
row11.CATEGORIA = row35.CATEGORIA;
row11.LOJA_OFICIAL = row35.LOJA_OFICIAL;
row11.TIPO_LISTAGEM = row35.TIPO_LISTAGEM;
row11.FRETE_GRATIS = row35.FRETE_GRATIS;
row11.FORMA_ENVIO = row35.FORMA_ENVIO;
row11.VARIACAO_PRINCIPAL = row35.VARIACAO_PRINCIPAL;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_8 main ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


  row38 = new row38Struct();
  boolean bHasError_tConvertType_8 = false;             
          try {
              row38.SKU_INTERNO=TypeConvert.String2String(row11.SKU_INTERNO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.SKU_MARKETPLACE=TypeConvert.String2String(row11.SKU_MARKETPLACE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.COD_MARKETPLACE=TypeConvert.String2String(row11.COD_MARKETPLACE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.PRECO_DE=TypeConvert.String2Double(row11.PRECO_DE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.PRECO_POR=TypeConvert.String2Double(row11.PRECO_POR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.MARKUP_ADICIONAL=TypeConvert.String2String(row11.MARKUP_ADICIONAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.CUSTO=TypeConvert.String2String(row11.CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.DESCONTO_1E2=TypeConvert.String2String(row11.DESCONTO_1E2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.DESCONTO_3A6=TypeConvert.String2String(row11.DESCONTO_3A6);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.CALCULO_PRECO=TypeConvert.String2String(row11.CALCULO_PRECO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.MARKETPLACE=TypeConvert.String2String(row11.MARKETPLACE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.NOME_CONTA=TypeConvert.String2String(row11.NOME_CONTA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.TITULO_PRODUTO=TypeConvert.String2String(row11.TITULO_PRODUTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.CATEGORIA=TypeConvert.String2String(row11.CATEGORIA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.LOJA_OFICIAL=TypeConvert.String2String(row11.LOJA_OFICIAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.TIPO_LISTAGEM=TypeConvert.String2String(row11.TIPO_LISTAGEM);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.FRETE_GRATIS=TypeConvert.String2String(row11.FRETE_GRATIS);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.FORMA_ENVIO=TypeConvert.String2String(row11.FORMA_ENVIO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row38.VARIACAO_PRINCIPAL=TypeConvert.String2String(row11.VARIACAO_PRINCIPAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_8) {row38 = null;}

  nb_line_tConvertType_8 ++ ;

 


	tos_count_tConvertType_8++;

/**
 * [tConvertType_8 main ] stop
 */
	
	/**
	 * [tConvertType_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	

 



/**
 * [tConvertType_8 process_data_begin ] stop
 */
// Start of branch "row38"
if(row38 != null) { 



	
	/**
	 * [tMap_28 main ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_28 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_28 = false;
		boolean mainRowRejected_tMap_28 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_28__Struct Var = Var__tMap_28;// ###############################
        // ###############################
        // # Output tables

copyOfanymarket_0 = null;


// # Output table : 'copyOfanymarket_0'
copyOfanymarket_0_tmp.SKU_INTERNO = row38.SKU_INTERNO ;
copyOfanymarket_0_tmp.SKU_MARKETPLACE = row38.SKU_MARKETPLACE ;
copyOfanymarket_0_tmp.COD_MARKETPLACE = row38.COD_MARKETPLACE ;
copyOfanymarket_0_tmp.PRECO_DE = row38.PRECO_DE ;
copyOfanymarket_0_tmp.PRECO_POR = row38.PRECO_POR ;
copyOfanymarket_0_tmp.MARKUP_ADICIONAL = row38.MARKUP_ADICIONAL ;
copyOfanymarket_0_tmp.CUSTO = row38.CUSTO ;
copyOfanymarket_0_tmp.DESCONTO_1E2 = row38.DESCONTO_1E2 ;
copyOfanymarket_0_tmp.DESCONTO_3A6 = row38.DESCONTO_3A6 ;
copyOfanymarket_0_tmp.CALCULO_PRECO = row38.CALCULO_PRECO ;
copyOfanymarket_0_tmp.MARKETPLACE = row38.MARKETPLACE ;
copyOfanymarket_0_tmp.NOME_CONTA = row38.NOME_CONTA ;
copyOfanymarket_0_tmp.TITULO_PRODUTO = row38.TITULO_PRODUTO ;
copyOfanymarket_0_tmp.CATEGORIA = row38.CATEGORIA ;
copyOfanymarket_0_tmp.LOJA_OFICIAL = row38.LOJA_OFICIAL ;
copyOfanymarket_0_tmp.TIPO_LISTAGEM = row38.TIPO_LISTAGEM ;
copyOfanymarket_0_tmp.FRETE_GRATIS = row38.FRETE_GRATIS ;
copyOfanymarket_0_tmp.FORMA_ENVIO = row38.FORMA_ENVIO ;
copyOfanymarket_0_tmp.VARIACAO_PRINCIPAL = row38.VARIACAO_PRINCIPAL ;
copyOfanymarket_0 = copyOfanymarket_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_28 = false;










 


	tos_count_tMap_28++;

/**
 * [tMap_28 main ] stop
 */
	
	/**
	 * [tMap_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	

 



/**
 * [tMap_28 process_data_begin ] stop
 */
// Start of branch "copyOfanymarket_0"
if(copyOfanymarket_0 != null) { 



	
	/**
	 * [tHashOutput_15 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfanymarket_0"
						
						);
					}
					



    
		copyOfanymarket_0Struct oneRow_tHashOutput_15 = new copyOfanymarket_0Struct();
				
					oneRow_tHashOutput_15.SKU_INTERNO = copyOfanymarket_0.SKU_INTERNO;
					oneRow_tHashOutput_15.SKU_MARKETPLACE = copyOfanymarket_0.SKU_MARKETPLACE;
					oneRow_tHashOutput_15.COD_MARKETPLACE = copyOfanymarket_0.COD_MARKETPLACE;
					oneRow_tHashOutput_15.PRECO_DE = copyOfanymarket_0.PRECO_DE;
					oneRow_tHashOutput_15.PRECO_POR = copyOfanymarket_0.PRECO_POR;
					oneRow_tHashOutput_15.MARKUP_ADICIONAL = copyOfanymarket_0.MARKUP_ADICIONAL;
					oneRow_tHashOutput_15.CUSTO = copyOfanymarket_0.CUSTO;
					oneRow_tHashOutput_15.DESCONTO_1E2 = copyOfanymarket_0.DESCONTO_1E2;
					oneRow_tHashOutput_15.DESCONTO_3A6 = copyOfanymarket_0.DESCONTO_3A6;
					oneRow_tHashOutput_15.CALCULO_PRECO = copyOfanymarket_0.CALCULO_PRECO;
					oneRow_tHashOutput_15.MARKETPLACE = copyOfanymarket_0.MARKETPLACE;
					oneRow_tHashOutput_15.NOME_CONTA = copyOfanymarket_0.NOME_CONTA;
					oneRow_tHashOutput_15.TITULO_PRODUTO = copyOfanymarket_0.TITULO_PRODUTO;
					oneRow_tHashOutput_15.CATEGORIA = copyOfanymarket_0.CATEGORIA;
					oneRow_tHashOutput_15.LOJA_OFICIAL = copyOfanymarket_0.LOJA_OFICIAL;
					oneRow_tHashOutput_15.TIPO_LISTAGEM = copyOfanymarket_0.TIPO_LISTAGEM;
					oneRow_tHashOutput_15.FRETE_GRATIS = copyOfanymarket_0.FRETE_GRATIS;
					oneRow_tHashOutput_15.FORMA_ENVIO = copyOfanymarket_0.FORMA_ENVIO;
					oneRow_tHashOutput_15.VARIACAO_PRINCIPAL = copyOfanymarket_0.VARIACAO_PRINCIPAL;
		
        tHashFile_tHashOutput_15.put(oneRow_tHashOutput_15);
        nb_line_tHashOutput_15 ++;

 


	tos_count_tHashOutput_15++;

/**
 * [tHashOutput_15 main ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_end ] stop
 */

} // End of branch "copyOfanymarket_0"




	
	/**
	 * [tMap_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	

 



/**
 * [tMap_28 process_data_end ] stop
 */

} // End of branch "row38"




	
	/**
	 * [tConvertType_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	

 



/**
 * [tConvertType_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row35"




	
	/**
	 * [tFileInputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 



/**
 * [tFileInputExcel_3 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

			}
			
			try {
				if(excelReader_tFileInputExcel_3!=null) {
					excelReader_tFileInputExcel_3.handleException();
				}
			} catch(java.lang.Exception e_tFileInputExcel_3) {
globalMap.put("tFileInputExcel_3_ERROR_MESSAGE",e_tFileInputExcel_3.getMessage());
				if(!(e_tFileInputExcel_3.getCause() instanceof com.talend.excel.xssf.event.EnoughDataException)) {
				
					
				System.err.println(e_tFileInputExcel_3.getMessage());	
				
				}
			}
			
			
			
			globalMap.put("tFileInputExcel_3_NB_LINE",nb_line_tFileInputExcel_3);
			
		} finally { 
				
		}	
		

 

ok_Hash.put("tFileInputExcel_3", true);
end_Hash.put("tFileInputExcel_3", System.currentTimeMillis());




/**
 * [tFileInputExcel_3 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tConvertType_8 end ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	
      globalMap.put("tConvertType_8_NB_LINE", nb_line_tConvertType_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tConvertType_8", true);
end_Hash.put("tConvertType_8", System.currentTimeMillis());




/**
 * [tConvertType_8 end ] stop
 */

	
	/**
	 * [tMap_28 end ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tMap_28", true);
end_Hash.put("tMap_28", System.currentTimeMillis());




/**
 * [tMap_28 end ] stop
 */

	
	/**
	 * [tHashOutput_15 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
globalMap.put("tHashOutput_15_NB_LINE", nb_line_tHashOutput_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfanymarket_0");
			  	}
			  	
 

ok_Hash.put("tHashOutput_15", true);
end_Hash.put("tHashOutput_15", System.currentTimeMillis());




/**
 * [tHashOutput_15 end ] stop
 */












						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tFileInputExcel_3);
						}				
					




	
	/**
	 * [tFileList_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 



/**
 * [tFileList_1 process_data_end ] stop
 */
	
	/**
	 * [tFileList_1 end ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

  
    }
  globalMap.put("tFileList_1_NB_FILE", NB_FILEtFileList_1);
  

  
 

 

ok_Hash.put("tFileList_1", true);
end_Hash.put("tFileList_1", System.currentTimeMillis());




/**
 * [tFileList_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileList_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk37", 0, "ok");
								} 
							
							tJava_16Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileList_1 finally ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 



/**
 * [tFileList_1 finally ] stop
 */

	
	/**
	 * [tFileInputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 



/**
 * [tFileInputExcel_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tConvertType_8 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	

 



/**
 * [tConvertType_8 finally ] stop
 */

	
	/**
	 * [tMap_28 finally ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	

 



/**
 * [tMap_28 finally ] stop
 */

	
	/**
	 * [tHashOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileList_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_16", false);
		start_Hash.put("tJava_16", System.currentTimeMillis());
		
	
	currentComponent="tJava_16";
	
	
		int tos_count_tJava_16 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura da Planilha de Preco: "+data);

 



/**
 * [tJava_16 begin ] stop
 */
	
	/**
	 * [tJava_16 main ] start
	 */

	

	
	
	currentComponent="tJava_16";
	
	

 


	tos_count_tJava_16++;

/**
 * [tJava_16 main ] stop
 */
	
	/**
	 * [tJava_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_16";
	
	

 



/**
 * [tJava_16 process_data_begin ] stop
 */
	
	/**
	 * [tJava_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_16";
	
	

 



/**
 * [tJava_16 process_data_end ] stop
 */
	
	/**
	 * [tJava_16 end ] start
	 */

	

	
	
	currentComponent="tJava_16";
	
	

 

ok_Hash.put("tJava_16", true);
end_Hash.put("tJava_16", System.currentTimeMillis());




/**
 * [tJava_16 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_16 finally ] start
	 */

	

	
	
	currentComponent="tJava_16";
	
	

 



/**
 * [tJava_16 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_16_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_preco_estoque relatorio_preco_estoqueClass = new relatorio_preco_estoque();

        int exitCode = relatorio_preco_estoqueClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_preco_estoque.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_preco_estoque_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_preco_estoque.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("data_atual", "id_String");
                        if(context.getStringValue("data_atual") == null) {
                            context.data_atual = null;
                        } else {
                            context.data_atual=(String) context.getProperty("data_atual");
                        }
                        context.setContextType("data_atual1", "id_String");
                        if(context.getStringValue("data_atual1") == null) {
                            context.data_atual1 = null;
                        } else {
                            context.data_atual1=(String) context.getProperty("data_atual1");
                        }
                        context.setContextType("Arquivo", "id_Integer");
                        if(context.getStringValue("Arquivo") == null) {
                            context.Arquivo = null;
                        } else {
                            try{
                                context.Arquivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Arquivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Arquivo", e.getMessage()));
                                context.Arquivo=null;
                            }
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("Pasta_Rede", "id_String");
                        if(context.getStringValue("Pasta_Rede") == null) {
                            context.Pasta_Rede = null;
                        } else {
                            context.Pasta_Rede=(String) context.getProperty("Pasta_Rede");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("data_atual")) {
                context.data_atual = (String) parentContextMap.get("data_atual");
            }if (parentContextMap.containsKey("data_atual1")) {
                context.data_atual1 = (String) parentContextMap.get("data_atual1");
            }if (parentContextMap.containsKey("Arquivo")) {
                context.Arquivo = (Integer) parentContextMap.get("Arquivo");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("Pasta_Rede")) {
                context.Pasta_Rede = (String) parentContextMap.get("Pasta_Rede");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

e_tFileInputExcel_1.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}catch (java.lang.Error e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputDelimited_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputDelimited_2) {
globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", -1);

e_tFileInputDelimited_2.printStackTrace();

}catch (java.lang.Error e_tFileInputDelimited_2) {
globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputDelimited_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_2) {
globalMap.put("tDBInput_2_SUBPROCESS_STATE", -1);

e_tDBInput_2.printStackTrace();

}catch (java.lang.Error e_tDBInput_2) {
globalMap.put("tDBInput_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_4) {
globalMap.put("tDBInput_4_SUBPROCESS_STATE", -1);

e_tDBInput_4.printStackTrace();

}catch (java.lang.Error e_tDBInput_4) {
globalMap.put("tDBInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFixedFlowInput_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFixedFlowInput_1) {
globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", -1);

e_tFixedFlowInput_1.printStackTrace();

}catch (java.lang.Error e_tFixedFlowInput_1) {
globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFixedFlowInput_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFixedFlowInput_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFixedFlowInput_2) {
globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", -1);

e_tFixedFlowInput_2.printStackTrace();

}catch (java.lang.Error e_tFixedFlowInput_2) {
globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFixedFlowInput_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileList_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileList_1) {
globalMap.put("tFileList_1_SUBPROCESS_STATE", -1);

e_tFileList_1.printStackTrace();

}catch (java.lang.Error e_tFileList_1) {
globalMap.put("tFileList_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileList_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_preco_estoque");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     3263135 characters generated by Talend Open Studio for Big Data 
 *     on the 19 de março de 2024 15:12:33 BRT
 ************************************************************************************************/