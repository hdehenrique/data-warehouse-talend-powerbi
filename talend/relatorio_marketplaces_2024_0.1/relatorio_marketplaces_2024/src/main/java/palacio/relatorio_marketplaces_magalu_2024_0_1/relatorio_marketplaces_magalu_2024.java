// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio.relatorio_marketplaces_magalu_2024_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_marketplaces_magalu_2024 Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_marketplaces_magalu_2024 implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(EMAIL_PASSWORD != null){
				
					this.setProperty("EMAIL_PASSWORD", EMAIL_PASSWORD.toString());
				
			}
			
			if(EMAIL != null){
				
					this.setProperty("EMAIL", EMAIL.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(excel != null){
				
					this.setProperty("excel", excel.toString());
				
			}
			
			if(SMTP != null){
				
					this.setProperty("SMTP", SMTP.toString());
				
			}
			
			if(SMTP_PORT != null){
				
					this.setProperty("SMTP_PORT", SMTP_PORT.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(caminho != null){
				
					this.setProperty("caminho", caminho.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String programa;
public String getPrograma(){
	return this.programa;
}
public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String EMAIL_PASSWORD;
public String getEMAIL_PASSWORD(){
	return this.EMAIL_PASSWORD;
}
public String EMAIL;
public String getEMAIL(){
	return this.EMAIL;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String excel;
public String getExcel(){
	return this.excel;
}
public String SMTP;
public String getSMTP(){
	return this.SMTP;
}
public String SMTP_PORT;
public String getSMTP_PORT(){
	return this.SMTP_PORT;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String caminho;
public String getCaminho(){
	return this.caminho;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_marketplaces_magalu_2024";
	private final String projectName = "PALACIO";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_marketplaces_magalu_2024.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_marketplaces_magalu_2024.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSendMail_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_1Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tSendMail_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSendMail_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = System.getenv(context.JDBC_PARAMETERS);
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD)
; 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBConnection_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_3", false);
		start_Hash.put("tDBConnection_3", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_3";
	
	
		int tos_count_tDBConnection_3 = 0;
		


	
            String dbProperties_tDBConnection_3 = "ApplicationName=relatorio_marketplaces_magalu_2024";
            String url_tDBConnection_3 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_3 != null && !"".equals(dbProperties_tDBConnection_3.trim())) {
                url_tDBConnection_3 = url_tDBConnection_3 + "?" + dbProperties_tDBConnection_3;
            }
	String dbUser_tDBConnection_3 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_3 = System.getenv(context.POSTGRES_PASSWORD)
; 
		String dbPwd_tDBConnection_3 = decryptedPassword_tDBConnection_3;
	
	
	java.sql.Connection conn_tDBConnection_3 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_3 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_3 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_3.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_3 = drivers_tDBConnection_3.nextElement();
        if (redShiftDriverNames_tDBConnection_3.contains(d_tDBConnection_3.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_3);
                java.sql.DriverManager.registerDriver(d_tDBConnection_3);
            } catch (java.lang.Exception e_tDBConnection_3) {
globalMap.put("tDBConnection_3_ERROR_MESSAGE",e_tDBConnection_3.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_3 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_3 = java.lang.Class.forName(driverClass_tDBConnection_3);
			globalMap.put("driverClass_tDBConnection_3", driverClass_tDBConnection_3);
		
			conn_tDBConnection_3 = java.sql.DriverManager.getConnection(url_tDBConnection_3,dbUser_tDBConnection_3,dbPwd_tDBConnection_3);

		globalMap.put("conn_tDBConnection_3", conn_tDBConnection_3);
	if (null != conn_tDBConnection_3) {
		
			conn_tDBConnection_3.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_3","");

 



/**
 * [tDBConnection_3 begin ] stop
 */
	
	/**
	 * [tDBConnection_3 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 


	tos_count_tDBConnection_3++;

/**
 * [tDBConnection_3 main ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_3 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 

ok_Hash.put("tDBConnection_3", true);
end_Hash.put("tDBConnection_3", System.currentTimeMillis());




/**
 * [tDBConnection_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_3 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyyMMdd");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


context.data_execucao = data;
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_marketplaces_magalu_2024_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfmapStruct implements routines.system.IPersistableRow<copyOfmapStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfmapStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
copyOfmapStruct copyOfmap = new copyOfmapStruct();
row7Struct row7 = new row7Struct();






	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		
		int columnIndex_tFileOutputExcel_2 = 0;
		boolean headerIsInserted_tFileOutputExcel_2 = false;
		
		
		String fileName_tFileOutputExcel_2="/root/e_mail/MAGALU_FULL_FILMENT_REI_2024.xlsx";
		int nb_line_tFileOutputExcel_2 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_2 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_2.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_2.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_2.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_2.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_2.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_2.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_2 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_2 = chm_tFileOutputExcel_2.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_2", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_2) {
			
				xlsxTool_tFileOutputExcel_2.prepareXlsxFile(fileName_tFileOutputExcel_2);
			
		}
		
		xlsxTool_tFileOutputExcel_2.setFont("");
		
		if (xlsxTool_tFileOutputExcel_2.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_2.addRow();
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CD_CLIENTE");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NM_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CD_EMPRESA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VENDEDOR");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NOME_VENDEDOR");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("PEDIDO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DESC_FULFILLMENT");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("TIPO_NOTA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NUMERO_NOTA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("SERIE_NOTA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NOTA_DEVOLUCAO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NM_ROMANEIO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DT_PEDIDO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CD_COMBO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("SKU");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DESC_SKU");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("QTD_SKU");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_TOTAL_SKU");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_UNITARIO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_DESCONTO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_PRODUTOS_PEDIDO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_FRETE");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("BASE_ICMS");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_ICMS");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NOME_TRANSPORTADORA");
		
		nb_line_tFileOutputExcel_2++;
		headerIsInserted_tFileOutputExcel_2 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfmap");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer CD_CLIENTE;
					String NM_DOCUMENTO;
					String CD_EMPRESA;
					String VENDEDOR;
					String NOME_VENDEDOR;
					String PEDIDO_AUTCOM;
					String DESC_FULFILLMENT;
					String TIPO_NOTA;
					String NUMERO_NOTA;
					String SERIE_NOTA;
					String NOTA_DEVOLUCAO;
					String NM_ROMANEIO;
					String DT_PEDIDO;
					String CD_COMBO;
					String SKU;
					String DESC_SKU;
					Double QTD_SKU;
					Double VL_TOTAL_SKU;
					Double VL_UNITARIO;
					Double VL_DESCONTO;
					Double VL_PRODUTOS_PEDIDO;
					Double VL_FRETE;
					Double VL_PEDIDO;
					Double BASE_ICMS;
					Double VL_ICMS;
					String NOME_TRANSPORTADORA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_CLIENTE == null) ? 0 : this.CD_CLIENTE.hashCode());
								
								result = prime * result + ((this.NM_DOCUMENTO == null) ? 0 : this.NM_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
								result = prime * result + ((this.VENDEDOR == null) ? 0 : this.VENDEDOR.hashCode());
								
								result = prime * result + ((this.NOME_VENDEDOR == null) ? 0 : this.NOME_VENDEDOR.hashCode());
								
								result = prime * result + ((this.PEDIDO_AUTCOM == null) ? 0 : this.PEDIDO_AUTCOM.hashCode());
								
								result = prime * result + ((this.DESC_FULFILLMENT == null) ? 0 : this.DESC_FULFILLMENT.hashCode());
								
								result = prime * result + ((this.TIPO_NOTA == null) ? 0 : this.TIPO_NOTA.hashCode());
								
								result = prime * result + ((this.NUMERO_NOTA == null) ? 0 : this.NUMERO_NOTA.hashCode());
								
								result = prime * result + ((this.SERIE_NOTA == null) ? 0 : this.SERIE_NOTA.hashCode());
								
								result = prime * result + ((this.NOTA_DEVOLUCAO == null) ? 0 : this.NOTA_DEVOLUCAO.hashCode());
								
								result = prime * result + ((this.NM_ROMANEIO == null) ? 0 : this.NM_ROMANEIO.hashCode());
								
								result = prime * result + ((this.DT_PEDIDO == null) ? 0 : this.DT_PEDIDO.hashCode());
								
								result = prime * result + ((this.CD_COMBO == null) ? 0 : this.CD_COMBO.hashCode());
								
								result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
								
								result = prime * result + ((this.DESC_SKU == null) ? 0 : this.DESC_SKU.hashCode());
								
								result = prime * result + ((this.QTD_SKU == null) ? 0 : this.QTD_SKU.hashCode());
								
								result = prime * result + ((this.VL_TOTAL_SKU == null) ? 0 : this.VL_TOTAL_SKU.hashCode());
								
								result = prime * result + ((this.VL_UNITARIO == null) ? 0 : this.VL_UNITARIO.hashCode());
								
								result = prime * result + ((this.VL_DESCONTO == null) ? 0 : this.VL_DESCONTO.hashCode());
								
								result = prime * result + ((this.VL_PRODUTOS_PEDIDO == null) ? 0 : this.VL_PRODUTOS_PEDIDO.hashCode());
								
								result = prime * result + ((this.VL_FRETE == null) ? 0 : this.VL_FRETE.hashCode());
								
								result = prime * result + ((this.VL_PEDIDO == null) ? 0 : this.VL_PEDIDO.hashCode());
								
								result = prime * result + ((this.BASE_ICMS == null) ? 0 : this.BASE_ICMS.hashCode());
								
								result = prime * result + ((this.VL_ICMS == null) ? 0 : this.VL_ICMS.hashCode());
								
								result = prime * result + ((this.NOME_TRANSPORTADORA == null) ? 0 : this.NOME_TRANSPORTADORA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.CD_CLIENTE == null) {
										if (other.CD_CLIENTE != null) 
											return false;
								
									} else if (!this.CD_CLIENTE.equals(other.CD_CLIENTE))
								 
										return false;
								
									if (this.NM_DOCUMENTO == null) {
										if (other.NM_DOCUMENTO != null) 
											return false;
								
									} else if (!this.NM_DOCUMENTO.equals(other.NM_DOCUMENTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
									if (this.VENDEDOR == null) {
										if (other.VENDEDOR != null) 
											return false;
								
									} else if (!this.VENDEDOR.equals(other.VENDEDOR))
								 
										return false;
								
									if (this.NOME_VENDEDOR == null) {
										if (other.NOME_VENDEDOR != null) 
											return false;
								
									} else if (!this.NOME_VENDEDOR.equals(other.NOME_VENDEDOR))
								 
										return false;
								
									if (this.PEDIDO_AUTCOM == null) {
										if (other.PEDIDO_AUTCOM != null) 
											return false;
								
									} else if (!this.PEDIDO_AUTCOM.equals(other.PEDIDO_AUTCOM))
								 
										return false;
								
									if (this.DESC_FULFILLMENT == null) {
										if (other.DESC_FULFILLMENT != null) 
											return false;
								
									} else if (!this.DESC_FULFILLMENT.equals(other.DESC_FULFILLMENT))
								 
										return false;
								
									if (this.TIPO_NOTA == null) {
										if (other.TIPO_NOTA != null) 
											return false;
								
									} else if (!this.TIPO_NOTA.equals(other.TIPO_NOTA))
								 
										return false;
								
									if (this.NUMERO_NOTA == null) {
										if (other.NUMERO_NOTA != null) 
											return false;
								
									} else if (!this.NUMERO_NOTA.equals(other.NUMERO_NOTA))
								 
										return false;
								
									if (this.SERIE_NOTA == null) {
										if (other.SERIE_NOTA != null) 
											return false;
								
									} else if (!this.SERIE_NOTA.equals(other.SERIE_NOTA))
								 
										return false;
								
									if (this.NOTA_DEVOLUCAO == null) {
										if (other.NOTA_DEVOLUCAO != null) 
											return false;
								
									} else if (!this.NOTA_DEVOLUCAO.equals(other.NOTA_DEVOLUCAO))
								 
										return false;
								
									if (this.NM_ROMANEIO == null) {
										if (other.NM_ROMANEIO != null) 
											return false;
								
									} else if (!this.NM_ROMANEIO.equals(other.NM_ROMANEIO))
								 
										return false;
								
									if (this.DT_PEDIDO == null) {
										if (other.DT_PEDIDO != null) 
											return false;
								
									} else if (!this.DT_PEDIDO.equals(other.DT_PEDIDO))
								 
										return false;
								
									if (this.CD_COMBO == null) {
										if (other.CD_COMBO != null) 
											return false;
								
									} else if (!this.CD_COMBO.equals(other.CD_COMBO))
								 
										return false;
								
									if (this.SKU == null) {
										if (other.SKU != null) 
											return false;
								
									} else if (!this.SKU.equals(other.SKU))
								 
										return false;
								
									if (this.DESC_SKU == null) {
										if (other.DESC_SKU != null) 
											return false;
								
									} else if (!this.DESC_SKU.equals(other.DESC_SKU))
								 
										return false;
								
									if (this.QTD_SKU == null) {
										if (other.QTD_SKU != null) 
											return false;
								
									} else if (!this.QTD_SKU.equals(other.QTD_SKU))
								 
										return false;
								
									if (this.VL_TOTAL_SKU == null) {
										if (other.VL_TOTAL_SKU != null) 
											return false;
								
									} else if (!this.VL_TOTAL_SKU.equals(other.VL_TOTAL_SKU))
								 
										return false;
								
									if (this.VL_UNITARIO == null) {
										if (other.VL_UNITARIO != null) 
											return false;
								
									} else if (!this.VL_UNITARIO.equals(other.VL_UNITARIO))
								 
										return false;
								
									if (this.VL_DESCONTO == null) {
										if (other.VL_DESCONTO != null) 
											return false;
								
									} else if (!this.VL_DESCONTO.equals(other.VL_DESCONTO))
								 
										return false;
								
									if (this.VL_PRODUTOS_PEDIDO == null) {
										if (other.VL_PRODUTOS_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PRODUTOS_PEDIDO.equals(other.VL_PRODUTOS_PEDIDO))
								 
										return false;
								
									if (this.VL_FRETE == null) {
										if (other.VL_FRETE != null) 
											return false;
								
									} else if (!this.VL_FRETE.equals(other.VL_FRETE))
								 
										return false;
								
									if (this.VL_PEDIDO == null) {
										if (other.VL_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PEDIDO.equals(other.VL_PEDIDO))
								 
										return false;
								
									if (this.BASE_ICMS == null) {
										if (other.BASE_ICMS != null) 
											return false;
								
									} else if (!this.BASE_ICMS.equals(other.BASE_ICMS))
								 
										return false;
								
									if (this.VL_ICMS == null) {
										if (other.VL_ICMS != null) 
											return false;
								
									} else if (!this.VL_ICMS.equals(other.VL_ICMS))
								 
										return false;
								
									if (this.NOME_TRANSPORTADORA == null) {
										if (other.NOME_TRANSPORTADORA != null) 
											return false;
								
									} else if (!this.NOME_TRANSPORTADORA.equals(other.NOME_TRANSPORTADORA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfmapStruct copyOfmap_tmp = new copyOfmapStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT MG.GER_CODCLI CD_CLIENTE,\n       CL.CLI_C_G_C_ NM_DOCUMENTO,\n	   MG.GER_CODEMP CD_EMPRESA,\n	   MG.GER_CODVEN "
+"VENDEDOR,\n	   OP.OPE_NOMOPE NOME_VENDEDOR,\n       FG.FGO_NUMDOC PEDIDO_AUTCOM,\n       FG.FGO_NUMPOK DESC_FULFILLMENT	"
+",\n       MG.GER_ESPDOC TIPO_NOTA,\n       MG.GER_NUMDOC NUMERO_NOTA,\n       MG.GER_SERIE_ SERIE_NOTA,\n       (SELECT "
+"MAX( DEV.DET_NUMDOC) FROM MOVDET DEV\n           WHERE DEV.DET_DOCDEV = MG.GER_NUMDOC \n           AND DEV.DET_EMPDEV = "
+"MG.GER_CODEMP \n           AND DEV.DET_ESPDEV = MG.GER_ESPDOC \n           AND DEV.DET_CODVEN = MG.GER_CODVEN\n         "
+"  LIMIT 1) NOTA_DEVOLUCAO,\n           MG.GER_NUMROM NM_ROMANEIO,\n       CONCAT( MG.GER_DTAENT ,' ',MG.GER_HORENT) DT_P"
+"EDIDO,\n(SELECT ED.FDO_ITEEST FROM FATDOR FD, EXTDOR ED\n   WHERE FG.AUTOINCREM = FD.FDO_SEQGER\n     AND FD.AUTOINCREM "
+"= ED.FDO_SEQFDO\n     LIMIT 1) AS CD_COMBO,\n       DET.DET_CODITE SKU ,\n       DET.DET_DESCRI DESC_SKU,\n       DET.DE"
+"T_QTDITE QTD_SKU,\n       (DET.DET_QTDITE * DET.DET_UNITAR) VL_TOTAL_SKU,\n       DET.DET_UNITAR VL_UNITARIO,       \n  "
+"     DET_DESESP VL_DESCONTO ,\n       MG.GER_TOTPRO VL_PRODUTOS_PEDIDO,\n       MG.GER_TOTFRE VL_FRETE,\n       MG.GER_V"
+"LRCON VL_PEDIDO,\n       MG.GER_BASICM BASE_ICMS,\n       MG.GER_TOTICM VL_ICMS,\n       TRA.TRA_NOMTRA NOME_TRANSPORTAD"
+"ORA\n  FROM MOVGER MG\n LEFT JOIN CADCLI CL ON CL.CLI_CODCLI = MG.GER_CODCLI \n LEFT JOIN CADTRA TRA ON TRA.TRA_CODTRA ="
+" MG.GER_CODTRA\n LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = MG.GER_CODVEN \n LEFT JOIN MOVDET DET ON DET.DET_NUMDOC = MG.GER"
+"_NUMDOC AND DET.DET_CODEMP = MG.GER_CODEMP AND DET.DET_SERIE_ = MG.GER_SERIE_ \n LEFT JOIN FATGOR FG ON MG.GER_NUMDOC = "
+"FG.FGO_NUMFAT AND MG.GER_ESPDOC = FG.FGO_TIPFAT AND MG.GER_CODEMP = FG.FGO_EMPFAT AND MG.GER_CODCLI = FG.FGO_CODCLI\nWHE"
+"RE MG.GER_CODVEN IN ('B64')\n  AND MG.GER_CODEMP = '201'\nAND MG.GER_CODCLI not in ('11791872')\n  AND MG.GER_DTAENT >= "
+"'2024-01-01';";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row1.CD_CLIENTE = null;
							} else {
		                          
            row1.CD_CLIENTE = rs_tDBInput_2.getInt(1);
            if(rs_tDBInput_2.wasNull()){
                    row1.CD_CLIENTE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row1.NM_DOCUMENTO = null;
							} else {
	                         		
        	row1.NM_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row1.CD_EMPRESA = null;
							} else {
	                         		
        	row1.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row1.VENDEDOR = null;
							} else {
	                         		
        	row1.VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_2, 4, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 5) {
								row1.NOME_VENDEDOR = null;
							} else {
	                         		
        	row1.NOME_VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_2, 5, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 6) {
								row1.PEDIDO_AUTCOM = null;
							} else {
	                         		
        	row1.PEDIDO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_2, 6, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 7) {
								row1.DESC_FULFILLMENT = null;
							} else {
	                         		
        	row1.DESC_FULFILLMENT = routines.system.JDBCUtil.getString(rs_tDBInput_2, 7, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 8) {
								row1.TIPO_NOTA = null;
							} else {
	                         		
        	row1.TIPO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 8, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 9) {
								row1.NUMERO_NOTA = null;
							} else {
	                         		
        	row1.NUMERO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 9, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 10) {
								row1.SERIE_NOTA = null;
							} else {
	                         		
        	row1.SERIE_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 10, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 11) {
								row1.NOTA_DEVOLUCAO = null;
							} else {
	                         		
        	row1.NOTA_DEVOLUCAO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 11, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 12) {
								row1.NM_ROMANEIO = null;
							} else {
	                         		
        	row1.NM_ROMANEIO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 12, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 13) {
								row1.DT_PEDIDO = null;
							} else {
	                         		
        	row1.DT_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 13, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 14) {
								row1.CD_COMBO = null;
							} else {
	                         		
        	row1.CD_COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 14, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 15) {
								row1.SKU = null;
							} else {
	                         		
        	row1.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_2, 15, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 16) {
								row1.DESC_SKU = null;
							} else {
	                         		
        	row1.DESC_SKU = routines.system.JDBCUtil.getString(rs_tDBInput_2, 16, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 17) {
								row1.QTD_SKU = null;
							} else {
	                         		
            row1.QTD_SKU = rs_tDBInput_2.getDouble(17);
            if(rs_tDBInput_2.wasNull()){
                    row1.QTD_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 18) {
								row1.VL_TOTAL_SKU = null;
							} else {
	                         		
            row1.VL_TOTAL_SKU = rs_tDBInput_2.getDouble(18);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_TOTAL_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 19) {
								row1.VL_UNITARIO = null;
							} else {
	                         		
            row1.VL_UNITARIO = rs_tDBInput_2.getDouble(19);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 20) {
								row1.VL_DESCONTO = null;
							} else {
	                         		
            row1.VL_DESCONTO = rs_tDBInput_2.getDouble(20);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 21) {
								row1.VL_PRODUTOS_PEDIDO = null;
							} else {
	                         		
            row1.VL_PRODUTOS_PEDIDO = rs_tDBInput_2.getDouble(21);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_PRODUTOS_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 22) {
								row1.VL_FRETE = null;
							} else {
	                         		
            row1.VL_FRETE = rs_tDBInput_2.getDouble(22);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 23) {
								row1.VL_PEDIDO = null;
							} else {
	                         		
            row1.VL_PEDIDO = rs_tDBInput_2.getDouble(23);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 24) {
								row1.BASE_ICMS = null;
							} else {
	                         		
            row1.BASE_ICMS = rs_tDBInput_2.getDouble(24);
            if(rs_tDBInput_2.wasNull()){
                    row1.BASE_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 25) {
								row1.VL_ICMS = null;
							} else {
	                         		
            row1.VL_ICMS = rs_tDBInput_2.getDouble(25);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 26) {
								row1.NOME_TRANSPORTADORA = null;
							} else {
	                         		
        	row1.NOME_TRANSPORTADORA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 26, false);
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

copyOfmap = null;


// # Output table : 'copyOfmap'
copyOfmap_tmp.CD_CLIENTE = row1.CD_CLIENTE ;
copyOfmap_tmp.NM_DOCUMENTO = row1.NM_DOCUMENTO ;
copyOfmap_tmp.CD_EMPRESA = row1.CD_EMPRESA ;
copyOfmap_tmp.VENDEDOR = row1.VENDEDOR ;
copyOfmap_tmp.NOME_VENDEDOR = row1.NOME_VENDEDOR ;
copyOfmap_tmp.PEDIDO_AUTCOM = row1.PEDIDO_AUTCOM ;
copyOfmap_tmp.DESC_FULFILLMENT = row1.DESC_FULFILLMENT ;
copyOfmap_tmp.TIPO_NOTA = row1.TIPO_NOTA ;
copyOfmap_tmp.NUMERO_NOTA = row1.NUMERO_NOTA ;
copyOfmap_tmp.SERIE_NOTA = row1.SERIE_NOTA ;
copyOfmap_tmp.NOTA_DEVOLUCAO = row1.NOTA_DEVOLUCAO ;
copyOfmap_tmp.NM_ROMANEIO = row1.NM_ROMANEIO ;
copyOfmap_tmp.DT_PEDIDO = row1.DT_PEDIDO ;
copyOfmap_tmp.CD_COMBO = row1.CD_COMBO ;
copyOfmap_tmp.SKU = row1.SKU ;
copyOfmap_tmp.DESC_SKU = row1.DESC_SKU ;
copyOfmap_tmp.QTD_SKU = row1.QTD_SKU ;
copyOfmap_tmp.VL_TOTAL_SKU = row1.VL_TOTAL_SKU ;
copyOfmap_tmp.VL_UNITARIO = row1.VL_UNITARIO ;
copyOfmap_tmp.VL_DESCONTO = row1.VL_DESCONTO ;
copyOfmap_tmp.VL_PRODUTOS_PEDIDO = row1.VL_PRODUTOS_PEDIDO ;
copyOfmap_tmp.VL_FRETE = row1.VL_FRETE ;
copyOfmap_tmp.VL_PEDIDO = row1.VL_PEDIDO ;
copyOfmap_tmp.BASE_ICMS = row1.BASE_ICMS ;
copyOfmap_tmp.VL_ICMS = row1.VL_ICMS ;
copyOfmap_tmp.NOME_TRANSPORTADORA = row1.NOME_TRANSPORTADORA ;
copyOfmap = copyOfmap_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "copyOfmap"
if(copyOfmap != null) { 



	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfmap"
						
						);
					}
					
row7 = null;			
finder_tUniqRow_1.CD_CLIENTE = copyOfmap.CD_CLIENTE;
if(copyOfmap.NM_DOCUMENTO == null){
	finder_tUniqRow_1.NM_DOCUMENTO = null;
}else{
	finder_tUniqRow_1.NM_DOCUMENTO = copyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfmap.CD_EMPRESA == null){
	finder_tUniqRow_1.CD_EMPRESA = null;
}else{
	finder_tUniqRow_1.CD_EMPRESA = copyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfmap.VENDEDOR == null){
	finder_tUniqRow_1.VENDEDOR = null;
}else{
	finder_tUniqRow_1.VENDEDOR = copyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfmap.NOME_VENDEDOR == null){
	finder_tUniqRow_1.NOME_VENDEDOR = null;
}else{
	finder_tUniqRow_1.NOME_VENDEDOR = copyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfmap.PEDIDO_AUTCOM == null){
	finder_tUniqRow_1.PEDIDO_AUTCOM = null;
}else{
	finder_tUniqRow_1.PEDIDO_AUTCOM = copyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfmap.DESC_FULFILLMENT == null){
	finder_tUniqRow_1.DESC_FULFILLMENT = null;
}else{
	finder_tUniqRow_1.DESC_FULFILLMENT = copyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfmap.TIPO_NOTA == null){
	finder_tUniqRow_1.TIPO_NOTA = null;
}else{
	finder_tUniqRow_1.TIPO_NOTA = copyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfmap.NUMERO_NOTA == null){
	finder_tUniqRow_1.NUMERO_NOTA = null;
}else{
	finder_tUniqRow_1.NUMERO_NOTA = copyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfmap.SERIE_NOTA == null){
	finder_tUniqRow_1.SERIE_NOTA = null;
}else{
	finder_tUniqRow_1.SERIE_NOTA = copyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfmap.NOTA_DEVOLUCAO == null){
	finder_tUniqRow_1.NOTA_DEVOLUCAO = null;
}else{
	finder_tUniqRow_1.NOTA_DEVOLUCAO = copyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfmap.NM_ROMANEIO == null){
	finder_tUniqRow_1.NM_ROMANEIO = null;
}else{
	finder_tUniqRow_1.NM_ROMANEIO = copyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfmap.DT_PEDIDO == null){
	finder_tUniqRow_1.DT_PEDIDO = null;
}else{
	finder_tUniqRow_1.DT_PEDIDO = copyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfmap.CD_COMBO == null){
	finder_tUniqRow_1.CD_COMBO = null;
}else{
	finder_tUniqRow_1.CD_COMBO = copyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfmap.SKU == null){
	finder_tUniqRow_1.SKU = null;
}else{
	finder_tUniqRow_1.SKU = copyOfmap.SKU.toLowerCase();
}
if(copyOfmap.DESC_SKU == null){
	finder_tUniqRow_1.DESC_SKU = null;
}else{
	finder_tUniqRow_1.DESC_SKU = copyOfmap.DESC_SKU.toLowerCase();
}
finder_tUniqRow_1.QTD_SKU = copyOfmap.QTD_SKU;
finder_tUniqRow_1.VL_TOTAL_SKU = copyOfmap.VL_TOTAL_SKU;
finder_tUniqRow_1.VL_UNITARIO = copyOfmap.VL_UNITARIO;
finder_tUniqRow_1.VL_DESCONTO = copyOfmap.VL_DESCONTO;
finder_tUniqRow_1.VL_PRODUTOS_PEDIDO = copyOfmap.VL_PRODUTOS_PEDIDO;
finder_tUniqRow_1.VL_FRETE = copyOfmap.VL_FRETE;
finder_tUniqRow_1.VL_PEDIDO = copyOfmap.VL_PEDIDO;
finder_tUniqRow_1.BASE_ICMS = copyOfmap.BASE_ICMS;
finder_tUniqRow_1.VL_ICMS = copyOfmap.VL_ICMS;
if(copyOfmap.NOME_TRANSPORTADORA == null){
	finder_tUniqRow_1.NOME_TRANSPORTADORA = null;
}else{
	finder_tUniqRow_1.NOME_TRANSPORTADORA = copyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
new_tUniqRow_1.CD_CLIENTE = copyOfmap.CD_CLIENTE;
if(copyOfmap.NM_DOCUMENTO == null){
	new_tUniqRow_1.NM_DOCUMENTO = null;
}else{
	new_tUniqRow_1.NM_DOCUMENTO = copyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfmap.CD_EMPRESA == null){
	new_tUniqRow_1.CD_EMPRESA = null;
}else{
	new_tUniqRow_1.CD_EMPRESA = copyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfmap.VENDEDOR == null){
	new_tUniqRow_1.VENDEDOR = null;
}else{
	new_tUniqRow_1.VENDEDOR = copyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfmap.NOME_VENDEDOR == null){
	new_tUniqRow_1.NOME_VENDEDOR = null;
}else{
	new_tUniqRow_1.NOME_VENDEDOR = copyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfmap.PEDIDO_AUTCOM == null){
	new_tUniqRow_1.PEDIDO_AUTCOM = null;
}else{
	new_tUniqRow_1.PEDIDO_AUTCOM = copyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfmap.DESC_FULFILLMENT == null){
	new_tUniqRow_1.DESC_FULFILLMENT = null;
}else{
	new_tUniqRow_1.DESC_FULFILLMENT = copyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfmap.TIPO_NOTA == null){
	new_tUniqRow_1.TIPO_NOTA = null;
}else{
	new_tUniqRow_1.TIPO_NOTA = copyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfmap.NUMERO_NOTA == null){
	new_tUniqRow_1.NUMERO_NOTA = null;
}else{
	new_tUniqRow_1.NUMERO_NOTA = copyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfmap.SERIE_NOTA == null){
	new_tUniqRow_1.SERIE_NOTA = null;
}else{
	new_tUniqRow_1.SERIE_NOTA = copyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfmap.NOTA_DEVOLUCAO == null){
	new_tUniqRow_1.NOTA_DEVOLUCAO = null;
}else{
	new_tUniqRow_1.NOTA_DEVOLUCAO = copyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfmap.NM_ROMANEIO == null){
	new_tUniqRow_1.NM_ROMANEIO = null;
}else{
	new_tUniqRow_1.NM_ROMANEIO = copyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfmap.DT_PEDIDO == null){
	new_tUniqRow_1.DT_PEDIDO = null;
}else{
	new_tUniqRow_1.DT_PEDIDO = copyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfmap.CD_COMBO == null){
	new_tUniqRow_1.CD_COMBO = null;
}else{
	new_tUniqRow_1.CD_COMBO = copyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfmap.SKU == null){
	new_tUniqRow_1.SKU = null;
}else{
	new_tUniqRow_1.SKU = copyOfmap.SKU.toLowerCase();
}
if(copyOfmap.DESC_SKU == null){
	new_tUniqRow_1.DESC_SKU = null;
}else{
	new_tUniqRow_1.DESC_SKU = copyOfmap.DESC_SKU.toLowerCase();
}
new_tUniqRow_1.QTD_SKU = copyOfmap.QTD_SKU;
new_tUniqRow_1.VL_TOTAL_SKU = copyOfmap.VL_TOTAL_SKU;
new_tUniqRow_1.VL_UNITARIO = copyOfmap.VL_UNITARIO;
new_tUniqRow_1.VL_DESCONTO = copyOfmap.VL_DESCONTO;
new_tUniqRow_1.VL_PRODUTOS_PEDIDO = copyOfmap.VL_PRODUTOS_PEDIDO;
new_tUniqRow_1.VL_FRETE = copyOfmap.VL_FRETE;
new_tUniqRow_1.VL_PEDIDO = copyOfmap.VL_PEDIDO;
new_tUniqRow_1.BASE_ICMS = copyOfmap.BASE_ICMS;
new_tUniqRow_1.VL_ICMS = copyOfmap.VL_ICMS;
if(copyOfmap.NOME_TRANSPORTADORA == null){
	new_tUniqRow_1.NOME_TRANSPORTADORA = null;
}else{
	new_tUniqRow_1.NOME_TRANSPORTADORA = copyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row7 == null){ 
	
	row7 = new row7Struct();
}row7.CD_CLIENTE = copyOfmap.CD_CLIENTE;			row7.NM_DOCUMENTO = copyOfmap.NM_DOCUMENTO;			row7.CD_EMPRESA = copyOfmap.CD_EMPRESA;			row7.VENDEDOR = copyOfmap.VENDEDOR;			row7.NOME_VENDEDOR = copyOfmap.NOME_VENDEDOR;			row7.PEDIDO_AUTCOM = copyOfmap.PEDIDO_AUTCOM;			row7.DESC_FULFILLMENT = copyOfmap.DESC_FULFILLMENT;			row7.TIPO_NOTA = copyOfmap.TIPO_NOTA;			row7.NUMERO_NOTA = copyOfmap.NUMERO_NOTA;			row7.SERIE_NOTA = copyOfmap.SERIE_NOTA;			row7.NOTA_DEVOLUCAO = copyOfmap.NOTA_DEVOLUCAO;			row7.NM_ROMANEIO = copyOfmap.NM_ROMANEIO;			row7.DT_PEDIDO = copyOfmap.DT_PEDIDO;			row7.CD_COMBO = copyOfmap.CD_COMBO;			row7.SKU = copyOfmap.SKU;			row7.DESC_SKU = copyOfmap.DESC_SKU;			row7.QTD_SKU = copyOfmap.QTD_SKU;			row7.VL_TOTAL_SKU = copyOfmap.VL_TOTAL_SKU;			row7.VL_UNITARIO = copyOfmap.VL_UNITARIO;			row7.VL_DESCONTO = copyOfmap.VL_DESCONTO;			row7.VL_PRODUTOS_PEDIDO = copyOfmap.VL_PRODUTOS_PEDIDO;			row7.VL_FRETE = copyOfmap.VL_FRETE;			row7.VL_PEDIDO = copyOfmap.VL_PEDIDO;			row7.BASE_ICMS = copyOfmap.BASE_ICMS;			row7.VL_ICMS = copyOfmap.VL_ICMS;			row7.NOME_TRANSPORTADORA = copyOfmap.NOME_TRANSPORTADORA;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_2.addRow();
									   				
	    				if(row7.CD_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(row7.CD_CLIENTE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.NM_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.NM_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.CD_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.CD_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.NOME_VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.NOME_VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.PEDIDO_AUTCOM != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.PEDIDO_AUTCOM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.DESC_FULFILLMENT != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.DESC_FULFILLMENT));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.TIPO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.TIPO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.NUMERO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.NUMERO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.SERIE_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.SERIE_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.NOTA_DEVOLUCAO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.NOTA_DEVOLUCAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.NM_ROMANEIO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.NM_ROMANEIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.DT_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.DT_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.CD_COMBO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.CD_COMBO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.SKU != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.DESC_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.DESC_SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.QTD_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.QTD_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_TOTAL_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_TOTAL_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_PRODUTOS_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_PRODUTOS_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.BASE_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.BASE_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.VL_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row7.VL_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row7.NOME_TRANSPORTADORA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row7.NOME_TRANSPORTADORA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */

} // End of branch "row7"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */

} // End of branch "copyOfmap"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfmap");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

							columnIndex_tFileOutputExcel_2 = 0;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 1;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 2;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 3;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 4;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 5;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 6;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 7;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 8;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 9;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 10;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 11;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 12;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 13;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 14;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 15;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 16;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 17;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 18;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 19;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 20;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 21;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 22;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 23;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 24;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 25;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
	
	
	
			xlsxTool_tFileOutputExcel_2.writeExcel(fileName_tFileOutputExcel_2,true);
	
		if(headerIsInserted_tFileOutputExcel_2 && nb_line_tFileOutputExcel_2 > 0){
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		}
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());




/**
 * [tFileOutputExcel_2 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tDBInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfmapStruct implements routines.system.IPersistableRow<copyOfcopyOfmapStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfmapStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
copyOfcopyOfmapStruct copyOfcopyOfmap = new copyOfcopyOfmapStruct();
row8Struct row8 = new row8Struct();






	
	/**
	 * [tFileOutputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_3", false);
		start_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tFileOutputExcel_3 = 0;
		


		
		int columnIndex_tFileOutputExcel_3 = 0;
		boolean headerIsInserted_tFileOutputExcel_3 = false;
		
		
		String fileName_tFileOutputExcel_3="/root/e_mail/MAGALU_REI_DAS_FERRAMENTAS_2024.xlsx";
		int nb_line_tFileOutputExcel_3 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_3 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_3.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_3.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_3.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_3.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_3.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_3.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_3 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_3 = chm_tFileOutputExcel_3.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_3", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_3) {
			
				xlsxTool_tFileOutputExcel_3.prepareXlsxFile(fileName_tFileOutputExcel_3);
			
		}
		
		xlsxTool_tFileOutputExcel_3.setFont("");
		
		if (xlsxTool_tFileOutputExcel_3.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_3.addRow();
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CD_CLIENTE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NM_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CD_EMPRESA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VENDEDOR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NOME_VENDEDOR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PEDIDO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("DESC_FULFILLMENT");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("TIPO_NOTA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NUMERO_NOTA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("SERIE_NOTA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NOTA_DEVOLUCAO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NM_ROMANEIO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("DT_PEDIDO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CD_COMBO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("SKU");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("DESC_SKU");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("QTD_SKU");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_TOTAL_SKU");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_UNITARIO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_DESCONTO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_PRODUTOS_PEDIDO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_FRETE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("BASE_ICMS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VL_ICMS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NOME_TRANSPORTADORA");
		
		nb_line_tFileOutputExcel_3++;
		headerIsInserted_tFileOutputExcel_3 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_3 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfmap");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer CD_CLIENTE;
					String NM_DOCUMENTO;
					String CD_EMPRESA;
					String VENDEDOR;
					String NOME_VENDEDOR;
					String PEDIDO_AUTCOM;
					String DESC_FULFILLMENT;
					String TIPO_NOTA;
					String NUMERO_NOTA;
					String SERIE_NOTA;
					String NOTA_DEVOLUCAO;
					String NM_ROMANEIO;
					String DT_PEDIDO;
					String CD_COMBO;
					String SKU;
					String DESC_SKU;
					Double QTD_SKU;
					Double VL_TOTAL_SKU;
					Double VL_UNITARIO;
					Double VL_DESCONTO;
					Double VL_PRODUTOS_PEDIDO;
					Double VL_FRETE;
					Double VL_PEDIDO;
					Double BASE_ICMS;
					Double VL_ICMS;
					String NOME_TRANSPORTADORA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_CLIENTE == null) ? 0 : this.CD_CLIENTE.hashCode());
								
								result = prime * result + ((this.NM_DOCUMENTO == null) ? 0 : this.NM_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
								result = prime * result + ((this.VENDEDOR == null) ? 0 : this.VENDEDOR.hashCode());
								
								result = prime * result + ((this.NOME_VENDEDOR == null) ? 0 : this.NOME_VENDEDOR.hashCode());
								
								result = prime * result + ((this.PEDIDO_AUTCOM == null) ? 0 : this.PEDIDO_AUTCOM.hashCode());
								
								result = prime * result + ((this.DESC_FULFILLMENT == null) ? 0 : this.DESC_FULFILLMENT.hashCode());
								
								result = prime * result + ((this.TIPO_NOTA == null) ? 0 : this.TIPO_NOTA.hashCode());
								
								result = prime * result + ((this.NUMERO_NOTA == null) ? 0 : this.NUMERO_NOTA.hashCode());
								
								result = prime * result + ((this.SERIE_NOTA == null) ? 0 : this.SERIE_NOTA.hashCode());
								
								result = prime * result + ((this.NOTA_DEVOLUCAO == null) ? 0 : this.NOTA_DEVOLUCAO.hashCode());
								
								result = prime * result + ((this.NM_ROMANEIO == null) ? 0 : this.NM_ROMANEIO.hashCode());
								
								result = prime * result + ((this.DT_PEDIDO == null) ? 0 : this.DT_PEDIDO.hashCode());
								
								result = prime * result + ((this.CD_COMBO == null) ? 0 : this.CD_COMBO.hashCode());
								
								result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
								
								result = prime * result + ((this.DESC_SKU == null) ? 0 : this.DESC_SKU.hashCode());
								
								result = prime * result + ((this.QTD_SKU == null) ? 0 : this.QTD_SKU.hashCode());
								
								result = prime * result + ((this.VL_TOTAL_SKU == null) ? 0 : this.VL_TOTAL_SKU.hashCode());
								
								result = prime * result + ((this.VL_UNITARIO == null) ? 0 : this.VL_UNITARIO.hashCode());
								
								result = prime * result + ((this.VL_DESCONTO == null) ? 0 : this.VL_DESCONTO.hashCode());
								
								result = prime * result + ((this.VL_PRODUTOS_PEDIDO == null) ? 0 : this.VL_PRODUTOS_PEDIDO.hashCode());
								
								result = prime * result + ((this.VL_FRETE == null) ? 0 : this.VL_FRETE.hashCode());
								
								result = prime * result + ((this.VL_PEDIDO == null) ? 0 : this.VL_PEDIDO.hashCode());
								
								result = prime * result + ((this.BASE_ICMS == null) ? 0 : this.BASE_ICMS.hashCode());
								
								result = prime * result + ((this.VL_ICMS == null) ? 0 : this.VL_ICMS.hashCode());
								
								result = prime * result + ((this.NOME_TRANSPORTADORA == null) ? 0 : this.NOME_TRANSPORTADORA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.CD_CLIENTE == null) {
										if (other.CD_CLIENTE != null) 
											return false;
								
									} else if (!this.CD_CLIENTE.equals(other.CD_CLIENTE))
								 
										return false;
								
									if (this.NM_DOCUMENTO == null) {
										if (other.NM_DOCUMENTO != null) 
											return false;
								
									} else if (!this.NM_DOCUMENTO.equals(other.NM_DOCUMENTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
									if (this.VENDEDOR == null) {
										if (other.VENDEDOR != null) 
											return false;
								
									} else if (!this.VENDEDOR.equals(other.VENDEDOR))
								 
										return false;
								
									if (this.NOME_VENDEDOR == null) {
										if (other.NOME_VENDEDOR != null) 
											return false;
								
									} else if (!this.NOME_VENDEDOR.equals(other.NOME_VENDEDOR))
								 
										return false;
								
									if (this.PEDIDO_AUTCOM == null) {
										if (other.PEDIDO_AUTCOM != null) 
											return false;
								
									} else if (!this.PEDIDO_AUTCOM.equals(other.PEDIDO_AUTCOM))
								 
										return false;
								
									if (this.DESC_FULFILLMENT == null) {
										if (other.DESC_FULFILLMENT != null) 
											return false;
								
									} else if (!this.DESC_FULFILLMENT.equals(other.DESC_FULFILLMENT))
								 
										return false;
								
									if (this.TIPO_NOTA == null) {
										if (other.TIPO_NOTA != null) 
											return false;
								
									} else if (!this.TIPO_NOTA.equals(other.TIPO_NOTA))
								 
										return false;
								
									if (this.NUMERO_NOTA == null) {
										if (other.NUMERO_NOTA != null) 
											return false;
								
									} else if (!this.NUMERO_NOTA.equals(other.NUMERO_NOTA))
								 
										return false;
								
									if (this.SERIE_NOTA == null) {
										if (other.SERIE_NOTA != null) 
											return false;
								
									} else if (!this.SERIE_NOTA.equals(other.SERIE_NOTA))
								 
										return false;
								
									if (this.NOTA_DEVOLUCAO == null) {
										if (other.NOTA_DEVOLUCAO != null) 
											return false;
								
									} else if (!this.NOTA_DEVOLUCAO.equals(other.NOTA_DEVOLUCAO))
								 
										return false;
								
									if (this.NM_ROMANEIO == null) {
										if (other.NM_ROMANEIO != null) 
											return false;
								
									} else if (!this.NM_ROMANEIO.equals(other.NM_ROMANEIO))
								 
										return false;
								
									if (this.DT_PEDIDO == null) {
										if (other.DT_PEDIDO != null) 
											return false;
								
									} else if (!this.DT_PEDIDO.equals(other.DT_PEDIDO))
								 
										return false;
								
									if (this.CD_COMBO == null) {
										if (other.CD_COMBO != null) 
											return false;
								
									} else if (!this.CD_COMBO.equals(other.CD_COMBO))
								 
										return false;
								
									if (this.SKU == null) {
										if (other.SKU != null) 
											return false;
								
									} else if (!this.SKU.equals(other.SKU))
								 
										return false;
								
									if (this.DESC_SKU == null) {
										if (other.DESC_SKU != null) 
											return false;
								
									} else if (!this.DESC_SKU.equals(other.DESC_SKU))
								 
										return false;
								
									if (this.QTD_SKU == null) {
										if (other.QTD_SKU != null) 
											return false;
								
									} else if (!this.QTD_SKU.equals(other.QTD_SKU))
								 
										return false;
								
									if (this.VL_TOTAL_SKU == null) {
										if (other.VL_TOTAL_SKU != null) 
											return false;
								
									} else if (!this.VL_TOTAL_SKU.equals(other.VL_TOTAL_SKU))
								 
										return false;
								
									if (this.VL_UNITARIO == null) {
										if (other.VL_UNITARIO != null) 
											return false;
								
									} else if (!this.VL_UNITARIO.equals(other.VL_UNITARIO))
								 
										return false;
								
									if (this.VL_DESCONTO == null) {
										if (other.VL_DESCONTO != null) 
											return false;
								
									} else if (!this.VL_DESCONTO.equals(other.VL_DESCONTO))
								 
										return false;
								
									if (this.VL_PRODUTOS_PEDIDO == null) {
										if (other.VL_PRODUTOS_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PRODUTOS_PEDIDO.equals(other.VL_PRODUTOS_PEDIDO))
								 
										return false;
								
									if (this.VL_FRETE == null) {
										if (other.VL_FRETE != null) 
											return false;
								
									} else if (!this.VL_FRETE.equals(other.VL_FRETE))
								 
										return false;
								
									if (this.VL_PEDIDO == null) {
										if (other.VL_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PEDIDO.equals(other.VL_PEDIDO))
								 
										return false;
								
									if (this.BASE_ICMS == null) {
										if (other.BASE_ICMS != null) 
											return false;
								
									} else if (!this.BASE_ICMS.equals(other.BASE_ICMS))
								 
										return false;
								
									if (this.VL_ICMS == null) {
										if (other.VL_ICMS != null) 
											return false;
								
									} else if (!this.VL_ICMS.equals(other.VL_ICMS))
								 
										return false;
								
									if (this.NOME_TRANSPORTADORA == null) {
										if (other.NOME_TRANSPORTADORA != null) 
											return false;
								
									} else if (!this.NOME_TRANSPORTADORA.equals(other.NOME_TRANSPORTADORA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfmapStruct copyOfcopyOfmap_tmp = new copyOfcopyOfmapStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_3 = java.util.Calendar.getInstance();
		    calendar_tDBInput_3.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_3 = calendar_tDBInput_3.getTime();
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "SELECT MG.GER_CODCLI CD_CLIENTE,\n       CL.CLI_C_G_C_ NM_DOCUMENTO,\n	   MG.GER_CODEMP CD_EMPRESA,\n	   MG.GER_CODVEN "
+"VENDEDOR,\n	   OP.OPE_NOMOPE NOME_VENDEDOR,\n       FG.FGO_NUMDOC PEDIDO_AUTCOM,\n       FG.FGO_NUMPOK DESC_FULFILLMENT	"
+",\n       MG.GER_ESPDOC TIPO_NOTA,\n       MG.GER_NUMDOC NUMERO_NOTA,\n       MG.GER_SERIE_ SERIE_NOTA,\n       (SELECT "
+"MAX( DEV.DET_NUMDOC) FROM MOVDET DEV\n           WHERE DEV.DET_DOCDEV = MG.GER_NUMDOC \n           AND DEV.DET_EMPDEV = "
+"MG.GER_CODEMP \n           AND DEV.DET_ESPDEV = MG.GER_ESPDOC \n           AND DEV.DET_CODVEN = MG.GER_CODVEN\n         "
+"  LIMIT 1) NOTA_DEVOLUCAO,\n           MG.GER_NUMROM NM_ROMANEIO,\n       CONCAT( MG.GER_DTAENT ,' ',MG.GER_HORENT) DT_P"
+"EDIDO,\n(SELECT ED.FDO_ITEEST FROM FATDOR FD, EXTDOR ED\n   WHERE FG.AUTOINCREM = FD.FDO_SEQGER\n     AND FD.AUTOINCREM "
+"= ED.FDO_SEQFDO\n     LIMIT 1) AS CD_COMBO,\n       DET.DET_CODITE SKU ,\n       DET.DET_DESCRI DESC_SKU,\n       DET.DE"
+"T_QTDITE QTD_SKU,\n       (DET.DET_QTDITE * DET.DET_UNITAR) VL_TOTAL_SKU,\n       DET.DET_UNITAR VL_UNITARIO,       \n  "
+"     DET_DESESP VL_DESCONTO ,\n       MG.GER_TOTPRO VL_PRODUTOS_PEDIDO,\n       MG.GER_TOTFRE VL_FRETE,\n       MG.GER_V"
+"LRCON VL_PEDIDO,\n       MG.GER_BASICM BASE_ICMS,\n       MG.GER_TOTICM VL_ICMS,\n       TRA.TRA_NOMTRA NOME_TRANSPORTAD"
+"ORA\n  FROM MOVGER MG\n LEFT JOIN CADCLI CL ON CL.CLI_CODCLI = MG.GER_CODCLI \n LEFT JOIN CADTRA TRA ON TRA.TRA_CODTRA ="
+" MG.GER_CODTRA\n LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = MG.GER_CODVEN \n LEFT JOIN MOVDET DET ON DET.DET_NUMDOC = MG.GER"
+"_NUMDOC AND DET.DET_CODEMP = MG.GER_CODEMP AND DET.DET_SERIE_ = MG.GER_SERIE_ \n LEFT JOIN FATGOR FG ON MG.GER_NUMDOC = "
+"FG.FGO_NUMFAT AND MG.GER_ESPDOC = FG.FGO_TIPFAT AND MG.GER_CODEMP = FG.FGO_EMPFAT AND MG.GER_CODCLI = FG.FGO_CODCLI\nWHE"
+"RE MG.GER_CODVEN IN ('946')\n  AND MG.GER_CODEMP = '201'\n  AND MG.GER_DTAENT >= '2024-01-01';";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row3.CD_CLIENTE = null;
							} else {
		                          
            row3.CD_CLIENTE = rs_tDBInput_3.getInt(1);
            if(rs_tDBInput_3.wasNull()){
                    row3.CD_CLIENTE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row3.NM_DOCUMENTO = null;
							} else {
	                         		
        	row3.NM_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row3.CD_EMPRESA = null;
							} else {
	                         		
        	row3.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row3.VENDEDOR = null;
							} else {
	                         		
        	row3.VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_3, 4, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 5) {
								row3.NOME_VENDEDOR = null;
							} else {
	                         		
        	row3.NOME_VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_3, 5, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 6) {
								row3.PEDIDO_AUTCOM = null;
							} else {
	                         		
        	row3.PEDIDO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_3, 6, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 7) {
								row3.DESC_FULFILLMENT = null;
							} else {
	                         		
        	row3.DESC_FULFILLMENT = routines.system.JDBCUtil.getString(rs_tDBInput_3, 7, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 8) {
								row3.TIPO_NOTA = null;
							} else {
	                         		
        	row3.TIPO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 8, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 9) {
								row3.NUMERO_NOTA = null;
							} else {
	                         		
        	row3.NUMERO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 9, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 10) {
								row3.SERIE_NOTA = null;
							} else {
	                         		
        	row3.SERIE_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 10, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 11) {
								row3.NOTA_DEVOLUCAO = null;
							} else {
	                         		
        	row3.NOTA_DEVOLUCAO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 11, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 12) {
								row3.NM_ROMANEIO = null;
							} else {
	                         		
        	row3.NM_ROMANEIO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 12, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 13) {
								row3.DT_PEDIDO = null;
							} else {
	                         		
        	row3.DT_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 13, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 14) {
								row3.CD_COMBO = null;
							} else {
	                         		
        	row3.CD_COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 14, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 15) {
								row3.SKU = null;
							} else {
	                         		
        	row3.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_3, 15, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 16) {
								row3.DESC_SKU = null;
							} else {
	                         		
        	row3.DESC_SKU = routines.system.JDBCUtil.getString(rs_tDBInput_3, 16, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 17) {
								row3.QTD_SKU = null;
							} else {
	                         		
            row3.QTD_SKU = rs_tDBInput_3.getDouble(17);
            if(rs_tDBInput_3.wasNull()){
                    row3.QTD_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 18) {
								row3.VL_TOTAL_SKU = null;
							} else {
	                         		
            row3.VL_TOTAL_SKU = rs_tDBInput_3.getDouble(18);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_TOTAL_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 19) {
								row3.VL_UNITARIO = null;
							} else {
	                         		
            row3.VL_UNITARIO = rs_tDBInput_3.getDouble(19);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 20) {
								row3.VL_DESCONTO = null;
							} else {
	                         		
            row3.VL_DESCONTO = rs_tDBInput_3.getDouble(20);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 21) {
								row3.VL_PRODUTOS_PEDIDO = null;
							} else {
	                         		
            row3.VL_PRODUTOS_PEDIDO = rs_tDBInput_3.getDouble(21);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_PRODUTOS_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 22) {
								row3.VL_FRETE = null;
							} else {
	                         		
            row3.VL_FRETE = rs_tDBInput_3.getDouble(22);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 23) {
								row3.VL_PEDIDO = null;
							} else {
	                         		
            row3.VL_PEDIDO = rs_tDBInput_3.getDouble(23);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 24) {
								row3.BASE_ICMS = null;
							} else {
	                         		
            row3.BASE_ICMS = rs_tDBInput_3.getDouble(24);
            if(rs_tDBInput_3.wasNull()){
                    row3.BASE_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 25) {
								row3.VL_ICMS = null;
							} else {
	                         		
            row3.VL_ICMS = rs_tDBInput_3.getDouble(25);
            if(rs_tDBInput_3.wasNull()){
                    row3.VL_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 26) {
								row3.NOME_TRANSPORTADORA = null;
							} else {
	                         		
        	row3.NOME_TRANSPORTADORA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 26, false);
		                    }
					

 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfmap = null;


// # Output table : 'copyOfcopyOfmap'
copyOfcopyOfmap_tmp.CD_CLIENTE = row3.CD_CLIENTE ;
copyOfcopyOfmap_tmp.NM_DOCUMENTO = row3.NM_DOCUMENTO ;
copyOfcopyOfmap_tmp.CD_EMPRESA = row3.CD_EMPRESA ;
copyOfcopyOfmap_tmp.VENDEDOR = row3.VENDEDOR ;
copyOfcopyOfmap_tmp.NOME_VENDEDOR = row3.NOME_VENDEDOR ;
copyOfcopyOfmap_tmp.PEDIDO_AUTCOM = row3.PEDIDO_AUTCOM ;
copyOfcopyOfmap_tmp.DESC_FULFILLMENT = row3.DESC_FULFILLMENT ;
copyOfcopyOfmap_tmp.TIPO_NOTA = row3.TIPO_NOTA ;
copyOfcopyOfmap_tmp.NUMERO_NOTA = row3.NUMERO_NOTA ;
copyOfcopyOfmap_tmp.SERIE_NOTA = row3.SERIE_NOTA ;
copyOfcopyOfmap_tmp.NOTA_DEVOLUCAO = row3.NOTA_DEVOLUCAO ;
copyOfcopyOfmap_tmp.NM_ROMANEIO = row3.NM_ROMANEIO ;
copyOfcopyOfmap_tmp.DT_PEDIDO = row3.DT_PEDIDO ;
copyOfcopyOfmap_tmp.CD_COMBO = row3.CD_COMBO ;
copyOfcopyOfmap_tmp.SKU = row3.SKU ;
copyOfcopyOfmap_tmp.DESC_SKU = row3.DESC_SKU ;
copyOfcopyOfmap_tmp.QTD_SKU = row3.QTD_SKU ;
copyOfcopyOfmap_tmp.VL_TOTAL_SKU = row3.VL_TOTAL_SKU ;
copyOfcopyOfmap_tmp.VL_UNITARIO = row3.VL_UNITARIO ;
copyOfcopyOfmap_tmp.VL_DESCONTO = row3.VL_DESCONTO ;
copyOfcopyOfmap_tmp.VL_PRODUTOS_PEDIDO = row3.VL_PRODUTOS_PEDIDO ;
copyOfcopyOfmap_tmp.VL_FRETE = row3.VL_FRETE ;
copyOfcopyOfmap_tmp.VL_PEDIDO = row3.VL_PEDIDO ;
copyOfcopyOfmap_tmp.BASE_ICMS = row3.BASE_ICMS ;
copyOfcopyOfmap_tmp.VL_ICMS = row3.VL_ICMS ;
copyOfcopyOfmap_tmp.NOME_TRANSPORTADORA = row3.NOME_TRANSPORTADORA ;
copyOfcopyOfmap = copyOfcopyOfmap_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfmap"
if(copyOfcopyOfmap != null) { 



	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfmap"
						
						);
					}
					
row8 = null;			
finder_tUniqRow_2.CD_CLIENTE = copyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfmap.NM_DOCUMENTO == null){
	finder_tUniqRow_2.NM_DOCUMENTO = null;
}else{
	finder_tUniqRow_2.NM_DOCUMENTO = copyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfmap.CD_EMPRESA == null){
	finder_tUniqRow_2.CD_EMPRESA = null;
}else{
	finder_tUniqRow_2.CD_EMPRESA = copyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfmap.VENDEDOR == null){
	finder_tUniqRow_2.VENDEDOR = null;
}else{
	finder_tUniqRow_2.VENDEDOR = copyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap.NOME_VENDEDOR == null){
	finder_tUniqRow_2.NOME_VENDEDOR = null;
}else{
	finder_tUniqRow_2.NOME_VENDEDOR = copyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap.PEDIDO_AUTCOM == null){
	finder_tUniqRow_2.PEDIDO_AUTCOM = null;
}else{
	finder_tUniqRow_2.PEDIDO_AUTCOM = copyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfmap.DESC_FULFILLMENT == null){
	finder_tUniqRow_2.DESC_FULFILLMENT = null;
}else{
	finder_tUniqRow_2.DESC_FULFILLMENT = copyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfmap.TIPO_NOTA == null){
	finder_tUniqRow_2.TIPO_NOTA = null;
}else{
	finder_tUniqRow_2.TIPO_NOTA = copyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap.NUMERO_NOTA == null){
	finder_tUniqRow_2.NUMERO_NOTA = null;
}else{
	finder_tUniqRow_2.NUMERO_NOTA = copyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap.SERIE_NOTA == null){
	finder_tUniqRow_2.SERIE_NOTA = null;
}else{
	finder_tUniqRow_2.SERIE_NOTA = copyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	finder_tUniqRow_2.NOTA_DEVOLUCAO = null;
}else{
	finder_tUniqRow_2.NOTA_DEVOLUCAO = copyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfmap.NM_ROMANEIO == null){
	finder_tUniqRow_2.NM_ROMANEIO = null;
}else{
	finder_tUniqRow_2.NM_ROMANEIO = copyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfmap.DT_PEDIDO == null){
	finder_tUniqRow_2.DT_PEDIDO = null;
}else{
	finder_tUniqRow_2.DT_PEDIDO = copyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfmap.CD_COMBO == null){
	finder_tUniqRow_2.CD_COMBO = null;
}else{
	finder_tUniqRow_2.CD_COMBO = copyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfmap.SKU == null){
	finder_tUniqRow_2.SKU = null;
}else{
	finder_tUniqRow_2.SKU = copyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfmap.DESC_SKU == null){
	finder_tUniqRow_2.DESC_SKU = null;
}else{
	finder_tUniqRow_2.DESC_SKU = copyOfcopyOfmap.DESC_SKU.toLowerCase();
}
finder_tUniqRow_2.QTD_SKU = copyOfcopyOfmap.QTD_SKU;
finder_tUniqRow_2.VL_TOTAL_SKU = copyOfcopyOfmap.VL_TOTAL_SKU;
finder_tUniqRow_2.VL_UNITARIO = copyOfcopyOfmap.VL_UNITARIO;
finder_tUniqRow_2.VL_DESCONTO = copyOfcopyOfmap.VL_DESCONTO;
finder_tUniqRow_2.VL_PRODUTOS_PEDIDO = copyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
finder_tUniqRow_2.VL_FRETE = copyOfcopyOfmap.VL_FRETE;
finder_tUniqRow_2.VL_PEDIDO = copyOfcopyOfmap.VL_PEDIDO;
finder_tUniqRow_2.BASE_ICMS = copyOfcopyOfmap.BASE_ICMS;
finder_tUniqRow_2.VL_ICMS = copyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	finder_tUniqRow_2.NOME_TRANSPORTADORA = null;
}else{
	finder_tUniqRow_2.NOME_TRANSPORTADORA = copyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
new_tUniqRow_2.CD_CLIENTE = copyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfmap.NM_DOCUMENTO == null){
	new_tUniqRow_2.NM_DOCUMENTO = null;
}else{
	new_tUniqRow_2.NM_DOCUMENTO = copyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfmap.CD_EMPRESA == null){
	new_tUniqRow_2.CD_EMPRESA = null;
}else{
	new_tUniqRow_2.CD_EMPRESA = copyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfmap.VENDEDOR == null){
	new_tUniqRow_2.VENDEDOR = null;
}else{
	new_tUniqRow_2.VENDEDOR = copyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap.NOME_VENDEDOR == null){
	new_tUniqRow_2.NOME_VENDEDOR = null;
}else{
	new_tUniqRow_2.NOME_VENDEDOR = copyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap.PEDIDO_AUTCOM == null){
	new_tUniqRow_2.PEDIDO_AUTCOM = null;
}else{
	new_tUniqRow_2.PEDIDO_AUTCOM = copyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfmap.DESC_FULFILLMENT == null){
	new_tUniqRow_2.DESC_FULFILLMENT = null;
}else{
	new_tUniqRow_2.DESC_FULFILLMENT = copyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfmap.TIPO_NOTA == null){
	new_tUniqRow_2.TIPO_NOTA = null;
}else{
	new_tUniqRow_2.TIPO_NOTA = copyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap.NUMERO_NOTA == null){
	new_tUniqRow_2.NUMERO_NOTA = null;
}else{
	new_tUniqRow_2.NUMERO_NOTA = copyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap.SERIE_NOTA == null){
	new_tUniqRow_2.SERIE_NOTA = null;
}else{
	new_tUniqRow_2.SERIE_NOTA = copyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	new_tUniqRow_2.NOTA_DEVOLUCAO = null;
}else{
	new_tUniqRow_2.NOTA_DEVOLUCAO = copyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfmap.NM_ROMANEIO == null){
	new_tUniqRow_2.NM_ROMANEIO = null;
}else{
	new_tUniqRow_2.NM_ROMANEIO = copyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfmap.DT_PEDIDO == null){
	new_tUniqRow_2.DT_PEDIDO = null;
}else{
	new_tUniqRow_2.DT_PEDIDO = copyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfmap.CD_COMBO == null){
	new_tUniqRow_2.CD_COMBO = null;
}else{
	new_tUniqRow_2.CD_COMBO = copyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfmap.SKU == null){
	new_tUniqRow_2.SKU = null;
}else{
	new_tUniqRow_2.SKU = copyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfmap.DESC_SKU == null){
	new_tUniqRow_2.DESC_SKU = null;
}else{
	new_tUniqRow_2.DESC_SKU = copyOfcopyOfmap.DESC_SKU.toLowerCase();
}
new_tUniqRow_2.QTD_SKU = copyOfcopyOfmap.QTD_SKU;
new_tUniqRow_2.VL_TOTAL_SKU = copyOfcopyOfmap.VL_TOTAL_SKU;
new_tUniqRow_2.VL_UNITARIO = copyOfcopyOfmap.VL_UNITARIO;
new_tUniqRow_2.VL_DESCONTO = copyOfcopyOfmap.VL_DESCONTO;
new_tUniqRow_2.VL_PRODUTOS_PEDIDO = copyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
new_tUniqRow_2.VL_FRETE = copyOfcopyOfmap.VL_FRETE;
new_tUniqRow_2.VL_PEDIDO = copyOfcopyOfmap.VL_PEDIDO;
new_tUniqRow_2.BASE_ICMS = copyOfcopyOfmap.BASE_ICMS;
new_tUniqRow_2.VL_ICMS = copyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	new_tUniqRow_2.NOME_TRANSPORTADORA = null;
}else{
	new_tUniqRow_2.NOME_TRANSPORTADORA = copyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row8 == null){ 
	
	row8 = new row8Struct();
}row8.CD_CLIENTE = copyOfcopyOfmap.CD_CLIENTE;			row8.NM_DOCUMENTO = copyOfcopyOfmap.NM_DOCUMENTO;			row8.CD_EMPRESA = copyOfcopyOfmap.CD_EMPRESA;			row8.VENDEDOR = copyOfcopyOfmap.VENDEDOR;			row8.NOME_VENDEDOR = copyOfcopyOfmap.NOME_VENDEDOR;			row8.PEDIDO_AUTCOM = copyOfcopyOfmap.PEDIDO_AUTCOM;			row8.DESC_FULFILLMENT = copyOfcopyOfmap.DESC_FULFILLMENT;			row8.TIPO_NOTA = copyOfcopyOfmap.TIPO_NOTA;			row8.NUMERO_NOTA = copyOfcopyOfmap.NUMERO_NOTA;			row8.SERIE_NOTA = copyOfcopyOfmap.SERIE_NOTA;			row8.NOTA_DEVOLUCAO = copyOfcopyOfmap.NOTA_DEVOLUCAO;			row8.NM_ROMANEIO = copyOfcopyOfmap.NM_ROMANEIO;			row8.DT_PEDIDO = copyOfcopyOfmap.DT_PEDIDO;			row8.CD_COMBO = copyOfcopyOfmap.CD_COMBO;			row8.SKU = copyOfcopyOfmap.SKU;			row8.DESC_SKU = copyOfcopyOfmap.DESC_SKU;			row8.QTD_SKU = copyOfcopyOfmap.QTD_SKU;			row8.VL_TOTAL_SKU = copyOfcopyOfmap.VL_TOTAL_SKU;			row8.VL_UNITARIO = copyOfcopyOfmap.VL_UNITARIO;			row8.VL_DESCONTO = copyOfcopyOfmap.VL_DESCONTO;			row8.VL_PRODUTOS_PEDIDO = copyOfcopyOfmap.VL_PRODUTOS_PEDIDO;			row8.VL_FRETE = copyOfcopyOfmap.VL_FRETE;			row8.VL_PEDIDO = copyOfcopyOfmap.VL_PEDIDO;			row8.BASE_ICMS = copyOfcopyOfmap.BASE_ICMS;			row8.VL_ICMS = copyOfcopyOfmap.VL_ICMS;			row8.NOME_TRANSPORTADORA = copyOfcopyOfmap.NOME_TRANSPORTADORA;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row8"
if(row8 != null) { 



	
	/**
	 * [tFileOutputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_3.addRow();
									   				
	    				if(row8.CD_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(Double.parseDouble(String.valueOf(row8.CD_CLIENTE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.NM_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.NM_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.CD_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.CD_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.NOME_VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.NOME_VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.PEDIDO_AUTCOM != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.PEDIDO_AUTCOM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.DESC_FULFILLMENT != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.DESC_FULFILLMENT));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.TIPO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.TIPO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.NUMERO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.NUMERO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.SERIE_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.SERIE_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.NOTA_DEVOLUCAO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.NOTA_DEVOLUCAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.NM_ROMANEIO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.NM_ROMANEIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.DT_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.DT_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.CD_COMBO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.CD_COMBO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.SKU != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.DESC_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.DESC_SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.QTD_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.QTD_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_TOTAL_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_TOTAL_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_PRODUTOS_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_PRODUTOS_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.BASE_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.BASE_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.VL_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(row8.VL_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row8.NOME_TRANSPORTADORA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(row8.NOME_TRANSPORTADORA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_3++;
				
 


	tos_count_tFileOutputExcel_3++;

/**
 * [tFileOutputExcel_3 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_end ] stop
 */

} // End of branch "row8"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfmap"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);

 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfmap");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

							columnIndex_tFileOutputExcel_3 = 0;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 1;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 2;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 3;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 4;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 5;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 6;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 7;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 8;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 9;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 10;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 11;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 12;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 13;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 14;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 15;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 16;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 17;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 18;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 19;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 20;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 21;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 22;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 23;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 24;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 25;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
	
	
	
			xlsxTool_tFileOutputExcel_3.writeExcel(fileName_tFileOutputExcel_3,true);
	
		if(headerIsInserted_tFileOutputExcel_3 && nb_line_tFileOutputExcel_3 > 0){
			nb_line_tFileOutputExcel_3 = nb_line_tFileOutputExcel_3 -1;
		}
		globalMap.put("tFileOutputExcel_3_NB_LINE",nb_line_tFileOutputExcel_3);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_3", true);
end_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());




/**
 * [tFileOutputExcel_3 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tDBInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfmap_0Struct implements routines.system.IPersistableRow<copyOfcopyOfmap_0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfmap_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();
copyOfcopyOfmap_0Struct copyOfcopyOfmap_0 = new copyOfcopyOfmap_0Struct();
row10Struct row10 = new row10Struct();






	
	/**
	 * [tFileOutputExcel_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_4", false);
		start_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tFileOutputExcel_4 = 0;
		


		
		int columnIndex_tFileOutputExcel_4 = 0;
		boolean headerIsInserted_tFileOutputExcel_4 = false;
		
		
		String fileName_tFileOutputExcel_4="/root/e_mail/MAGAZINE_LUIZA_FULL_FILLMENT_2024.xlsx";
		int nb_line_tFileOutputExcel_4 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_4 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_4.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_4.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_4.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_4.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_4.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_4.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_4 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_4 = chm_tFileOutputExcel_4.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_4", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_4) {
			
				xlsxTool_tFileOutputExcel_4.prepareXlsxFile(fileName_tFileOutputExcel_4);
			
		}
		
		xlsxTool_tFileOutputExcel_4.setFont("");
		
		if (xlsxTool_tFileOutputExcel_4.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_4.addRow();
		
		xlsxTool_tFileOutputExcel_4.addCellValue("CD_CLIENTE");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("NM_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("CD_EMPRESA");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VENDEDOR");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("NOME_VENDEDOR");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("PEDIDO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("DESC_FULFILLMENT");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("TIPO_NOTA");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("NUMERO_NOTA");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("SERIE_NOTA");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("NOTA_DEVOLUCAO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("NM_ROMANEIO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("DT_PEDIDO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("CD_COMBO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("SKU");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("DESC_SKU");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("QTD_SKU");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_TOTAL_SKU");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_UNITARIO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_DESCONTO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_PRODUTOS_PEDIDO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_FRETE");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("BASE_ICMS");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VL_ICMS");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("NOME_TRANSPORTADORA");
		
		nb_line_tFileOutputExcel_4++;
		headerIsInserted_tFileOutputExcel_4 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_4 begin ] stop
 */



	
	/**
	 * [tUniqRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_3", false);
		start_Hash.put("tUniqRow_3", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfmap_0");
					}
				
		int tos_count_tUniqRow_3 = 0;
		

	
		class KeyStruct_tUniqRow_3 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer CD_CLIENTE;
					String NM_DOCUMENTO;
					String CD_EMPRESA;
					String VENDEDOR;
					String NOME_VENDEDOR;
					String PEDIDO_AUTCOM;
					String DESC_FULFILLMENT;
					String TIPO_NOTA;
					String NUMERO_NOTA;
					String SERIE_NOTA;
					String NOTA_DEVOLUCAO;
					String NM_ROMANEIO;
					String DT_PEDIDO;
					String CD_COMBO;
					String SKU;
					String DESC_SKU;
					Double QTD_SKU;
					Double VL_TOTAL_SKU;
					Double VL_UNITARIO;
					Double VL_DESCONTO;
					Double VL_PRODUTOS_PEDIDO;
					Double VL_FRETE;
					Double VL_PEDIDO;
					Double BASE_ICMS;
					Double VL_ICMS;
					String NOME_TRANSPORTADORA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_CLIENTE == null) ? 0 : this.CD_CLIENTE.hashCode());
								
								result = prime * result + ((this.NM_DOCUMENTO == null) ? 0 : this.NM_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
								result = prime * result + ((this.VENDEDOR == null) ? 0 : this.VENDEDOR.hashCode());
								
								result = prime * result + ((this.NOME_VENDEDOR == null) ? 0 : this.NOME_VENDEDOR.hashCode());
								
								result = prime * result + ((this.PEDIDO_AUTCOM == null) ? 0 : this.PEDIDO_AUTCOM.hashCode());
								
								result = prime * result + ((this.DESC_FULFILLMENT == null) ? 0 : this.DESC_FULFILLMENT.hashCode());
								
								result = prime * result + ((this.TIPO_NOTA == null) ? 0 : this.TIPO_NOTA.hashCode());
								
								result = prime * result + ((this.NUMERO_NOTA == null) ? 0 : this.NUMERO_NOTA.hashCode());
								
								result = prime * result + ((this.SERIE_NOTA == null) ? 0 : this.SERIE_NOTA.hashCode());
								
								result = prime * result + ((this.NOTA_DEVOLUCAO == null) ? 0 : this.NOTA_DEVOLUCAO.hashCode());
								
								result = prime * result + ((this.NM_ROMANEIO == null) ? 0 : this.NM_ROMANEIO.hashCode());
								
								result = prime * result + ((this.DT_PEDIDO == null) ? 0 : this.DT_PEDIDO.hashCode());
								
								result = prime * result + ((this.CD_COMBO == null) ? 0 : this.CD_COMBO.hashCode());
								
								result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
								
								result = prime * result + ((this.DESC_SKU == null) ? 0 : this.DESC_SKU.hashCode());
								
								result = prime * result + ((this.QTD_SKU == null) ? 0 : this.QTD_SKU.hashCode());
								
								result = prime * result + ((this.VL_TOTAL_SKU == null) ? 0 : this.VL_TOTAL_SKU.hashCode());
								
								result = prime * result + ((this.VL_UNITARIO == null) ? 0 : this.VL_UNITARIO.hashCode());
								
								result = prime * result + ((this.VL_DESCONTO == null) ? 0 : this.VL_DESCONTO.hashCode());
								
								result = prime * result + ((this.VL_PRODUTOS_PEDIDO == null) ? 0 : this.VL_PRODUTOS_PEDIDO.hashCode());
								
								result = prime * result + ((this.VL_FRETE == null) ? 0 : this.VL_FRETE.hashCode());
								
								result = prime * result + ((this.VL_PEDIDO == null) ? 0 : this.VL_PEDIDO.hashCode());
								
								result = prime * result + ((this.BASE_ICMS == null) ? 0 : this.BASE_ICMS.hashCode());
								
								result = prime * result + ((this.VL_ICMS == null) ? 0 : this.VL_ICMS.hashCode());
								
								result = prime * result + ((this.NOME_TRANSPORTADORA == null) ? 0 : this.NOME_TRANSPORTADORA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;
				
									if (this.CD_CLIENTE == null) {
										if (other.CD_CLIENTE != null) 
											return false;
								
									} else if (!this.CD_CLIENTE.equals(other.CD_CLIENTE))
								 
										return false;
								
									if (this.NM_DOCUMENTO == null) {
										if (other.NM_DOCUMENTO != null) 
											return false;
								
									} else if (!this.NM_DOCUMENTO.equals(other.NM_DOCUMENTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
									if (this.VENDEDOR == null) {
										if (other.VENDEDOR != null) 
											return false;
								
									} else if (!this.VENDEDOR.equals(other.VENDEDOR))
								 
										return false;
								
									if (this.NOME_VENDEDOR == null) {
										if (other.NOME_VENDEDOR != null) 
											return false;
								
									} else if (!this.NOME_VENDEDOR.equals(other.NOME_VENDEDOR))
								 
										return false;
								
									if (this.PEDIDO_AUTCOM == null) {
										if (other.PEDIDO_AUTCOM != null) 
											return false;
								
									} else if (!this.PEDIDO_AUTCOM.equals(other.PEDIDO_AUTCOM))
								 
										return false;
								
									if (this.DESC_FULFILLMENT == null) {
										if (other.DESC_FULFILLMENT != null) 
											return false;
								
									} else if (!this.DESC_FULFILLMENT.equals(other.DESC_FULFILLMENT))
								 
										return false;
								
									if (this.TIPO_NOTA == null) {
										if (other.TIPO_NOTA != null) 
											return false;
								
									} else if (!this.TIPO_NOTA.equals(other.TIPO_NOTA))
								 
										return false;
								
									if (this.NUMERO_NOTA == null) {
										if (other.NUMERO_NOTA != null) 
											return false;
								
									} else if (!this.NUMERO_NOTA.equals(other.NUMERO_NOTA))
								 
										return false;
								
									if (this.SERIE_NOTA == null) {
										if (other.SERIE_NOTA != null) 
											return false;
								
									} else if (!this.SERIE_NOTA.equals(other.SERIE_NOTA))
								 
										return false;
								
									if (this.NOTA_DEVOLUCAO == null) {
										if (other.NOTA_DEVOLUCAO != null) 
											return false;
								
									} else if (!this.NOTA_DEVOLUCAO.equals(other.NOTA_DEVOLUCAO))
								 
										return false;
								
									if (this.NM_ROMANEIO == null) {
										if (other.NM_ROMANEIO != null) 
											return false;
								
									} else if (!this.NM_ROMANEIO.equals(other.NM_ROMANEIO))
								 
										return false;
								
									if (this.DT_PEDIDO == null) {
										if (other.DT_PEDIDO != null) 
											return false;
								
									} else if (!this.DT_PEDIDO.equals(other.DT_PEDIDO))
								 
										return false;
								
									if (this.CD_COMBO == null) {
										if (other.CD_COMBO != null) 
											return false;
								
									} else if (!this.CD_COMBO.equals(other.CD_COMBO))
								 
										return false;
								
									if (this.SKU == null) {
										if (other.SKU != null) 
											return false;
								
									} else if (!this.SKU.equals(other.SKU))
								 
										return false;
								
									if (this.DESC_SKU == null) {
										if (other.DESC_SKU != null) 
											return false;
								
									} else if (!this.DESC_SKU.equals(other.DESC_SKU))
								 
										return false;
								
									if (this.QTD_SKU == null) {
										if (other.QTD_SKU != null) 
											return false;
								
									} else if (!this.QTD_SKU.equals(other.QTD_SKU))
								 
										return false;
								
									if (this.VL_TOTAL_SKU == null) {
										if (other.VL_TOTAL_SKU != null) 
											return false;
								
									} else if (!this.VL_TOTAL_SKU.equals(other.VL_TOTAL_SKU))
								 
										return false;
								
									if (this.VL_UNITARIO == null) {
										if (other.VL_UNITARIO != null) 
											return false;
								
									} else if (!this.VL_UNITARIO.equals(other.VL_UNITARIO))
								 
										return false;
								
									if (this.VL_DESCONTO == null) {
										if (other.VL_DESCONTO != null) 
											return false;
								
									} else if (!this.VL_DESCONTO.equals(other.VL_DESCONTO))
								 
										return false;
								
									if (this.VL_PRODUTOS_PEDIDO == null) {
										if (other.VL_PRODUTOS_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PRODUTOS_PEDIDO.equals(other.VL_PRODUTOS_PEDIDO))
								 
										return false;
								
									if (this.VL_FRETE == null) {
										if (other.VL_FRETE != null) 
											return false;
								
									} else if (!this.VL_FRETE.equals(other.VL_FRETE))
								 
										return false;
								
									if (this.VL_PEDIDO == null) {
										if (other.VL_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PEDIDO.equals(other.VL_PEDIDO))
								 
										return false;
								
									if (this.BASE_ICMS == null) {
										if (other.BASE_ICMS != null) 
											return false;
								
									} else if (!this.BASE_ICMS.equals(other.BASE_ICMS))
								 
										return false;
								
									if (this.VL_ICMS == null) {
										if (other.VL_ICMS != null) 
											return false;
								
									} else if (!this.VL_ICMS.equals(other.VL_ICMS))
								 
										return false;
								
									if (this.NOME_TRANSPORTADORA == null) {
										if (other.NOME_TRANSPORTADORA != null) 
											return false;
								
									} else if (!this.NOME_TRANSPORTADORA.equals(other.NOME_TRANSPORTADORA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_3 = 0;
int nb_duplicates_tUniqRow_3 = 0;
KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>(); 

 



/**
 * [tUniqRow_3 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfmap_0Struct copyOfcopyOfmap_0_tmp = new copyOfcopyOfmap_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_4 = java.util.Calendar.getInstance();
		    calendar_tDBInput_4.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_4 = calendar_tDBInput_4.getTime();
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "SELECT MG.GER_CODCLI CD_CLIENTE,\n       CL.CLI_C_G_C_ NM_DOCUMENTO,\n	   MG.GER_CODEMP CD_EMPRESA,\n	   MG.GER_CODVEN "
+"VENDEDOR,\n	   OP.OPE_NOMOPE NOME_VENDEDOR,\n       FG.FGO_NUMDOC PEDIDO_AUTCOM,\n       FG.FGO_NUMPOK DESC_FULFILLMENT	"
+",\n       MG.GER_ESPDOC TIPO_NOTA,\n       MG.GER_NUMDOC NUMERO_NOTA,\n       MG.GER_SERIE_ SERIE_NOTA,\n       (SELECT "
+"MAX( DEV.DET_NUMDOC) FROM MOVDET DEV\n           WHERE DEV.DET_DOCDEV = MG.GER_NUMDOC \n           AND DEV.DET_EMPDEV = "
+"MG.GER_CODEMP \n           AND DEV.DET_ESPDEV = MG.GER_ESPDOC \n           AND DEV.DET_CODVEN = MG.GER_CODVEN\n         "
+"  LIMIT 1) NOTA_DEVOLUCAO,\n           MG.GER_NUMROM NM_ROMANEIO,\n       CONCAT( MG.GER_DTAENT ,' ',MG.GER_HORENT) DT_P"
+"EDIDO,\n(SELECT ED.FDO_ITEEST FROM FATDOR FD, EXTDOR ED\n   WHERE FG.AUTOINCREM = FD.FDO_SEQGER\n     AND FD.AUTOINCREM "
+"= ED.FDO_SEQFDO\n     LIMIT 1) AS CD_COMBO,\n       DET.DET_CODITE SKU ,\n       DET.DET_DESCRI DESC_SKU,\n       DET.DE"
+"T_QTDITE QTD_SKU,\n       (DET.DET_QTDITE * DET.DET_UNITAR) VL_TOTAL_SKU,\n       DET.DET_UNITAR VL_UNITARIO,       \n  "
+"     DET_DESESP VL_DESCONTO ,\n       MG.GER_TOTPRO VL_PRODUTOS_PEDIDO,\n       MG.GER_TOTFRE VL_FRETE,\n       MG.GER_V"
+"LRCON VL_PEDIDO,\n       MG.GER_BASICM BASE_ICMS,\n       MG.GER_TOTICM VL_ICMS,\n       TRA.TRA_NOMTRA NOME_TRANSPORTAD"
+"ORA\n  FROM MOVGER MG\n LEFT JOIN CADCLI CL ON CL.CLI_CODCLI = MG.GER_CODCLI \n LEFT JOIN CADTRA TRA ON TRA.TRA_CODTRA ="
+" MG.GER_CODTRA\n LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = MG.GER_CODVEN \n LEFT JOIN MOVDET DET ON DET.DET_NUMDOC = MG.GER"
+"_NUMDOC AND DET.DET_CODEMP = MG.GER_CODEMP AND DET.DET_SERIE_ = MG.GER_SERIE_ \n LEFT JOIN FATGOR FG ON MG.GER_NUMDOC = "
+"FG.FGO_NUMFAT AND MG.GER_ESPDOC = FG.FGO_TIPFAT AND MG.GER_CODEMP = FG.FGO_EMPFAT AND MG.GER_CODCLI = FG.FGO_CODCLI\nWHE"
+"RE MG.GER_CODVEN IN ('A24')\n  AND MG.GER_CODEMP = '001'\n  AND MG.GER_CODCLI not in ('11791872')\n  AND MG.GER_DTAENT >"
+"= '2024-01-01';";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row9.CD_CLIENTE = null;
							} else {
		                          
            row9.CD_CLIENTE = rs_tDBInput_4.getInt(1);
            if(rs_tDBInput_4.wasNull()){
                    row9.CD_CLIENTE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row9.NM_DOCUMENTO = null;
							} else {
	                         		
        	row9.NM_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row9.CD_EMPRESA = null;
							} else {
	                         		
        	row9.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 3, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row9.VENDEDOR = null;
							} else {
	                         		
        	row9.VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 4, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row9.NOME_VENDEDOR = null;
							} else {
	                         		
        	row9.NOME_VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 5, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row9.PEDIDO_AUTCOM = null;
							} else {
	                         		
        	row9.PEDIDO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_4, 6, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 7) {
								row9.DESC_FULFILLMENT = null;
							} else {
	                         		
        	row9.DESC_FULFILLMENT = routines.system.JDBCUtil.getString(rs_tDBInput_4, 7, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 8) {
								row9.TIPO_NOTA = null;
							} else {
	                         		
        	row9.TIPO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 8, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 9) {
								row9.NUMERO_NOTA = null;
							} else {
	                         		
        	row9.NUMERO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 9, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 10) {
								row9.SERIE_NOTA = null;
							} else {
	                         		
        	row9.SERIE_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 10, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 11) {
								row9.NOTA_DEVOLUCAO = null;
							} else {
	                         		
        	row9.NOTA_DEVOLUCAO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 11, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 12) {
								row9.NM_ROMANEIO = null;
							} else {
	                         		
        	row9.NM_ROMANEIO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 12, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 13) {
								row9.DT_PEDIDO = null;
							} else {
	                         		
        	row9.DT_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 13, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 14) {
								row9.CD_COMBO = null;
							} else {
	                         		
        	row9.CD_COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 14, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 15) {
								row9.SKU = null;
							} else {
	                         		
        	row9.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_4, 15, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 16) {
								row9.DESC_SKU = null;
							} else {
	                         		
        	row9.DESC_SKU = routines.system.JDBCUtil.getString(rs_tDBInput_4, 16, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 17) {
								row9.QTD_SKU = null;
							} else {
	                         		
            row9.QTD_SKU = rs_tDBInput_4.getDouble(17);
            if(rs_tDBInput_4.wasNull()){
                    row9.QTD_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 18) {
								row9.VL_TOTAL_SKU = null;
							} else {
	                         		
            row9.VL_TOTAL_SKU = rs_tDBInput_4.getDouble(18);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_TOTAL_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 19) {
								row9.VL_UNITARIO = null;
							} else {
	                         		
            row9.VL_UNITARIO = rs_tDBInput_4.getDouble(19);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 20) {
								row9.VL_DESCONTO = null;
							} else {
	                         		
            row9.VL_DESCONTO = rs_tDBInput_4.getDouble(20);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 21) {
								row9.VL_PRODUTOS_PEDIDO = null;
							} else {
	                         		
            row9.VL_PRODUTOS_PEDIDO = rs_tDBInput_4.getDouble(21);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_PRODUTOS_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 22) {
								row9.VL_FRETE = null;
							} else {
	                         		
            row9.VL_FRETE = rs_tDBInput_4.getDouble(22);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 23) {
								row9.VL_PEDIDO = null;
							} else {
	                         		
            row9.VL_PEDIDO = rs_tDBInput_4.getDouble(23);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 24) {
								row9.BASE_ICMS = null;
							} else {
	                         		
            row9.BASE_ICMS = rs_tDBInput_4.getDouble(24);
            if(rs_tDBInput_4.wasNull()){
                    row9.BASE_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 25) {
								row9.VL_ICMS = null;
							} else {
	                         		
            row9.VL_ICMS = rs_tDBInput_4.getDouble(25);
            if(rs_tDBInput_4.wasNull()){
                    row9.VL_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 26) {
								row9.NOME_TRANSPORTADORA = null;
							} else {
	                         		
        	row9.NOME_TRANSPORTADORA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 26, false);
		                    }
					

 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfmap_0 = null;


// # Output table : 'copyOfcopyOfmap_0'
copyOfcopyOfmap_0_tmp.CD_CLIENTE = row9.CD_CLIENTE ;
copyOfcopyOfmap_0_tmp.NM_DOCUMENTO = row9.NM_DOCUMENTO ;
copyOfcopyOfmap_0_tmp.CD_EMPRESA = row9.CD_EMPRESA ;
copyOfcopyOfmap_0_tmp.VENDEDOR = row9.VENDEDOR ;
copyOfcopyOfmap_0_tmp.NOME_VENDEDOR = row9.NOME_VENDEDOR ;
copyOfcopyOfmap_0_tmp.PEDIDO_AUTCOM = row9.PEDIDO_AUTCOM ;
copyOfcopyOfmap_0_tmp.DESC_FULFILLMENT = row9.DESC_FULFILLMENT ;
copyOfcopyOfmap_0_tmp.TIPO_NOTA = row9.TIPO_NOTA ;
copyOfcopyOfmap_0_tmp.NUMERO_NOTA = row9.NUMERO_NOTA ;
copyOfcopyOfmap_0_tmp.SERIE_NOTA = row9.SERIE_NOTA ;
copyOfcopyOfmap_0_tmp.NOTA_DEVOLUCAO = row9.NOTA_DEVOLUCAO ;
copyOfcopyOfmap_0_tmp.NM_ROMANEIO = row9.NM_ROMANEIO ;
copyOfcopyOfmap_0_tmp.DT_PEDIDO = row9.DT_PEDIDO ;
copyOfcopyOfmap_0_tmp.CD_COMBO = row9.CD_COMBO ;
copyOfcopyOfmap_0_tmp.SKU = row9.SKU ;
copyOfcopyOfmap_0_tmp.DESC_SKU = row9.DESC_SKU ;
copyOfcopyOfmap_0_tmp.QTD_SKU = row9.QTD_SKU ;
copyOfcopyOfmap_0_tmp.VL_TOTAL_SKU = row9.VL_TOTAL_SKU ;
copyOfcopyOfmap_0_tmp.VL_UNITARIO = row9.VL_UNITARIO ;
copyOfcopyOfmap_0_tmp.VL_DESCONTO = row9.VL_DESCONTO ;
copyOfcopyOfmap_0_tmp.VL_PRODUTOS_PEDIDO = row9.VL_PRODUTOS_PEDIDO ;
copyOfcopyOfmap_0_tmp.VL_FRETE = row9.VL_FRETE ;
copyOfcopyOfmap_0_tmp.VL_PEDIDO = row9.VL_PEDIDO ;
copyOfcopyOfmap_0_tmp.BASE_ICMS = row9.BASE_ICMS ;
copyOfcopyOfmap_0_tmp.VL_ICMS = row9.VL_ICMS ;
copyOfcopyOfmap_0_tmp.NOME_TRANSPORTADORA = row9.NOME_TRANSPORTADORA ;
copyOfcopyOfmap_0 = copyOfcopyOfmap_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfmap_0"
if(copyOfcopyOfmap_0 != null) { 



	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfmap_0"
						
						);
					}
					
row10 = null;			
finder_tUniqRow_3.CD_CLIENTE = copyOfcopyOfmap_0.CD_CLIENTE;
if(copyOfcopyOfmap_0.NM_DOCUMENTO == null){
	finder_tUniqRow_3.NM_DOCUMENTO = null;
}else{
	finder_tUniqRow_3.NM_DOCUMENTO = copyOfcopyOfmap_0.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfmap_0.CD_EMPRESA == null){
	finder_tUniqRow_3.CD_EMPRESA = null;
}else{
	finder_tUniqRow_3.CD_EMPRESA = copyOfcopyOfmap_0.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfmap_0.VENDEDOR == null){
	finder_tUniqRow_3.VENDEDOR = null;
}else{
	finder_tUniqRow_3.VENDEDOR = copyOfcopyOfmap_0.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap_0.NOME_VENDEDOR == null){
	finder_tUniqRow_3.NOME_VENDEDOR = null;
}else{
	finder_tUniqRow_3.NOME_VENDEDOR = copyOfcopyOfmap_0.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap_0.PEDIDO_AUTCOM == null){
	finder_tUniqRow_3.PEDIDO_AUTCOM = null;
}else{
	finder_tUniqRow_3.PEDIDO_AUTCOM = copyOfcopyOfmap_0.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfmap_0.DESC_FULFILLMENT == null){
	finder_tUniqRow_3.DESC_FULFILLMENT = null;
}else{
	finder_tUniqRow_3.DESC_FULFILLMENT = copyOfcopyOfmap_0.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfmap_0.TIPO_NOTA == null){
	finder_tUniqRow_3.TIPO_NOTA = null;
}else{
	finder_tUniqRow_3.TIPO_NOTA = copyOfcopyOfmap_0.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap_0.NUMERO_NOTA == null){
	finder_tUniqRow_3.NUMERO_NOTA = null;
}else{
	finder_tUniqRow_3.NUMERO_NOTA = copyOfcopyOfmap_0.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap_0.SERIE_NOTA == null){
	finder_tUniqRow_3.SERIE_NOTA = null;
}else{
	finder_tUniqRow_3.SERIE_NOTA = copyOfcopyOfmap_0.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfmap_0.NOTA_DEVOLUCAO == null){
	finder_tUniqRow_3.NOTA_DEVOLUCAO = null;
}else{
	finder_tUniqRow_3.NOTA_DEVOLUCAO = copyOfcopyOfmap_0.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfmap_0.NM_ROMANEIO == null){
	finder_tUniqRow_3.NM_ROMANEIO = null;
}else{
	finder_tUniqRow_3.NM_ROMANEIO = copyOfcopyOfmap_0.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfmap_0.DT_PEDIDO == null){
	finder_tUniqRow_3.DT_PEDIDO = null;
}else{
	finder_tUniqRow_3.DT_PEDIDO = copyOfcopyOfmap_0.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfmap_0.CD_COMBO == null){
	finder_tUniqRow_3.CD_COMBO = null;
}else{
	finder_tUniqRow_3.CD_COMBO = copyOfcopyOfmap_0.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfmap_0.SKU == null){
	finder_tUniqRow_3.SKU = null;
}else{
	finder_tUniqRow_3.SKU = copyOfcopyOfmap_0.SKU.toLowerCase();
}
if(copyOfcopyOfmap_0.DESC_SKU == null){
	finder_tUniqRow_3.DESC_SKU = null;
}else{
	finder_tUniqRow_3.DESC_SKU = copyOfcopyOfmap_0.DESC_SKU.toLowerCase();
}
finder_tUniqRow_3.QTD_SKU = copyOfcopyOfmap_0.QTD_SKU;
finder_tUniqRow_3.VL_TOTAL_SKU = copyOfcopyOfmap_0.VL_TOTAL_SKU;
finder_tUniqRow_3.VL_UNITARIO = copyOfcopyOfmap_0.VL_UNITARIO;
finder_tUniqRow_3.VL_DESCONTO = copyOfcopyOfmap_0.VL_DESCONTO;
finder_tUniqRow_3.VL_PRODUTOS_PEDIDO = copyOfcopyOfmap_0.VL_PRODUTOS_PEDIDO;
finder_tUniqRow_3.VL_FRETE = copyOfcopyOfmap_0.VL_FRETE;
finder_tUniqRow_3.VL_PEDIDO = copyOfcopyOfmap_0.VL_PEDIDO;
finder_tUniqRow_3.BASE_ICMS = copyOfcopyOfmap_0.BASE_ICMS;
finder_tUniqRow_3.VL_ICMS = copyOfcopyOfmap_0.VL_ICMS;
if(copyOfcopyOfmap_0.NOME_TRANSPORTADORA == null){
	finder_tUniqRow_3.NOME_TRANSPORTADORA = null;
}else{
	finder_tUniqRow_3.NOME_TRANSPORTADORA = copyOfcopyOfmap_0.NOME_TRANSPORTADORA.toLowerCase();
}	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
new_tUniqRow_3.CD_CLIENTE = copyOfcopyOfmap_0.CD_CLIENTE;
if(copyOfcopyOfmap_0.NM_DOCUMENTO == null){
	new_tUniqRow_3.NM_DOCUMENTO = null;
}else{
	new_tUniqRow_3.NM_DOCUMENTO = copyOfcopyOfmap_0.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfmap_0.CD_EMPRESA == null){
	new_tUniqRow_3.CD_EMPRESA = null;
}else{
	new_tUniqRow_3.CD_EMPRESA = copyOfcopyOfmap_0.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfmap_0.VENDEDOR == null){
	new_tUniqRow_3.VENDEDOR = null;
}else{
	new_tUniqRow_3.VENDEDOR = copyOfcopyOfmap_0.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap_0.NOME_VENDEDOR == null){
	new_tUniqRow_3.NOME_VENDEDOR = null;
}else{
	new_tUniqRow_3.NOME_VENDEDOR = copyOfcopyOfmap_0.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfmap_0.PEDIDO_AUTCOM == null){
	new_tUniqRow_3.PEDIDO_AUTCOM = null;
}else{
	new_tUniqRow_3.PEDIDO_AUTCOM = copyOfcopyOfmap_0.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfmap_0.DESC_FULFILLMENT == null){
	new_tUniqRow_3.DESC_FULFILLMENT = null;
}else{
	new_tUniqRow_3.DESC_FULFILLMENT = copyOfcopyOfmap_0.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfmap_0.TIPO_NOTA == null){
	new_tUniqRow_3.TIPO_NOTA = null;
}else{
	new_tUniqRow_3.TIPO_NOTA = copyOfcopyOfmap_0.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap_0.NUMERO_NOTA == null){
	new_tUniqRow_3.NUMERO_NOTA = null;
}else{
	new_tUniqRow_3.NUMERO_NOTA = copyOfcopyOfmap_0.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfmap_0.SERIE_NOTA == null){
	new_tUniqRow_3.SERIE_NOTA = null;
}else{
	new_tUniqRow_3.SERIE_NOTA = copyOfcopyOfmap_0.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfmap_0.NOTA_DEVOLUCAO == null){
	new_tUniqRow_3.NOTA_DEVOLUCAO = null;
}else{
	new_tUniqRow_3.NOTA_DEVOLUCAO = copyOfcopyOfmap_0.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfmap_0.NM_ROMANEIO == null){
	new_tUniqRow_3.NM_ROMANEIO = null;
}else{
	new_tUniqRow_3.NM_ROMANEIO = copyOfcopyOfmap_0.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfmap_0.DT_PEDIDO == null){
	new_tUniqRow_3.DT_PEDIDO = null;
}else{
	new_tUniqRow_3.DT_PEDIDO = copyOfcopyOfmap_0.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfmap_0.CD_COMBO == null){
	new_tUniqRow_3.CD_COMBO = null;
}else{
	new_tUniqRow_3.CD_COMBO = copyOfcopyOfmap_0.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfmap_0.SKU == null){
	new_tUniqRow_3.SKU = null;
}else{
	new_tUniqRow_3.SKU = copyOfcopyOfmap_0.SKU.toLowerCase();
}
if(copyOfcopyOfmap_0.DESC_SKU == null){
	new_tUniqRow_3.DESC_SKU = null;
}else{
	new_tUniqRow_3.DESC_SKU = copyOfcopyOfmap_0.DESC_SKU.toLowerCase();
}
new_tUniqRow_3.QTD_SKU = copyOfcopyOfmap_0.QTD_SKU;
new_tUniqRow_3.VL_TOTAL_SKU = copyOfcopyOfmap_0.VL_TOTAL_SKU;
new_tUniqRow_3.VL_UNITARIO = copyOfcopyOfmap_0.VL_UNITARIO;
new_tUniqRow_3.VL_DESCONTO = copyOfcopyOfmap_0.VL_DESCONTO;
new_tUniqRow_3.VL_PRODUTOS_PEDIDO = copyOfcopyOfmap_0.VL_PRODUTOS_PEDIDO;
new_tUniqRow_3.VL_FRETE = copyOfcopyOfmap_0.VL_FRETE;
new_tUniqRow_3.VL_PEDIDO = copyOfcopyOfmap_0.VL_PEDIDO;
new_tUniqRow_3.BASE_ICMS = copyOfcopyOfmap_0.BASE_ICMS;
new_tUniqRow_3.VL_ICMS = copyOfcopyOfmap_0.VL_ICMS;
if(copyOfcopyOfmap_0.NOME_TRANSPORTADORA == null){
	new_tUniqRow_3.NOME_TRANSPORTADORA = null;
}else{
	new_tUniqRow_3.NOME_TRANSPORTADORA = copyOfcopyOfmap_0.NOME_TRANSPORTADORA.toLowerCase();
}
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row10 == null){ 
	
	row10 = new row10Struct();
}row10.CD_CLIENTE = copyOfcopyOfmap_0.CD_CLIENTE;			row10.NM_DOCUMENTO = copyOfcopyOfmap_0.NM_DOCUMENTO;			row10.CD_EMPRESA = copyOfcopyOfmap_0.CD_EMPRESA;			row10.VENDEDOR = copyOfcopyOfmap_0.VENDEDOR;			row10.NOME_VENDEDOR = copyOfcopyOfmap_0.NOME_VENDEDOR;			row10.PEDIDO_AUTCOM = copyOfcopyOfmap_0.PEDIDO_AUTCOM;			row10.DESC_FULFILLMENT = copyOfcopyOfmap_0.DESC_FULFILLMENT;			row10.TIPO_NOTA = copyOfcopyOfmap_0.TIPO_NOTA;			row10.NUMERO_NOTA = copyOfcopyOfmap_0.NUMERO_NOTA;			row10.SERIE_NOTA = copyOfcopyOfmap_0.SERIE_NOTA;			row10.NOTA_DEVOLUCAO = copyOfcopyOfmap_0.NOTA_DEVOLUCAO;			row10.NM_ROMANEIO = copyOfcopyOfmap_0.NM_ROMANEIO;			row10.DT_PEDIDO = copyOfcopyOfmap_0.DT_PEDIDO;			row10.CD_COMBO = copyOfcopyOfmap_0.CD_COMBO;			row10.SKU = copyOfcopyOfmap_0.SKU;			row10.DESC_SKU = copyOfcopyOfmap_0.DESC_SKU;			row10.QTD_SKU = copyOfcopyOfmap_0.QTD_SKU;			row10.VL_TOTAL_SKU = copyOfcopyOfmap_0.VL_TOTAL_SKU;			row10.VL_UNITARIO = copyOfcopyOfmap_0.VL_UNITARIO;			row10.VL_DESCONTO = copyOfcopyOfmap_0.VL_DESCONTO;			row10.VL_PRODUTOS_PEDIDO = copyOfcopyOfmap_0.VL_PRODUTOS_PEDIDO;			row10.VL_FRETE = copyOfcopyOfmap_0.VL_FRETE;			row10.VL_PEDIDO = copyOfcopyOfmap_0.VL_PEDIDO;			row10.BASE_ICMS = copyOfcopyOfmap_0.BASE_ICMS;			row10.VL_ICMS = copyOfcopyOfmap_0.VL_ICMS;			row10.NOME_TRANSPORTADORA = copyOfcopyOfmap_0.NOME_TRANSPORTADORA;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row10"
if(row10 != null) { 



	
	/**
	 * [tFileOutputExcel_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_4.addRow();
									   				
	    				if(row10.CD_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(Double.parseDouble(String.valueOf(row10.CD_CLIENTE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.NM_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.NM_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.CD_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.CD_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.NOME_VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.NOME_VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.PEDIDO_AUTCOM != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.PEDIDO_AUTCOM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.DESC_FULFILLMENT != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.DESC_FULFILLMENT));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.TIPO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.TIPO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.NUMERO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.NUMERO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.SERIE_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.SERIE_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.NOTA_DEVOLUCAO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.NOTA_DEVOLUCAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.NM_ROMANEIO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.NM_ROMANEIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.DT_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.DT_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.CD_COMBO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.CD_COMBO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.SKU != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.DESC_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.DESC_SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.QTD_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.QTD_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_TOTAL_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_TOTAL_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_PRODUTOS_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_PRODUTOS_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.BASE_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.BASE_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.VL_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(row10.VL_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row10.NOME_TRANSPORTADORA != null) {
    				
							xlsxTool_tFileOutputExcel_4.addCellValue(String.valueOf(row10.NOME_TRANSPORTADORA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_4++;
				
 


	tos_count_tFileOutputExcel_4++;

/**
 * [tFileOutputExcel_4 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_end ] stop
 */

} // End of branch "row10"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfmap_0"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);

 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tUniqRow_3 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

globalMap.put("tUniqRow_3_NB_UNIQUES",nb_uniques_tUniqRow_3);
globalMap.put("tUniqRow_3_NB_DUPLICATES",nb_duplicates_tUniqRow_3);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfmap_0");
			  	}
			  	
 

ok_Hash.put("tUniqRow_3", true);
end_Hash.put("tUniqRow_3", System.currentTimeMillis());




/**
 * [tUniqRow_3 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

							columnIndex_tFileOutputExcel_4 = 0;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 1;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 2;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 3;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 4;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 5;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 6;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 7;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 8;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 9;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 10;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 11;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 12;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 13;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 14;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 15;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 16;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 17;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 18;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 19;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 20;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 21;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 22;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 23;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 24;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 25;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
	
	
	
			xlsxTool_tFileOutputExcel_4.writeExcel(fileName_tFileOutputExcel_4,true);
	
		if(headerIsInserted_tFileOutputExcel_4 && nb_line_tFileOutputExcel_4 > 0){
			nb_line_tFileOutputExcel_4 = nb_line_tFileOutputExcel_4 -1;
		}
		globalMap.put("tFileOutputExcel_4_NB_LINE",nb_line_tFileOutputExcel_4);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_4", true);
end_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());




/**
 * [tFileOutputExcel_4 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tDBInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tUniqRow_3 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfcopyOfmapStruct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfmapStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfmapStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();
copyOfcopyOfcopyOfmapStruct copyOfcopyOfcopyOfmap = new copyOfcopyOfcopyOfmapStruct();
row12Struct row12 = new row12Struct();






	
	/**
	 * [tFileOutputExcel_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_5", false);
		start_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tFileOutputExcel_5 = 0;
		


		
		int columnIndex_tFileOutputExcel_5 = 0;
		boolean headerIsInserted_tFileOutputExcel_5 = false;
		
		
		String fileName_tFileOutputExcel_5="/root/e_mail/MKTPLACE_MAGAZINE_LUIZA_2024.xlsx";
		int nb_line_tFileOutputExcel_5 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_5 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_5.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_5.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_5.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_5.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_5.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_5.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_5 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_5 = chm_tFileOutputExcel_5.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_5", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_5) {
			
				xlsxTool_tFileOutputExcel_5.prepareXlsxFile(fileName_tFileOutputExcel_5);
			
		}
		
		xlsxTool_tFileOutputExcel_5.setFont("");
		
		if (xlsxTool_tFileOutputExcel_5.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_5.addRow();
		
		xlsxTool_tFileOutputExcel_5.addCellValue("CD_CLIENTE");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NM_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("CD_EMPRESA");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VENDEDOR");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NOME_VENDEDOR");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("PEDIDO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("DESC_FULFILLMENT");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("TIPO_NOTA");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NUMERO_NOTA");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("SERIE_NOTA");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NOTA_DEVOLUCAO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NM_ROMANEIO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("DT_PEDIDO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("CD_COMBO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("SKU");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("DESC_SKU");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("QTD_SKU");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_TOTAL_SKU");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_UNITARIO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_DESCONTO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_PRODUTOS_PEDIDO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_FRETE");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("BASE_ICMS");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("VL_ICMS");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NOME_TRANSPORTADORA");
		
		nb_line_tFileOutputExcel_5++;
		headerIsInserted_tFileOutputExcel_5 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_5 begin ] stop
 */



	
	/**
	 * [tUniqRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_4", false);
		start_Hash.put("tUniqRow_4", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfmap");
					}
				
		int tos_count_tUniqRow_4 = 0;
		

	
		class KeyStruct_tUniqRow_4 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer CD_CLIENTE;
					String NM_DOCUMENTO;
					String CD_EMPRESA;
					String VENDEDOR;
					String NOME_VENDEDOR;
					String PEDIDO_AUTCOM;
					String DESC_FULFILLMENT;
					String TIPO_NOTA;
					String NUMERO_NOTA;
					String SERIE_NOTA;
					String NOTA_DEVOLUCAO;
					String NM_ROMANEIO;
					String DT_PEDIDO;
					String CD_COMBO;
					String SKU;
					String DESC_SKU;
					Double QTD_SKU;
					Double VL_TOTAL_SKU;
					Double VL_UNITARIO;
					Double VL_DESCONTO;
					Double VL_PRODUTOS_PEDIDO;
					Double VL_FRETE;
					Double VL_PEDIDO;
					Double BASE_ICMS;
					Double VL_ICMS;
					String NOME_TRANSPORTADORA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_CLIENTE == null) ? 0 : this.CD_CLIENTE.hashCode());
								
								result = prime * result + ((this.NM_DOCUMENTO == null) ? 0 : this.NM_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
								result = prime * result + ((this.VENDEDOR == null) ? 0 : this.VENDEDOR.hashCode());
								
								result = prime * result + ((this.NOME_VENDEDOR == null) ? 0 : this.NOME_VENDEDOR.hashCode());
								
								result = prime * result + ((this.PEDIDO_AUTCOM == null) ? 0 : this.PEDIDO_AUTCOM.hashCode());
								
								result = prime * result + ((this.DESC_FULFILLMENT == null) ? 0 : this.DESC_FULFILLMENT.hashCode());
								
								result = prime * result + ((this.TIPO_NOTA == null) ? 0 : this.TIPO_NOTA.hashCode());
								
								result = prime * result + ((this.NUMERO_NOTA == null) ? 0 : this.NUMERO_NOTA.hashCode());
								
								result = prime * result + ((this.SERIE_NOTA == null) ? 0 : this.SERIE_NOTA.hashCode());
								
								result = prime * result + ((this.NOTA_DEVOLUCAO == null) ? 0 : this.NOTA_DEVOLUCAO.hashCode());
								
								result = prime * result + ((this.NM_ROMANEIO == null) ? 0 : this.NM_ROMANEIO.hashCode());
								
								result = prime * result + ((this.DT_PEDIDO == null) ? 0 : this.DT_PEDIDO.hashCode());
								
								result = prime * result + ((this.CD_COMBO == null) ? 0 : this.CD_COMBO.hashCode());
								
								result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
								
								result = prime * result + ((this.DESC_SKU == null) ? 0 : this.DESC_SKU.hashCode());
								
								result = prime * result + ((this.QTD_SKU == null) ? 0 : this.QTD_SKU.hashCode());
								
								result = prime * result + ((this.VL_TOTAL_SKU == null) ? 0 : this.VL_TOTAL_SKU.hashCode());
								
								result = prime * result + ((this.VL_UNITARIO == null) ? 0 : this.VL_UNITARIO.hashCode());
								
								result = prime * result + ((this.VL_DESCONTO == null) ? 0 : this.VL_DESCONTO.hashCode());
								
								result = prime * result + ((this.VL_PRODUTOS_PEDIDO == null) ? 0 : this.VL_PRODUTOS_PEDIDO.hashCode());
								
								result = prime * result + ((this.VL_FRETE == null) ? 0 : this.VL_FRETE.hashCode());
								
								result = prime * result + ((this.VL_PEDIDO == null) ? 0 : this.VL_PEDIDO.hashCode());
								
								result = prime * result + ((this.BASE_ICMS == null) ? 0 : this.BASE_ICMS.hashCode());
								
								result = prime * result + ((this.VL_ICMS == null) ? 0 : this.VL_ICMS.hashCode());
								
								result = prime * result + ((this.NOME_TRANSPORTADORA == null) ? 0 : this.NOME_TRANSPORTADORA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_4 other = (KeyStruct_tUniqRow_4) obj;
				
									if (this.CD_CLIENTE == null) {
										if (other.CD_CLIENTE != null) 
											return false;
								
									} else if (!this.CD_CLIENTE.equals(other.CD_CLIENTE))
								 
										return false;
								
									if (this.NM_DOCUMENTO == null) {
										if (other.NM_DOCUMENTO != null) 
											return false;
								
									} else if (!this.NM_DOCUMENTO.equals(other.NM_DOCUMENTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
									if (this.VENDEDOR == null) {
										if (other.VENDEDOR != null) 
											return false;
								
									} else if (!this.VENDEDOR.equals(other.VENDEDOR))
								 
										return false;
								
									if (this.NOME_VENDEDOR == null) {
										if (other.NOME_VENDEDOR != null) 
											return false;
								
									} else if (!this.NOME_VENDEDOR.equals(other.NOME_VENDEDOR))
								 
										return false;
								
									if (this.PEDIDO_AUTCOM == null) {
										if (other.PEDIDO_AUTCOM != null) 
											return false;
								
									} else if (!this.PEDIDO_AUTCOM.equals(other.PEDIDO_AUTCOM))
								 
										return false;
								
									if (this.DESC_FULFILLMENT == null) {
										if (other.DESC_FULFILLMENT != null) 
											return false;
								
									} else if (!this.DESC_FULFILLMENT.equals(other.DESC_FULFILLMENT))
								 
										return false;
								
									if (this.TIPO_NOTA == null) {
										if (other.TIPO_NOTA != null) 
											return false;
								
									} else if (!this.TIPO_NOTA.equals(other.TIPO_NOTA))
								 
										return false;
								
									if (this.NUMERO_NOTA == null) {
										if (other.NUMERO_NOTA != null) 
											return false;
								
									} else if (!this.NUMERO_NOTA.equals(other.NUMERO_NOTA))
								 
										return false;
								
									if (this.SERIE_NOTA == null) {
										if (other.SERIE_NOTA != null) 
											return false;
								
									} else if (!this.SERIE_NOTA.equals(other.SERIE_NOTA))
								 
										return false;
								
									if (this.NOTA_DEVOLUCAO == null) {
										if (other.NOTA_DEVOLUCAO != null) 
											return false;
								
									} else if (!this.NOTA_DEVOLUCAO.equals(other.NOTA_DEVOLUCAO))
								 
										return false;
								
									if (this.NM_ROMANEIO == null) {
										if (other.NM_ROMANEIO != null) 
											return false;
								
									} else if (!this.NM_ROMANEIO.equals(other.NM_ROMANEIO))
								 
										return false;
								
									if (this.DT_PEDIDO == null) {
										if (other.DT_PEDIDO != null) 
											return false;
								
									} else if (!this.DT_PEDIDO.equals(other.DT_PEDIDO))
								 
										return false;
								
									if (this.CD_COMBO == null) {
										if (other.CD_COMBO != null) 
											return false;
								
									} else if (!this.CD_COMBO.equals(other.CD_COMBO))
								 
										return false;
								
									if (this.SKU == null) {
										if (other.SKU != null) 
											return false;
								
									} else if (!this.SKU.equals(other.SKU))
								 
										return false;
								
									if (this.DESC_SKU == null) {
										if (other.DESC_SKU != null) 
											return false;
								
									} else if (!this.DESC_SKU.equals(other.DESC_SKU))
								 
										return false;
								
									if (this.QTD_SKU == null) {
										if (other.QTD_SKU != null) 
											return false;
								
									} else if (!this.QTD_SKU.equals(other.QTD_SKU))
								 
										return false;
								
									if (this.VL_TOTAL_SKU == null) {
										if (other.VL_TOTAL_SKU != null) 
											return false;
								
									} else if (!this.VL_TOTAL_SKU.equals(other.VL_TOTAL_SKU))
								 
										return false;
								
									if (this.VL_UNITARIO == null) {
										if (other.VL_UNITARIO != null) 
											return false;
								
									} else if (!this.VL_UNITARIO.equals(other.VL_UNITARIO))
								 
										return false;
								
									if (this.VL_DESCONTO == null) {
										if (other.VL_DESCONTO != null) 
											return false;
								
									} else if (!this.VL_DESCONTO.equals(other.VL_DESCONTO))
								 
										return false;
								
									if (this.VL_PRODUTOS_PEDIDO == null) {
										if (other.VL_PRODUTOS_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PRODUTOS_PEDIDO.equals(other.VL_PRODUTOS_PEDIDO))
								 
										return false;
								
									if (this.VL_FRETE == null) {
										if (other.VL_FRETE != null) 
											return false;
								
									} else if (!this.VL_FRETE.equals(other.VL_FRETE))
								 
										return false;
								
									if (this.VL_PEDIDO == null) {
										if (other.VL_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PEDIDO.equals(other.VL_PEDIDO))
								 
										return false;
								
									if (this.BASE_ICMS == null) {
										if (other.BASE_ICMS != null) 
											return false;
								
									} else if (!this.BASE_ICMS.equals(other.BASE_ICMS))
								 
										return false;
								
									if (this.VL_ICMS == null) {
										if (other.VL_ICMS != null) 
											return false;
								
									} else if (!this.VL_ICMS.equals(other.VL_ICMS))
								 
										return false;
								
									if (this.NOME_TRANSPORTADORA == null) {
										if (other.NOME_TRANSPORTADORA != null) 
											return false;
								
									} else if (!this.NOME_TRANSPORTADORA.equals(other.NOME_TRANSPORTADORA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_4 = 0;
int nb_duplicates_tUniqRow_4 = 0;
KeyStruct_tUniqRow_4 finder_tUniqRow_4 = new KeyStruct_tUniqRow_4();
java.util.Set<KeyStruct_tUniqRow_4> keystUniqRow_4 = new java.util.HashSet<KeyStruct_tUniqRow_4>(); 

 



/**
 * [tUniqRow_4 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfmapStruct copyOfcopyOfcopyOfmap_tmp = new copyOfcopyOfcopyOfmapStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";
	
	
		int tos_count_tDBInput_5 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_5 = java.util.Calendar.getInstance();
		    calendar_tDBInput_5.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_5 = calendar_tDBInput_5.getTime();
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				conn_tDBInput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "SELECT MG.GER_CODCLI CD_CLIENTE,\n       CL.CLI_C_G_C_ NM_DOCUMENTO,\n	   MG.GER_CODEMP CD_EMPRESA,\n	   MG.GER_CODVEN "
+"VENDEDOR,\n	   OP.OPE_NOMOPE NOME_VENDEDOR,\n       FG.FGO_NUMDOC PEDIDO_AUTCOM,\n       FG.FGO_NUMPOK DESC_FULFILLMENT	"
+",\n       MG.GER_ESPDOC TIPO_NOTA,\n       MG.GER_NUMDOC NUMERO_NOTA,\n       MG.GER_SERIE_ SERIE_NOTA,\n       (SELECT "
+"MAX( DEV.DET_NUMDOC) FROM MOVDET DEV\n           WHERE DEV.DET_DOCDEV = MG.GER_NUMDOC \n           AND DEV.DET_EMPDEV = "
+"MG.GER_CODEMP \n           AND DEV.DET_ESPDEV = MG.GER_ESPDOC \n           AND DEV.DET_CODVEN = MG.GER_CODVEN\n         "
+"  LIMIT 1) NOTA_DEVOLUCAO,\n           MG.GER_NUMROM NM_ROMANEIO,\n       CONCAT( MG.GER_DTAENT ,' ',MG.GER_HORENT) DT_P"
+"EDIDO,\n(SELECT ED.FDO_ITEEST FROM FATDOR FD, EXTDOR ED\n   WHERE FG.AUTOINCREM = FD.FDO_SEQGER\n     AND FD.AUTOINCREM "
+"= ED.FDO_SEQFDO\n     LIMIT 1) AS CD_COMBO,\n       DET.DET_CODITE SKU ,\n       DET.DET_DESCRI DESC_SKU,\n       DET.DE"
+"T_QTDITE QTD_SKU,\n       (DET.DET_QTDITE * DET.DET_UNITAR) VL_TOTAL_SKU,\n       DET.DET_UNITAR VL_UNITARIO,       \n  "
+"     DET_DESESP VL_DESCONTO ,\n       MG.GER_TOTPRO VL_PRODUTOS_PEDIDO,\n       MG.GER_TOTFRE VL_FRETE,\n       MG.GER_V"
+"LRCON VL_PEDIDO,\n       MG.GER_BASICM BASE_ICMS,\n       MG.GER_TOTICM VL_ICMS,\n       TRA.TRA_NOMTRA NOME_TRANSPORTAD"
+"ORA\n  FROM MOVGER MG\n LEFT JOIN CADCLI CL ON CL.CLI_CODCLI = MG.GER_CODCLI \n LEFT JOIN CADTRA TRA ON TRA.TRA_CODTRA ="
+" MG.GER_CODTRA\n LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = MG.GER_CODVEN \n LEFT JOIN MOVDET DET ON DET.DET_NUMDOC = MG.GER"
+"_NUMDOC AND DET.DET_CODEMP = MG.GER_CODEMP AND DET.DET_SERIE_ = MG.GER_SERIE_ \n LEFT JOIN FATGOR FG ON MG.GER_NUMDOC = "
+"FG.FGO_NUMFAT AND MG.GER_ESPDOC = FG.FGO_TIPFAT AND MG.GER_CODEMP = FG.FGO_EMPFAT AND MG.GER_CODCLI = FG.FGO_CODCLI\nWHE"
+"RE MG.GER_CODVEN IN ('598')\n  AND MG.GER_CODEMP = '001'\n  AND MG.GER_DTAENT >= '2024-01-01';";
		    

		    globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);

		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row11.CD_CLIENTE = null;
							} else {
		                          
            row11.CD_CLIENTE = rs_tDBInput_5.getInt(1);
            if(rs_tDBInput_5.wasNull()){
                    row11.CD_CLIENTE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row11.NM_DOCUMENTO = null;
							} else {
	                         		
        	row11.NM_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 2, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 3) {
								row11.CD_EMPRESA = null;
							} else {
	                         		
        	row11.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 3, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 4) {
								row11.VENDEDOR = null;
							} else {
	                         		
        	row11.VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_5, 4, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 5) {
								row11.NOME_VENDEDOR = null;
							} else {
	                         		
        	row11.NOME_VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_5, 5, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 6) {
								row11.PEDIDO_AUTCOM = null;
							} else {
	                         		
        	row11.PEDIDO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_5, 6, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 7) {
								row11.DESC_FULFILLMENT = null;
							} else {
	                         		
        	row11.DESC_FULFILLMENT = routines.system.JDBCUtil.getString(rs_tDBInput_5, 7, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 8) {
								row11.TIPO_NOTA = null;
							} else {
	                         		
        	row11.TIPO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 8, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 9) {
								row11.NUMERO_NOTA = null;
							} else {
	                         		
        	row11.NUMERO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 9, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 10) {
								row11.SERIE_NOTA = null;
							} else {
	                         		
        	row11.SERIE_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 10, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 11) {
								row11.NOTA_DEVOLUCAO = null;
							} else {
	                         		
        	row11.NOTA_DEVOLUCAO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 11, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 12) {
								row11.NM_ROMANEIO = null;
							} else {
	                         		
        	row11.NM_ROMANEIO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 12, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 13) {
								row11.DT_PEDIDO = null;
							} else {
	                         		
        	row11.DT_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 13, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 14) {
								row11.CD_COMBO = null;
							} else {
	                         		
        	row11.CD_COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 14, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 15) {
								row11.SKU = null;
							} else {
	                         		
        	row11.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_5, 15, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 16) {
								row11.DESC_SKU = null;
							} else {
	                         		
        	row11.DESC_SKU = routines.system.JDBCUtil.getString(rs_tDBInput_5, 16, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 17) {
								row11.QTD_SKU = null;
							} else {
	                         		
            row11.QTD_SKU = rs_tDBInput_5.getDouble(17);
            if(rs_tDBInput_5.wasNull()){
                    row11.QTD_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 18) {
								row11.VL_TOTAL_SKU = null;
							} else {
	                         		
            row11.VL_TOTAL_SKU = rs_tDBInput_5.getDouble(18);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_TOTAL_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 19) {
								row11.VL_UNITARIO = null;
							} else {
	                         		
            row11.VL_UNITARIO = rs_tDBInput_5.getDouble(19);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 20) {
								row11.VL_DESCONTO = null;
							} else {
	                         		
            row11.VL_DESCONTO = rs_tDBInput_5.getDouble(20);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 21) {
								row11.VL_PRODUTOS_PEDIDO = null;
							} else {
	                         		
            row11.VL_PRODUTOS_PEDIDO = rs_tDBInput_5.getDouble(21);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_PRODUTOS_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 22) {
								row11.VL_FRETE = null;
							} else {
	                         		
            row11.VL_FRETE = rs_tDBInput_5.getDouble(22);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 23) {
								row11.VL_PEDIDO = null;
							} else {
	                         		
            row11.VL_PEDIDO = rs_tDBInput_5.getDouble(23);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 24) {
								row11.BASE_ICMS = null;
							} else {
	                         		
            row11.BASE_ICMS = rs_tDBInput_5.getDouble(24);
            if(rs_tDBInput_5.wasNull()){
                    row11.BASE_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 25) {
								row11.VL_ICMS = null;
							} else {
	                         		
            row11.VL_ICMS = rs_tDBInput_5.getDouble(25);
            if(rs_tDBInput_5.wasNull()){
                    row11.VL_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 26) {
								row11.NOME_TRANSPORTADORA = null;
							} else {
	                         		
        	row11.NOME_TRANSPORTADORA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 26, false);
		                    }
					

 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfmap = null;


// # Output table : 'copyOfcopyOfcopyOfmap'
copyOfcopyOfcopyOfmap_tmp.CD_CLIENTE = row11.CD_CLIENTE ;
copyOfcopyOfcopyOfmap_tmp.NM_DOCUMENTO = row11.NM_DOCUMENTO ;
copyOfcopyOfcopyOfmap_tmp.CD_EMPRESA = row11.CD_EMPRESA ;
copyOfcopyOfcopyOfmap_tmp.VENDEDOR = row11.VENDEDOR ;
copyOfcopyOfcopyOfmap_tmp.NOME_VENDEDOR = row11.NOME_VENDEDOR ;
copyOfcopyOfcopyOfmap_tmp.PEDIDO_AUTCOM = row11.PEDIDO_AUTCOM ;
copyOfcopyOfcopyOfmap_tmp.DESC_FULFILLMENT = row11.DESC_FULFILLMENT ;
copyOfcopyOfcopyOfmap_tmp.TIPO_NOTA = row11.TIPO_NOTA ;
copyOfcopyOfcopyOfmap_tmp.NUMERO_NOTA = row11.NUMERO_NOTA ;
copyOfcopyOfcopyOfmap_tmp.SERIE_NOTA = row11.SERIE_NOTA ;
copyOfcopyOfcopyOfmap_tmp.NOTA_DEVOLUCAO = row11.NOTA_DEVOLUCAO ;
copyOfcopyOfcopyOfmap_tmp.NM_ROMANEIO = row11.NM_ROMANEIO ;
copyOfcopyOfcopyOfmap_tmp.DT_PEDIDO = row11.DT_PEDIDO ;
copyOfcopyOfcopyOfmap_tmp.CD_COMBO = row11.CD_COMBO ;
copyOfcopyOfcopyOfmap_tmp.SKU = row11.SKU ;
copyOfcopyOfcopyOfmap_tmp.DESC_SKU = row11.DESC_SKU ;
copyOfcopyOfcopyOfmap_tmp.QTD_SKU = row11.QTD_SKU ;
copyOfcopyOfcopyOfmap_tmp.VL_TOTAL_SKU = row11.VL_TOTAL_SKU ;
copyOfcopyOfcopyOfmap_tmp.VL_UNITARIO = row11.VL_UNITARIO ;
copyOfcopyOfcopyOfmap_tmp.VL_DESCONTO = row11.VL_DESCONTO ;
copyOfcopyOfcopyOfmap_tmp.VL_PRODUTOS_PEDIDO = row11.VL_PRODUTOS_PEDIDO ;
copyOfcopyOfcopyOfmap_tmp.VL_FRETE = row11.VL_FRETE ;
copyOfcopyOfcopyOfmap_tmp.VL_PEDIDO = row11.VL_PEDIDO ;
copyOfcopyOfcopyOfmap_tmp.BASE_ICMS = row11.BASE_ICMS ;
copyOfcopyOfcopyOfmap_tmp.VL_ICMS = row11.VL_ICMS ;
copyOfcopyOfcopyOfmap_tmp.NOME_TRANSPORTADORA = row11.NOME_TRANSPORTADORA ;
copyOfcopyOfcopyOfmap = copyOfcopyOfcopyOfmap_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfmap"
if(copyOfcopyOfcopyOfmap != null) { 



	
	/**
	 * [tUniqRow_4 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfcopyOfmap"
						
						);
					}
					
row12 = null;			
finder_tUniqRow_4.CD_CLIENTE = copyOfcopyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfcopyOfmap.NM_DOCUMENTO == null){
	finder_tUniqRow_4.NM_DOCUMENTO = null;
}else{
	finder_tUniqRow_4.NM_DOCUMENTO = copyOfcopyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.CD_EMPRESA == null){
	finder_tUniqRow_4.CD_EMPRESA = null;
}else{
	finder_tUniqRow_4.CD_EMPRESA = copyOfcopyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.VENDEDOR == null){
	finder_tUniqRow_4.VENDEDOR = null;
}else{
	finder_tUniqRow_4.VENDEDOR = copyOfcopyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NOME_VENDEDOR == null){
	finder_tUniqRow_4.NOME_VENDEDOR = null;
}else{
	finder_tUniqRow_4.NOME_VENDEDOR = copyOfcopyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.PEDIDO_AUTCOM == null){
	finder_tUniqRow_4.PEDIDO_AUTCOM = null;
}else{
	finder_tUniqRow_4.PEDIDO_AUTCOM = copyOfcopyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.DESC_FULFILLMENT == null){
	finder_tUniqRow_4.DESC_FULFILLMENT = null;
}else{
	finder_tUniqRow_4.DESC_FULFILLMENT = copyOfcopyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.TIPO_NOTA == null){
	finder_tUniqRow_4.TIPO_NOTA = null;
}else{
	finder_tUniqRow_4.TIPO_NOTA = copyOfcopyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NUMERO_NOTA == null){
	finder_tUniqRow_4.NUMERO_NOTA = null;
}else{
	finder_tUniqRow_4.NUMERO_NOTA = copyOfcopyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.SERIE_NOTA == null){
	finder_tUniqRow_4.SERIE_NOTA = null;
}else{
	finder_tUniqRow_4.SERIE_NOTA = copyOfcopyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	finder_tUniqRow_4.NOTA_DEVOLUCAO = null;
}else{
	finder_tUniqRow_4.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NM_ROMANEIO == null){
	finder_tUniqRow_4.NM_ROMANEIO = null;
}else{
	finder_tUniqRow_4.NM_ROMANEIO = copyOfcopyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.DT_PEDIDO == null){
	finder_tUniqRow_4.DT_PEDIDO = null;
}else{
	finder_tUniqRow_4.DT_PEDIDO = copyOfcopyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.CD_COMBO == null){
	finder_tUniqRow_4.CD_COMBO = null;
}else{
	finder_tUniqRow_4.CD_COMBO = copyOfcopyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.SKU == null){
	finder_tUniqRow_4.SKU = null;
}else{
	finder_tUniqRow_4.SKU = copyOfcopyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.DESC_SKU == null){
	finder_tUniqRow_4.DESC_SKU = null;
}else{
	finder_tUniqRow_4.DESC_SKU = copyOfcopyOfcopyOfmap.DESC_SKU.toLowerCase();
}
finder_tUniqRow_4.QTD_SKU = copyOfcopyOfcopyOfmap.QTD_SKU;
finder_tUniqRow_4.VL_TOTAL_SKU = copyOfcopyOfcopyOfmap.VL_TOTAL_SKU;
finder_tUniqRow_4.VL_UNITARIO = copyOfcopyOfcopyOfmap.VL_UNITARIO;
finder_tUniqRow_4.VL_DESCONTO = copyOfcopyOfcopyOfmap.VL_DESCONTO;
finder_tUniqRow_4.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
finder_tUniqRow_4.VL_FRETE = copyOfcopyOfcopyOfmap.VL_FRETE;
finder_tUniqRow_4.VL_PEDIDO = copyOfcopyOfcopyOfmap.VL_PEDIDO;
finder_tUniqRow_4.BASE_ICMS = copyOfcopyOfcopyOfmap.BASE_ICMS;
finder_tUniqRow_4.VL_ICMS = copyOfcopyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	finder_tUniqRow_4.NOME_TRANSPORTADORA = null;
}else{
	finder_tUniqRow_4.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}	
finder_tUniqRow_4.hashCodeDirty = true;
if (!keystUniqRow_4.contains(finder_tUniqRow_4)) {
		KeyStruct_tUniqRow_4 new_tUniqRow_4 = new KeyStruct_tUniqRow_4();

		
new_tUniqRow_4.CD_CLIENTE = copyOfcopyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfcopyOfmap.NM_DOCUMENTO == null){
	new_tUniqRow_4.NM_DOCUMENTO = null;
}else{
	new_tUniqRow_4.NM_DOCUMENTO = copyOfcopyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.CD_EMPRESA == null){
	new_tUniqRow_4.CD_EMPRESA = null;
}else{
	new_tUniqRow_4.CD_EMPRESA = copyOfcopyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.VENDEDOR == null){
	new_tUniqRow_4.VENDEDOR = null;
}else{
	new_tUniqRow_4.VENDEDOR = copyOfcopyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NOME_VENDEDOR == null){
	new_tUniqRow_4.NOME_VENDEDOR = null;
}else{
	new_tUniqRow_4.NOME_VENDEDOR = copyOfcopyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.PEDIDO_AUTCOM == null){
	new_tUniqRow_4.PEDIDO_AUTCOM = null;
}else{
	new_tUniqRow_4.PEDIDO_AUTCOM = copyOfcopyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.DESC_FULFILLMENT == null){
	new_tUniqRow_4.DESC_FULFILLMENT = null;
}else{
	new_tUniqRow_4.DESC_FULFILLMENT = copyOfcopyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.TIPO_NOTA == null){
	new_tUniqRow_4.TIPO_NOTA = null;
}else{
	new_tUniqRow_4.TIPO_NOTA = copyOfcopyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NUMERO_NOTA == null){
	new_tUniqRow_4.NUMERO_NOTA = null;
}else{
	new_tUniqRow_4.NUMERO_NOTA = copyOfcopyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.SERIE_NOTA == null){
	new_tUniqRow_4.SERIE_NOTA = null;
}else{
	new_tUniqRow_4.SERIE_NOTA = copyOfcopyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	new_tUniqRow_4.NOTA_DEVOLUCAO = null;
}else{
	new_tUniqRow_4.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.NM_ROMANEIO == null){
	new_tUniqRow_4.NM_ROMANEIO = null;
}else{
	new_tUniqRow_4.NM_ROMANEIO = copyOfcopyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.DT_PEDIDO == null){
	new_tUniqRow_4.DT_PEDIDO = null;
}else{
	new_tUniqRow_4.DT_PEDIDO = copyOfcopyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.CD_COMBO == null){
	new_tUniqRow_4.CD_COMBO = null;
}else{
	new_tUniqRow_4.CD_COMBO = copyOfcopyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.SKU == null){
	new_tUniqRow_4.SKU = null;
}else{
	new_tUniqRow_4.SKU = copyOfcopyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfcopyOfmap.DESC_SKU == null){
	new_tUniqRow_4.DESC_SKU = null;
}else{
	new_tUniqRow_4.DESC_SKU = copyOfcopyOfcopyOfmap.DESC_SKU.toLowerCase();
}
new_tUniqRow_4.QTD_SKU = copyOfcopyOfcopyOfmap.QTD_SKU;
new_tUniqRow_4.VL_TOTAL_SKU = copyOfcopyOfcopyOfmap.VL_TOTAL_SKU;
new_tUniqRow_4.VL_UNITARIO = copyOfcopyOfcopyOfmap.VL_UNITARIO;
new_tUniqRow_4.VL_DESCONTO = copyOfcopyOfcopyOfmap.VL_DESCONTO;
new_tUniqRow_4.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
new_tUniqRow_4.VL_FRETE = copyOfcopyOfcopyOfmap.VL_FRETE;
new_tUniqRow_4.VL_PEDIDO = copyOfcopyOfcopyOfmap.VL_PEDIDO;
new_tUniqRow_4.BASE_ICMS = copyOfcopyOfcopyOfmap.BASE_ICMS;
new_tUniqRow_4.VL_ICMS = copyOfcopyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	new_tUniqRow_4.NOME_TRANSPORTADORA = null;
}else{
	new_tUniqRow_4.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}
		
		keystUniqRow_4.add(new_tUniqRow_4);if(row12 == null){ 
	
	row12 = new row12Struct();
}row12.CD_CLIENTE = copyOfcopyOfcopyOfmap.CD_CLIENTE;			row12.NM_DOCUMENTO = copyOfcopyOfcopyOfmap.NM_DOCUMENTO;			row12.CD_EMPRESA = copyOfcopyOfcopyOfmap.CD_EMPRESA;			row12.VENDEDOR = copyOfcopyOfcopyOfmap.VENDEDOR;			row12.NOME_VENDEDOR = copyOfcopyOfcopyOfmap.NOME_VENDEDOR;			row12.PEDIDO_AUTCOM = copyOfcopyOfcopyOfmap.PEDIDO_AUTCOM;			row12.DESC_FULFILLMENT = copyOfcopyOfcopyOfmap.DESC_FULFILLMENT;			row12.TIPO_NOTA = copyOfcopyOfcopyOfmap.TIPO_NOTA;			row12.NUMERO_NOTA = copyOfcopyOfcopyOfmap.NUMERO_NOTA;			row12.SERIE_NOTA = copyOfcopyOfcopyOfmap.SERIE_NOTA;			row12.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO;			row12.NM_ROMANEIO = copyOfcopyOfcopyOfmap.NM_ROMANEIO;			row12.DT_PEDIDO = copyOfcopyOfcopyOfmap.DT_PEDIDO;			row12.CD_COMBO = copyOfcopyOfcopyOfmap.CD_COMBO;			row12.SKU = copyOfcopyOfcopyOfmap.SKU;			row12.DESC_SKU = copyOfcopyOfcopyOfmap.DESC_SKU;			row12.QTD_SKU = copyOfcopyOfcopyOfmap.QTD_SKU;			row12.VL_TOTAL_SKU = copyOfcopyOfcopyOfmap.VL_TOTAL_SKU;			row12.VL_UNITARIO = copyOfcopyOfcopyOfmap.VL_UNITARIO;			row12.VL_DESCONTO = copyOfcopyOfcopyOfmap.VL_DESCONTO;			row12.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;			row12.VL_FRETE = copyOfcopyOfcopyOfmap.VL_FRETE;			row12.VL_PEDIDO = copyOfcopyOfcopyOfmap.VL_PEDIDO;			row12.BASE_ICMS = copyOfcopyOfcopyOfmap.BASE_ICMS;			row12.VL_ICMS = copyOfcopyOfcopyOfmap.VL_ICMS;			row12.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA;					
		nb_uniques_tUniqRow_4++;
	} else {
	  nb_duplicates_tUniqRow_4++;
	}

 


	tos_count_tUniqRow_4++;

/**
 * [tUniqRow_4 main ] stop
 */
	
	/**
	 * [tUniqRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_begin ] stop
 */
// Start of branch "row12"
if(row12 != null) { 



	
	/**
	 * [tFileOutputExcel_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_5.addRow();
									   				
	    				if(row12.CD_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(Double.parseDouble(String.valueOf(row12.CD_CLIENTE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NM_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.NM_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.CD_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.CD_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NOME_VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.NOME_VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.PEDIDO_AUTCOM != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.PEDIDO_AUTCOM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.DESC_FULFILLMENT != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.DESC_FULFILLMENT));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.TIPO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.TIPO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NUMERO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.NUMERO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.SERIE_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.SERIE_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NOTA_DEVOLUCAO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.NOTA_DEVOLUCAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NM_ROMANEIO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.NM_ROMANEIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.DT_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.DT_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.CD_COMBO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.CD_COMBO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.SKU != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.DESC_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.DESC_SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.QTD_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.QTD_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_TOTAL_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_TOTAL_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_PRODUTOS_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_PRODUTOS_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.BASE_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.BASE_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VL_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(row12.VL_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NOME_TRANSPORTADORA != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row12.NOME_TRANSPORTADORA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_5++;
				
 


	tos_count_tFileOutputExcel_5++;

/**
 * [tFileOutputExcel_5 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_end ] stop
 */

} // End of branch "row12"




	
	/**
	 * [tUniqRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfmap"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
}
globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);

 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tUniqRow_4 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

globalMap.put("tUniqRow_4_NB_UNIQUES",nb_uniques_tUniqRow_4);
globalMap.put("tUniqRow_4_NB_DUPLICATES",nb_duplicates_tUniqRow_4);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfmap");
			  	}
			  	
 

ok_Hash.put("tUniqRow_4", true);
end_Hash.put("tUniqRow_4", System.currentTimeMillis());




/**
 * [tUniqRow_4 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

							columnIndex_tFileOutputExcel_5 = 0;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 1;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 2;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 3;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 4;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 5;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 6;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 7;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 8;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 9;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 10;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 11;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 12;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 13;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 14;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 15;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 16;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 17;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 18;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 19;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 20;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 21;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 22;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 23;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 24;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 25;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
	
	
	
			xlsxTool_tFileOutputExcel_5.writeExcel(fileName_tFileOutputExcel_5,true);
	
		if(headerIsInserted_tFileOutputExcel_5 && nb_line_tFileOutputExcel_5 > 0){
			nb_line_tFileOutputExcel_5 = nb_line_tFileOutputExcel_5 -1;
		}
		globalMap.put("tFileOutputExcel_5_NB_LINE",nb_line_tFileOutputExcel_5);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_5", true);
end_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());




/**
 * [tFileOutputExcel_5 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk23", 0, "ok");
								} 
							
							tDBInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tUniqRow_4 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct();
row23Struct row23 = new row23Struct();






	
	/**
	 * [tFileOutputExcel_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_10", false);
		start_Hash.put("tFileOutputExcel_10", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tFileOutputExcel_10 = 0;
		


		
		int columnIndex_tFileOutputExcel_10 = 0;
		boolean headerIsInserted_tFileOutputExcel_10 = false;
		
		
		String fileName_tFileOutputExcel_10="/root/e_mail/MKTPLACE_MAGALU_MG_2024.xlsx";
		int nb_line_tFileOutputExcel_10 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_10 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_10.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_10.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_10.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_10.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_10.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_10.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_10 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_10 = chm_tFileOutputExcel_10.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_10", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_10) {
			
				xlsxTool_tFileOutputExcel_10.prepareXlsxFile(fileName_tFileOutputExcel_10);
			
		}
		
		xlsxTool_tFileOutputExcel_10.setFont("");
		
		if (xlsxTool_tFileOutputExcel_10.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_10.addRow();
		
		xlsxTool_tFileOutputExcel_10.addCellValue("CD_CLIENTE");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("NM_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("CD_EMPRESA");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VENDEDOR");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("NOME_VENDEDOR");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("PEDIDO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("DESC_FULFILLMENT");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("TIPO_NOTA");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("NUMERO_NOTA");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("SERIE_NOTA");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("NOTA_DEVOLUCAO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("NM_ROMANEIO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("DT_PEDIDO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("CD_COMBO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("SKU");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("DESC_SKU");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("QTD_SKU");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_TOTAL_SKU");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_UNITARIO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_DESCONTO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_PRODUTOS_PEDIDO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_FRETE");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("BASE_ICMS");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("VL_ICMS");
		
		xlsxTool_tFileOutputExcel_10.addCellValue("NOME_TRANSPORTADORA");
		
		nb_line_tFileOutputExcel_10++;
		headerIsInserted_tFileOutputExcel_10 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_10 begin ] stop
 */



	
	/**
	 * [tUniqRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_10", false);
		start_Hash.put("tUniqRow_10", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap");
					}
				
		int tos_count_tUniqRow_10 = 0;
		

	
		class KeyStruct_tUniqRow_10 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer CD_CLIENTE;
					String NM_DOCUMENTO;
					String CD_EMPRESA;
					String VENDEDOR;
					String NOME_VENDEDOR;
					String PEDIDO_AUTCOM;
					String DESC_FULFILLMENT;
					String TIPO_NOTA;
					String NUMERO_NOTA;
					String SERIE_NOTA;
					String NOTA_DEVOLUCAO;
					String NM_ROMANEIO;
					String DT_PEDIDO;
					String CD_COMBO;
					String SKU;
					String DESC_SKU;
					Double QTD_SKU;
					Double VL_TOTAL_SKU;
					Double VL_UNITARIO;
					Double VL_DESCONTO;
					Double VL_PRODUTOS_PEDIDO;
					Double VL_FRETE;
					Double VL_PEDIDO;
					Double BASE_ICMS;
					Double VL_ICMS;
					String NOME_TRANSPORTADORA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_CLIENTE == null) ? 0 : this.CD_CLIENTE.hashCode());
								
								result = prime * result + ((this.NM_DOCUMENTO == null) ? 0 : this.NM_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
								result = prime * result + ((this.VENDEDOR == null) ? 0 : this.VENDEDOR.hashCode());
								
								result = prime * result + ((this.NOME_VENDEDOR == null) ? 0 : this.NOME_VENDEDOR.hashCode());
								
								result = prime * result + ((this.PEDIDO_AUTCOM == null) ? 0 : this.PEDIDO_AUTCOM.hashCode());
								
								result = prime * result + ((this.DESC_FULFILLMENT == null) ? 0 : this.DESC_FULFILLMENT.hashCode());
								
								result = prime * result + ((this.TIPO_NOTA == null) ? 0 : this.TIPO_NOTA.hashCode());
								
								result = prime * result + ((this.NUMERO_NOTA == null) ? 0 : this.NUMERO_NOTA.hashCode());
								
								result = prime * result + ((this.SERIE_NOTA == null) ? 0 : this.SERIE_NOTA.hashCode());
								
								result = prime * result + ((this.NOTA_DEVOLUCAO == null) ? 0 : this.NOTA_DEVOLUCAO.hashCode());
								
								result = prime * result + ((this.NM_ROMANEIO == null) ? 0 : this.NM_ROMANEIO.hashCode());
								
								result = prime * result + ((this.DT_PEDIDO == null) ? 0 : this.DT_PEDIDO.hashCode());
								
								result = prime * result + ((this.CD_COMBO == null) ? 0 : this.CD_COMBO.hashCode());
								
								result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
								
								result = prime * result + ((this.DESC_SKU == null) ? 0 : this.DESC_SKU.hashCode());
								
								result = prime * result + ((this.QTD_SKU == null) ? 0 : this.QTD_SKU.hashCode());
								
								result = prime * result + ((this.VL_TOTAL_SKU == null) ? 0 : this.VL_TOTAL_SKU.hashCode());
								
								result = prime * result + ((this.VL_UNITARIO == null) ? 0 : this.VL_UNITARIO.hashCode());
								
								result = prime * result + ((this.VL_DESCONTO == null) ? 0 : this.VL_DESCONTO.hashCode());
								
								result = prime * result + ((this.VL_PRODUTOS_PEDIDO == null) ? 0 : this.VL_PRODUTOS_PEDIDO.hashCode());
								
								result = prime * result + ((this.VL_FRETE == null) ? 0 : this.VL_FRETE.hashCode());
								
								result = prime * result + ((this.VL_PEDIDO == null) ? 0 : this.VL_PEDIDO.hashCode());
								
								result = prime * result + ((this.BASE_ICMS == null) ? 0 : this.BASE_ICMS.hashCode());
								
								result = prime * result + ((this.VL_ICMS == null) ? 0 : this.VL_ICMS.hashCode());
								
								result = prime * result + ((this.NOME_TRANSPORTADORA == null) ? 0 : this.NOME_TRANSPORTADORA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_10 other = (KeyStruct_tUniqRow_10) obj;
				
									if (this.CD_CLIENTE == null) {
										if (other.CD_CLIENTE != null) 
											return false;
								
									} else if (!this.CD_CLIENTE.equals(other.CD_CLIENTE))
								 
										return false;
								
									if (this.NM_DOCUMENTO == null) {
										if (other.NM_DOCUMENTO != null) 
											return false;
								
									} else if (!this.NM_DOCUMENTO.equals(other.NM_DOCUMENTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
									if (this.VENDEDOR == null) {
										if (other.VENDEDOR != null) 
											return false;
								
									} else if (!this.VENDEDOR.equals(other.VENDEDOR))
								 
										return false;
								
									if (this.NOME_VENDEDOR == null) {
										if (other.NOME_VENDEDOR != null) 
											return false;
								
									} else if (!this.NOME_VENDEDOR.equals(other.NOME_VENDEDOR))
								 
										return false;
								
									if (this.PEDIDO_AUTCOM == null) {
										if (other.PEDIDO_AUTCOM != null) 
											return false;
								
									} else if (!this.PEDIDO_AUTCOM.equals(other.PEDIDO_AUTCOM))
								 
										return false;
								
									if (this.DESC_FULFILLMENT == null) {
										if (other.DESC_FULFILLMENT != null) 
											return false;
								
									} else if (!this.DESC_FULFILLMENT.equals(other.DESC_FULFILLMENT))
								 
										return false;
								
									if (this.TIPO_NOTA == null) {
										if (other.TIPO_NOTA != null) 
											return false;
								
									} else if (!this.TIPO_NOTA.equals(other.TIPO_NOTA))
								 
										return false;
								
									if (this.NUMERO_NOTA == null) {
										if (other.NUMERO_NOTA != null) 
											return false;
								
									} else if (!this.NUMERO_NOTA.equals(other.NUMERO_NOTA))
								 
										return false;
								
									if (this.SERIE_NOTA == null) {
										if (other.SERIE_NOTA != null) 
											return false;
								
									} else if (!this.SERIE_NOTA.equals(other.SERIE_NOTA))
								 
										return false;
								
									if (this.NOTA_DEVOLUCAO == null) {
										if (other.NOTA_DEVOLUCAO != null) 
											return false;
								
									} else if (!this.NOTA_DEVOLUCAO.equals(other.NOTA_DEVOLUCAO))
								 
										return false;
								
									if (this.NM_ROMANEIO == null) {
										if (other.NM_ROMANEIO != null) 
											return false;
								
									} else if (!this.NM_ROMANEIO.equals(other.NM_ROMANEIO))
								 
										return false;
								
									if (this.DT_PEDIDO == null) {
										if (other.DT_PEDIDO != null) 
											return false;
								
									} else if (!this.DT_PEDIDO.equals(other.DT_PEDIDO))
								 
										return false;
								
									if (this.CD_COMBO == null) {
										if (other.CD_COMBO != null) 
											return false;
								
									} else if (!this.CD_COMBO.equals(other.CD_COMBO))
								 
										return false;
								
									if (this.SKU == null) {
										if (other.SKU != null) 
											return false;
								
									} else if (!this.SKU.equals(other.SKU))
								 
										return false;
								
									if (this.DESC_SKU == null) {
										if (other.DESC_SKU != null) 
											return false;
								
									} else if (!this.DESC_SKU.equals(other.DESC_SKU))
								 
										return false;
								
									if (this.QTD_SKU == null) {
										if (other.QTD_SKU != null) 
											return false;
								
									} else if (!this.QTD_SKU.equals(other.QTD_SKU))
								 
										return false;
								
									if (this.VL_TOTAL_SKU == null) {
										if (other.VL_TOTAL_SKU != null) 
											return false;
								
									} else if (!this.VL_TOTAL_SKU.equals(other.VL_TOTAL_SKU))
								 
										return false;
								
									if (this.VL_UNITARIO == null) {
										if (other.VL_UNITARIO != null) 
											return false;
								
									} else if (!this.VL_UNITARIO.equals(other.VL_UNITARIO))
								 
										return false;
								
									if (this.VL_DESCONTO == null) {
										if (other.VL_DESCONTO != null) 
											return false;
								
									} else if (!this.VL_DESCONTO.equals(other.VL_DESCONTO))
								 
										return false;
								
									if (this.VL_PRODUTOS_PEDIDO == null) {
										if (other.VL_PRODUTOS_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PRODUTOS_PEDIDO.equals(other.VL_PRODUTOS_PEDIDO))
								 
										return false;
								
									if (this.VL_FRETE == null) {
										if (other.VL_FRETE != null) 
											return false;
								
									} else if (!this.VL_FRETE.equals(other.VL_FRETE))
								 
										return false;
								
									if (this.VL_PEDIDO == null) {
										if (other.VL_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PEDIDO.equals(other.VL_PEDIDO))
								 
										return false;
								
									if (this.BASE_ICMS == null) {
										if (other.BASE_ICMS != null) 
											return false;
								
									} else if (!this.BASE_ICMS.equals(other.BASE_ICMS))
								 
										return false;
								
									if (this.VL_ICMS == null) {
										if (other.VL_ICMS != null) 
											return false;
								
									} else if (!this.VL_ICMS.equals(other.VL_ICMS))
								 
										return false;
								
									if (this.NOME_TRANSPORTADORA == null) {
										if (other.NOME_TRANSPORTADORA != null) 
											return false;
								
									} else if (!this.NOME_TRANSPORTADORA.equals(other.NOME_TRANSPORTADORA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_10 = 0;
int nb_duplicates_tUniqRow_10 = 0;
KeyStruct_tUniqRow_10 finder_tUniqRow_10 = new KeyStruct_tUniqRow_10();
java.util.Set<KeyStruct_tUniqRow_10> keystUniqRow_10 = new java.util.HashSet<KeyStruct_tUniqRow_10>(); 

 



/**
 * [tUniqRow_10 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tDBInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_10", false);
		start_Hash.put("tDBInput_10", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_10";
	
	
		int tos_count_tDBInput_10 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_10 = java.util.Calendar.getInstance();
		    calendar_tDBInput_10.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_10 = calendar_tDBInput_10.getTime();
		    int nb_line_tDBInput_10 = 0;
		    java.sql.Connection conn_tDBInput_10 = null;
				conn_tDBInput_10 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_10 = conn_tDBInput_10.createStatement();

		    String dbquery_tDBInput_10 = "SELECT MG.GER_CODCLI CD_CLIENTE,\n       CL.CLI_C_G_C_ NM_DOCUMENTO,\n	   MG.GER_CODEMP CD_EMPRESA,\n	   MG.GER_CODVEN "
+"VENDEDOR,\n	   OP.OPE_NOMOPE NOME_VENDEDOR,\n       FG.FGO_NUMDOC PEDIDO_AUTCOM,\n       FG.FGO_NUMPOK DESC_FULFILLMENT	"
+",\n       MG.GER_ESPDOC TIPO_NOTA,\n       MG.GER_NUMDOC NUMERO_NOTA,\n       MG.GER_SERIE_ SERIE_NOTA,\n       (SELECT "
+"MAX( DEV.DET_NUMDOC) FROM MOVDET DEV\n           WHERE DEV.DET_DOCDEV = MG.GER_NUMDOC \n           AND DEV.DET_EMPDEV = "
+"MG.GER_CODEMP \n           AND DEV.DET_ESPDEV = MG.GER_ESPDOC \n           AND DEV.DET_CODVEN = MG.GER_CODVEN\n         "
+"  LIMIT 1) NOTA_DEVOLUCAO,\n           MG.GER_NUMROM NM_ROMANEIO,\n       CONCAT( MG.GER_DTAENT ,' ',MG.GER_HORENT) DT_P"
+"EDIDO,\n(SELECT ED.FDO_ITEEST FROM FATDOR FD, EXTDOR ED\n   WHERE FG.AUTOINCREM = FD.FDO_SEQGER\n     AND FD.AUTOINCREM "
+"= ED.FDO_SEQFDO\n     LIMIT 1) AS CD_COMBO,\n       DET.DET_CODITE SKU ,\n       DET.DET_DESCRI DESC_SKU,\n       DET.DE"
+"T_QTDITE QTD_SKU,\n       (DET.DET_QTDITE * DET.DET_UNITAR) VL_TOTAL_SKU,\n       DET.DET_UNITAR VL_UNITARIO,       \n  "
+"     DET_DESESP VL_DESCONTO ,\n       MG.GER_TOTPRO VL_PRODUTOS_PEDIDO,\n       MG.GER_TOTFRE VL_FRETE,\n       MG.GER_V"
+"LRCON VL_PEDIDO,\n       MG.GER_BASICM BASE_ICMS,\n       MG.GER_TOTICM VL_ICMS,\n       TRA.TRA_NOMTRA NOME_TRANSPORTAD"
+"ORA\n  FROM MOVGER MG\n LEFT JOIN CADCLI CL ON CL.CLI_CODCLI = MG.GER_CODCLI \n LEFT JOIN CADTRA TRA ON TRA.TRA_CODTRA ="
+" MG.GER_CODTRA\n LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = MG.GER_CODVEN \n LEFT JOIN MOVDET DET ON DET.DET_NUMDOC = MG.GER"
+"_NUMDOC AND DET.DET_CODEMP = MG.GER_CODEMP AND DET.DET_SERIE_ = MG.GER_SERIE_ \n LEFT JOIN FATGOR FG ON MG.GER_NUMDOC = "
+"FG.FGO_NUMFAT AND MG.GER_ESPDOC = FG.FGO_TIPFAT AND MG.GER_CODEMP = FG.FGO_EMPFAT AND MG.GER_CODCLI = FG.FGO_CODCLI\nWHE"
+"RE MG.GER_CODVEN IN ('C09')\n  AND MG.GER_CODEMP = '010'\n  AND MG.GER_DTAENT >= '2024-01-01'\n";
		    

		    globalMap.put("tDBInput_10_QUERY",dbquery_tDBInput_10);

		    java.sql.ResultSet rs_tDBInput_10 = null;

		    try {
		    	rs_tDBInput_10 = stmt_tDBInput_10.executeQuery(dbquery_tDBInput_10);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_10 = rs_tDBInput_10.getMetaData();
		    	int colQtyInRs_tDBInput_10 = rsmd_tDBInput_10.getColumnCount();

		    String tmpContent_tDBInput_10 = null;
		    
		    
		    while (rs_tDBInput_10.next()) {
		        nb_line_tDBInput_10++;
		        
							if(colQtyInRs_tDBInput_10 < 1) {
								row22.CD_CLIENTE = null;
							} else {
		                          
            row22.CD_CLIENTE = rs_tDBInput_10.getInt(1);
            if(rs_tDBInput_10.wasNull()){
                    row22.CD_CLIENTE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 2) {
								row22.NM_DOCUMENTO = null;
							} else {
	                         		
        	row22.NM_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_10, 2, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 3) {
								row22.CD_EMPRESA = null;
							} else {
	                         		
        	row22.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_10, 3, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 4) {
								row22.VENDEDOR = null;
							} else {
	                         		
        	row22.VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_10, 4, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 5) {
								row22.NOME_VENDEDOR = null;
							} else {
	                         		
        	row22.NOME_VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_10, 5, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 6) {
								row22.PEDIDO_AUTCOM = null;
							} else {
	                         		
        	row22.PEDIDO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_10, 6, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 7) {
								row22.DESC_FULFILLMENT = null;
							} else {
	                         		
        	row22.DESC_FULFILLMENT = routines.system.JDBCUtil.getString(rs_tDBInput_10, 7, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 8) {
								row22.TIPO_NOTA = null;
							} else {
	                         		
        	row22.TIPO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_10, 8, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 9) {
								row22.NUMERO_NOTA = null;
							} else {
	                         		
        	row22.NUMERO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_10, 9, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 10) {
								row22.SERIE_NOTA = null;
							} else {
	                         		
        	row22.SERIE_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_10, 10, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 11) {
								row22.NOTA_DEVOLUCAO = null;
							} else {
	                         		
        	row22.NOTA_DEVOLUCAO = routines.system.JDBCUtil.getString(rs_tDBInput_10, 11, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 12) {
								row22.NM_ROMANEIO = null;
							} else {
	                         		
        	row22.NM_ROMANEIO = routines.system.JDBCUtil.getString(rs_tDBInput_10, 12, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 13) {
								row22.DT_PEDIDO = null;
							} else {
	                         		
        	row22.DT_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_10, 13, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 14) {
								row22.CD_COMBO = null;
							} else {
	                         		
        	row22.CD_COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_10, 14, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 15) {
								row22.SKU = null;
							} else {
	                         		
        	row22.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_10, 15, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 16) {
								row22.DESC_SKU = null;
							} else {
	                         		
        	row22.DESC_SKU = routines.system.JDBCUtil.getString(rs_tDBInput_10, 16, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 17) {
								row22.QTD_SKU = null;
							} else {
	                         		
            row22.QTD_SKU = rs_tDBInput_10.getDouble(17);
            if(rs_tDBInput_10.wasNull()){
                    row22.QTD_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 18) {
								row22.VL_TOTAL_SKU = null;
							} else {
	                         		
            row22.VL_TOTAL_SKU = rs_tDBInput_10.getDouble(18);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_TOTAL_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 19) {
								row22.VL_UNITARIO = null;
							} else {
	                         		
            row22.VL_UNITARIO = rs_tDBInput_10.getDouble(19);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 20) {
								row22.VL_DESCONTO = null;
							} else {
	                         		
            row22.VL_DESCONTO = rs_tDBInput_10.getDouble(20);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 21) {
								row22.VL_PRODUTOS_PEDIDO = null;
							} else {
	                         		
            row22.VL_PRODUTOS_PEDIDO = rs_tDBInput_10.getDouble(21);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_PRODUTOS_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 22) {
								row22.VL_FRETE = null;
							} else {
	                         		
            row22.VL_FRETE = rs_tDBInput_10.getDouble(22);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 23) {
								row22.VL_PEDIDO = null;
							} else {
	                         		
            row22.VL_PEDIDO = rs_tDBInput_10.getDouble(23);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 24) {
								row22.BASE_ICMS = null;
							} else {
	                         		
            row22.BASE_ICMS = rs_tDBInput_10.getDouble(24);
            if(rs_tDBInput_10.wasNull()){
                    row22.BASE_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 25) {
								row22.VL_ICMS = null;
							} else {
	                         		
            row22.VL_ICMS = rs_tDBInput_10.getDouble(25);
            if(rs_tDBInput_10.wasNull()){
                    row22.VL_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_10 < 26) {
								row22.NOME_TRANSPORTADORA = null;
							} else {
	                         		
        	row22.NOME_TRANSPORTADORA = routines.system.JDBCUtil.getString(rs_tDBInput_10, 26, false);
		                    }
					

 



/**
 * [tDBInput_10 begin ] stop
 */
	
	/**
	 * [tDBInput_10 main ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 


	tos_count_tDBInput_10++;

/**
 * [tDBInput_10 main ] stop
 */
	
	/**
	 * [tDBInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap'
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.CD_CLIENTE = row22.CD_CLIENTE ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NM_DOCUMENTO = row22.NM_DOCUMENTO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.CD_EMPRESA = row22.CD_EMPRESA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VENDEDOR = row22.VENDEDOR ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NOME_VENDEDOR = row22.NOME_VENDEDOR ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.PEDIDO_AUTCOM = row22.PEDIDO_AUTCOM ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.DESC_FULFILLMENT = row22.DESC_FULFILLMENT ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.TIPO_NOTA = row22.TIPO_NOTA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NUMERO_NOTA = row22.NUMERO_NOTA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.SERIE_NOTA = row22.SERIE_NOTA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NOTA_DEVOLUCAO = row22.NOTA_DEVOLUCAO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NM_ROMANEIO = row22.NM_ROMANEIO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.DT_PEDIDO = row22.DT_PEDIDO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.CD_COMBO = row22.CD_COMBO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.SKU = row22.SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.DESC_SKU = row22.DESC_SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.QTD_SKU = row22.QTD_SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_TOTAL_SKU = row22.VL_TOTAL_SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_UNITARIO = row22.VL_UNITARIO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_DESCONTO = row22.VL_DESCONTO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_PRODUTOS_PEDIDO = row22.VL_PRODUTOS_PEDIDO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_FRETE = row22.VL_FRETE ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_PEDIDO = row22.VL_PEDIDO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.BASE_ICMS = row22.BASE_ICMS ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_ICMS = row22.VL_ICMS ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NOME_TRANSPORTADORA = row22.NOME_TRANSPORTADORA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap"
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap != null) { 



	
	/**
	 * [tUniqRow_10 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap"
						
						);
					}
					
row23 = null;			
finder_tUniqRow_10.CD_CLIENTE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO == null){
	finder_tUniqRow_10.NM_DOCUMENTO = null;
}else{
	finder_tUniqRow_10.NM_DOCUMENTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA == null){
	finder_tUniqRow_10.CD_EMPRESA = null;
}else{
	finder_tUniqRow_10.CD_EMPRESA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR == null){
	finder_tUniqRow_10.VENDEDOR = null;
}else{
	finder_tUniqRow_10.VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR == null){
	finder_tUniqRow_10.NOME_VENDEDOR = null;
}else{
	finder_tUniqRow_10.NOME_VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM == null){
	finder_tUniqRow_10.PEDIDO_AUTCOM = null;
}else{
	finder_tUniqRow_10.PEDIDO_AUTCOM = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT == null){
	finder_tUniqRow_10.DESC_FULFILLMENT = null;
}else{
	finder_tUniqRow_10.DESC_FULFILLMENT = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA == null){
	finder_tUniqRow_10.TIPO_NOTA = null;
}else{
	finder_tUniqRow_10.TIPO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA == null){
	finder_tUniqRow_10.NUMERO_NOTA = null;
}else{
	finder_tUniqRow_10.NUMERO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA == null){
	finder_tUniqRow_10.SERIE_NOTA = null;
}else{
	finder_tUniqRow_10.SERIE_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	finder_tUniqRow_10.NOTA_DEVOLUCAO = null;
}else{
	finder_tUniqRow_10.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO == null){
	finder_tUniqRow_10.NM_ROMANEIO = null;
}else{
	finder_tUniqRow_10.NM_ROMANEIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO == null){
	finder_tUniqRow_10.DT_PEDIDO = null;
}else{
	finder_tUniqRow_10.DT_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO == null){
	finder_tUniqRow_10.CD_COMBO = null;
}else{
	finder_tUniqRow_10.CD_COMBO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU == null){
	finder_tUniqRow_10.SKU = null;
}else{
	finder_tUniqRow_10.SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU == null){
	finder_tUniqRow_10.DESC_SKU = null;
}else{
	finder_tUniqRow_10.DESC_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU.toLowerCase();
}
finder_tUniqRow_10.QTD_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.QTD_SKU;
finder_tUniqRow_10.VL_TOTAL_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_TOTAL_SKU;
finder_tUniqRow_10.VL_UNITARIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_UNITARIO;
finder_tUniqRow_10.VL_DESCONTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_DESCONTO;
finder_tUniqRow_10.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
finder_tUniqRow_10.VL_FRETE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_FRETE;
finder_tUniqRow_10.VL_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PEDIDO;
finder_tUniqRow_10.BASE_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.BASE_ICMS;
finder_tUniqRow_10.VL_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	finder_tUniqRow_10.NOME_TRANSPORTADORA = null;
}else{
	finder_tUniqRow_10.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}	
finder_tUniqRow_10.hashCodeDirty = true;
if (!keystUniqRow_10.contains(finder_tUniqRow_10)) {
		KeyStruct_tUniqRow_10 new_tUniqRow_10 = new KeyStruct_tUniqRow_10();

		
new_tUniqRow_10.CD_CLIENTE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO == null){
	new_tUniqRow_10.NM_DOCUMENTO = null;
}else{
	new_tUniqRow_10.NM_DOCUMENTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA == null){
	new_tUniqRow_10.CD_EMPRESA = null;
}else{
	new_tUniqRow_10.CD_EMPRESA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR == null){
	new_tUniqRow_10.VENDEDOR = null;
}else{
	new_tUniqRow_10.VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR == null){
	new_tUniqRow_10.NOME_VENDEDOR = null;
}else{
	new_tUniqRow_10.NOME_VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM == null){
	new_tUniqRow_10.PEDIDO_AUTCOM = null;
}else{
	new_tUniqRow_10.PEDIDO_AUTCOM = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT == null){
	new_tUniqRow_10.DESC_FULFILLMENT = null;
}else{
	new_tUniqRow_10.DESC_FULFILLMENT = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA == null){
	new_tUniqRow_10.TIPO_NOTA = null;
}else{
	new_tUniqRow_10.TIPO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA == null){
	new_tUniqRow_10.NUMERO_NOTA = null;
}else{
	new_tUniqRow_10.NUMERO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA == null){
	new_tUniqRow_10.SERIE_NOTA = null;
}else{
	new_tUniqRow_10.SERIE_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	new_tUniqRow_10.NOTA_DEVOLUCAO = null;
}else{
	new_tUniqRow_10.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO == null){
	new_tUniqRow_10.NM_ROMANEIO = null;
}else{
	new_tUniqRow_10.NM_ROMANEIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO == null){
	new_tUniqRow_10.DT_PEDIDO = null;
}else{
	new_tUniqRow_10.DT_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO == null){
	new_tUniqRow_10.CD_COMBO = null;
}else{
	new_tUniqRow_10.CD_COMBO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU == null){
	new_tUniqRow_10.SKU = null;
}else{
	new_tUniqRow_10.SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU == null){
	new_tUniqRow_10.DESC_SKU = null;
}else{
	new_tUniqRow_10.DESC_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU.toLowerCase();
}
new_tUniqRow_10.QTD_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.QTD_SKU;
new_tUniqRow_10.VL_TOTAL_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_TOTAL_SKU;
new_tUniqRow_10.VL_UNITARIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_UNITARIO;
new_tUniqRow_10.VL_DESCONTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_DESCONTO;
new_tUniqRow_10.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
new_tUniqRow_10.VL_FRETE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_FRETE;
new_tUniqRow_10.VL_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PEDIDO;
new_tUniqRow_10.BASE_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.BASE_ICMS;
new_tUniqRow_10.VL_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	new_tUniqRow_10.NOME_TRANSPORTADORA = null;
}else{
	new_tUniqRow_10.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}
		
		keystUniqRow_10.add(new_tUniqRow_10);if(row23 == null){ 
	
	row23 = new row23Struct();
}row23.CD_CLIENTE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_CLIENTE;			row23.NM_DOCUMENTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO;			row23.CD_EMPRESA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA;			row23.VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR;			row23.NOME_VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR;			row23.PEDIDO_AUTCOM = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM;			row23.DESC_FULFILLMENT = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT;			row23.TIPO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA;			row23.NUMERO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA;			row23.SERIE_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA;			row23.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO;			row23.NM_ROMANEIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO;			row23.DT_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO;			row23.CD_COMBO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO;			row23.SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU;			row23.DESC_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU;			row23.QTD_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.QTD_SKU;			row23.VL_TOTAL_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_TOTAL_SKU;			row23.VL_UNITARIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_UNITARIO;			row23.VL_DESCONTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_DESCONTO;			row23.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;			row23.VL_FRETE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_FRETE;			row23.VL_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PEDIDO;			row23.BASE_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.BASE_ICMS;			row23.VL_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_ICMS;			row23.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA;					
		nb_uniques_tUniqRow_10++;
	} else {
	  nb_duplicates_tUniqRow_10++;
	}

 


	tos_count_tUniqRow_10++;

/**
 * [tUniqRow_10 main ] stop
 */
	
	/**
	 * [tUniqRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_10";
	
	

 



/**
 * [tUniqRow_10 process_data_begin ] stop
 */
// Start of branch "row23"
if(row23 != null) { 



	
	/**
	 * [tFileOutputExcel_10 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_10.addRow();
									   				
	    				if(row23.CD_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(Double.parseDouble(String.valueOf(row23.CD_CLIENTE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.NM_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.NM_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.CD_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.CD_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.NOME_VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.NOME_VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.PEDIDO_AUTCOM != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.PEDIDO_AUTCOM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.DESC_FULFILLMENT != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.DESC_FULFILLMENT));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.TIPO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.TIPO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.NUMERO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.NUMERO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.SERIE_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.SERIE_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.NOTA_DEVOLUCAO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.NOTA_DEVOLUCAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.NM_ROMANEIO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.NM_ROMANEIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.DT_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.DT_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.CD_COMBO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.CD_COMBO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.SKU != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.DESC_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.DESC_SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.QTD_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.QTD_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_TOTAL_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_TOTAL_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_PRODUTOS_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_PRODUTOS_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.BASE_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.BASE_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.VL_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(row23.VL_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
									   				
	    				if(row23.NOME_TRANSPORTADORA != null) {
    				
							xlsxTool_tFileOutputExcel_10.addCellValue(String.valueOf(row23.NOME_TRANSPORTADORA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_10.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_10++;
				
 


	tos_count_tFileOutputExcel_10++;

/**
 * [tFileOutputExcel_10 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_10";
	
	

 



/**
 * [tFileOutputExcel_10 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_10";
	
	

 



/**
 * [tFileOutputExcel_10 process_data_end ] stop
 */

} // End of branch "row23"




	
	/**
	 * [tUniqRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_10";
	
	

 



/**
 * [tUniqRow_10 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_10 end ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

	}
}finally{
	if (rs_tDBInput_10 != null) {
		rs_tDBInput_10.close();
	}
	if (stmt_tDBInput_10 != null) {
		stmt_tDBInput_10.close();
	}
}
globalMap.put("tDBInput_10_NB_LINE",nb_line_tDBInput_10);

 

ok_Hash.put("tDBInput_10", true);
end_Hash.put("tDBInput_10", System.currentTimeMillis());




/**
 * [tDBInput_10 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tUniqRow_10 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_10";
	
	

globalMap.put("tUniqRow_10_NB_UNIQUES",nb_uniques_tUniqRow_10);
globalMap.put("tUniqRow_10_NB_DUPLICATES",nb_duplicates_tUniqRow_10);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap");
			  	}
			  	
 

ok_Hash.put("tUniqRow_10", true);
end_Hash.put("tUniqRow_10", System.currentTimeMillis());




/**
 * [tUniqRow_10 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_10 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_10";
	
	

							columnIndex_tFileOutputExcel_10 = 0;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 1;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 2;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 3;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 4;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 5;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 6;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 7;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 8;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 9;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 10;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 11;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 12;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 13;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 14;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 15;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 16;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 17;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 18;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 19;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 20;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 21;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 22;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 23;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 24;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
							columnIndex_tFileOutputExcel_10 = 25;
						
					xlsxTool_tFileOutputExcel_10.setColAutoSize(columnIndex_tFileOutputExcel_10);
	
	
	
	
			xlsxTool_tFileOutputExcel_10.writeExcel(fileName_tFileOutputExcel_10,true);
	
		if(headerIsInserted_tFileOutputExcel_10 && nb_line_tFileOutputExcel_10 > 0){
			nb_line_tFileOutputExcel_10 = nb_line_tFileOutputExcel_10 -1;
		}
		globalMap.put("tFileOutputExcel_10_NB_LINE",nb_line_tFileOutputExcel_10);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_10", true);
end_Hash.put("tFileOutputExcel_10", System.currentTimeMillis());




/**
 * [tFileOutputExcel_10 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk27", 0, "ok");
								} 
							
							tDBInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_10 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tUniqRow_10 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_10";
	
	

 



/**
 * [tUniqRow_10 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_10 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_10";
	
	

 



/**
 * [tFileOutputExcel_10 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public Integer CD_CLIENTE;

				public Integer getCD_CLIENTE () {
					return this.CD_CLIENTE;
				}

				public Boolean CD_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CD_CLIENTEIsKey(){
				    return false;
				}
				public Integer CD_CLIENTELength(){
				    return null;
				}
				public Integer CD_CLIENTEPrecision(){
				    return null;
				}
				public String CD_CLIENTEDefault(){
				
					return null;
				
				}
				public String CD_CLIENTEComment(){
				
				    return "";
				
				}
				public String CD_CLIENTEPattern(){
				
					return "";
				
				}
				public String CD_CLIENTEOriginalDbColumnName(){
				
					return "CD_CLIENTE";
				
				}

				
			    public String NM_DOCUMENTO;

				public String getNM_DOCUMENTO () {
					return this.NM_DOCUMENTO;
				}

				public Boolean NM_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NM_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NM_DOCUMENTOLength(){
				    return null;
				}
				public Integer NM_DOCUMENTOPrecision(){
				    return null;
				}
				public String NM_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NM_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NM_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NM_DOCUMENTOOriginalDbColumnName(){
				
					return "NM_DOCUMENTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String VENDEDOR;

				public String getVENDEDOR () {
					return this.VENDEDOR;
				}

				public Boolean VENDEDORIsNullable(){
				    return true;
				}
				public Boolean VENDEDORIsKey(){
				    return false;
				}
				public Integer VENDEDORLength(){
				    return null;
				}
				public Integer VENDEDORPrecision(){
				    return null;
				}
				public String VENDEDORDefault(){
				
					return null;
				
				}
				public String VENDEDORComment(){
				
				    return "";
				
				}
				public String VENDEDORPattern(){
				
					return "";
				
				}
				public String VENDEDOROriginalDbColumnName(){
				
					return "VENDEDOR";
				
				}

				
			    public String NOME_VENDEDOR;

				public String getNOME_VENDEDOR () {
					return this.NOME_VENDEDOR;
				}

				public Boolean NOME_VENDEDORIsNullable(){
				    return true;
				}
				public Boolean NOME_VENDEDORIsKey(){
				    return false;
				}
				public Integer NOME_VENDEDORLength(){
				    return null;
				}
				public Integer NOME_VENDEDORPrecision(){
				    return null;
				}
				public String NOME_VENDEDORDefault(){
				
					return null;
				
				}
				public String NOME_VENDEDORComment(){
				
				    return "";
				
				}
				public String NOME_VENDEDORPattern(){
				
					return "";
				
				}
				public String NOME_VENDEDOROriginalDbColumnName(){
				
					return "NOME_VENDEDOR";
				
				}

				
			    public String PEDIDO_AUTCOM;

				public String getPEDIDO_AUTCOM () {
					return this.PEDIDO_AUTCOM;
				}

				public Boolean PEDIDO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PEDIDO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PEDIDO_AUTCOMLength(){
				    return null;
				}
				public Integer PEDIDO_AUTCOMPrecision(){
				    return null;
				}
				public String PEDIDO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PEDIDO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PEDIDO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PEDIDO_AUTCOMOriginalDbColumnName(){
				
					return "PEDIDO_AUTCOM";
				
				}

				
			    public String DESC_FULFILLMENT;

				public String getDESC_FULFILLMENT () {
					return this.DESC_FULFILLMENT;
				}

				public Boolean DESC_FULFILLMENTIsNullable(){
				    return true;
				}
				public Boolean DESC_FULFILLMENTIsKey(){
				    return false;
				}
				public Integer DESC_FULFILLMENTLength(){
				    return null;
				}
				public Integer DESC_FULFILLMENTPrecision(){
				    return null;
				}
				public String DESC_FULFILLMENTDefault(){
				
					return null;
				
				}
				public String DESC_FULFILLMENTComment(){
				
				    return "";
				
				}
				public String DESC_FULFILLMENTPattern(){
				
					return "";
				
				}
				public String DESC_FULFILLMENTOriginalDbColumnName(){
				
					return "DESC_FULFILLMENT";
				
				}

				
			    public String TIPO_NOTA;

				public String getTIPO_NOTA () {
					return this.TIPO_NOTA;
				}

				public Boolean TIPO_NOTAIsNullable(){
				    return true;
				}
				public Boolean TIPO_NOTAIsKey(){
				    return false;
				}
				public Integer TIPO_NOTALength(){
				    return null;
				}
				public Integer TIPO_NOTAPrecision(){
				    return null;
				}
				public String TIPO_NOTADefault(){
				
					return null;
				
				}
				public String TIPO_NOTAComment(){
				
				    return "";
				
				}
				public String TIPO_NOTAPattern(){
				
					return "";
				
				}
				public String TIPO_NOTAOriginalDbColumnName(){
				
					return "TIPO_NOTA";
				
				}

				
			    public String NUMERO_NOTA;

				public String getNUMERO_NOTA () {
					return this.NUMERO_NOTA;
				}

				public Boolean NUMERO_NOTAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_NOTAIsKey(){
				    return false;
				}
				public Integer NUMERO_NOTALength(){
				    return null;
				}
				public Integer NUMERO_NOTAPrecision(){
				    return null;
				}
				public String NUMERO_NOTADefault(){
				
					return null;
				
				}
				public String NUMERO_NOTAComment(){
				
				    return "";
				
				}
				public String NUMERO_NOTAPattern(){
				
					return "";
				
				}
				public String NUMERO_NOTAOriginalDbColumnName(){
				
					return "NUMERO_NOTA";
				
				}

				
			    public String SERIE_NOTA;

				public String getSERIE_NOTA () {
					return this.SERIE_NOTA;
				}

				public Boolean SERIE_NOTAIsNullable(){
				    return true;
				}
				public Boolean SERIE_NOTAIsKey(){
				    return false;
				}
				public Integer SERIE_NOTALength(){
				    return null;
				}
				public Integer SERIE_NOTAPrecision(){
				    return null;
				}
				public String SERIE_NOTADefault(){
				
					return null;
				
				}
				public String SERIE_NOTAComment(){
				
				    return "";
				
				}
				public String SERIE_NOTAPattern(){
				
					return "";
				
				}
				public String SERIE_NOTAOriginalDbColumnName(){
				
					return "SERIE_NOTA";
				
				}

				
			    public String NOTA_DEVOLUCAO;

				public String getNOTA_DEVOLUCAO () {
					return this.NOTA_DEVOLUCAO;
				}

				public Boolean NOTA_DEVOLUCAOIsNullable(){
				    return true;
				}
				public Boolean NOTA_DEVOLUCAOIsKey(){
				    return false;
				}
				public Integer NOTA_DEVOLUCAOLength(){
				    return null;
				}
				public Integer NOTA_DEVOLUCAOPrecision(){
				    return null;
				}
				public String NOTA_DEVOLUCAODefault(){
				
					return null;
				
				}
				public String NOTA_DEVOLUCAOComment(){
				
				    return "";
				
				}
				public String NOTA_DEVOLUCAOPattern(){
				
					return "";
				
				}
				public String NOTA_DEVOLUCAOOriginalDbColumnName(){
				
					return "NOTA_DEVOLUCAO";
				
				}

				
			    public String NM_ROMANEIO;

				public String getNM_ROMANEIO () {
					return this.NM_ROMANEIO;
				}

				public Boolean NM_ROMANEIOIsNullable(){
				    return true;
				}
				public Boolean NM_ROMANEIOIsKey(){
				    return false;
				}
				public Integer NM_ROMANEIOLength(){
				    return null;
				}
				public Integer NM_ROMANEIOPrecision(){
				    return null;
				}
				public String NM_ROMANEIODefault(){
				
					return null;
				
				}
				public String NM_ROMANEIOComment(){
				
				    return "";
				
				}
				public String NM_ROMANEIOPattern(){
				
					return "";
				
				}
				public String NM_ROMANEIOOriginalDbColumnName(){
				
					return "NM_ROMANEIO";
				
				}

				
			    public String DT_PEDIDO;

				public String getDT_PEDIDO () {
					return this.DT_PEDIDO;
				}

				public Boolean DT_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DT_PEDIDOIsKey(){
				    return false;
				}
				public Integer DT_PEDIDOLength(){
				    return null;
				}
				public Integer DT_PEDIDOPrecision(){
				    return null;
				}
				public String DT_PEDIDODefault(){
				
					return null;
				
				}
				public String DT_PEDIDOComment(){
				
				    return "";
				
				}
				public String DT_PEDIDOPattern(){
				
					return "";
				
				}
				public String DT_PEDIDOOriginalDbColumnName(){
				
					return "DT_PEDIDO";
				
				}

				
			    public String CD_COMBO;

				public String getCD_COMBO () {
					return this.CD_COMBO;
				}

				public Boolean CD_COMBOIsNullable(){
				    return true;
				}
				public Boolean CD_COMBOIsKey(){
				    return false;
				}
				public Integer CD_COMBOLength(){
				    return null;
				}
				public Integer CD_COMBOPrecision(){
				    return null;
				}
				public String CD_COMBODefault(){
				
					return null;
				
				}
				public String CD_COMBOComment(){
				
				    return "";
				
				}
				public String CD_COMBOPattern(){
				
					return "";
				
				}
				public String CD_COMBOOriginalDbColumnName(){
				
					return "CD_COMBO";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String DESC_SKU;

				public String getDESC_SKU () {
					return this.DESC_SKU;
				}

				public Boolean DESC_SKUIsNullable(){
				    return true;
				}
				public Boolean DESC_SKUIsKey(){
				    return false;
				}
				public Integer DESC_SKULength(){
				    return null;
				}
				public Integer DESC_SKUPrecision(){
				    return null;
				}
				public String DESC_SKUDefault(){
				
					return null;
				
				}
				public String DESC_SKUComment(){
				
				    return "";
				
				}
				public String DESC_SKUPattern(){
				
					return "";
				
				}
				public String DESC_SKUOriginalDbColumnName(){
				
					return "DESC_SKU";
				
				}

				
			    public Double QTD_SKU;

				public Double getQTD_SKU () {
					return this.QTD_SKU;
				}

				public Boolean QTD_SKUIsNullable(){
				    return true;
				}
				public Boolean QTD_SKUIsKey(){
				    return false;
				}
				public Integer QTD_SKULength(){
				    return null;
				}
				public Integer QTD_SKUPrecision(){
				    return null;
				}
				public String QTD_SKUDefault(){
				
					return null;
				
				}
				public String QTD_SKUComment(){
				
				    return "";
				
				}
				public String QTD_SKUPattern(){
				
					return "";
				
				}
				public String QTD_SKUOriginalDbColumnName(){
				
					return "QTD_SKU";
				
				}

				
			    public Double VL_TOTAL_SKU;

				public Double getVL_TOTAL_SKU () {
					return this.VL_TOTAL_SKU;
				}

				public Boolean VL_TOTAL_SKUIsNullable(){
				    return true;
				}
				public Boolean VL_TOTAL_SKUIsKey(){
				    return false;
				}
				public Integer VL_TOTAL_SKULength(){
				    return null;
				}
				public Integer VL_TOTAL_SKUPrecision(){
				    return null;
				}
				public String VL_TOTAL_SKUDefault(){
				
					return null;
				
				}
				public String VL_TOTAL_SKUComment(){
				
				    return "";
				
				}
				public String VL_TOTAL_SKUPattern(){
				
					return "";
				
				}
				public String VL_TOTAL_SKUOriginalDbColumnName(){
				
					return "VL_TOTAL_SKU";
				
				}

				
			    public Double VL_UNITARIO;

				public Double getVL_UNITARIO () {
					return this.VL_UNITARIO;
				}

				public Boolean VL_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VL_UNITARIOIsKey(){
				    return false;
				}
				public Integer VL_UNITARIOLength(){
				    return null;
				}
				public Integer VL_UNITARIOPrecision(){
				    return null;
				}
				public String VL_UNITARIODefault(){
				
					return null;
				
				}
				public String VL_UNITARIOComment(){
				
				    return "";
				
				}
				public String VL_UNITARIOPattern(){
				
					return "";
				
				}
				public String VL_UNITARIOOriginalDbColumnName(){
				
					return "VL_UNITARIO";
				
				}

				
			    public Double VL_DESCONTO;

				public Double getVL_DESCONTO () {
					return this.VL_DESCONTO;
				}

				public Boolean VL_DESCONTOIsNullable(){
				    return true;
				}
				public Boolean VL_DESCONTOIsKey(){
				    return false;
				}
				public Integer VL_DESCONTOLength(){
				    return null;
				}
				public Integer VL_DESCONTOPrecision(){
				    return null;
				}
				public String VL_DESCONTODefault(){
				
					return null;
				
				}
				public String VL_DESCONTOComment(){
				
				    return "";
				
				}
				public String VL_DESCONTOPattern(){
				
					return "";
				
				}
				public String VL_DESCONTOOriginalDbColumnName(){
				
					return "VL_DESCONTO";
				
				}

				
			    public Double VL_PRODUTOS_PEDIDO;

				public Double getVL_PRODUTOS_PEDIDO () {
					return this.VL_PRODUTOS_PEDIDO;
				}

				public Boolean VL_PRODUTOS_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PRODUTOS_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PRODUTOS_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PRODUTOS_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PRODUTOS_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PRODUTOS_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PRODUTOS_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PRODUTOS_PEDIDOOriginalDbColumnName(){
				
					return "VL_PRODUTOS_PEDIDO";
				
				}

				
			    public Double VL_FRETE;

				public Double getVL_FRETE () {
					return this.VL_FRETE;
				}

				public Boolean VL_FRETEIsNullable(){
				    return true;
				}
				public Boolean VL_FRETEIsKey(){
				    return false;
				}
				public Integer VL_FRETELength(){
				    return null;
				}
				public Integer VL_FRETEPrecision(){
				    return null;
				}
				public String VL_FRETEDefault(){
				
					return null;
				
				}
				public String VL_FRETEComment(){
				
				    return "";
				
				}
				public String VL_FRETEPattern(){
				
					return "";
				
				}
				public String VL_FRETEOriginalDbColumnName(){
				
					return "VL_FRETE";
				
				}

				
			    public Double VL_PEDIDO;

				public Double getVL_PEDIDO () {
					return this.VL_PEDIDO;
				}

				public Boolean VL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean VL_PEDIDOIsKey(){
				    return false;
				}
				public Integer VL_PEDIDOLength(){
				    return null;
				}
				public Integer VL_PEDIDOPrecision(){
				    return null;
				}
				public String VL_PEDIDODefault(){
				
					return null;
				
				}
				public String VL_PEDIDOComment(){
				
				    return "";
				
				}
				public String VL_PEDIDOPattern(){
				
					return "";
				
				}
				public String VL_PEDIDOOriginalDbColumnName(){
				
					return "VL_PEDIDO";
				
				}

				
			    public Double BASE_ICMS;

				public Double getBASE_ICMS () {
					return this.BASE_ICMS;
				}

				public Boolean BASE_ICMSIsNullable(){
				    return true;
				}
				public Boolean BASE_ICMSIsKey(){
				    return false;
				}
				public Integer BASE_ICMSLength(){
				    return null;
				}
				public Integer BASE_ICMSPrecision(){
				    return null;
				}
				public String BASE_ICMSDefault(){
				
					return null;
				
				}
				public String BASE_ICMSComment(){
				
				    return "";
				
				}
				public String BASE_ICMSPattern(){
				
					return "";
				
				}
				public String BASE_ICMSOriginalDbColumnName(){
				
					return "BASE_ICMS";
				
				}

				
			    public Double VL_ICMS;

				public Double getVL_ICMS () {
					return this.VL_ICMS;
				}

				public Boolean VL_ICMSIsNullable(){
				    return true;
				}
				public Boolean VL_ICMSIsKey(){
				    return false;
				}
				public Integer VL_ICMSLength(){
				    return null;
				}
				public Integer VL_ICMSPrecision(){
				    return null;
				}
				public String VL_ICMSDefault(){
				
					return null;
				
				}
				public String VL_ICMSComment(){
				
				    return "";
				
				}
				public String VL_ICMSPattern(){
				
					return "";
				
				}
				public String VL_ICMSOriginalDbColumnName(){
				
					return "VL_ICMS";
				
				}

				
			    public String NOME_TRANSPORTADORA;

				public String getNOME_TRANSPORTADORA () {
					return this.NOME_TRANSPORTADORA;
				}

				public Boolean NOME_TRANSPORTADORAIsNullable(){
				    return true;
				}
				public Boolean NOME_TRANSPORTADORAIsKey(){
				    return false;
				}
				public Integer NOME_TRANSPORTADORALength(){
				    return null;
				}
				public Integer NOME_TRANSPORTADORAPrecision(){
				    return null;
				}
				public String NOME_TRANSPORTADORADefault(){
				
					return null;
				
				}
				public String NOME_TRANSPORTADORAComment(){
				
				    return "";
				
				}
				public String NOME_TRANSPORTADORAPattern(){
				
					return "";
				
				}
				public String NOME_TRANSPORTADORAOriginalDbColumnName(){
				
					return "NOME_TRANSPORTADORA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
						this.CD_CLIENTE = readInteger(dis);
					
					this.NM_DOCUMENTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.VENDEDOR = readString(dis);
					
					this.NOME_VENDEDOR = readString(dis);
					
					this.PEDIDO_AUTCOM = readString(dis);
					
					this.DESC_FULFILLMENT = readString(dis);
					
					this.TIPO_NOTA = readString(dis);
					
					this.NUMERO_NOTA = readString(dis);
					
					this.SERIE_NOTA = readString(dis);
					
					this.NOTA_DEVOLUCAO = readString(dis);
					
					this.NM_ROMANEIO = readString(dis);
					
					this.DT_PEDIDO = readString(dis);
					
					this.CD_COMBO = readString(dis);
					
					this.SKU = readString(dis);
					
					this.DESC_SKU = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.QTD_SKU = null;
           				} else {
           			    	this.QTD_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_TOTAL_SKU = null;
           				} else {
           			    	this.VL_TOTAL_SKU = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_UNITARIO = null;
           				} else {
           			    	this.VL_UNITARIO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_DESCONTO = null;
           				} else {
           			    	this.VL_DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PRODUTOS_PEDIDO = null;
           				} else {
           			    	this.VL_PRODUTOS_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_FRETE = null;
           				} else {
           			    	this.VL_FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_PEDIDO = null;
           				} else {
           			    	this.VL_PEDIDO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.BASE_ICMS = null;
           				} else {
           			    	this.BASE_ICMS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_ICMS = null;
           				} else {
           			    	this.VL_ICMS = dis.readDouble();
           				}
					
					this.NOME_TRANSPORTADORA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CD_CLIENTE,dos);
					
					// String
				
						writeString(this.NM_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.VENDEDOR,dos);
					
					// String
				
						writeString(this.NOME_VENDEDOR,dos);
					
					// String
				
						writeString(this.PEDIDO_AUTCOM,dos);
					
					// String
				
						writeString(this.DESC_FULFILLMENT,dos);
					
					// String
				
						writeString(this.TIPO_NOTA,dos);
					
					// String
				
						writeString(this.NUMERO_NOTA,dos);
					
					// String
				
						writeString(this.SERIE_NOTA,dos);
					
					// String
				
						writeString(this.NOTA_DEVOLUCAO,dos);
					
					// String
				
						writeString(this.NM_ROMANEIO,dos);
					
					// String
				
						writeString(this.DT_PEDIDO,dos);
					
					// String
				
						writeString(this.CD_COMBO,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.DESC_SKU,dos);
					
					// Double
				
						if(this.QTD_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.QTD_SKU);
		            	}
					
					// Double
				
						if(this.VL_TOTAL_SKU == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_TOTAL_SKU);
		            	}
					
					// Double
				
						if(this.VL_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_UNITARIO);
		            	}
					
					// Double
				
						if(this.VL_DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_DESCONTO);
		            	}
					
					// Double
				
						if(this.VL_PRODUTOS_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PRODUTOS_PEDIDO);
		            	}
					
					// Double
				
						if(this.VL_FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_FRETE);
		            	}
					
					// Double
				
						if(this.VL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_PEDIDO);
		            	}
					
					// Double
				
						if(this.BASE_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.BASE_ICMS);
		            	}
					
					// Double
				
						if(this.VL_ICMS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_ICMS);
		            	}
					
					// String
				
						writeString(this.NOME_TRANSPORTADORA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_CLIENTE="+String.valueOf(CD_CLIENTE));
		sb.append(",NM_DOCUMENTO="+NM_DOCUMENTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",VENDEDOR="+VENDEDOR);
		sb.append(",NOME_VENDEDOR="+NOME_VENDEDOR);
		sb.append(",PEDIDO_AUTCOM="+PEDIDO_AUTCOM);
		sb.append(",DESC_FULFILLMENT="+DESC_FULFILLMENT);
		sb.append(",TIPO_NOTA="+TIPO_NOTA);
		sb.append(",NUMERO_NOTA="+NUMERO_NOTA);
		sb.append(",SERIE_NOTA="+SERIE_NOTA);
		sb.append(",NOTA_DEVOLUCAO="+NOTA_DEVOLUCAO);
		sb.append(",NM_ROMANEIO="+NM_ROMANEIO);
		sb.append(",DT_PEDIDO="+DT_PEDIDO);
		sb.append(",CD_COMBO="+CD_COMBO);
		sb.append(",SKU="+SKU);
		sb.append(",DESC_SKU="+DESC_SKU);
		sb.append(",QTD_SKU="+String.valueOf(QTD_SKU));
		sb.append(",VL_TOTAL_SKU="+String.valueOf(VL_TOTAL_SKU));
		sb.append(",VL_UNITARIO="+String.valueOf(VL_UNITARIO));
		sb.append(",VL_DESCONTO="+String.valueOf(VL_DESCONTO));
		sb.append(",VL_PRODUTOS_PEDIDO="+String.valueOf(VL_PRODUTOS_PEDIDO));
		sb.append(",VL_FRETE="+String.valueOf(VL_FRETE));
		sb.append(",VL_PEDIDO="+String.valueOf(VL_PEDIDO));
		sb.append(",BASE_ICMS="+String.valueOf(BASE_ICMS));
		sb.append(",VL_ICMS="+String.valueOf(VL_ICMS));
		sb.append(",NOME_TRANSPORTADORA="+NOME_TRANSPORTADORA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct();
row25Struct row25 = new row25Struct();






	
	/**
	 * [tFileOutputExcel_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_11", false);
		start_Hash.put("tFileOutputExcel_11", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tFileOutputExcel_11 = 0;
		


		
		int columnIndex_tFileOutputExcel_11 = 0;
		boolean headerIsInserted_tFileOutputExcel_11 = false;
		
		
		String fileName_tFileOutputExcel_11="/root/e_mail/MKTPLACE_MAGALU_MG_FULL_2024.xlsx";
		int nb_line_tFileOutputExcel_11 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_11 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_11.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_11.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_11.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_11.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_11.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_11.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_11 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_11 = chm_tFileOutputExcel_11.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_11", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_11) {
			
				xlsxTool_tFileOutputExcel_11.prepareXlsxFile(fileName_tFileOutputExcel_11);
			
		}
		
		xlsxTool_tFileOutputExcel_11.setFont("");
		
		if (xlsxTool_tFileOutputExcel_11.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_11.addRow();
		
		xlsxTool_tFileOutputExcel_11.addCellValue("CD_CLIENTE");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("NM_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("CD_EMPRESA");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VENDEDOR");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("NOME_VENDEDOR");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("PEDIDO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("DESC_FULFILLMENT");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("TIPO_NOTA");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("NUMERO_NOTA");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("SERIE_NOTA");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("NOTA_DEVOLUCAO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("NM_ROMANEIO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("DT_PEDIDO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("CD_COMBO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("SKU");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("DESC_SKU");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("QTD_SKU");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_TOTAL_SKU");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_UNITARIO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_DESCONTO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_PRODUTOS_PEDIDO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_FRETE");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("BASE_ICMS");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("VL_ICMS");
		
		xlsxTool_tFileOutputExcel_11.addCellValue("NOME_TRANSPORTADORA");
		
		nb_line_tFileOutputExcel_11++;
		headerIsInserted_tFileOutputExcel_11 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_11 begin ] stop
 */



	
	/**
	 * [tUniqRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_11", false);
		start_Hash.put("tUniqRow_11", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap");
					}
				
		int tos_count_tUniqRow_11 = 0;
		

	
		class KeyStruct_tUniqRow_11 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					Integer CD_CLIENTE;
					String NM_DOCUMENTO;
					String CD_EMPRESA;
					String VENDEDOR;
					String NOME_VENDEDOR;
					String PEDIDO_AUTCOM;
					String DESC_FULFILLMENT;
					String TIPO_NOTA;
					String NUMERO_NOTA;
					String SERIE_NOTA;
					String NOTA_DEVOLUCAO;
					String NM_ROMANEIO;
					String DT_PEDIDO;
					String CD_COMBO;
					String SKU;
					String DESC_SKU;
					Double QTD_SKU;
					Double VL_TOTAL_SKU;
					Double VL_UNITARIO;
					Double VL_DESCONTO;
					Double VL_PRODUTOS_PEDIDO;
					Double VL_FRETE;
					Double VL_PEDIDO;
					Double BASE_ICMS;
					Double VL_ICMS;
					String NOME_TRANSPORTADORA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_CLIENTE == null) ? 0 : this.CD_CLIENTE.hashCode());
								
								result = prime * result + ((this.NM_DOCUMENTO == null) ? 0 : this.NM_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
								result = prime * result + ((this.VENDEDOR == null) ? 0 : this.VENDEDOR.hashCode());
								
								result = prime * result + ((this.NOME_VENDEDOR == null) ? 0 : this.NOME_VENDEDOR.hashCode());
								
								result = prime * result + ((this.PEDIDO_AUTCOM == null) ? 0 : this.PEDIDO_AUTCOM.hashCode());
								
								result = prime * result + ((this.DESC_FULFILLMENT == null) ? 0 : this.DESC_FULFILLMENT.hashCode());
								
								result = prime * result + ((this.TIPO_NOTA == null) ? 0 : this.TIPO_NOTA.hashCode());
								
								result = prime * result + ((this.NUMERO_NOTA == null) ? 0 : this.NUMERO_NOTA.hashCode());
								
								result = prime * result + ((this.SERIE_NOTA == null) ? 0 : this.SERIE_NOTA.hashCode());
								
								result = prime * result + ((this.NOTA_DEVOLUCAO == null) ? 0 : this.NOTA_DEVOLUCAO.hashCode());
								
								result = prime * result + ((this.NM_ROMANEIO == null) ? 0 : this.NM_ROMANEIO.hashCode());
								
								result = prime * result + ((this.DT_PEDIDO == null) ? 0 : this.DT_PEDIDO.hashCode());
								
								result = prime * result + ((this.CD_COMBO == null) ? 0 : this.CD_COMBO.hashCode());
								
								result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
								
								result = prime * result + ((this.DESC_SKU == null) ? 0 : this.DESC_SKU.hashCode());
								
								result = prime * result + ((this.QTD_SKU == null) ? 0 : this.QTD_SKU.hashCode());
								
								result = prime * result + ((this.VL_TOTAL_SKU == null) ? 0 : this.VL_TOTAL_SKU.hashCode());
								
								result = prime * result + ((this.VL_UNITARIO == null) ? 0 : this.VL_UNITARIO.hashCode());
								
								result = prime * result + ((this.VL_DESCONTO == null) ? 0 : this.VL_DESCONTO.hashCode());
								
								result = prime * result + ((this.VL_PRODUTOS_PEDIDO == null) ? 0 : this.VL_PRODUTOS_PEDIDO.hashCode());
								
								result = prime * result + ((this.VL_FRETE == null) ? 0 : this.VL_FRETE.hashCode());
								
								result = prime * result + ((this.VL_PEDIDO == null) ? 0 : this.VL_PEDIDO.hashCode());
								
								result = prime * result + ((this.BASE_ICMS == null) ? 0 : this.BASE_ICMS.hashCode());
								
								result = prime * result + ((this.VL_ICMS == null) ? 0 : this.VL_ICMS.hashCode());
								
								result = prime * result + ((this.NOME_TRANSPORTADORA == null) ? 0 : this.NOME_TRANSPORTADORA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_11 other = (KeyStruct_tUniqRow_11) obj;
				
									if (this.CD_CLIENTE == null) {
										if (other.CD_CLIENTE != null) 
											return false;
								
									} else if (!this.CD_CLIENTE.equals(other.CD_CLIENTE))
								 
										return false;
								
									if (this.NM_DOCUMENTO == null) {
										if (other.NM_DOCUMENTO != null) 
											return false;
								
									} else if (!this.NM_DOCUMENTO.equals(other.NM_DOCUMENTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
									if (this.VENDEDOR == null) {
										if (other.VENDEDOR != null) 
											return false;
								
									} else if (!this.VENDEDOR.equals(other.VENDEDOR))
								 
										return false;
								
									if (this.NOME_VENDEDOR == null) {
										if (other.NOME_VENDEDOR != null) 
											return false;
								
									} else if (!this.NOME_VENDEDOR.equals(other.NOME_VENDEDOR))
								 
										return false;
								
									if (this.PEDIDO_AUTCOM == null) {
										if (other.PEDIDO_AUTCOM != null) 
											return false;
								
									} else if (!this.PEDIDO_AUTCOM.equals(other.PEDIDO_AUTCOM))
								 
										return false;
								
									if (this.DESC_FULFILLMENT == null) {
										if (other.DESC_FULFILLMENT != null) 
											return false;
								
									} else if (!this.DESC_FULFILLMENT.equals(other.DESC_FULFILLMENT))
								 
										return false;
								
									if (this.TIPO_NOTA == null) {
										if (other.TIPO_NOTA != null) 
											return false;
								
									} else if (!this.TIPO_NOTA.equals(other.TIPO_NOTA))
								 
										return false;
								
									if (this.NUMERO_NOTA == null) {
										if (other.NUMERO_NOTA != null) 
											return false;
								
									} else if (!this.NUMERO_NOTA.equals(other.NUMERO_NOTA))
								 
										return false;
								
									if (this.SERIE_NOTA == null) {
										if (other.SERIE_NOTA != null) 
											return false;
								
									} else if (!this.SERIE_NOTA.equals(other.SERIE_NOTA))
								 
										return false;
								
									if (this.NOTA_DEVOLUCAO == null) {
										if (other.NOTA_DEVOLUCAO != null) 
											return false;
								
									} else if (!this.NOTA_DEVOLUCAO.equals(other.NOTA_DEVOLUCAO))
								 
										return false;
								
									if (this.NM_ROMANEIO == null) {
										if (other.NM_ROMANEIO != null) 
											return false;
								
									} else if (!this.NM_ROMANEIO.equals(other.NM_ROMANEIO))
								 
										return false;
								
									if (this.DT_PEDIDO == null) {
										if (other.DT_PEDIDO != null) 
											return false;
								
									} else if (!this.DT_PEDIDO.equals(other.DT_PEDIDO))
								 
										return false;
								
									if (this.CD_COMBO == null) {
										if (other.CD_COMBO != null) 
											return false;
								
									} else if (!this.CD_COMBO.equals(other.CD_COMBO))
								 
										return false;
								
									if (this.SKU == null) {
										if (other.SKU != null) 
											return false;
								
									} else if (!this.SKU.equals(other.SKU))
								 
										return false;
								
									if (this.DESC_SKU == null) {
										if (other.DESC_SKU != null) 
											return false;
								
									} else if (!this.DESC_SKU.equals(other.DESC_SKU))
								 
										return false;
								
									if (this.QTD_SKU == null) {
										if (other.QTD_SKU != null) 
											return false;
								
									} else if (!this.QTD_SKU.equals(other.QTD_SKU))
								 
										return false;
								
									if (this.VL_TOTAL_SKU == null) {
										if (other.VL_TOTAL_SKU != null) 
											return false;
								
									} else if (!this.VL_TOTAL_SKU.equals(other.VL_TOTAL_SKU))
								 
										return false;
								
									if (this.VL_UNITARIO == null) {
										if (other.VL_UNITARIO != null) 
											return false;
								
									} else if (!this.VL_UNITARIO.equals(other.VL_UNITARIO))
								 
										return false;
								
									if (this.VL_DESCONTO == null) {
										if (other.VL_DESCONTO != null) 
											return false;
								
									} else if (!this.VL_DESCONTO.equals(other.VL_DESCONTO))
								 
										return false;
								
									if (this.VL_PRODUTOS_PEDIDO == null) {
										if (other.VL_PRODUTOS_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PRODUTOS_PEDIDO.equals(other.VL_PRODUTOS_PEDIDO))
								 
										return false;
								
									if (this.VL_FRETE == null) {
										if (other.VL_FRETE != null) 
											return false;
								
									} else if (!this.VL_FRETE.equals(other.VL_FRETE))
								 
										return false;
								
									if (this.VL_PEDIDO == null) {
										if (other.VL_PEDIDO != null) 
											return false;
								
									} else if (!this.VL_PEDIDO.equals(other.VL_PEDIDO))
								 
										return false;
								
									if (this.BASE_ICMS == null) {
										if (other.BASE_ICMS != null) 
											return false;
								
									} else if (!this.BASE_ICMS.equals(other.BASE_ICMS))
								 
										return false;
								
									if (this.VL_ICMS == null) {
										if (other.VL_ICMS != null) 
											return false;
								
									} else if (!this.VL_ICMS.equals(other.VL_ICMS))
								 
										return false;
								
									if (this.NOME_TRANSPORTADORA == null) {
										if (other.NOME_TRANSPORTADORA != null) 
											return false;
								
									} else if (!this.NOME_TRANSPORTADORA.equals(other.NOME_TRANSPORTADORA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_11 = 0;
int nb_duplicates_tUniqRow_11 = 0;
KeyStruct_tUniqRow_11 finder_tUniqRow_11 = new KeyStruct_tUniqRow_11();
java.util.Set<KeyStruct_tUniqRow_11> keystUniqRow_11 = new java.util.HashSet<KeyStruct_tUniqRow_11>(); 

 



/**
 * [tUniqRow_11 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmapStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tDBInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_11", false);
		start_Hash.put("tDBInput_11", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_11";
	
	
		int tos_count_tDBInput_11 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_11 = java.util.Calendar.getInstance();
		    calendar_tDBInput_11.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_11 = calendar_tDBInput_11.getTime();
		    int nb_line_tDBInput_11 = 0;
		    java.sql.Connection conn_tDBInput_11 = null;
				conn_tDBInput_11 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_11 = conn_tDBInput_11.createStatement();

		    String dbquery_tDBInput_11 = "SELECT MG.GER_CODCLI CD_CLIENTE,\n       CL.CLI_C_G_C_ NM_DOCUMENTO,\n	   MG.GER_CODEMP CD_EMPRESA,\n	   MG.GER_CODVEN "
+"VENDEDOR,\n	   OP.OPE_NOMOPE NOME_VENDEDOR,\n       FG.FGO_NUMDOC PEDIDO_AUTCOM,\n       FG.FGO_NUMPOK DESC_FULFILLMENT	"
+",\n       MG.GER_ESPDOC TIPO_NOTA,\n       MG.GER_NUMDOC NUMERO_NOTA,\n       MG.GER_SERIE_ SERIE_NOTA,\n       (SELECT "
+"MAX( DEV.DET_NUMDOC) FROM MOVDET DEV\n           WHERE DEV.DET_DOCDEV = MG.GER_NUMDOC \n           AND DEV.DET_EMPDEV = "
+"MG.GER_CODEMP \n           AND DEV.DET_ESPDEV = MG.GER_ESPDOC \n           AND DEV.DET_CODVEN = MG.GER_CODVEN\n         "
+"  LIMIT 1) NOTA_DEVOLUCAO,\n           MG.GER_NUMROM NM_ROMANEIO,\n       CONCAT( MG.GER_DTAENT ,' ',MG.GER_HORENT) DT_P"
+"EDIDO,\n(SELECT ED.FDO_ITEEST FROM FATDOR FD, EXTDOR ED\n   WHERE FG.AUTOINCREM = FD.FDO_SEQGER\n     AND FD.AUTOINCREM "
+"= ED.FDO_SEQFDO\n     LIMIT 1) AS CD_COMBO,\n       DET.DET_CODITE SKU ,\n       DET.DET_DESCRI DESC_SKU,\n       DET.DE"
+"T_QTDITE QTD_SKU,\n       (DET.DET_QTDITE * DET.DET_UNITAR) VL_TOTAL_SKU,\n       DET.DET_UNITAR VL_UNITARIO,       \n  "
+"     DET_DESESP VL_DESCONTO ,\n       MG.GER_TOTPRO VL_PRODUTOS_PEDIDO,\n       MG.GER_TOTFRE VL_FRETE,\n       MG.GER_V"
+"LRCON VL_PEDIDO,\n       MG.GER_BASICM BASE_ICMS,\n       MG.GER_TOTICM VL_ICMS,\n       TRA.TRA_NOMTRA NOME_TRANSPORTAD"
+"ORA\n  FROM MOVGER MG\n LEFT JOIN CADCLI CL ON CL.CLI_CODCLI = MG.GER_CODCLI \n LEFT JOIN CADTRA TRA ON TRA.TRA_CODTRA ="
+" MG.GER_CODTRA\n LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = MG.GER_CODVEN \n LEFT JOIN MOVDET DET ON DET.DET_NUMDOC = MG.GER"
+"_NUMDOC AND DET.DET_CODEMP = MG.GER_CODEMP AND DET.DET_SERIE_ = MG.GER_SERIE_ \n LEFT JOIN FATGOR FG ON MG.GER_NUMDOC = "
+"FG.FGO_NUMFAT AND MG.GER_ESPDOC = FG.FGO_TIPFAT AND MG.GER_CODEMP = FG.FGO_EMPFAT AND MG.GER_CODCLI = FG.FGO_CODCLI\nWHE"
+"RE MG.GER_CODVEN IN ('C11')\n  AND MG.GER_CODEMP = '010'\n  AND MG.GER_DTAENT >= '2024-01-01'\n";
		    

		    globalMap.put("tDBInput_11_QUERY",dbquery_tDBInput_11);

		    java.sql.ResultSet rs_tDBInput_11 = null;

		    try {
		    	rs_tDBInput_11 = stmt_tDBInput_11.executeQuery(dbquery_tDBInput_11);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_11 = rs_tDBInput_11.getMetaData();
		    	int colQtyInRs_tDBInput_11 = rsmd_tDBInput_11.getColumnCount();

		    String tmpContent_tDBInput_11 = null;
		    
		    
		    while (rs_tDBInput_11.next()) {
		        nb_line_tDBInput_11++;
		        
							if(colQtyInRs_tDBInput_11 < 1) {
								row24.CD_CLIENTE = null;
							} else {
		                          
            row24.CD_CLIENTE = rs_tDBInput_11.getInt(1);
            if(rs_tDBInput_11.wasNull()){
                    row24.CD_CLIENTE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 2) {
								row24.NM_DOCUMENTO = null;
							} else {
	                         		
        	row24.NM_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_11, 2, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 3) {
								row24.CD_EMPRESA = null;
							} else {
	                         		
        	row24.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_11, 3, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 4) {
								row24.VENDEDOR = null;
							} else {
	                         		
        	row24.VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_11, 4, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 5) {
								row24.NOME_VENDEDOR = null;
							} else {
	                         		
        	row24.NOME_VENDEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_11, 5, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 6) {
								row24.PEDIDO_AUTCOM = null;
							} else {
	                         		
        	row24.PEDIDO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_11, 6, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 7) {
								row24.DESC_FULFILLMENT = null;
							} else {
	                         		
        	row24.DESC_FULFILLMENT = routines.system.JDBCUtil.getString(rs_tDBInput_11, 7, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 8) {
								row24.TIPO_NOTA = null;
							} else {
	                         		
        	row24.TIPO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_11, 8, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 9) {
								row24.NUMERO_NOTA = null;
							} else {
	                         		
        	row24.NUMERO_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_11, 9, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 10) {
								row24.SERIE_NOTA = null;
							} else {
	                         		
        	row24.SERIE_NOTA = routines.system.JDBCUtil.getString(rs_tDBInput_11, 10, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 11) {
								row24.NOTA_DEVOLUCAO = null;
							} else {
	                         		
        	row24.NOTA_DEVOLUCAO = routines.system.JDBCUtil.getString(rs_tDBInput_11, 11, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 12) {
								row24.NM_ROMANEIO = null;
							} else {
	                         		
        	row24.NM_ROMANEIO = routines.system.JDBCUtil.getString(rs_tDBInput_11, 12, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 13) {
								row24.DT_PEDIDO = null;
							} else {
	                         		
        	row24.DT_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_11, 13, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 14) {
								row24.CD_COMBO = null;
							} else {
	                         		
        	row24.CD_COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_11, 14, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 15) {
								row24.SKU = null;
							} else {
	                         		
        	row24.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_11, 15, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 16) {
								row24.DESC_SKU = null;
							} else {
	                         		
        	row24.DESC_SKU = routines.system.JDBCUtil.getString(rs_tDBInput_11, 16, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 17) {
								row24.QTD_SKU = null;
							} else {
	                         		
            row24.QTD_SKU = rs_tDBInput_11.getDouble(17);
            if(rs_tDBInput_11.wasNull()){
                    row24.QTD_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 18) {
								row24.VL_TOTAL_SKU = null;
							} else {
	                         		
            row24.VL_TOTAL_SKU = rs_tDBInput_11.getDouble(18);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_TOTAL_SKU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 19) {
								row24.VL_UNITARIO = null;
							} else {
	                         		
            row24.VL_UNITARIO = rs_tDBInput_11.getDouble(19);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 20) {
								row24.VL_DESCONTO = null;
							} else {
	                         		
            row24.VL_DESCONTO = rs_tDBInput_11.getDouble(20);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 21) {
								row24.VL_PRODUTOS_PEDIDO = null;
							} else {
	                         		
            row24.VL_PRODUTOS_PEDIDO = rs_tDBInput_11.getDouble(21);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_PRODUTOS_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 22) {
								row24.VL_FRETE = null;
							} else {
	                         		
            row24.VL_FRETE = rs_tDBInput_11.getDouble(22);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 23) {
								row24.VL_PEDIDO = null;
							} else {
	                         		
            row24.VL_PEDIDO = rs_tDBInput_11.getDouble(23);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 24) {
								row24.BASE_ICMS = null;
							} else {
	                         		
            row24.BASE_ICMS = rs_tDBInput_11.getDouble(24);
            if(rs_tDBInput_11.wasNull()){
                    row24.BASE_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 25) {
								row24.VL_ICMS = null;
							} else {
	                         		
            row24.VL_ICMS = rs_tDBInput_11.getDouble(25);
            if(rs_tDBInput_11.wasNull()){
                    row24.VL_ICMS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_11 < 26) {
								row24.NOME_TRANSPORTADORA = null;
							} else {
	                         		
        	row24.NOME_TRANSPORTADORA = routines.system.JDBCUtil.getString(rs_tDBInput_11, 26, false);
		                    }
					

 



/**
 * [tDBInput_11 begin ] stop
 */
	
	/**
	 * [tDBInput_11 main ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 


	tos_count_tDBInput_11++;

/**
 * [tDBInput_11 main ] stop
 */
	
	/**
	 * [tDBInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 



/**
 * [tDBInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap'
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.CD_CLIENTE = row24.CD_CLIENTE ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NM_DOCUMENTO = row24.NM_DOCUMENTO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.CD_EMPRESA = row24.CD_EMPRESA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VENDEDOR = row24.VENDEDOR ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NOME_VENDEDOR = row24.NOME_VENDEDOR ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.PEDIDO_AUTCOM = row24.PEDIDO_AUTCOM ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.DESC_FULFILLMENT = row24.DESC_FULFILLMENT ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.TIPO_NOTA = row24.TIPO_NOTA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NUMERO_NOTA = row24.NUMERO_NOTA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.SERIE_NOTA = row24.SERIE_NOTA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NOTA_DEVOLUCAO = row24.NOTA_DEVOLUCAO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NM_ROMANEIO = row24.NM_ROMANEIO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.DT_PEDIDO = row24.DT_PEDIDO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.CD_COMBO = row24.CD_COMBO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.SKU = row24.SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.DESC_SKU = row24.DESC_SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.QTD_SKU = row24.QTD_SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_TOTAL_SKU = row24.VL_TOTAL_SKU ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_UNITARIO = row24.VL_UNITARIO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_DESCONTO = row24.VL_DESCONTO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_PRODUTOS_PEDIDO = row24.VL_PRODUTOS_PEDIDO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_FRETE = row24.VL_FRETE ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_PEDIDO = row24.VL_PEDIDO ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.BASE_ICMS = row24.BASE_ICMS ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.VL_ICMS = row24.VL_ICMS ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp.NOME_TRANSPORTADORA = row24.NOME_TRANSPORTADORA ;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap"
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap != null) { 



	
	/**
	 * [tUniqRow_11 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap"
						
						);
					}
					
row25 = null;			
finder_tUniqRow_11.CD_CLIENTE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO == null){
	finder_tUniqRow_11.NM_DOCUMENTO = null;
}else{
	finder_tUniqRow_11.NM_DOCUMENTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA == null){
	finder_tUniqRow_11.CD_EMPRESA = null;
}else{
	finder_tUniqRow_11.CD_EMPRESA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR == null){
	finder_tUniqRow_11.VENDEDOR = null;
}else{
	finder_tUniqRow_11.VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR == null){
	finder_tUniqRow_11.NOME_VENDEDOR = null;
}else{
	finder_tUniqRow_11.NOME_VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM == null){
	finder_tUniqRow_11.PEDIDO_AUTCOM = null;
}else{
	finder_tUniqRow_11.PEDIDO_AUTCOM = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT == null){
	finder_tUniqRow_11.DESC_FULFILLMENT = null;
}else{
	finder_tUniqRow_11.DESC_FULFILLMENT = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA == null){
	finder_tUniqRow_11.TIPO_NOTA = null;
}else{
	finder_tUniqRow_11.TIPO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA == null){
	finder_tUniqRow_11.NUMERO_NOTA = null;
}else{
	finder_tUniqRow_11.NUMERO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA == null){
	finder_tUniqRow_11.SERIE_NOTA = null;
}else{
	finder_tUniqRow_11.SERIE_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	finder_tUniqRow_11.NOTA_DEVOLUCAO = null;
}else{
	finder_tUniqRow_11.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO == null){
	finder_tUniqRow_11.NM_ROMANEIO = null;
}else{
	finder_tUniqRow_11.NM_ROMANEIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO == null){
	finder_tUniqRow_11.DT_PEDIDO = null;
}else{
	finder_tUniqRow_11.DT_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO == null){
	finder_tUniqRow_11.CD_COMBO = null;
}else{
	finder_tUniqRow_11.CD_COMBO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU == null){
	finder_tUniqRow_11.SKU = null;
}else{
	finder_tUniqRow_11.SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU == null){
	finder_tUniqRow_11.DESC_SKU = null;
}else{
	finder_tUniqRow_11.DESC_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU.toLowerCase();
}
finder_tUniqRow_11.QTD_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.QTD_SKU;
finder_tUniqRow_11.VL_TOTAL_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_TOTAL_SKU;
finder_tUniqRow_11.VL_UNITARIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_UNITARIO;
finder_tUniqRow_11.VL_DESCONTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_DESCONTO;
finder_tUniqRow_11.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
finder_tUniqRow_11.VL_FRETE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_FRETE;
finder_tUniqRow_11.VL_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PEDIDO;
finder_tUniqRow_11.BASE_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.BASE_ICMS;
finder_tUniqRow_11.VL_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	finder_tUniqRow_11.NOME_TRANSPORTADORA = null;
}else{
	finder_tUniqRow_11.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}	
finder_tUniqRow_11.hashCodeDirty = true;
if (!keystUniqRow_11.contains(finder_tUniqRow_11)) {
		KeyStruct_tUniqRow_11 new_tUniqRow_11 = new KeyStruct_tUniqRow_11();

		
new_tUniqRow_11.CD_CLIENTE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_CLIENTE;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO == null){
	new_tUniqRow_11.NM_DOCUMENTO = null;
}else{
	new_tUniqRow_11.NM_DOCUMENTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA == null){
	new_tUniqRow_11.CD_EMPRESA = null;
}else{
	new_tUniqRow_11.CD_EMPRESA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR == null){
	new_tUniqRow_11.VENDEDOR = null;
}else{
	new_tUniqRow_11.VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR == null){
	new_tUniqRow_11.NOME_VENDEDOR = null;
}else{
	new_tUniqRow_11.NOME_VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM == null){
	new_tUniqRow_11.PEDIDO_AUTCOM = null;
}else{
	new_tUniqRow_11.PEDIDO_AUTCOM = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT == null){
	new_tUniqRow_11.DESC_FULFILLMENT = null;
}else{
	new_tUniqRow_11.DESC_FULFILLMENT = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA == null){
	new_tUniqRow_11.TIPO_NOTA = null;
}else{
	new_tUniqRow_11.TIPO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA == null){
	new_tUniqRow_11.NUMERO_NOTA = null;
}else{
	new_tUniqRow_11.NUMERO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA == null){
	new_tUniqRow_11.SERIE_NOTA = null;
}else{
	new_tUniqRow_11.SERIE_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO == null){
	new_tUniqRow_11.NOTA_DEVOLUCAO = null;
}else{
	new_tUniqRow_11.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO == null){
	new_tUniqRow_11.NM_ROMANEIO = null;
}else{
	new_tUniqRow_11.NM_ROMANEIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO == null){
	new_tUniqRow_11.DT_PEDIDO = null;
}else{
	new_tUniqRow_11.DT_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO == null){
	new_tUniqRow_11.CD_COMBO = null;
}else{
	new_tUniqRow_11.CD_COMBO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU == null){
	new_tUniqRow_11.SKU = null;
}else{
	new_tUniqRow_11.SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU.toLowerCase();
}
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU == null){
	new_tUniqRow_11.DESC_SKU = null;
}else{
	new_tUniqRow_11.DESC_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU.toLowerCase();
}
new_tUniqRow_11.QTD_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.QTD_SKU;
new_tUniqRow_11.VL_TOTAL_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_TOTAL_SKU;
new_tUniqRow_11.VL_UNITARIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_UNITARIO;
new_tUniqRow_11.VL_DESCONTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_DESCONTO;
new_tUniqRow_11.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;
new_tUniqRow_11.VL_FRETE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_FRETE;
new_tUniqRow_11.VL_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PEDIDO;
new_tUniqRow_11.BASE_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.BASE_ICMS;
new_tUniqRow_11.VL_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_ICMS;
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA == null){
	new_tUniqRow_11.NOME_TRANSPORTADORA = null;
}else{
	new_tUniqRow_11.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA.toLowerCase();
}
		
		keystUniqRow_11.add(new_tUniqRow_11);if(row25 == null){ 
	
	row25 = new row25Struct();
}row25.CD_CLIENTE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_CLIENTE;			row25.NM_DOCUMENTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_DOCUMENTO;			row25.CD_EMPRESA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_EMPRESA;			row25.VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VENDEDOR;			row25.NOME_VENDEDOR = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_VENDEDOR;			row25.PEDIDO_AUTCOM = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.PEDIDO_AUTCOM;			row25.DESC_FULFILLMENT = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_FULFILLMENT;			row25.TIPO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.TIPO_NOTA;			row25.NUMERO_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NUMERO_NOTA;			row25.SERIE_NOTA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SERIE_NOTA;			row25.NOTA_DEVOLUCAO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOTA_DEVOLUCAO;			row25.NM_ROMANEIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NM_ROMANEIO;			row25.DT_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DT_PEDIDO;			row25.CD_COMBO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.CD_COMBO;			row25.SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.SKU;			row25.DESC_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.DESC_SKU;			row25.QTD_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.QTD_SKU;			row25.VL_TOTAL_SKU = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_TOTAL_SKU;			row25.VL_UNITARIO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_UNITARIO;			row25.VL_DESCONTO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_DESCONTO;			row25.VL_PRODUTOS_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PRODUTOS_PEDIDO;			row25.VL_FRETE = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_FRETE;			row25.VL_PEDIDO = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_PEDIDO;			row25.BASE_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.BASE_ICMS;			row25.VL_ICMS = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.VL_ICMS;			row25.NOME_TRANSPORTADORA = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap.NOME_TRANSPORTADORA;					
		nb_uniques_tUniqRow_11++;
	} else {
	  nb_duplicates_tUniqRow_11++;
	}

 


	tos_count_tUniqRow_11++;

/**
 * [tUniqRow_11 main ] stop
 */
	
	/**
	 * [tUniqRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_11";
	
	

 



/**
 * [tUniqRow_11 process_data_begin ] stop
 */
// Start of branch "row25"
if(row25 != null) { 



	
	/**
	 * [tFileOutputExcel_11 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_11.addRow();
									   				
	    				if(row25.CD_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(Double.parseDouble(String.valueOf(row25.CD_CLIENTE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.NM_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.NM_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.CD_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.CD_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.NOME_VENDEDOR != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.NOME_VENDEDOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.PEDIDO_AUTCOM != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.PEDIDO_AUTCOM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.DESC_FULFILLMENT != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.DESC_FULFILLMENT));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.TIPO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.TIPO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.NUMERO_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.NUMERO_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.SERIE_NOTA != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.SERIE_NOTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.NOTA_DEVOLUCAO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.NOTA_DEVOLUCAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.NM_ROMANEIO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.NM_ROMANEIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.DT_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.DT_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.CD_COMBO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.CD_COMBO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.SKU != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.DESC_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.DESC_SKU));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.QTD_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.QTD_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_TOTAL_SKU != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_TOTAL_SKU);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_PRODUTOS_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_PRODUTOS_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.BASE_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.BASE_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.VL_ICMS != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(row25.VL_ICMS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
									   				
	    				if(row25.NOME_TRANSPORTADORA != null) {
    				
							xlsxTool_tFileOutputExcel_11.addCellValue(String.valueOf(row25.NOME_TRANSPORTADORA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_11.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_11++;
				
 


	tos_count_tFileOutputExcel_11++;

/**
 * [tFileOutputExcel_11 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_11";
	
	

 



/**
 * [tFileOutputExcel_11 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_11";
	
	

 



/**
 * [tFileOutputExcel_11 process_data_end ] stop
 */

} // End of branch "row25"




	
	/**
	 * [tUniqRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_11";
	
	

 



/**
 * [tUniqRow_11 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 



/**
 * [tDBInput_11 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_11 end ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

	}
}finally{
	if (rs_tDBInput_11 != null) {
		rs_tDBInput_11.close();
	}
	if (stmt_tDBInput_11 != null) {
		stmt_tDBInput_11.close();
	}
}
globalMap.put("tDBInput_11_NB_LINE",nb_line_tDBInput_11);

 

ok_Hash.put("tDBInput_11", true);
end_Hash.put("tDBInput_11", System.currentTimeMillis());




/**
 * [tDBInput_11 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tUniqRow_11 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_11";
	
	

globalMap.put("tUniqRow_11_NB_UNIQUES",nb_uniques_tUniqRow_11);
globalMap.put("tUniqRow_11_NB_DUPLICATES",nb_duplicates_tUniqRow_11);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfmap");
			  	}
			  	
 

ok_Hash.put("tUniqRow_11", true);
end_Hash.put("tUniqRow_11", System.currentTimeMillis());




/**
 * [tUniqRow_11 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_11 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_11";
	
	

							columnIndex_tFileOutputExcel_11 = 0;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 1;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 2;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 3;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 4;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 5;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 6;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 7;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 8;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 9;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 10;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 11;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 12;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 13;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 14;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 15;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 16;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 17;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 18;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 19;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 20;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 21;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 22;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 23;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 24;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
							columnIndex_tFileOutputExcel_11 = 25;
						
					xlsxTool_tFileOutputExcel_11.setColAutoSize(columnIndex_tFileOutputExcel_11);
	
	
	
	
			xlsxTool_tFileOutputExcel_11.writeExcel(fileName_tFileOutputExcel_11,true);
	
		if(headerIsInserted_tFileOutputExcel_11 && nb_line_tFileOutputExcel_11 > 0){
			nb_line_tFileOutputExcel_11 = nb_line_tFileOutputExcel_11 -1;
		}
		globalMap.put("tFileOutputExcel_11_NB_LINE",nb_line_tFileOutputExcel_11);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_11", true);
end_Hash.put("tFileOutputExcel_11", System.currentTimeMillis());




/**
 * [tFileOutputExcel_11 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_11 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 



/**
 * [tDBInput_11 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tUniqRow_11 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_11";
	
	

 



/**
 * [tUniqRow_11 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_11 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_11";
	
	

 



/**
 * [tFileOutputExcel_11 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_11_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_2", false);
		start_Hash.put("tPostjob_2", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_2";
	
	
		int tos_count_tPostjob_2 = 0;
		

 



/**
 * [tPostjob_2 begin ] stop
 */
	
	/**
	 * [tPostjob_2 main ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 


	tos_count_tPostjob_2++;

/**
 * [tPostjob_2 main ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_2 end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 

ok_Hash.put("tPostjob_2", true);
end_Hash.put("tPostjob_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tDBInput_1Process(globalMap);



/**
 * [tPostjob_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_2 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_2_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
row13Struct row13 = new row13Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
		


	class Util_tLogRow_1 {
	
		String[] des_top = { ".", "-" };

        String[] des_data = { "-", "+" };

        String[] des_frame = { "|" }; 
        
        public void printLine(StringBuilder sb, int titleWidth, int dataWidth){
        
        	sb.append("+");
			for(int i=0; i<titleWidth+2; i++)
				sb.append("-");
			sb.append("+");
			for(int i=0; i<dataWidth+2; i++)
				sb.append("-");
        	sb.append("+" + "\n");
        }      

		public String print(String[] row, int nbLine){
			
			StringBuilder sb = new StringBuilder();
			
			    String title = "#" + nbLine + ". " + "tLogRow_1";
			    
		
			//step 1: get the max length of all the row[] member;
			int dataWidth = 5;		//the length of the string "value"	
			for(int i=0;i<row.length;i++) {
				if(row[i] == null && 4 > dataWidth) {
					dataWidth = 4;
				}
				else if(row[i] != null && row[i].length()>dataWidth) 
					dataWidth = row[i].length();
			}			
						
			int titleWidth = 12;
			
			int totalWidth = dataWidth + titleWidth + 5;
			
			//step 2: print the header with line number
			sb.append(".");
			for(int i=0 ; i<totalWidth ; i++)
				sb.append("-");			
			sb.append("." + "\n" + "|");
			
			int emptyCenterWidth = (totalWidth-title.length())/2;
			for(int i=0 ; i<emptyCenterWidth; i++)
				sb.append(" ");	
			sb.append(title);
			for(int i=0 ; i<totalWidth - emptyCenterWidth - title.length() ; i++)
				sb.append(" ");	
			sb.append("|" + "\n");
			
			//step 3: print "key" and "value"			
			printLine(sb,titleWidth,dataWidth);
			
			sb.append("|" + " key");
			for(int i=0; i<titleWidth-2; i++)
				sb.append(" ");
        	sb.append("|" + " value");
			for(int i=0; i<dataWidth-4; i++)
				sb.append(" ");
			sb.append("|" + "\n");
			
			printLine(sb,titleWidth,dataWidth);
			
			//step 4: print dataset
			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "job");
				for(int i=0; i<titleWidth -"job".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[0]);
				for(int i=0; row[0] == null && i<dataWidth - 3 || row[0] != null && i<dataWidth -row[0].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "nm_relatorio");
				for(int i=0; i<titleWidth -"nm_relatorio".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[1]);
				for(int i=0; row[1] == null && i<dataWidth - 3 || row[1] != null && i<dataWidth -row[1].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "caminho");
				for(int i=0; i<titleWidth -"caminho".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[2]);
				for(int i=0; row[2] == null && i<dataWidth - 3 || row[2] != null && i<dataWidth -row[2].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "email");
				for(int i=0; i<titleWidth -"email".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[3]);
				for(int i=0; row[3] == null && i<dataWidth - 3 || row[3] != null && i<dataWidth -row[3].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//step 5: print a line gap
			printLine(sb,titleWidth,dataWidth);
			return sb.toString();

		}


	}

	Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();




	java.io.PrintStream consoleOut_tLogRow_1 = null;
	if (globalMap.get("tLogRow_CONSOLE")!=null){
        consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
    }else{
        consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
        globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
    }

 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select job,\n       nm_relatorio,\n--       REPLACE(caminho,'/','\\') \ncaminho,\n       string_agg(distinct trim(email"
+"),',') email\n  from dw_t_relatorio_email\nwhere job = '"+context.programa+"'\n group by job, nm_relatorio, caminho";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row2.job = null;
							} else {
	                         		
        	row2.job = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row2.nm_relatorio = null;
							} else {
	                         		
        	row2.nm_relatorio = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row2.caminho = null;
							} else {
	                         		
        	row2.caminho = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row2.email = null;
							} else {
	                         		
        	row2.email = routines.system.JDBCUtil.getString(rs_tDBInput_1, 4, false);
		                    }
					


 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

    //Code generated according to input schema and output schema
row13.job = row2.job;
row13.nm_relatorio = row2.nm_relatorio;
row13.caminho = row2.caminho;
row13.email = row2.email;
context.SEND_EMAIL = row2.email;
context.caminho = row2.caminho;
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row13.job != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row13.job)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row13.nm_relatorio != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row13.nm_relatorio)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row13.caminho != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row13.caminho)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row13.email != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row13.email)							
				);


							
	    		} //  			

				
				String[] row_tLogRow_1 = new String[4];
   				
	    		if(row13.job != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(row13.job)			
					          ;	
							
	    		} //			
    			   				
	    		if(row13.nm_relatorio != null) { //              
                 row_tLogRow_1[1]=    						    
				                String.valueOf(row13.nm_relatorio)			
					          ;	
							
	    		} //			
    			   				
	    		if(row13.caminho != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(row13.caminho)			
					          ;	
							
	    		} //			
    			   				
	    		if(row13.email != null) { //              
                 row_tLogRow_1[3]=    						    
				                String.valueOf(row13.email)			
					          ;	
							
	    		} //			
    			
				nb_line_tLogRow_1++;
                consoleOut_tLogRow_1.println(util_tLogRow_1.print(row_tLogRow_1,nb_line_tLogRow_1));
                consoleOut_tLogRow_1.flush();
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk28", 0, "ok");
								} 
							
							tSendMail_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tSendMail_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSendMail_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tSendMail_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSendMail_1", false);
		start_Hash.put("tSendMail_1", System.currentTimeMillis());
		
	
	currentComponent="tSendMail_1";
	
	
		int tos_count_tSendMail_1 = 0;
		

 



/**
 * [tSendMail_1 begin ] stop
 */
	
	/**
	 * [tSendMail_1 main ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 

	String smtpHost_tSendMail_1 = System.getenv(context.SMTP);
        String smtpPort_tSendMail_1 = System.getenv(context.SMTP_PORT);
	String from_tSendMail_1 = (System.getenv(context.EMAIL));
    String to_tSendMail_1 = (context.SEND_EMAIL).replace(";",",");
    String cc_tSendMail_1 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String bcc_tSendMail_1 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String subject_tSendMail_1 = ("[Ad Hoc] Relatório Pedidos Magalu&2024");
    
	java.util.List<java.util.Map<String, String>> headers_tSendMail_1 = new java.util.ArrayList<java.util.Map<String,String>>();
	java.util.List<String> attachments_tSendMail_1 = new java.util.ArrayList<String>();
	java.util.List<String> contentTransferEncoding_tSendMail_1 = new java.util.ArrayList<String>();
		attachments_tSendMail_1.add("/root/e_mail/MAGALU_FULL_FILMENT_REI_2024.xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	
		attachments_tSendMail_1.add("/root/e_mail/MAGALU_REI_DAS_FERRAMENTAS_2024.xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	
		attachments_tSendMail_1.add("/root/e_mail/MAGAZINE_LUIZA_FULL_FILLMENT_2024.xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	
		attachments_tSendMail_1.add("/root/e_mail/MKTPLACE_MAGAZINE_LUIZA_2024.xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	
		attachments_tSendMail_1.add("/root/e_mail/MKTPLACE_MAGALU_MG_2024.xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	
		attachments_tSendMail_1.add("/root/e_mail/MKTPLACE_MAGALU_MG_FULL_2024.xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	

	String message_tSendMail_1 = (("Olá, bom dia!\n\nSegue em anexo o relatório referente as vendas MagaLu de 2024.\n\nAtt,\n\nPlataforma de Dados | BI\nPa"
+"lácio das Ferramentas e Parafusos LTDA\nwww.palaciodasferramentas.com.br\n") == null || "".equals("Olá, bom dia!\n\nSegue em anexo o relatório referente as vendas MagaLu de 2024.\n\nAtt,\n\nPlataforma de Dados | BI\nPa"
+"lácio das Ferramentas e Parafusos LTDA\nwww.palaciodasferramentas.com.br\n")) ? "\"\"" : ("Olá, bom dia!\n\nSegue em anexo o relatório referente as vendas MagaLu de 2024.\n\nAtt,\n\nPlataforma de Dados | BI\nPa"
+"lácio das Ferramentas e Parafusos LTDA\nwww.palaciodasferramentas.com.br\n") ;
	java.util.Properties props_tSendMail_1 = System.getProperties();     
	props_tSendMail_1.put("mail.smtp.host", smtpHost_tSendMail_1);
	props_tSendMail_1.put("mail.smtp.port", smtpPort_tSendMail_1);
	
		props_tSendMail_1.put("mail.mime.encodefilename", "true");
		props_tSendMail_1.put("mail.smtp.starttls.enable","true");     
	try {
		
		
			props_tSendMail_1.put("mail.smtp.auth", "true");
			javax.mail.Session session_tSendMail_1 = javax.mail.Session.getInstance(props_tSendMail_1, new javax.mail.Authenticator(){         
				protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
				
                
	final String decryptedPassword_tSendMail_1 = System.getenv(context.EMAIL_PASSWORD); 
				
				
				return new javax.mail.PasswordAuthentication(System.getenv(context.EMAIL), decryptedPassword_tSendMail_1); 
				}         
			});   
		
		
		javax.mail.Message msg_tSendMail_1 = new javax.mail.internet.MimeMessage(session_tSendMail_1);
		msg_tSendMail_1.setFrom(new javax.mail.internet.InternetAddress(from_tSendMail_1, null));
		msg_tSendMail_1.setRecipients(javax.mail.Message.RecipientType.TO,javax.mail.internet.InternetAddress.parse(to_tSendMail_1, false));
		if (cc_tSendMail_1 != null) msg_tSendMail_1.setRecipients(javax.mail.Message.RecipientType.CC, javax.mail.internet.InternetAddress.parse(cc_tSendMail_1, false));
		if (bcc_tSendMail_1 != null) msg_tSendMail_1.setRecipients(javax.mail.Message.RecipientType.BCC, javax.mail.internet.InternetAddress.parse(bcc_tSendMail_1, false));
		msg_tSendMail_1.setSubject(subject_tSendMail_1);

		for (int i_tSendMail_1 = 0; i_tSendMail_1 < headers_tSendMail_1.size(); i_tSendMail_1++) {
			java.util.Map<String, String> header_tSendMail_1 = headers_tSendMail_1.get(i_tSendMail_1);
			msg_tSendMail_1.setHeader(header_tSendMail_1.get("KEY"), header_tSendMail_1.get("VALUE"));    
		}  
		msg_tSendMail_1.setSentDate(new Date());
		msg_tSendMail_1.setHeader("X-Priority", "3"); //High->1 Normal->3 Low->5
		javax.mail.Multipart mp_tSendMail_1 = new javax.mail.internet.MimeMultipart();
		javax.mail.internet.MimeBodyPart mbpText_tSendMail_1 = new javax.mail.internet.MimeBodyPart();
		mbpText_tSendMail_1.setText(message_tSendMail_1,"ISO-8859-15", "plain");
		mp_tSendMail_1.addBodyPart(mbpText_tSendMail_1);
  
		javax.mail.internet.MimeBodyPart mbpFile_tSendMail_1 = null;

		for (int i_tSendMail_1 = 0; i_tSendMail_1 < attachments_tSendMail_1.size(); i_tSendMail_1++){
			String filename_tSendMail_1 = attachments_tSendMail_1.get(i_tSendMail_1);
			javax.activation.FileDataSource fds_tSendMail_1 = null;
			java.io.File file_tSendMail_1 = new java.io.File(filename_tSendMail_1);
			
    		if (file_tSendMail_1.isDirectory()){
				java.io.File[] subFiles_tSendMail_1 = file_tSendMail_1.listFiles();
				for(java.io.File subFile_tSendMail_1 : subFiles_tSendMail_1){
					if (subFile_tSendMail_1.isFile()){
						fds_tSendMail_1 = new javax.activation.FileDataSource(subFile_tSendMail_1.getAbsolutePath());
						mbpFile_tSendMail_1 = new javax.mail.internet.MimeBodyPart();
						mbpFile_tSendMail_1.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_1));
						mbpFile_tSendMail_1.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_1.getName()));
						if(contentTransferEncoding_tSendMail_1.get(i_tSendMail_1).equalsIgnoreCase("base64")){
							mbpFile_tSendMail_1.setHeader("Content-Transfer-Encoding", "base64");
						}
						mp_tSendMail_1.addBodyPart(mbpFile_tSendMail_1);
					}
				}
    		}else{
				mbpFile_tSendMail_1 = new javax.mail.internet.MimeBodyPart();
				fds_tSendMail_1 = new javax.activation.FileDataSource(filename_tSendMail_1);
				mbpFile_tSendMail_1.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_1)); 
				mbpFile_tSendMail_1.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_1.getName()));
				if(contentTransferEncoding_tSendMail_1.get(i_tSendMail_1).equalsIgnoreCase("base64")){
					mbpFile_tSendMail_1.setHeader("Content-Transfer-Encoding", "base64");
				}
				mp_tSendMail_1.addBodyPart(mbpFile_tSendMail_1);
			}
		}
		// -- set the content --
		msg_tSendMail_1.setContent(mp_tSendMail_1);
		// add handlers for main MIME types
		javax.activation.MailcapCommandMap mc_tSendMail_1 = ( javax.activation.MailcapCommandMap)javax.activation.CommandMap.getDefaultCommandMap();
		mc_tSendMail_1.addMailcap("text/html;; x-java-content-handler=com.sun.mail.handlers.text_html");
		mc_tSendMail_1.addMailcap("text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml");
		mc_tSendMail_1.addMailcap("text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain");
		mc_tSendMail_1.addMailcap("multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed");
		mc_tSendMail_1.addMailcap("message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822");
		javax.activation.CommandMap.setDefaultCommandMap(mc_tSendMail_1);
		// add com.sun.mail.handlers to job imports / depenencies (TESB-27110)
		com.sun.mail.handlers.text_plain text_plain_h_tSendMail_1 = null;
		// -- Send the message --
		javax.mail.Transport.send(msg_tSendMail_1);
	} catch(java.lang.Exception e){
globalMap.put("tSendMail_1_ERROR_MESSAGE",e.getMessage());
  		
			throw(e);
		
	}finally{
		props_tSendMail_1.remove("mail.smtp.host");
		props_tSendMail_1.remove("mail.smtp.port");
		
		props_tSendMail_1.remove("mail.mime.encodefilename");
		
			props_tSendMail_1.remove("mail.smtp.starttls.enable");
		
		props_tSendMail_1.remove("mail.smtp.auth");     
	}

 


	tos_count_tSendMail_1++;

/**
 * [tSendMail_1 main ] stop
 */
	
	/**
	 * [tSendMail_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 



/**
 * [tSendMail_1 process_data_begin ] stop
 */
	
	/**
	 * [tSendMail_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 



/**
 * [tSendMail_1 process_data_end ] stop
 */
	
	/**
	 * [tSendMail_1 end ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 

ok_Hash.put("tSendMail_1", true);
end_Hash.put("tSendMail_1", System.currentTimeMillis());




/**
 * [tSendMail_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSendMail_1:OnSubjobOk1", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tFileDelete_1Process(globalMap); 
						
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSendMail_1:OnSubjobOk2", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSendMail_1 finally ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 



/**
 * [tSendMail_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSendMail_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_1=new java.io.File("/root/e_mail/MAGALU_FULL_FILMENT_REI_2024.xlsx");
    if(file_tFileDelete_1.exists()&& file_tFileDelete_1.isFile()){
    	if(file_tFileDelete_1.delete()){
    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_1_DELETE_PATH","/root/e_mail/MAGALU_FULL_FILMENT_REI_2024.xlsx");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tFileDelete_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_2", false);
		start_Hash.put("tFileDelete_2", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_2";
	
	
		int tos_count_tFileDelete_2 = 0;
		

 



/**
 * [tFileDelete_2 begin ] stop
 */
	
	/**
	 * [tFileDelete_2 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

class DeleteFoldertFileDelete_2{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_2=new java.io.File("/root/e_mail/MAGALU_REI_DAS_FERRAMENTAS_2024.xlsx");
    if(file_tFileDelete_2.exists()&& file_tFileDelete_2.isFile()){
    	if(file_tFileDelete_2.delete()){
    		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_2_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_2_DELETE_PATH","/root/e_mail/MAGALU_REI_DAS_FERRAMENTAS_2024.xlsx");
 


	tos_count_tFileDelete_2++;

/**
 * [tFileDelete_2 main ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_2 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

ok_Hash.put("tFileDelete_2", true);
end_Hash.put("tFileDelete_2", System.currentTimeMillis());




/**
 * [tFileDelete_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tFileDelete_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_2 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_3", false);
		start_Hash.put("tFileDelete_3", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_3";
	
	
		int tos_count_tFileDelete_3 = 0;
		

 



/**
 * [tFileDelete_3 begin ] stop
 */
	
	/**
	 * [tFileDelete_3 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 

class DeleteFoldertFileDelete_3{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_3=new java.io.File("/root/e_mail/MAGAZINE_LUIZA_FULL_FILLMENT_2024.xlsx");
    if(file_tFileDelete_3.exists()&& file_tFileDelete_3.isFile()){
    	if(file_tFileDelete_3.delete()){
    		globalMap.put("tFileDelete_3_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_3_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_3.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_3_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_3.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_3_DELETE_PATH","/root/e_mail/MAGAZINE_LUIZA_FULL_FILLMENT_2024.xlsx");
 


	tos_count_tFileDelete_3++;

/**
 * [tFileDelete_3 main ] stop
 */
	
	/**
	 * [tFileDelete_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_3 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 

ok_Hash.put("tFileDelete_3", true);
end_Hash.put("tFileDelete_3", System.currentTimeMillis());




/**
 * [tFileDelete_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tFileDelete_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_3 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_3_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_4", false);
		start_Hash.put("tFileDelete_4", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_4";
	
	
		int tos_count_tFileDelete_4 = 0;
		

 



/**
 * [tFileDelete_4 begin ] stop
 */
	
	/**
	 * [tFileDelete_4 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 

class DeleteFoldertFileDelete_4{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_4=new java.io.File("/root/e_mail/MKTPLACE_MAGAZINE_LUIZA_2024.xlsx");
    if(file_tFileDelete_4.exists()&& file_tFileDelete_4.isFile()){
    	if(file_tFileDelete_4.delete()){
    		globalMap.put("tFileDelete_4_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_4_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_4.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_4_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_4.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_4_DELETE_PATH","/root/e_mail/MKTPLACE_MAGAZINE_LUIZA_2024.xlsx");
 


	tos_count_tFileDelete_4++;

/**
 * [tFileDelete_4 main ] stop
 */
	
	/**
	 * [tFileDelete_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 



/**
 * [tFileDelete_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 



/**
 * [tFileDelete_4 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_4 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 

ok_Hash.put("tFileDelete_4", true);
end_Hash.put("tFileDelete_4", System.currentTimeMillis());




/**
 * [tFileDelete_4 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tFileDelete_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_4 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 



/**
 * [tFileDelete_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_4_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_5", false);
		start_Hash.put("tFileDelete_5", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_5";
	
	
		int tos_count_tFileDelete_5 = 0;
		

 



/**
 * [tFileDelete_5 begin ] stop
 */
	
	/**
	 * [tFileDelete_5 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_5";
	
	

 

class DeleteFoldertFileDelete_5{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_5=new java.io.File("/root/e_mail/MKTPLACE_MAGALU_MG_2024.xlsx");
    if(file_tFileDelete_5.exists()&& file_tFileDelete_5.isFile()){
    	if(file_tFileDelete_5.delete()){
    		globalMap.put("tFileDelete_5_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_5_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_5.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_5_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_5.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_5_DELETE_PATH","/root/e_mail/MKTPLACE_MAGALU_MG_2024.xlsx");
 


	tos_count_tFileDelete_5++;

/**
 * [tFileDelete_5 main ] stop
 */
	
	/**
	 * [tFileDelete_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_5";
	
	

 



/**
 * [tFileDelete_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_5";
	
	

 



/**
 * [tFileDelete_5 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_5 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_5";
	
	

 

ok_Hash.put("tFileDelete_5", true);
end_Hash.put("tFileDelete_5", System.currentTimeMillis());




/**
 * [tFileDelete_5 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tFileDelete_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_5 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_5";
	
	

 



/**
 * [tFileDelete_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_5_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tFileDelete_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_6", false);
		start_Hash.put("tFileDelete_6", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_6";
	
	
		int tos_count_tFileDelete_6 = 0;
		

 



/**
 * [tFileDelete_6 begin ] stop
 */
	
	/**
	 * [tFileDelete_6 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_6";
	
	

 

class DeleteFoldertFileDelete_6{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_6=new java.io.File("/root/e_mail/MKTPLACE_MAGALU_MG_FULL_2024.xlsx");
    if(file_tFileDelete_6.exists()&& file_tFileDelete_6.isFile()){
    	if(file_tFileDelete_6.delete()){
    		globalMap.put("tFileDelete_6_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_6_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_6.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_6_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_6.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_6_DELETE_PATH","/root/e_mail/MKTPLACE_MAGALU_MG_FULL_2024.xlsx");
 


	tos_count_tFileDelete_6++;

/**
 * [tFileDelete_6 main ] stop
 */
	
	/**
	 * [tFileDelete_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_6";
	
	

 



/**
 * [tFileDelete_6 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_6";
	
	

 



/**
 * [tFileDelete_6 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_6 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_6";
	
	

 

ok_Hash.put("tFileDelete_6", true);
end_Hash.put("tFileDelete_6", System.currentTimeMillis());




/**
 * [tFileDelete_6 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_6 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_6";
	
	

 



/**
 * [tFileDelete_6 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_6_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];
    static byte[] commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length) {
				if(length < 1024 && commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024.length == 0) {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[1024];
				} else {
   					commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length);
			strReturn = new String(commonByteArray_PALACIO_relatorio_marketplaces_magalu_2024, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_relatorio_marketplaces_magalu_2024) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_marketplaces_magalu_2024_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.nm_programa = next_tHashInput_1.nm_programa;
	row6.data_inicio_execucao = next_tHashInput_1.data_inicio_execucao;
	row6.data_termino_execucao = next_tHashInput_1.data_termino_execucao;
	row6.mensagem = next_tHashInput_1.mensagem;
	row6.uuid = next_tHashInput_1.uuid;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row6.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row6.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_marketplaces_magalu_2024_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
		
			conn_tDBClose_2.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	



	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
        conn_tDBClose_1.close();
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Erro envio email - relatorio_marketplaces_magalu_2024");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Erro envio email - relatorio_marketplaces_magalu_2024");
	globalMap.put("tDie_1_DIE_MESSAGES", "Erro envio email - relatorio_marketplaces_magalu_2024");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
    	errorCode = new Integer(2);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(2));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_1_DIE_CODE", errorCode);

    
	if(true){	
		TDieException e_tDie_1 = new TDieException();

		

		throw e_tDie_1;
	}

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_marketplaces_magalu_2024 relatorio_marketplaces_magalu_2024Class = new relatorio_marketplaces_magalu_2024();

        int exitCode = relatorio_marketplaces_magalu_2024Class.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_marketplaces_magalu_2024.class.getClassLoader().getResourceAsStream("palacio/relatorio_marketplaces_magalu_2024_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_marketplaces_magalu_2024.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("EMAIL_PASSWORD", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD") == null) {
                            context.EMAIL_PASSWORD = null;
                        } else {
                            context.EMAIL_PASSWORD=(String) context.getProperty("EMAIL_PASSWORD");
                        }
                        context.setContextType("EMAIL", "id_String");
                        if(context.getStringValue("EMAIL") == null) {
                            context.EMAIL = null;
                        } else {
                            context.EMAIL=(String) context.getProperty("EMAIL");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("excel", "id_String");
                        if(context.getStringValue("excel") == null) {
                            context.excel = null;
                        } else {
                            context.excel=(String) context.getProperty("excel");
                        }
                        context.setContextType("SMTP", "id_String");
                        if(context.getStringValue("SMTP") == null) {
                            context.SMTP = null;
                        } else {
                            context.SMTP=(String) context.getProperty("SMTP");
                        }
                        context.setContextType("SMTP_PORT", "id_String");
                        if(context.getStringValue("SMTP_PORT") == null) {
                            context.SMTP_PORT = null;
                        } else {
                            context.SMTP_PORT=(String) context.getProperty("SMTP_PORT");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("caminho", "id_String");
                        if(context.getStringValue("caminho") == null) {
                            context.caminho = null;
                        } else {
                            context.caminho=(String) context.getProperty("caminho");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD")) {
                context.EMAIL_PASSWORD = (String) parentContextMap.get("EMAIL_PASSWORD");
            }if (parentContextMap.containsKey("EMAIL")) {
                context.EMAIL = (String) parentContextMap.get("EMAIL");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("excel")) {
                context.excel = (String) parentContextMap.get("excel");
            }if (parentContextMap.containsKey("SMTP")) {
                context.SMTP = (String) parentContextMap.get("SMTP");
            }if (parentContextMap.containsKey("SMTP_PORT")) {
                context.SMTP_PORT = (String) parentContextMap.get("SMTP_PORT");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("caminho")) {
                context.caminho = (String) parentContextMap.get("caminho");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_2Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_2) {
globalMap.put("tPostjob_2_SUBPROCESS_STATE", -1);

e_tPostjob_2.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_marketplaces_magalu_2024");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_3");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_3", globalMap.get("conn_tDBConnection_3"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1287565 characters generated by Talend Open Studio for Big Data 
 *     on the 23 de abril de 2024 01:01:05 BRT
 ************************************************************************************************/