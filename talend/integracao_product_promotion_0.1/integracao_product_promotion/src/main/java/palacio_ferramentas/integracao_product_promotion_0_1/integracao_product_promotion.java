// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.integracao_product_promotion_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_2
	import java.math.BigDecimal;
import java.math.RoundingMode;
import java.io.*;
import java.lang.*;
import java.text.DecimalFormat;
import java.util.*;

	//the import part of tJavaRow_4
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: integracao_product_promotion Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class integracao_product_promotion implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(WINSPARE_DB != null){
				
					this.setProperty("WINSPARE_DB", WINSPARE_DB.toString());
				
			}
			
			if(WINSPARE_HOST != null){
				
					this.setProperty("WINSPARE_HOST", WINSPARE_HOST.toString());
				
			}
			
			if(WINSPARE_PORT != null){
				
					this.setProperty("WINSPARE_PORT", WINSPARE_PORT.toString());
				
			}
			
			if(WINSPARE_PWD != null){
				
					this.setProperty("WINSPARE_PWD", WINSPARE_PWD.toString());
				
			}
			
			if(WINSPARE_USER != null){
				
					this.setProperty("WINSPARE_USER", WINSPARE_USER.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String WINSPARE_DB;
public String getWINSPARE_DB(){
	return this.WINSPARE_DB;
}
public String WINSPARE_HOST;
public String getWINSPARE_HOST(){
	return this.WINSPARE_HOST;
}
public String WINSPARE_PORT;
public String getWINSPARE_PORT(){
	return this.WINSPARE_PORT;
}
public String WINSPARE_PWD;
public String getWINSPARE_PWD(){
	return this.WINSPARE_PWD;
}
public String WINSPARE_USER;
public String getWINSPARE_USER(){
	return this.WINSPARE_USER;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "integracao_product_promotion";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				integracao_product_promotion.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(integracao_product_promotion.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_3Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_3", false);
		start_Hash.put("tDBConnection_3", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_3";
	
	
		int tos_count_tDBConnection_3 = 0;
		


	
            String dbProperties_tDBConnection_3 = "ApplicationName=integracao_preco_winsp";
            String url_tDBConnection_3 = "jdbc:postgresql://"+System.getenv(context.WINSPARE_HOST)+":"+System.getenv(context.WINSPARE_PORT)+"/"+System.getenv(context.WINSPARE_DB);
            
            if(dbProperties_tDBConnection_3 != null && !"".equals(dbProperties_tDBConnection_3.trim())) {
                url_tDBConnection_3 = url_tDBConnection_3 + "?" + dbProperties_tDBConnection_3;
            }
	String dbUser_tDBConnection_3 = System.getenv(context.WINSPARE_USER);
	
	
		
	final String decryptedPassword_tDBConnection_3 = System.getenv(context.WINSPARE_PWD); 
		String dbPwd_tDBConnection_3 = decryptedPassword_tDBConnection_3;
	
	
	java.sql.Connection conn_tDBConnection_3 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_3 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_3 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_3.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_3 = drivers_tDBConnection_3.nextElement();
        if (redShiftDriverNames_tDBConnection_3.contains(d_tDBConnection_3.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_3);
                java.sql.DriverManager.registerDriver(d_tDBConnection_3);
            } catch (java.lang.Exception e_tDBConnection_3) {
globalMap.put("tDBConnection_3_ERROR_MESSAGE",e_tDBConnection_3.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_3 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_3 = java.lang.Class.forName(driverClass_tDBConnection_3);
			globalMap.put("driverClass_tDBConnection_3", driverClass_tDBConnection_3);
		
			conn_tDBConnection_3 = java.sql.DriverManager.getConnection(url_tDBConnection_3,dbUser_tDBConnection_3,dbPwd_tDBConnection_3);

		globalMap.put("conn_tDBConnection_3", conn_tDBConnection_3);
	if (null != conn_tDBConnection_3) {
		
			conn_tDBConnection_3.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_3","");

 



/**
 * [tDBConnection_3 begin ] stop
 */
	
	/**
	 * [tDBConnection_3 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 


	tos_count_tDBConnection_3++;

/**
 * [tDBConnection_3 main ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_3 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 

ok_Hash.put("tDBConnection_3", true);
end_Hash.put("tDBConnection_3", System.currentTimeMillis());




/**
 * [tDBConnection_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tDBConnection_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_3 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = context.JDBC_PARAMETERS;
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD); 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(true);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = "ApplicationName=integracao_preco_winsp";
            String url_tDBConnection_1 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();
insert_logStruct insert_log = new insert_logStruct();
row16Struct row16 = new row16Struct();






	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_integracao_product_promotion_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_2=0;
        java.lang.StringBuilder sb_tDBOutput_2 = new java.lang.StringBuilder();
        sb_tDBOutput_2.append("INSERT INTO \"").append(tableName_tDBOutput_2).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_2 = sb_tDBOutput_2.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row15.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row15.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row16 = null;
        whetherReject_tDBOutput_2 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_2.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_2.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                insertedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_2) {
                            row16 = new row16Struct();
                                row16.nm_programa = insert_log.nm_programa;
                                row16.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row16.data_termino_execucao = insert_log.data_termino_execucao;
                                row16.mensagem = insert_log.mensagem;
                                row16.uuid = insert_log.uuid;
                                row16.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
// Start of branch "row16"
if(row16 != null) { 



	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					



    
		row16Struct oneRow_tHashOutput_5 = new row16Struct();
				
					oneRow_tHashOutput_5.nm_programa = row16.nm_programa;
					oneRow_tHashOutput_5.data_inicio_execucao = row16.data_inicio_execucao;
					oneRow_tHashOutput_5.data_termino_execucao = row16.data_termino_execucao;
					oneRow_tHashOutput_5.mensagem = row16.mensagem;
					oneRow_tHashOutput_5.uuid = row16.uuid;
					oneRow_tHashOutput_5.versao = row16.versao;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */

} // End of branch "row16"




	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tDBInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return 16;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return 16;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return 16;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return 16;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "yyyy-MM-dd hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return 16;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return 16;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "yyyy-MM-dd hh:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
row10Struct row10 = new row10Struct();
row10Struct row11 = row10;






	
	/**
	 * [tLogRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_3", false);
		start_Hash.put("tLogRow_3", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tLogRow_3 = 0;
		

	///////////////////////
	
         class Util_tLogRow_3 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[11];

        public void addRow(String[] row) {

            for (int i = 0; i < 11; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 10 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 10 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%3$-");
        			        sbformat.append(colLengths[2]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%4$-");
        			        sbformat.append(colLengths[3]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%5$-");
        			        sbformat.append(colLengths[4]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%6$-");
        			        sbformat.append(colLengths[5]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%7$-");
        			        sbformat.append(colLengths[6]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%8$-");
        			        sbformat.append(colLengths[7]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%9$-");
        			        sbformat.append(colLengths[8]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%10$-");
        			        sbformat.append(colLengths[9]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%11$-");
        			        sbformat.append(colLengths[10]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                    for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[9] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                
                    //last column
                    for (int i = 0; i < colLengths[10] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_3 util_tLogRow_3 = new Util_tLogRow_3();
        util_tLogRow_3.setTableName("tLogRow_3");
        util_tLogRow_3.addRow(new String[]{"CD_PRODUTO","DT_CRIACAO","VLR_DE","VLR_POR","DTAINI","DTAFIN","DESCRICAO","SITUACAO_PRODUTO","TIPO_LINHA","API","DT_INTEGRACAO",});        
 		StringBuilder strBuffer_tLogRow_3 = null;
		int nb_line_tLogRow_3 = 0;
///////////////////////    			



 



/**
 * [tLogRow_3 begin ] stop
 */



	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_integracao_product_promotion_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select\n	*\nfrom\n	(\n	select\n		CD_PRODUTO,\n		DT_CRIACAO,\n		VLR_DE,\n		VLR_POR,\n		DTAINI,\n		DTAFIN,\n		DESCRICAO,"
+"\n		SITUACAO_PRODUTO,\n		TIPO_LINHA,\n		API,\n		DT_INTEGRACAO,\n		dense_rank() over (partition by cd_produto, descricao o"
+"rder by dt_criacao desc) ranking\n	from product_promotion) x\n   where x.ranking in (1, 2)\n	-- and x.cd_produto in ('75"
+"716','87148')\n";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row7.CD_PRODUTO = null;
							} else {
	                         		
        	row7.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row7.DT_CRIACAO = null;
							} else {
										
			row7.DT_CRIACAO = routines.system.JDBCUtil.getDate(rs_tDBInput_1, 2);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row7.VLR_DE = null;
							} else {
	                         		
        	row7.VLR_DE = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row7.VLR_POR = null;
							} else {
	                         		
        	row7.VLR_POR = routines.system.JDBCUtil.getString(rs_tDBInput_1, 4, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row7.DTAINI = null;
							} else {
	                         		
        	row7.DTAINI = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row7.DTAFIN = null;
							} else {
	                         		
        	row7.DTAFIN = routines.system.JDBCUtil.getString(rs_tDBInput_1, 6, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row7.DESCRICAO = null;
							} else {
	                         		
        	row7.DESCRICAO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 7, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row7.SITUACAO_PRODUTO = null;
							} else {
	                         		
        	row7.SITUACAO_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 8, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 9) {
								row7.TIPO_LINHA = null;
							} else {
	                         		
        	row7.TIPO_LINHA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 9, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 10) {
								row7.API = null;
							} else {
		                          
            row7.API = rs_tDBInput_1.getInt(10);
            if(rs_tDBInput_1.wasNull()){
                    row7.API = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 11) {
								row7.DT_INTEGRACAO = null;
							} else {
										
			row7.DT_INTEGRACAO = routines.system.JDBCUtil.getDate(rs_tDBInput_1, 11);
		                    }
					


 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

    //Code generated according to input schema and output schema
row10.CD_PRODUTO = row7.CD_PRODUTO;
row10.DT_CRIACAO = row7.DT_CRIACAO;
row10.VLR_DE = row7.VLR_DE;
row10.VLR_POR = row7.VLR_POR;
row10.DTAINI = row7.DTAINI;
row10.DTAFIN = row7.DTAFIN;
row10.DESCRICAO = row7.DESCRICAO;
row10.SITUACAO_PRODUTO = row7.SITUACAO_PRODUTO;
row10.TIPO_LINHA = row7.TIPO_LINHA;
row10.API = row7.API;
row10.DT_INTEGRACAO = row7.DT_INTEGRACAO;

    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					



    
		row10Struct oneRow_tHashOutput_1 = new row10Struct();
				
					oneRow_tHashOutput_1.CD_PRODUTO = row10.CD_PRODUTO;
					oneRow_tHashOutput_1.DT_CRIACAO = row10.DT_CRIACAO;
					oneRow_tHashOutput_1.VLR_DE = row10.VLR_DE;
					oneRow_tHashOutput_1.VLR_POR = row10.VLR_POR;
					oneRow_tHashOutput_1.DTAINI = row10.DTAINI;
					oneRow_tHashOutput_1.DTAFIN = row10.DTAFIN;
					oneRow_tHashOutput_1.DESCRICAO = row10.DESCRICAO;
					oneRow_tHashOutput_1.SITUACAO_PRODUTO = row10.SITUACAO_PRODUTO;
					oneRow_tHashOutput_1.TIPO_LINHA = row10.TIPO_LINHA;
					oneRow_tHashOutput_1.API = row10.API;
					oneRow_tHashOutput_1.DT_INTEGRACAO = row10.DT_INTEGRACAO;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 
     row11 = row10;


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_3 main ] start
	 */

	

	
	
	currentComponent="tLogRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_3 = new String[11];
   				
	    		if(row11.CD_PRODUTO != null) { //              
                 row_tLogRow_3[0]=    						    
				                String.valueOf(row11.CD_PRODUTO)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.DT_CRIACAO != null) { //              
                 row_tLogRow_3[1]=    						
								FormatterUtils.format_Date(row11.DT_CRIACAO, "dd-MM-yyyy hh:mm:ss")
					          ;	
							
	    		} //			
    			   				
	    		if(row11.VLR_DE != null) { //              
                 row_tLogRow_3[2]=    						    
				                String.valueOf(row11.VLR_DE)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.VLR_POR != null) { //              
                 row_tLogRow_3[3]=    						    
				                String.valueOf(row11.VLR_POR)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.DTAINI != null) { //              
                 row_tLogRow_3[4]=    						    
				                String.valueOf(row11.DTAINI)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.DTAFIN != null) { //              
                 row_tLogRow_3[5]=    						    
				                String.valueOf(row11.DTAFIN)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.DESCRICAO != null) { //              
                 row_tLogRow_3[6]=    						    
				                String.valueOf(row11.DESCRICAO)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.SITUACAO_PRODUTO != null) { //              
                 row_tLogRow_3[7]=    						    
				                String.valueOf(row11.SITUACAO_PRODUTO)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.TIPO_LINHA != null) { //              
                 row_tLogRow_3[8]=    						    
				                String.valueOf(row11.TIPO_LINHA)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.API != null) { //              
                 row_tLogRow_3[9]=    						    
				                String.valueOf(row11.API)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.DT_INTEGRACAO != null) { //              
                 row_tLogRow_3[10]=    						
								FormatterUtils.format_Date(row11.DT_INTEGRACAO, "dd-MM-yyyy hh:mm:ss")
					          ;	
							
	    		} //			
    			 

				util_tLogRow_3.addRow(row_tLogRow_3);	
				nb_line_tLogRow_3++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_3++;

/**
 * [tLogRow_3 main ] stop
 */
	
	/**
	 * [tLogRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_3";
	
	

 



/**
 * [tLogRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_3";
	
	

 



/**
 * [tLogRow_3 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */

	
	/**
	 * [tLogRow_3 end ] start
	 */

	

	
	
	currentComponent="tLogRow_3";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_3 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_3 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_3 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_3);
                    }
                    
                    consoleOut_tLogRow_3.println(util_tLogRow_3.format().toString());
                    consoleOut_tLogRow_3.flush();
//////
globalMap.put("tLogRow_3_NB_LINE",nb_line_tLogRow_3);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tLogRow_3", true);
end_Hash.put("tLogRow_3", System.currentTimeMillis());




/**
 * [tLogRow_3 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tDBInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */

	
	/**
	 * [tLogRow_3 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_3";
	
	

 



/**
 * [tLogRow_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class Saida1Struct implements routines.system.IPersistableRow<Saida1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 6;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 6;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_DE_PROCESSADO;

				public String getVLR_DE_PROCESSADO () {
					return this.VLR_DE_PROCESSADO;
				}

				public Boolean VLR_DE_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_DE_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_DE_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_DE_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_DE_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_DE_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_DE_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_DE_PROCESSADO";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 6;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 6;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 6;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String VLR_POR_PROCESSADO;

				public String getVLR_POR_PROCESSADO () {
					return this.VLR_POR_PROCESSADO;
				}

				public Boolean VLR_POR_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_POR_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_POR_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_POR_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_POR_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_POR_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_POR_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_POR_PROCESSADO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_DE_PROCESSADO="+VLR_DE_PROCESSADO);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",VLR_POR_PROCESSADO="+VLR_POR_PROCESSADO);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 6;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 6;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_DE_PROCESSADO;

				public String getVLR_DE_PROCESSADO () {
					return this.VLR_DE_PROCESSADO;
				}

				public Boolean VLR_DE_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_DE_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_DE_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_DE_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_DE_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_DE_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_DE_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_DE_PROCESSADO";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 6;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 6;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 6;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String VLR_POR_PROCESSADO;

				public String getVLR_POR_PROCESSADO () {
					return this.VLR_POR_PROCESSADO;
				}

				public Boolean VLR_POR_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_POR_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_POR_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_POR_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_POR_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_POR_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_POR_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_POR_PROCESSADO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer PRO_ECOMME;

				public Integer getPRO_ECOMME () {
					return this.PRO_ECOMME;
				}

				public Boolean PRO_ECOMMEIsNullable(){
				    return true;
				}
				public Boolean PRO_ECOMMEIsKey(){
				    return false;
				}
				public Integer PRO_ECOMMELength(){
				    return null;
				}
				public Integer PRO_ECOMMEPrecision(){
				    return null;
				}
				public String PRO_ECOMMEDefault(){
				
					return null;
				
				}
				public String PRO_ECOMMEComment(){
				
				    return "";
				
				}
				public String PRO_ECOMMEPattern(){
				
					return "";
				
				}
				public String PRO_ECOMMEOriginalDbColumnName(){
				
					return "PRO_ECOMME";
				
				}

				
			    public Integer ITE_EXPSIT;

				public Integer getITE_EXPSIT () {
					return this.ITE_EXPSIT;
				}

				public Boolean ITE_EXPSITIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPSITIsKey(){
				    return false;
				}
				public Integer ITE_EXPSITLength(){
				    return null;
				}
				public Integer ITE_EXPSITPrecision(){
				    return null;
				}
				public String ITE_EXPSITDefault(){
				
					return null;
				
				}
				public String ITE_EXPSITComment(){
				
				    return "";
				
				}
				public String ITE_EXPSITPattern(){
				
					return "";
				
				}
				public String ITE_EXPSITOriginalDbColumnName(){
				
					return "ITE_EXPSIT";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_DE_PROCESSADO="+VLR_DE_PROCESSADO);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",VLR_POR_PROCESSADO="+VLR_POR_PROCESSADO);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",PRO_ECOMME="+String.valueOf(PRO_ECOMME));
		sb.append(",ITE_EXPSIT="+String.valueOf(ITE_EXPSIT));
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Double VLR_DE;

				public Double getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 12;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public Double VLR_DE_CALC;

				public Double getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 12;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public Double VLR_DE_PROCESSADO;

				public Double getVLR_DE_PROCESSADO () {
					return this.VLR_DE_PROCESSADO;
				}

				public Boolean VLR_DE_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_DE_PROCESSADOLength(){
				    return 12;
				}
				public Integer VLR_DE_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_DE_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_DE_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_DE_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_DE_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_DE_PROCESSADO";
				
				}

				
			    public Double VLR_POR;

				public Double getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 12;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public Double VLR_POR_CALC;

				public Double getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 12;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public Double CUSTO;

				public Double getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 12;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public Double VLR_POR_PROCESSADO;

				public Double getVLR_POR_PROCESSADO () {
					return this.VLR_POR_PROCESSADO;
				}

				public Boolean VLR_POR_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_POR_PROCESSADOLength(){
				    return 12;
				}
				public Integer VLR_POR_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_POR_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_POR_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_POR_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_POR_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_POR_PROCESSADO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer PRO_ECOMME;

				public Integer getPRO_ECOMME () {
					return this.PRO_ECOMME;
				}

				public Boolean PRO_ECOMMEIsNullable(){
				    return true;
				}
				public Boolean PRO_ECOMMEIsKey(){
				    return false;
				}
				public Integer PRO_ECOMMELength(){
				    return null;
				}
				public Integer PRO_ECOMMEPrecision(){
				    return null;
				}
				public String PRO_ECOMMEDefault(){
				
					return null;
				
				}
				public String PRO_ECOMMEComment(){
				
				    return "";
				
				}
				public String PRO_ECOMMEPattern(){
				
					return "";
				
				}
				public String PRO_ECOMMEOriginalDbColumnName(){
				
					return "PRO_ECOMME";
				
				}

				
			    public Integer ITE_EXPSIT;

				public Integer getITE_EXPSIT () {
					return this.ITE_EXPSIT;
				}

				public Boolean ITE_EXPSITIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPSITIsKey(){
				    return false;
				}
				public Integer ITE_EXPSITLength(){
				    return null;
				}
				public Integer ITE_EXPSITPrecision(){
				    return null;
				}
				public String ITE_EXPSITDefault(){
				
					return null;
				
				}
				public String ITE_EXPSITComment(){
				
				    return "";
				
				}
				public String ITE_EXPSITPattern(){
				
					return "";
				
				}
				public String ITE_EXPSITOriginalDbColumnName(){
				
					return "ITE_EXPSIT";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE = null;
           				} else {
           			    	this.VLR_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_CALC = null;
           				} else {
           			    	this.VLR_DE_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_PROCESSADO = null;
           				} else {
           			    	this.VLR_DE_PROCESSADO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR = null;
           				} else {
           			    	this.VLR_POR = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_CALC = null;
           				} else {
           			    	this.VLR_POR_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CUSTO = null;
           				} else {
           			    	this.CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_PROCESSADO = null;
           				} else {
           			    	this.VLR_POR_PROCESSADO = dis.readDouble();
           				}
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE = null;
           				} else {
           			    	this.VLR_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_CALC = null;
           				} else {
           			    	this.VLR_DE_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_PROCESSADO = null;
           				} else {
           			    	this.VLR_DE_PROCESSADO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR = null;
           				} else {
           			    	this.VLR_POR = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_CALC = null;
           				} else {
           			    	this.VLR_POR_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CUSTO = null;
           				} else {
           			    	this.CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_PROCESSADO = null;
           				} else {
           			    	this.VLR_POR_PROCESSADO = dis.readDouble();
           				}
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VLR_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE);
		            	}
					
					// Double
				
						if(this.VLR_DE_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_CALC);
		            	}
					
					// Double
				
						if(this.VLR_DE_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_PROCESSADO);
		            	}
					
					// Double
				
						if(this.VLR_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR);
		            	}
					
					// Double
				
						if(this.VLR_POR_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_CALC);
		            	}
					
					// Double
				
						if(this.CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CUSTO);
		            	}
					
					// Double
				
						if(this.VLR_POR_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_PROCESSADO);
		            	}
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VLR_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE);
		            	}
					
					// Double
				
						if(this.VLR_DE_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_CALC);
		            	}
					
					// Double
				
						if(this.VLR_DE_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_PROCESSADO);
		            	}
					
					// Double
				
						if(this.VLR_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR);
		            	}
					
					// Double
				
						if(this.VLR_POR_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_CALC);
		            	}
					
					// Double
				
						if(this.CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CUSTO);
		            	}
					
					// Double
				
						if(this.VLR_POR_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_PROCESSADO);
		            	}
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+String.valueOf(VLR_DE));
		sb.append(",VLR_DE_CALC="+String.valueOf(VLR_DE_CALC));
		sb.append(",VLR_DE_PROCESSADO="+String.valueOf(VLR_DE_PROCESSADO));
		sb.append(",VLR_POR="+String.valueOf(VLR_POR));
		sb.append(",VLR_POR_CALC="+String.valueOf(VLR_POR_CALC));
		sb.append(",CUSTO="+String.valueOf(CUSTO));
		sb.append(",VLR_POR_PROCESSADO="+String.valueOf(VLR_POR_PROCESSADO));
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",PRO_ECOMME="+String.valueOf(PRO_ECOMME));
		sb.append(",ITE_EXPSIT="+String.valueOf(ITE_EXPSIT));
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Double VLR_DE;

				public Double getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 12;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public Double VLR_DE_CALC;

				public Double getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 12;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public Double VLR_DE_PROCESSADO;

				public Double getVLR_DE_PROCESSADO () {
					return this.VLR_DE_PROCESSADO;
				}

				public Boolean VLR_DE_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_DE_PROCESSADOLength(){
				    return 12;
				}
				public Integer VLR_DE_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_DE_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_DE_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_DE_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_DE_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_DE_PROCESSADO";
				
				}

				
			    public Double VLR_POR;

				public Double getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 12;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public Double VLR_POR_CALC;

				public Double getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 12;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public Double CUSTO;

				public Double getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 12;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public Double VLR_POR_PROCESSADO;

				public Double getVLR_POR_PROCESSADO () {
					return this.VLR_POR_PROCESSADO;
				}

				public Boolean VLR_POR_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_POR_PROCESSADOLength(){
				    return 12;
				}
				public Integer VLR_POR_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_POR_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_POR_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_POR_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_POR_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_POR_PROCESSADO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer PRO_ECOMME;

				public Integer getPRO_ECOMME () {
					return this.PRO_ECOMME;
				}

				public Boolean PRO_ECOMMEIsNullable(){
				    return true;
				}
				public Boolean PRO_ECOMMEIsKey(){
				    return false;
				}
				public Integer PRO_ECOMMELength(){
				    return null;
				}
				public Integer PRO_ECOMMEPrecision(){
				    return null;
				}
				public String PRO_ECOMMEDefault(){
				
					return null;
				
				}
				public String PRO_ECOMMEComment(){
				
				    return "";
				
				}
				public String PRO_ECOMMEPattern(){
				
					return "";
				
				}
				public String PRO_ECOMMEOriginalDbColumnName(){
				
					return "PRO_ECOMME";
				
				}

				
			    public Integer ITE_EXPSIT;

				public Integer getITE_EXPSIT () {
					return this.ITE_EXPSIT;
				}

				public Boolean ITE_EXPSITIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPSITIsKey(){
				    return false;
				}
				public Integer ITE_EXPSITLength(){
				    return null;
				}
				public Integer ITE_EXPSITPrecision(){
				    return null;
				}
				public String ITE_EXPSITDefault(){
				
					return null;
				
				}
				public String ITE_EXPSITComment(){
				
				    return "";
				
				}
				public String ITE_EXPSITPattern(){
				
					return "";
				
				}
				public String ITE_EXPSITOriginalDbColumnName(){
				
					return "ITE_EXPSIT";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE = null;
           				} else {
           			    	this.VLR_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_CALC = null;
           				} else {
           			    	this.VLR_DE_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_PROCESSADO = null;
           				} else {
           			    	this.VLR_DE_PROCESSADO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR = null;
           				} else {
           			    	this.VLR_POR = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_CALC = null;
           				} else {
           			    	this.VLR_POR_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CUSTO = null;
           				} else {
           			    	this.CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_PROCESSADO = null;
           				} else {
           			    	this.VLR_POR_PROCESSADO = dis.readDouble();
           				}
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE = null;
           				} else {
           			    	this.VLR_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_CALC = null;
           				} else {
           			    	this.VLR_DE_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_PROCESSADO = null;
           				} else {
           			    	this.VLR_DE_PROCESSADO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR = null;
           				} else {
           			    	this.VLR_POR = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_CALC = null;
           				} else {
           			    	this.VLR_POR_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CUSTO = null;
           				} else {
           			    	this.CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_PROCESSADO = null;
           				} else {
           			    	this.VLR_POR_PROCESSADO = dis.readDouble();
           				}
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VLR_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE);
		            	}
					
					// Double
				
						if(this.VLR_DE_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_CALC);
		            	}
					
					// Double
				
						if(this.VLR_DE_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_PROCESSADO);
		            	}
					
					// Double
				
						if(this.VLR_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR);
		            	}
					
					// Double
				
						if(this.VLR_POR_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_CALC);
		            	}
					
					// Double
				
						if(this.CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CUSTO);
		            	}
					
					// Double
				
						if(this.VLR_POR_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_PROCESSADO);
		            	}
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VLR_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE);
		            	}
					
					// Double
				
						if(this.VLR_DE_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_CALC);
		            	}
					
					// Double
				
						if(this.VLR_DE_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_PROCESSADO);
		            	}
					
					// Double
				
						if(this.VLR_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR);
		            	}
					
					// Double
				
						if(this.VLR_POR_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_CALC);
		            	}
					
					// Double
				
						if(this.CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CUSTO);
		            	}
					
					// Double
				
						if(this.VLR_POR_PROCESSADO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_PROCESSADO);
		            	}
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+String.valueOf(VLR_DE));
		sb.append(",VLR_DE_CALC="+String.valueOf(VLR_DE_CALC));
		sb.append(",VLR_DE_PROCESSADO="+String.valueOf(VLR_DE_PROCESSADO));
		sb.append(",VLR_POR="+String.valueOf(VLR_POR));
		sb.append(",VLR_POR_CALC="+String.valueOf(VLR_POR_CALC));
		sb.append(",CUSTO="+String.valueOf(CUSTO));
		sb.append(",VLR_POR_PROCESSADO="+String.valueOf(VLR_POR_PROCESSADO));
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",PRO_ECOMME="+String.valueOf(PRO_ECOMME));
		sb.append(",ITE_EXPSIT="+String.valueOf(ITE_EXPSIT));
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Double VLR_DE;

				public Double getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 12;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public Double VLR_DE_CALC;

				public Double getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 12;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public Double VLR_POR;

				public Double getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 12;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public Double VLR_POR_CALC;

				public Double getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 12;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public Double CUSTO;

				public Double getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 12;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer PRO_ECOMME;

				public Integer getPRO_ECOMME () {
					return this.PRO_ECOMME;
				}

				public Boolean PRO_ECOMMEIsNullable(){
				    return true;
				}
				public Boolean PRO_ECOMMEIsKey(){
				    return false;
				}
				public Integer PRO_ECOMMELength(){
				    return null;
				}
				public Integer PRO_ECOMMEPrecision(){
				    return null;
				}
				public String PRO_ECOMMEDefault(){
				
					return null;
				
				}
				public String PRO_ECOMMEComment(){
				
				    return "";
				
				}
				public String PRO_ECOMMEPattern(){
				
					return "";
				
				}
				public String PRO_ECOMMEOriginalDbColumnName(){
				
					return "PRO_ECOMME";
				
				}

				
			    public Integer ITE_EXPSIT;

				public Integer getITE_EXPSIT () {
					return this.ITE_EXPSIT;
				}

				public Boolean ITE_EXPSITIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPSITIsKey(){
				    return false;
				}
				public Integer ITE_EXPSITLength(){
				    return null;
				}
				public Integer ITE_EXPSITPrecision(){
				    return null;
				}
				public String ITE_EXPSITDefault(){
				
					return null;
				
				}
				public String ITE_EXPSITComment(){
				
				    return "";
				
				}
				public String ITE_EXPSITPattern(){
				
					return "";
				
				}
				public String ITE_EXPSITOriginalDbColumnName(){
				
					return "ITE_EXPSIT";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE = null;
           				} else {
           			    	this.VLR_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_CALC = null;
           				} else {
           			    	this.VLR_DE_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR = null;
           				} else {
           			    	this.VLR_POR = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_CALC = null;
           				} else {
           			    	this.VLR_POR_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CUSTO = null;
           				} else {
           			    	this.CUSTO = dis.readDouble();
           				}
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE = null;
           				} else {
           			    	this.VLR_DE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_DE_CALC = null;
           				} else {
           			    	this.VLR_DE_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR = null;
           				} else {
           			    	this.VLR_POR = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VLR_POR_CALC = null;
           				} else {
           			    	this.VLR_POR_CALC = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CUSTO = null;
           				} else {
           			    	this.CUSTO = dis.readDouble();
           				}
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.PRO_ECOMME = readInteger(dis);
					
						this.ITE_EXPSIT = readInteger(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VLR_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE);
		            	}
					
					// Double
				
						if(this.VLR_DE_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_CALC);
		            	}
					
					// Double
				
						if(this.VLR_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR);
		            	}
					
					// Double
				
						if(this.VLR_POR_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_CALC);
		            	}
					
					// Double
				
						if(this.CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CUSTO);
		            	}
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VLR_DE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE);
		            	}
					
					// Double
				
						if(this.VLR_DE_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_DE_CALC);
		            	}
					
					// Double
				
						if(this.VLR_POR == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR);
		            	}
					
					// Double
				
						if(this.VLR_POR_CALC == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VLR_POR_CALC);
		            	}
					
					// Double
				
						if(this.CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CUSTO);
		            	}
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.PRO_ECOMME,dos);
					
					// Integer
				
						writeInteger(this.ITE_EXPSIT,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+String.valueOf(VLR_DE));
		sb.append(",VLR_DE_CALC="+String.valueOf(VLR_DE_CALC));
		sb.append(",VLR_POR="+String.valueOf(VLR_POR));
		sb.append(",VLR_POR_CALC="+String.valueOf(VLR_POR_CALC));
		sb.append(",CUSTO="+String.valueOf(CUSTO));
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",PRO_ECOMME="+String.valueOf(PRO_ECOMME));
		sb.append(",ITE_EXPSIT="+String.valueOf(ITE_EXPSIT));
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
row2Struct row2 = new row2Struct();
row9Struct row9 = new row9Struct();
row5Struct row5 = new row5Struct();
Saida1Struct Saida1 = new Saida1Struct();








	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida1");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida1Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_integracao_product_promotion_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida1Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida1Struct Saida1_tmp = new Saida1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_6", false);
		start_Hash.put("tDBInput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_6";
	
	
		int tos_count_tDBInput_6 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_6 = java.util.Calendar.getInstance();
		    calendar_tDBInput_6.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_6 = calendar_tDBInput_6.getTime();
		    int nb_line_tDBInput_6 = 0;
		    java.sql.Connection conn_tDBInput_6 = null;
				conn_tDBInput_6 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_6 = conn_tDBInput_6.createStatement();

		    String dbquery_tDBInput_6 = "SELECT 'ATIVA' AS TIPO_LINHA, B.IPR_CODITE CD_PRODUTO,\n                    E.ITE_PREVE7 VLR_DE,\n                    C"
+"ASE WHEN MOD(E.ITE_PREVE7,1) >= 0 THEN CEIL(E.ITE_PREVE7)-0.10\n                                    ELSE CEIL(E.ITE_PREV"
+"E7)\n                                      END AS VLR_DE_CALC,\n       B.IPR_PREVEN VLR_POR,\n       CASE WHEN MOD(B.IPR"
+"_PREVEN,1) >= 0 THEN CEIL(B.IPR_PREVEN)-0.10\n            ELSE CEIL(B.IPR_PREVEN)\n        END AS VLR_POR_CALC,\n       "
+"E.ITE_PRECUS CUSTO,\n       CAST(DATE_FORMAT(A.PRO_DTAINI, '%m/%d/%Y') as char) DTAINI,\n       CAST(DATE_FORMAT(A.PRO_D"
+"TAFIN, '%m/%d/%Y') as char) DTAFIN,\n       CONCAT_WS('-',A.PRO_CODPRO,A.PRO_DESPRO) DESCRICAO,\n	   IFNULL(E.ITE_SITPRO"
+",0) SITUACAO_PRODUTO,\n       A.PRO_ULTALT, -- A.PRO_HULALT,\nCASE WHEN A.PRO_ECOMME = 'N' THEN 0\n        ELSE 1\n     "
+"    END AS PRO_ECOMME,\n       CASE WHEN D.ITE_EXPSIT = 'N' THEN 0\n        ELSE 1\n         END AS ITE_EXPSIT,\n	   '0'"
+" AS API\n  FROM CADPRO A\nINNER JOIN ITEPRO B ON A.AUTOINCREM = B.IPR_SEQGER\nINNER JOIN PROEMP C ON A.AUTOINCREM = C.PR"
+"O_SEQGER AND C.PRO_CODEMP = '001'\nINNER JOIN CADITE D ON B.IPR_CODITE = D.ITE_CODITE\nINNER JOIN ITEGER E ON B.IPR_CODI"
+"TE = E.ITE_CODITE AND E.ITE_CODEMP = '001'\nWHERE (A.PRO_DTAINI <= SUBDATE(CURDATE(), 0) AND A.PRO_DTAFIN >= SUBDATE(CUR"
+"DATE(), 1))\n-- and B.IPR_CODITE in ('75716','87148')\n--   AND A.PRO_ECOMME = 'S'\n--   AND D.ITE_EXPSIT = 'S'\n";
		    

		    globalMap.put("tDBInput_6_QUERY",dbquery_tDBInput_6);

		    java.sql.ResultSet rs_tDBInput_6 = null;

		    try {
		    	rs_tDBInput_6 = stmt_tDBInput_6.executeQuery(dbquery_tDBInput_6);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_6 = rs_tDBInput_6.getMetaData();
		    	int colQtyInRs_tDBInput_6 = rsmd_tDBInput_6.getColumnCount();

		    String tmpContent_tDBInput_6 = null;
		    
		    
		    while (rs_tDBInput_6.next()) {
		        nb_line_tDBInput_6++;
		        
							if(colQtyInRs_tDBInput_6 < 1) {
								row1.TIPO_LINHA = null;
							} else {
	                         		
        	row1.TIPO_LINHA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 1, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 2) {
								row1.CD_PRODUTO = null;
							} else {
	                         		
        	row1.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 2, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 3) {
								row1.VLR_DE = null;
							} else {
	                         		
            row1.VLR_DE = rs_tDBInput_6.getDouble(3);
            if(rs_tDBInput_6.wasNull()){
                    row1.VLR_DE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 4) {
								row1.VLR_DE_CALC = null;
							} else {
	                         		
            row1.VLR_DE_CALC = rs_tDBInput_6.getDouble(4);
            if(rs_tDBInput_6.wasNull()){
                    row1.VLR_DE_CALC = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 5) {
								row1.VLR_POR = null;
							} else {
	                         		
            row1.VLR_POR = rs_tDBInput_6.getDouble(5);
            if(rs_tDBInput_6.wasNull()){
                    row1.VLR_POR = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 6) {
								row1.VLR_POR_CALC = null;
							} else {
	                         		
            row1.VLR_POR_CALC = rs_tDBInput_6.getDouble(6);
            if(rs_tDBInput_6.wasNull()){
                    row1.VLR_POR_CALC = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 7) {
								row1.CUSTO = null;
							} else {
	                         		
            row1.CUSTO = rs_tDBInput_6.getDouble(7);
            if(rs_tDBInput_6.wasNull()){
                    row1.CUSTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 8) {
								row1.DTAINI = null;
							} else {
	                         		
        	row1.DTAINI = routines.system.JDBCUtil.getString(rs_tDBInput_6, 8, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 9) {
								row1.DTAFIN = null;
							} else {
	                         		
        	row1.DTAFIN = routines.system.JDBCUtil.getString(rs_tDBInput_6, 9, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 10) {
								row1.DESCRICAO = null;
							} else {
	                         		
        	row1.DESCRICAO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 10, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 11) {
								row1.SITUACAO_PRODUTO = null;
							} else {
	                         		
        	row1.SITUACAO_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 11, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 12) {
								row1.DT_ULTIMA_ATUALIZACAO_AUTCOM = null;
							} else {
	                         		
        	row1.DT_ULTIMA_ATUALIZACAO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_6, 12, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 13) {
								row1.PRO_ECOMME = null;
							} else {
		                          
            row1.PRO_ECOMME = rs_tDBInput_6.getInt(13);
            if(rs_tDBInput_6.wasNull()){
                    row1.PRO_ECOMME = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 14) {
								row1.ITE_EXPSIT = null;
							} else {
		                          
            row1.ITE_EXPSIT = rs_tDBInput_6.getInt(14);
            if(rs_tDBInput_6.wasNull()){
                    row1.ITE_EXPSIT = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 15) {
								row1.API = null;
							} else {
		                          
            row1.API = rs_tDBInput_6.getInt(15);
            if(rs_tDBInput_6.wasNull()){
                    row1.API = null;
            }
		                    }
					

 



/**
 * [tDBInput_6 begin ] stop
 */
	
	/**
	 * [tDBInput_6 main ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 


	tos_count_tDBInput_6++;

/**
 * [tDBInput_6 main ] stop
 */
	
	/**
	 * [tDBInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row2.TIPO_LINHA = row1.TIPO_LINHA;
row2.CD_PRODUTO = row1.CD_PRODUTO;
row2.VLR_DE = row1.VLR_DE;
row2.VLR_DE_CALC = row1.VLR_DE_CALC;

if (row1.SITUACAO_PRODUTO.equals("008")) {
row2.VLR_DE_PROCESSADO = row1.VLR_DE_CALC / 0.9;
} else if (!row1.SITUACAO_PRODUTO.equals("008")) {
row2.VLR_DE_PROCESSADO = row1.VLR_DE / 0.9;
} else{
row2.VLR_DE_PROCESSADO = row1.VLR_DE;
}

/* OK antes do ajuste de 008
if ((row1.VLR_DE < 100.00) && (!row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_DE_PROCESSADO = row1.VLR_DE / 0.9;
} else if ((row1.VLR_DE < 100.00) && (row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_DE_PROCESSADO = row1.VLR_DE / 0.9;
} else if ((row1.VLR_DE >= 100.00) && (!row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_DE_PROCESSADO = row1.VLR_DE / 0.9;
//row2.VLR_DE_PROCESSADO = row1.VLR_DE_CALC / 0.9;
} else if ((row1.VLR_DE >= 100.00) && (row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_DE_PROCESSADO = row1.VLR_DE / 0.9;
} else{
row2.VLR_DE_PROCESSADO = row1.VLR_DE;
}*/

/*
> ou <= 100 diff 008 -> row1.VLR_DE / 0.9;
> ou <= 100 = 008    -> row1.VLR_DE_CALC / 0.9;

vlr_de
vlr_por
008 -> special_price

*/

row2.VLR_POR = row1.VLR_POR;
row2.VLR_POR_CALC = row1.VLR_POR_CALC;
row2.CUSTO = row1.CUSTO;

if (row1.SITUACAO_PRODUTO.equals("008")) {
row2.VLR_POR_PROCESSADO = row1.VLR_POR_CALC / 0.9;
} else if (!row1.SITUACAO_PRODUTO.equals("008")) {
row2.VLR_POR_PROCESSADO = row1.VLR_POR / 0.9;
} else{
row2.VLR_POR_PROCESSADO = row1.VLR_POR;
}

/* OK antes do ajuste de 008
if ((row1.VLR_POR < 100.00) && (!row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_POR_PROCESSADO = row1.VLR_POR / 0.9;
} else if ((row1.VLR_POR < 100.00) && (row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_POR_PROCESSADO = row1.VLR_POR / 0.9;
} else if ((row1.VLR_POR >= 100.00) && (!row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_POR_PROCESSADO = row1.VLR_POR / 0.9;
//row2.VLR_POR_PROCESSADO = row1.VLR_POR_CALC / 0.9;
} else if ((row1.VLR_POR >= 100.00) && (row1.SITUACAO_PRODUTO.equals("007"))) {
row2.VLR_POR_PROCESSADO = row1.VLR_POR / 0.9;
} else{
row2.VLR_POR_PROCESSADO = row1.VLR_POR;
}*/

row2.DTAINI = row1.DTAINI;
row2.DTAFIN = row1.DTAFIN;
row2.DESCRICAO = row1.DESCRICAO;
row2.SITUACAO_PRODUTO = row1.SITUACAO_PRODUTO;
row2.DT_ULTIMA_ATUALIZACAO_AUTCOM = row1.DT_ULTIMA_ATUALIZACAO_AUTCOM;

row2.PRO_ECOMME = row1.PRO_ECOMME;
row2.ITE_EXPSIT = row1.ITE_EXPSIT;
row2.API = row1.API;
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

    //Code generated according to input schema and output schema
row9.TIPO_LINHA = row2.TIPO_LINHA;
row9.CD_PRODUTO = row2.CD_PRODUTO;
row9.VLR_DE = row2.VLR_DE;
row9.VLR_DE_CALC = row2.VLR_DE_CALC;
row9.VLR_DE_PROCESSADO = row2.VLR_DE_PROCESSADO;
row9.VLR_POR = row2.VLR_POR;
row9.VLR_POR_CALC = row2.VLR_POR_CALC;
row9.CUSTO = row2.CUSTO;
row9.VLR_POR_PROCESSADO = row2.VLR_POR_PROCESSADO;
row9.DTAINI = row2.DTAINI;
row9.DTAFIN = row2.DTAFIN;
row9.DESCRICAO = row2.DESCRICAO;
row9.SITUACAO_PRODUTO = row2.SITUACAO_PRODUTO;
row9.DT_ULTIMA_ATUALIZACAO_AUTCOM = row2.DT_ULTIMA_ATUALIZACAO_AUTCOM;
row9.PRO_ECOMME = row2.PRO_ECOMME;
row9.ITE_EXPSIT = row2.ITE_EXPSIT;
if (row9.VLR_POR <= row9.CUSTO) {
row9.API = 3;
} else if (row9.PRO_ECOMME == 0) {
row9.API = 5;
} else if (row9.ITE_EXPSIT == 0) {
row9.API = 6;
} else{
row9.API = 0;
}

    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

    //Code generated according to input schema and output schema
row5.TIPO_LINHA = row9.TIPO_LINHA;
row5.CD_PRODUTO = row9.CD_PRODUTO;
row5.VLR_DE = String.format("%.2f",row9.VLR_DE).replaceAll(",", ".");
row5.VLR_DE_CALC = String.format("%.2f",row9.VLR_DE_CALC).replaceAll(",", ".");
row5.VLR_DE_PROCESSADO = String.format("%.2f",row9.VLR_DE_PROCESSADO).replaceAll(",", ".");
row5.VLR_POR = String.format("%.2f",row9.VLR_POR).replaceAll(",", ".");
row5.VLR_POR_CALC = String.format("%.2f",row9.VLR_POR_CALC).replaceAll(",", ".");
row5.CUSTO = String.format("%.2f",row9.CUSTO).replaceAll(",", ".");
row5.VLR_POR_PROCESSADO = String.format("%.2f",row9.VLR_POR_PROCESSADO).replaceAll(",", ".");
row5.DTAINI = row9.DTAINI;
row5.DTAFIN = row9.DTAFIN;
row5.DESCRICAO = row9.DESCRICAO;
row5.SITUACAO_PRODUTO = row9.SITUACAO_PRODUTO;
row5.DT_ULTIMA_ATUALIZACAO_AUTCOM = row9.DT_ULTIMA_ATUALIZACAO_AUTCOM;
row5.PRO_ECOMME = row9.PRO_ECOMME;
row5.ITE_EXPSIT = row9.ITE_EXPSIT;
row5.API = row9.API;
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

Saida1 = null;


// # Output table : 'Saida1'
Saida1_tmp.TIPO_LINHA = row5.TIPO_LINHA;
Saida1_tmp.CD_PRODUTO = row5.CD_PRODUTO;
Saida1_tmp.VLR_DE = row5.VLR_DE;
Saida1_tmp.VLR_DE_CALC = row5.VLR_DE_CALC;
Saida1_tmp.VLR_DE_PROCESSADO = row5.VLR_DE_PROCESSADO;
Saida1_tmp.VLR_POR = row5.VLR_POR;
Saida1_tmp.VLR_POR_CALC = row5.VLR_POR_CALC;
Saida1_tmp.CUSTO = row5.CUSTO;
Saida1_tmp.VLR_POR_PROCESSADO = row5.VLR_POR_PROCESSADO;
Saida1_tmp.DTAINI = row5.DTAINI;
Saida1_tmp.DTAFIN = row5.DTAFIN;
Saida1_tmp.DESCRICAO = row5.DESCRICAO;
Saida1_tmp.SITUACAO_PRODUTO = row5.SITUACAO_PRODUTO;
Saida1_tmp.DT_ULTIMA_ATUALIZACAO_AUTCOM = row5.DT_ULTIMA_ATUALIZACAO_AUTCOM;
Saida1_tmp.API = row5.API;
Saida1 = Saida1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "Saida1"
if(Saida1 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida1"
						
						);
					}
					



    
		Saida1Struct oneRow_tHashOutput_2 = new Saida1Struct();
				
					oneRow_tHashOutput_2.TIPO_LINHA = Saida1.TIPO_LINHA;
					oneRow_tHashOutput_2.CD_PRODUTO = Saida1.CD_PRODUTO;
					oneRow_tHashOutput_2.VLR_DE = Saida1.VLR_DE;
					oneRow_tHashOutput_2.VLR_DE_CALC = Saida1.VLR_DE_CALC;
					oneRow_tHashOutput_2.VLR_DE_PROCESSADO = Saida1.VLR_DE_PROCESSADO;
					oneRow_tHashOutput_2.VLR_POR = Saida1.VLR_POR;
					oneRow_tHashOutput_2.VLR_POR_CALC = Saida1.VLR_POR_CALC;
					oneRow_tHashOutput_2.CUSTO = Saida1.CUSTO;
					oneRow_tHashOutput_2.VLR_POR_PROCESSADO = Saida1.VLR_POR_PROCESSADO;
					oneRow_tHashOutput_2.DTAINI = Saida1.DTAINI;
					oneRow_tHashOutput_2.DTAFIN = Saida1.DTAFIN;
					oneRow_tHashOutput_2.DESCRICAO = Saida1.DESCRICAO;
					oneRow_tHashOutput_2.SITUACAO_PRODUTO = Saida1.SITUACAO_PRODUTO;
					oneRow_tHashOutput_2.DT_ULTIMA_ATUALIZACAO_AUTCOM = Saida1.DT_ULTIMA_ATUALIZACAO_AUTCOM;
					oneRow_tHashOutput_2.API = Saida1.API;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "Saida1"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_6 end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

	}
}finally{
	if (rs_tDBInput_6 != null) {
		rs_tDBInput_6.close();
	}
	if (stmt_tDBInput_6 != null) {
		stmt_tDBInput_6.close();
	}
}
globalMap.put("tDBInput_6_NB_LINE",nb_line_tDBInput_6);

 

ok_Hash.put("tDBInput_6", true);
end_Hash.put("tDBInput_6", System.currentTimeMillis());




/**
 * [tDBInput_6 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida1");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "yyyy-MM-dd hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				
			    public String MENSAGEM;

				public String getMENSAGEM () {
					return this.MENSAGEM;
				}

				public Boolean MENSAGEMIsNullable(){
				    return true;
				}
				public Boolean MENSAGEMIsKey(){
				    return false;
				}
				public Integer MENSAGEMLength(){
				    return null;
				}
				public Integer MENSAGEMPrecision(){
				    return null;
				}
				public String MENSAGEMDefault(){
				
					return null;
				
				}
				public String MENSAGEMComment(){
				
				    return "";
				
				}
				public String MENSAGEMPattern(){
				
					return "";
				
				}
				public String MENSAGEMOriginalDbColumnName(){
				
					return "MENSAGEM";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.DT_ULTIMA_ATUALIZACAO_AUTCOM = this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            other.MENSAGEM = this.MENSAGEM;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
		sb.append(",MENSAGEM="+MENSAGEM);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Dw_insertStruct implements routines.system.IPersistableRow<Dw_insertStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "yyyy-MM-dd hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				
			    public String MENSAGEM;

				public String getMENSAGEM () {
					return this.MENSAGEM;
				}

				public Boolean MENSAGEMIsNullable(){
				    return true;
				}
				public Boolean MENSAGEMIsKey(){
				    return false;
				}
				public Integer MENSAGEMLength(){
				    return null;
				}
				public Integer MENSAGEMPrecision(){
				    return null;
				}
				public String MENSAGEMDefault(){
				
					return null;
				
				}
				public String MENSAGEMComment(){
				
				    return "";
				
				}
				public String MENSAGEMPattern(){
				
					return "";
				
				}
				public String MENSAGEMOriginalDbColumnName(){
				
					return "MENSAGEM";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Dw_insertStruct other = (Dw_insertStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Dw_insertStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.DT_ULTIMA_ATUALIZACAO_AUTCOM = this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            other.MENSAGEM = this.MENSAGEM;
	            
	}

	public void copyKeysDataTo(Dw_insertStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
		sb.append(",MENSAGEM="+MENSAGEM);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Dw_insertStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 6;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 6;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_DE_PROCESSADO;

				public String getVLR_DE_PROCESSADO () {
					return this.VLR_DE_PROCESSADO;
				}

				public Boolean VLR_DE_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_DE_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_DE_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_DE_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_DE_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_DE_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_DE_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_DE_PROCESSADO";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 6;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 6;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 6;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String VLR_POR_PROCESSADO;

				public String getVLR_POR_PROCESSADO () {
					return this.VLR_POR_PROCESSADO;
				}

				public Boolean VLR_POR_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_POR_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_POR_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_POR_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_POR_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_POR_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_POR_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_POR_PROCESSADO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_DE_PROCESSADO="+VLR_DE_PROCESSADO);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",VLR_POR_PROCESSADO="+VLR_POR_PROCESSADO);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return 6;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return 6;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return 2;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_DE_PROCESSADO;

				public String getVLR_DE_PROCESSADO () {
					return this.VLR_DE_PROCESSADO;
				}

				public Boolean VLR_DE_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_DE_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_DE_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_DE_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_DE_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_DE_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_DE_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_DE_PROCESSADO";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return 6;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return 6;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return 2;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String CUSTO;

				public String getCUSTO () {
					return this.CUSTO;
				}

				public Boolean CUSTOIsNullable(){
				    return true;
				}
				public Boolean CUSTOIsKey(){
				    return false;
				}
				public Integer CUSTOLength(){
				    return 6;
				}
				public Integer CUSTOPrecision(){
				    return 2;
				}
				public String CUSTODefault(){
				
					return null;
				
				}
				public String CUSTOComment(){
				
				    return "";
				
				}
				public String CUSTOPattern(){
				
					return "";
				
				}
				public String CUSTOOriginalDbColumnName(){
				
					return "CUSTO";
				
				}

				
			    public String VLR_POR_PROCESSADO;

				public String getVLR_POR_PROCESSADO () {
					return this.VLR_POR_PROCESSADO;
				}

				public Boolean VLR_POR_PROCESSADOIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_PROCESSADOIsKey(){
				    return false;
				}
				public Integer VLR_POR_PROCESSADOLength(){
				    return 6;
				}
				public Integer VLR_POR_PROCESSADOPrecision(){
				    return 2;
				}
				public String VLR_POR_PROCESSADODefault(){
				
					return null;
				
				}
				public String VLR_POR_PROCESSADOComment(){
				
				    return "";
				
				}
				public String VLR_POR_PROCESSADOPattern(){
				
					return "";
				
				}
				public String VLR_POR_PROCESSADOOriginalDbColumnName(){
				
					return "VLR_POR_PROCESSADO";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_DE_PROCESSADO = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.CUSTO = readString(dis);
					
					this.VLR_POR_PROCESSADO = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_DE_PROCESSADO,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.CUSTO,dos);
					
					// String
				
						writeString(this.VLR_POR_PROCESSADO,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_DE_PROCESSADO="+VLR_DE_PROCESSADO);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",CUSTO="+CUSTO);
		sb.append(",VLR_POR_PROCESSADO="+VLR_POR_PROCESSADO);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_2Process(globalMap);

		row4Struct row4 = new row4Struct();
Dw_insertStruct Dw_insert = new Dw_insertStruct();
Dw_insertStruct row18 = Dw_insert;






	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("product_promotion").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("product_promotion").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"cd_produto\",\"dt_criacao\",\"vlr_de\",\"vlr_por\",\"dtaini\",\"dtafin\",\"descricao\",\"situacao_produto\",\"tipo_linha\",\"dt_ultima_atualizacao_autcom\",\"api\",\"dt_integracao\",\"mensagem\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Dw_insert");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
         class Util_tLogRow_1 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[13];

        public void addRow(String[] row) {

            for (int i = 0; i < 13; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 12 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 12 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%3$-");
        			        sbformat.append(colLengths[2]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%4$-");
        			        sbformat.append(colLengths[3]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%5$-");
        			        sbformat.append(colLengths[4]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%6$-");
        			        sbformat.append(colLengths[5]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%7$-");
        			        sbformat.append(colLengths[6]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%8$-");
        			        sbformat.append(colLengths[7]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%9$-");
        			        sbformat.append(colLengths[8]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%10$-");
        			        sbformat.append(colLengths[9]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%11$-");
        			        sbformat.append(colLengths[10]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%12$-");
        			        sbformat.append(colLengths[11]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%13$-");
        			        sbformat.append(colLengths[12]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                    for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[9] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[10] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[11] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                
                    //last column
                    for (int i = 0; i < colLengths[12] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
        util_tLogRow_1.setTableName("tLogRow_1");
        util_tLogRow_1.addRow(new String[]{"CD_PRODUTO","DT_CRIACAO","VLR_DE","VLR_POR","DTAINI","DTAFIN","DESCRICAO","SITUACAO_PRODUTO","TIPO_LINHA","DT_ULTIMA_ATUALIZACAO_AUTCOM","API","DT_INTEGRACAO","MENSAGEM",});        
 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
					globalMap.get( "tHash_Lookup_row8" ))
					;					
					
	

row8Struct row8HashKey = new row8Struct();
row8Struct row8Default = new row8Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
Dw_insertStruct Dw_insert_tmp = new Dw_insertStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida1Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<Saida1Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    Saida1Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row4.TIPO_LINHA = next_tHashInput_1.TIPO_LINHA;
	row4.CD_PRODUTO = next_tHashInput_1.CD_PRODUTO;
	row4.VLR_DE = next_tHashInput_1.VLR_DE;
	row4.VLR_DE_CALC = next_tHashInput_1.VLR_DE_CALC;
	row4.VLR_DE_PROCESSADO = next_tHashInput_1.VLR_DE_PROCESSADO;
	row4.VLR_POR = next_tHashInput_1.VLR_POR;
	row4.VLR_POR_CALC = next_tHashInput_1.VLR_POR_CALC;
	row4.CUSTO = next_tHashInput_1.CUSTO;
	row4.VLR_POR_PROCESSADO = next_tHashInput_1.VLR_POR_PROCESSADO;
	row4.DTAINI = next_tHashInput_1.DTAINI;
	row4.DTAFIN = next_tHashInput_1.DTAFIN;
	row4.DESCRICAO = next_tHashInput_1.DESCRICAO;
	row4.SITUACAO_PRODUTO = next_tHashInput_1.SITUACAO_PRODUTO;
	row4.DT_ULTIMA_ATUALIZACAO_AUTCOM = next_tHashInput_1.DT_ULTIMA_ATUALIZACAO_AUTCOM;
	row4.API = next_tHashInput_1.API;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row8Struct row8 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row8" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow8 = false;
       		  	    	
       		  	    	
 							row8Struct row8ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row8HashKey.CD_PRODUTO = row4.CD_PRODUTO ;
                        		    		
                        		    		    row8HashKey.VLR_DE = row4.VLR_DE_PROCESSADO ;
                        		    		
                        		    		    row8HashKey.VLR_POR = row4.VLR_POR_PROCESSADO ;
                        		    		
                        		    		    row8HashKey.DTAINI = row4.DTAINI ;
                        		    		
                        		    		    row8HashKey.DTAFIN = row4.DTAFIN ;
                        		    		
                        		    		    row8HashKey.DESCRICAO = row4.DESCRICAO ;
                        		    		

								
		                        	row8HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row8.lookup( row8HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_1 = true;
	  								
						
									
	
		  								forceLooprow8 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow8 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) || forceLooprow8) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row8'
									
                    		  	 
							   
                    		  	 
	       		  	    	row8Struct fromLookup_row8 = null;
							row8 = row8Default;
										 
							
								
								if(!forceLooprow8) { // G 46
								
							
								 
							
								
								fromLookup_row8 = tHash_Lookup_row8.next();

							

							if(fromLookup_row8 != null) {
								row8 = fromLookup_row8;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow8 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

Dw_insert = null;

if(!rejectedInnerJoin_tMap_1 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Dw_insert'
// # Filter conditions 
if( rejectedInnerJoin_tMap_1 ) {
Dw_insert_tmp.CD_PRODUTO = row4.CD_PRODUTO ;
Dw_insert_tmp.DT_CRIACAO = TalendDate.getCurrentDate();
Dw_insert_tmp.VLR_DE = row4.VLR_DE_PROCESSADO ;
Dw_insert_tmp.VLR_POR = row4.VLR_POR_PROCESSADO ;
Dw_insert_tmp.DTAINI = row4.DTAINI ;
Dw_insert_tmp.DTAFIN = row4.DTAFIN ;
Dw_insert_tmp.DESCRICAO = row4.DESCRICAO ;
Dw_insert_tmp.SITUACAO_PRODUTO = row4.SITUACAO_PRODUTO ;
Dw_insert_tmp.TIPO_LINHA = row4.TIPO_LINHA ;
Dw_insert_tmp.DT_ULTIMA_ATUALIZACAO_AUTCOM = row4.DT_ULTIMA_ATUALIZACAO_AUTCOM ;
Dw_insert_tmp.API = row4.API ;
Dw_insert_tmp.DT_INTEGRACAO = null;
Dw_insert_tmp.MENSAGEM = null;
Dw_insert = Dw_insert_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "Dw_insert"
if(Dw_insert != null) { 



	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Dw_insert"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_1 = new String[13];
   				
	    		if(Dw_insert.CD_PRODUTO != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(Dw_insert.CD_PRODUTO)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.DT_CRIACAO != null) { //              
                 row_tLogRow_1[1]=    						
								FormatterUtils.format_Date(Dw_insert.DT_CRIACAO, "yyyy-MM-dd hh:mm:ss")
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.VLR_DE != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(Dw_insert.VLR_DE)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.VLR_POR != null) { //              
                 row_tLogRow_1[3]=    						    
				                String.valueOf(Dw_insert.VLR_POR)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.DTAINI != null) { //              
                 row_tLogRow_1[4]=    						    
				                String.valueOf(Dw_insert.DTAINI)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.DTAFIN != null) { //              
                 row_tLogRow_1[5]=    						    
				                String.valueOf(Dw_insert.DTAFIN)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.DESCRICAO != null) { //              
                 row_tLogRow_1[6]=    						    
				                String.valueOf(Dw_insert.DESCRICAO)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.SITUACAO_PRODUTO != null) { //              
                 row_tLogRow_1[7]=    						    
				                String.valueOf(Dw_insert.SITUACAO_PRODUTO)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.TIPO_LINHA != null) { //              
                 row_tLogRow_1[8]=    						    
				                String.valueOf(Dw_insert.TIPO_LINHA)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.DT_ULTIMA_ATUALIZACAO_AUTCOM != null) { //              
                 row_tLogRow_1[9]=    						    
				                String.valueOf(Dw_insert.DT_ULTIMA_ATUALIZACAO_AUTCOM)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.API != null) { //              
                 row_tLogRow_1[10]=    						    
				                String.valueOf(Dw_insert.API)			
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.DT_INTEGRACAO != null) { //              
                 row_tLogRow_1[11]=    						
								FormatterUtils.format_Date(Dw_insert.DT_INTEGRACAO, "yyyy-MM-dd HH:mm:ss")
					          ;	
							
	    		} //			
    			   				
	    		if(Dw_insert.MENSAGEM != null) { //              
                 row_tLogRow_1[12]=    						    
				                String.valueOf(Dw_insert.MENSAGEM)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_1.addRow(row_tLogRow_1);	
				nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 
     row18 = Dw_insert;


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					



        whetherReject_tDBOutput_1 = false;
                    if(row18.CD_PRODUTO == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, row18.CD_PRODUTO);
}

                    if(row18.DT_CRIACAO != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(row18.DT_CRIACAO.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(row18.VLR_DE == null) {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(3, row18.VLR_DE);
}

                    if(row18.VLR_POR == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, row18.VLR_POR);
}

                    if(row18.DTAINI == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, row18.DTAINI);
}

                    if(row18.DTAFIN == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(6, row18.DTAFIN);
}

                    if(row18.DESCRICAO == null) {
pstmt_tDBOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(7, row18.DESCRICAO);
}

                    if(row18.SITUACAO_PRODUTO == null) {
pstmt_tDBOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(8, row18.SITUACAO_PRODUTO);
}

                    if(row18.TIPO_LINHA == null) {
pstmt_tDBOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(9, row18.TIPO_LINHA);
}

                    if(row18.DT_ULTIMA_ATUALIZACAO_AUTCOM == null) {
pstmt_tDBOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(10, row18.DT_ULTIMA_ATUALIZACAO_AUTCOM);
}

                    if(row18.API == null) {
pstmt_tDBOutput_1.setNull(11, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(11, row18.API);
}

                    if(row18.DT_INTEGRACAO != null) {
pstmt_tDBOutput_1.setTimestamp(12, new java.sql.Timestamp(row18.DT_INTEGRACAO.getTime()));
} else {
pstmt_tDBOutput_1.setNull(12, java.sql.Types.TIMESTAMP);
}

                    if(row18.MENSAGEM == null) {
pstmt_tDBOutput_1.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(13, row18.MENSAGEM);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */

} // End of branch "Dw_insert"



	
		} // close loop of lookup 'row8' // G_TM_M_043
	
	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row8 != null) {
						tHash_Lookup_row8.endGet();
					}
					globalMap.remove( "tHash_Lookup_row8" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_1 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    
                    consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
                    consoleOut_tLogRow_1.flush();
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Dw_insert");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row8"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				
			    public String MENSAGEM;

				public String getMENSAGEM () {
					return this.MENSAGEM;
				}

				public Boolean MENSAGEMIsNullable(){
				    return true;
				}
				public Boolean MENSAGEMIsKey(){
				    return false;
				}
				public Integer MENSAGEMLength(){
				    return null;
				}
				public Integer MENSAGEMPrecision(){
				    return null;
				}
				public String MENSAGEMDefault(){
				
					return null;
				
				}
				public String MENSAGEMComment(){
				
				    return "";
				
				}
				public String MENSAGEMPattern(){
				
					return "";
				
				}
				public String MENSAGEMOriginalDbColumnName(){
				
					return "MENSAGEM";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row6Struct other = (row6Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row6Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.DT_ULTIMA_ATUALIZACAO_AUTCOM = this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            other.MENSAGEM = this.MENSAGEM;
	            
	}

	public void copyKeysDataTo(row6Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
		sb.append(",MENSAGEM="+MENSAGEM);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Insert_DWStruct implements routines.system.IPersistableRow<Insert_DWStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				
			    public String MENSAGEM;

				public String getMENSAGEM () {
					return this.MENSAGEM;
				}

				public Boolean MENSAGEMIsNullable(){
				    return true;
				}
				public Boolean MENSAGEMIsKey(){
				    return false;
				}
				public Integer MENSAGEMLength(){
				    return null;
				}
				public Integer MENSAGEMPrecision(){
				    return null;
				}
				public String MENSAGEMDefault(){
				
					return null;
				
				}
				public String MENSAGEMComment(){
				
				    return "";
				
				}
				public String MENSAGEMPattern(){
				
					return "";
				
				}
				public String MENSAGEMOriginalDbColumnName(){
				
					return "MENSAGEM";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.DT_CRIACAO == null) ? 0 : this.DT_CRIACAO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
						result = prime * result + ((this.TIPO_LINHA == null) ? 0 : this.TIPO_LINHA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Insert_DWStruct other = (Insert_DWStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.DT_CRIACAO == null) {
							if (other.DT_CRIACAO != null)
								return false;
						
						} else if (!this.DT_CRIACAO.equals(other.DT_CRIACAO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					
						if (this.TIPO_LINHA == null) {
							if (other.TIPO_LINHA != null)
								return false;
						
						} else if (!this.TIPO_LINHA.equals(other.TIPO_LINHA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Insert_DWStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.DT_ULTIMA_ATUALIZACAO_AUTCOM = this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            other.MENSAGEM = this.MENSAGEM;
	            
	}

	public void copyKeysDataTo(Insert_DWStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.DT_CRIACAO = this.DT_CRIACAO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	other.TIPO_LINHA = this.TIPO_LINHA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_CRIACAO = readDate(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.TIPO_LINHA = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
					this.DT_INTEGRACAO = readDate(dis);
					
					this.MENSAGEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_CRIACAO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
					// java.util.Date
				
						writeDate(this.DT_INTEGRACAO,dos);
					
					// String
				
						writeString(this.MENSAGEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
		sb.append(",MENSAGEM="+MENSAGEM);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Insert_DWStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DT_CRIACAO, other.DT_CRIACAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LINHA, other.TIPO_LINHA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return null;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return null;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return null;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return null;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return null;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return null;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return null;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return null;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return null;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return null;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return null;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return null;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tDBInput_2Struct implements routines.system.IPersistableRow<after_tDBInput_2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return false;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return false;
				}
				public Integer VLR_DELength(){
				    return null;
				}
				public Integer VLR_DEPrecision(){
				    return null;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_DE_CALC;

				public String getVLR_DE_CALC () {
					return this.VLR_DE_CALC;
				}

				public Boolean VLR_DE_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_DE_CALCIsKey(){
				    return false;
				}
				public Integer VLR_DE_CALCLength(){
				    return null;
				}
				public Integer VLR_DE_CALCPrecision(){
				    return null;
				}
				public String VLR_DE_CALCDefault(){
				
					return null;
				
				}
				public String VLR_DE_CALCComment(){
				
				    return "";
				
				}
				public String VLR_DE_CALCPattern(){
				
					return "";
				
				}
				public String VLR_DE_CALCOriginalDbColumnName(){
				
					return "VLR_DE_CALC";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return false;
				}
				public Integer VLR_PORLength(){
				    return null;
				}
				public Integer VLR_PORPrecision(){
				    return null;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String VLR_POR_CALC;

				public String getVLR_POR_CALC () {
					return this.VLR_POR_CALC;
				}

				public Boolean VLR_POR_CALCIsNullable(){
				    return true;
				}
				public Boolean VLR_POR_CALCIsKey(){
				    return false;
				}
				public Integer VLR_POR_CALCLength(){
				    return null;
				}
				public Integer VLR_POR_CALCPrecision(){
				    return null;
				}
				public String VLR_POR_CALCDefault(){
				
					return null;
				
				}
				public String VLR_POR_CALCComment(){
				
				    return "";
				
				}
				public String VLR_POR_CALCPattern(){
				
					return "";
				
				}
				public String VLR_POR_CALCOriginalDbColumnName(){
				
					return "VLR_POR_CALC";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return false;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return false;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String DT_ULTIMA_ATUALIZACAO_AUTCOM;

				public String getDT_ULTIMA_ATUALIZACAO_AUTCOM () {
					return this.DT_ULTIMA_ATUALIZACAO_AUTCOM;
				}

				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_ATUALIZACAO_AUTCOMIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMLength(){
				    return null;
				}
				public Integer DT_ULTIMA_ATUALIZACAO_AUTCOMPrecision(){
				    return null;
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMDefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMPattern(){
				
					return "";
				
				}
				public String DT_ULTIMA_ATUALIZACAO_AUTCOMOriginalDbColumnName(){
				
					return "DT_ULTIMA_ATUALIZACAO_AUTCOM";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.TIPO_LINHA = readString(dis);
					
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_DE_CALC = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.VLR_POR_CALC = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.SITUACAO_PRODUTO = readString(dis);
					
					this.DT_ULTIMA_ATUALIZACAO_AUTCOM = readString(dis);
					
						this.API = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_LINHA,dos);
					
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_DE_CALC,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.VLR_POR_CALC,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.SITUACAO_PRODUTO,dos);
					
					// String
				
						writeString(this.DT_ULTIMA_ATUALIZACAO_AUTCOM,dos);
					
					// Integer
				
						writeInteger(this.API,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_LINHA="+TIPO_LINHA);
		sb.append(",CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_DE_CALC="+VLR_DE_CALC);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",VLR_POR_CALC="+VLR_POR_CALC);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",DT_ULTIMA_ATUALIZACAO_AUTCOM="+DT_ULTIMA_ATUALIZACAO_AUTCOM);
		sb.append(",API="+String.valueOf(API));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tDBInput_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);

		row12Struct row12 = new row12Struct();
row3Struct row3 = new row3Struct();
row14Struct row14 = new row14Struct();
Insert_DWStruct Insert_DW = new Insert_DWStruct();
Insert_DWStruct row6 = Insert_DW;








	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





String dbschema_tDBOutput_4 = null;
	dbschema_tDBOutput_4 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_4 = null;
if(dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
	tableName_tDBOutput_4 = ("product_promotion").toLowerCase();
} else {
	tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "\".\"" + ("product_promotion").toLowerCase();
}


int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;
int rowsToCommitCount_tDBOutput_4=0;
int rejectedCount_tDBOutput_4=0;

boolean whetherReject_tDBOutput_4 = false;

java.sql.Connection conn_tDBOutput_4 = null;
String dbUser_tDBOutput_4 = null;

	conn_tDBOutput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_4=0;
        java.lang.StringBuilder sb_tDBOutput_4 = new java.lang.StringBuilder();
        sb_tDBOutput_4.append("INSERT INTO \"").append(tableName_tDBOutput_4).append("\" (\"cd_produto\",\"dt_criacao\",\"vlr_de\",\"vlr_por\",\"dtaini\",\"dtafin\",\"descricao\",\"situacao_produto\",\"tipo_linha\",\"dt_ultima_atualizacao_autcom\",\"api\",\"dt_integracao\",\"mensagem\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_4 = sb_tDBOutput_4.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(insert_tDBOutput_4);
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tLogRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_2", false);
		start_Hash.put("tLogRow_2", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Insert_DW");
					}
				
		int tos_count_tLogRow_2 = 0;
		

	///////////////////////
	
         class Util_tLogRow_2 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[13];

        public void addRow(String[] row) {

            for (int i = 0; i < 13; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 12 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 12 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%3$-");
        			        sbformat.append(colLengths[2]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%4$-");
        			        sbformat.append(colLengths[3]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%5$-");
        			        sbformat.append(colLengths[4]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%6$-");
        			        sbformat.append(colLengths[5]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%7$-");
        			        sbformat.append(colLengths[6]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%8$-");
        			        sbformat.append(colLengths[7]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%9$-");
        			        sbformat.append(colLengths[8]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%10$-");
        			        sbformat.append(colLengths[9]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%11$-");
        			        sbformat.append(colLengths[10]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%12$-");
        			        sbformat.append(colLengths[11]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%13$-");
        			        sbformat.append(colLengths[12]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                    for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[9] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[10] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[11] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                
                    //last column
                    for (int i = 0; i < colLengths[12] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_2 util_tLogRow_2 = new Util_tLogRow_2();
        util_tLogRow_2.setTableName("tLogRow_2");
        util_tLogRow_2.addRow(new String[]{"CD_PRODUTO","DT_CRIACAO","VLR_DE","VLR_POR","DTAINI","DTAFIN","DESCRICAO","SITUACAO_PRODUTO","TIPO_LINHA","DT_ULTIMA_ATUALIZACAO_AUTCOM","API","DT_INTEGRACAO","MENSAGEM",});        
 		StringBuilder strBuffer_tLogRow_2 = null;
		int nb_line_tLogRow_2 = 0;
///////////////////////    			



 



/**
 * [tLogRow_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
Insert_DWStruct Insert_DW_tmp = new Insert_DWStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String CD_PRODUTO;
					String DESCRICAO;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
								
								result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.CD_PRODUTO == null) {
										if (other.CD_PRODUTO != null) 
											return false;
								
									} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
								 
										return false;
								
									if (this.DESCRICAO == null) {
										if (other.DESCRICAO != null) 
											return false;
								
									} else if (!this.DESCRICAO.equals(other.DESCRICAO))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT 'REMOVIDO' AS TIPO_LINHA, B.IPR_CODITE CD_PRODUTO,\n                    '__EMPTY__VALUE__' VLR_DE,\n            "
+"        '__EMPTY__VALUE__' VLR_DE_CALC,\n                    '__EMPTY__VALUE__' VLR_POR,\n                    '__EMPTY__"
+"VALUE__' VLR_POR_CALC,\n                    '__EMPTY__VALUE__' DTAINI,\n                    '__EMPTY__VALUE__' DTAFIN,\n"
+"                    CONCAT_WS('-',A.PRO_CODPRO,A.PRO_DESPRO) DESCRICAO,\n                    IFNULL(E.ITE_SITPRO,0) SITU"
+"ACAO_PRODUTO,\n                    A.PRO_ULTALT,\n                    A.PRO_HULALT\n      FROM CADPRO A\n     INNER JOIN"
+" DEL_ITEPRO B ON A.AUTOINCREM = B.IPR_SEQGER\n     INNER JOIN PROEMP C ON A.AUTOINCREM = C.PRO_SEQGER AND C.PRO_CODEMP ="
+" '001'\n     INNER JOIN CADITE D ON B.IPR_CODITE = D.ITE_CODITE\n     INNER JOIN ITEGER E ON B.IPR_CODITE = E.ITE_CODITE"
+" AND E.ITE_CODEMP = '001'\n  WHERE (A.PRO_DTAFIN >= SUBDATE(CURDATE(), 2) AND A.PRO_DTAFIN <= SUBDATE(CURDATE(), 1)) OR "
+"A.PRO_ULTALT >= SUBDATE(CURDATE(), 1)\n         AND A.PRO_ECOMME = 'S'\n         AND D.ITE_EXPSIT = 'S'\n-- and B.IPR_CO"
+"DITE in ('75716','87148')\nUNION ALL  \nSELECT 'EXPIRADA' AS TIPO_LINHA,\n                  B.IPR_CODITE CD_PRODUTO,\n  "
+"                '__EMPTY__VALUE__' VLR_DE,\n                  '__EMPTY__VALUE__' VLR_DE_CALC,\n                  '__EMPT"
+"Y__VALUE__' VLR_POR,\n                  '__EMPTY__VALUE__' VLR_POR_CALC,\n                  '__EMPTY__VALUE__' DTAINI,\n"
+"                  '__EMPTY__VALUE__' DTAFIN,\n                  CONCAT_WS('-',A.PRO_CODPRO,A.PRO_DESPRO) DESCRICAO,  \n "
+"                 IFNULL(E.ITE_SITPRO,0) SITUACAO_PRODUTO,\n                  A.PRO_ULTALT, \n                  A.PRO_HUL"
+"ALT\n    FROM CADPRO A\n   INNER JOIN ITEPRO B ON A.AUTOINCREM = B.IPR_SEQGER\n   INNER JOIN PROEMP C ON A.AUTOINCREM = "
+"C.PRO_SEQGER AND C.PRO_CODEMP = '001'\n   INNER JOIN CADITE D ON B.IPR_CODITE = D.ITE_CODITE\n   INNER JOIN ITEGER E ON "
+"B.IPR_CODITE = E.ITE_CODITE AND E.ITE_CODEMP = '001'\nWHERE (A.PRO_DTAFIN >= SUBDATE(CURDATE(), 2) AND A.PRO_DTAFIN <= S"
+"UBDATE(CURDATE(), 1))\n        AND A.PRO_ECOMME = 'S'\n        AND D.ITE_EXPSIT = 'S'\n-- and B.IPR_CODITE in ('75716','"
+"87148')\n";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row12.TIPO_LINHA = null;
							} else {
	                         		
        	row12.TIPO_LINHA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row12.CD_PRODUTO = null;
							} else {
	                         		
        	row12.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row12.VLR_DE = null;
							} else {
	                         		
        	row12.VLR_DE = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row12.VLR_DE_CALC = null;
							} else {
	                         		
        	row12.VLR_DE_CALC = routines.system.JDBCUtil.getString(rs_tDBInput_2, 4, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 5) {
								row12.VLR_POR = null;
							} else {
	                         		
        	row12.VLR_POR = routines.system.JDBCUtil.getString(rs_tDBInput_2, 5, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 6) {
								row12.VLR_POR_CALC = null;
							} else {
	                         		
        	row12.VLR_POR_CALC = routines.system.JDBCUtil.getString(rs_tDBInput_2, 6, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 7) {
								row12.DTAINI = null;
							} else {
	                         		
        	row12.DTAINI = routines.system.JDBCUtil.getString(rs_tDBInput_2, 7, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 8) {
								row12.DTAFIN = null;
							} else {
	                         		
        	row12.DTAFIN = routines.system.JDBCUtil.getString(rs_tDBInput_2, 8, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 9) {
								row12.DESCRICAO = null;
							} else {
	                         		
        	row12.DESCRICAO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 9, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 10) {
								row12.SITUACAO_PRODUTO = null;
							} else {
	                         		
        	row12.SITUACAO_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 10, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 11) {
								row12.DT_ULTIMA_ATUALIZACAO_AUTCOM = null;
							} else {
	                         		
        	row12.DT_ULTIMA_ATUALIZACAO_AUTCOM = routines.system.JDBCUtil.getString(rs_tDBInput_2, 11, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 12) {
								row12.API = null;
							} else {
		                          
            row12.API = rs_tDBInput_2.getInt(12);
            if(rs_tDBInput_2.wasNull()){
                    row12.API = null;
            }
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					
row3 = null;			
if(row12.CD_PRODUTO == null){
	finder_tUniqRow_1.CD_PRODUTO = null;
}else{
	finder_tUniqRow_1.CD_PRODUTO = row12.CD_PRODUTO.toLowerCase();
}
if(row12.DESCRICAO == null){
	finder_tUniqRow_1.DESCRICAO = null;
}else{
	finder_tUniqRow_1.DESCRICAO = row12.DESCRICAO.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(row12.CD_PRODUTO == null){
	new_tUniqRow_1.CD_PRODUTO = null;
}else{
	new_tUniqRow_1.CD_PRODUTO = row12.CD_PRODUTO.toLowerCase();
}
if(row12.DESCRICAO == null){
	new_tUniqRow_1.DESCRICAO = null;
}else{
	new_tUniqRow_1.DESCRICAO = row12.DESCRICAO.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row3 == null){ 
	
	row3 = new row3Struct();
}row3.TIPO_LINHA = row12.TIPO_LINHA;			row3.CD_PRODUTO = row12.CD_PRODUTO;			row3.VLR_DE = row12.VLR_DE;			row3.VLR_DE_CALC = row12.VLR_DE_CALC;			row3.VLR_POR = row12.VLR_POR;			row3.VLR_POR_CALC = row12.VLR_POR_CALC;			row3.DTAINI = row12.DTAINI;			row3.DTAFIN = row12.DTAFIN;			row3.DESCRICAO = row12.DESCRICAO;			row3.SITUACAO_PRODUTO = row12.SITUACAO_PRODUTO;			row3.DT_ULTIMA_ATUALIZACAO_AUTCOM = row12.DT_ULTIMA_ATUALIZACAO_AUTCOM;			row3.API = row12.API;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row14.TIPO_LINHA = row3.TIPO_LINHA;
row14.CD_PRODUTO = row3.CD_PRODUTO;
row14.VLR_DE = row3.VLR_DE;
row14.VLR_DE_CALC = row3.VLR_DE_CALC;
row14.VLR_POR = row3.VLR_POR;
row14.VLR_POR_CALC = row3.VLR_POR_CALC;
row14.DTAINI = row3.DTAINI;
row14.DTAFIN = row3.DTAFIN;
row14.DESCRICAO = row3.DESCRICAO;
row14.SITUACAO_PRODUTO = row3.SITUACAO_PRODUTO;
row14.DT_ULTIMA_ATUALIZACAO_AUTCOM = row3.DT_ULTIMA_ATUALIZACAO_AUTCOM;
row14.API = row3.API;

    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row13HashKey.CD_PRODUTO = row14.CD_PRODUTO ;
                        		    		
                        		    		    row13HashKey.VLR_DE = row14.VLR_DE;
                        		    		
                        		    		    row13HashKey.VLR_POR = row14.VLR_POR;
                        		    		
                        		    		    row13HashKey.DTAINI = row14.DTAINI;
                        		    		
                        		    		    row13HashKey.DTAFIN = row14.DTAFIN;
                        		    		
                        		    		    row13HashKey.DESCRICAO = row14.DESCRICAO ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row13.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_2 = true;
	  								
						
									
	
		  								forceLooprow13 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow13 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row13 != null && tHash_Lookup_row13.hasNext()) || forceLooprow13) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row13'
									
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								
								if(!forceLooprow13) { // G 46
								
							
								 
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow13 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

Insert_DW = null;

if(!rejectedInnerJoin_tMap_2 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Insert_DW'
// # Filter conditions 
if( rejectedInnerJoin_tMap_2 ) {
Insert_DW_tmp.CD_PRODUTO = row14.CD_PRODUTO;
Insert_DW_tmp.DT_CRIACAO = TalendDate.getCurrentDate();
Insert_DW_tmp.VLR_DE = "__EMPTY__VALUE__";
Insert_DW_tmp.VLR_POR = "__EMPTY__VALUE__";
Insert_DW_tmp.DTAINI = "__EMPTY__VALUE__";
Insert_DW_tmp.DTAFIN = "__EMPTY__VALUE__";
Insert_DW_tmp.DESCRICAO = row14.DESCRICAO;
Insert_DW_tmp.SITUACAO_PRODUTO = row14.SITUACAO_PRODUTO;
Insert_DW_tmp.TIPO_LINHA = row14.TIPO_LINHA ;
Insert_DW_tmp.DT_ULTIMA_ATUALIZACAO_AUTCOM = row14.DT_ULTIMA_ATUALIZACAO_AUTCOM ;
Insert_DW_tmp.API = 100;
Insert_DW_tmp.DT_INTEGRACAO = null;
Insert_DW_tmp.MENSAGEM = null;
Insert_DW = Insert_DW_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "Insert_DW"
if(Insert_DW != null) { 



	
	/**
	 * [tLogRow_2 main ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Insert_DW"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_2 = new String[13];
   				
	    		if(Insert_DW.CD_PRODUTO != null) { //              
                 row_tLogRow_2[0]=    						    
				                String.valueOf(Insert_DW.CD_PRODUTO)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.DT_CRIACAO != null) { //              
                 row_tLogRow_2[1]=    						
								FormatterUtils.format_Date(Insert_DW.DT_CRIACAO, "dd-MM-yyyy hh:mm:ss")
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.VLR_DE != null) { //              
                 row_tLogRow_2[2]=    						    
				                String.valueOf(Insert_DW.VLR_DE)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.VLR_POR != null) { //              
                 row_tLogRow_2[3]=    						    
				                String.valueOf(Insert_DW.VLR_POR)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.DTAINI != null) { //              
                 row_tLogRow_2[4]=    						    
				                String.valueOf(Insert_DW.DTAINI)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.DTAFIN != null) { //              
                 row_tLogRow_2[5]=    						    
				                String.valueOf(Insert_DW.DTAFIN)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.DESCRICAO != null) { //              
                 row_tLogRow_2[6]=    						    
				                String.valueOf(Insert_DW.DESCRICAO)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.SITUACAO_PRODUTO != null) { //              
                 row_tLogRow_2[7]=    						    
				                String.valueOf(Insert_DW.SITUACAO_PRODUTO)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.TIPO_LINHA != null) { //              
                 row_tLogRow_2[8]=    						    
				                String.valueOf(Insert_DW.TIPO_LINHA)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.DT_ULTIMA_ATUALIZACAO_AUTCOM != null) { //              
                 row_tLogRow_2[9]=    						    
				                String.valueOf(Insert_DW.DT_ULTIMA_ATUALIZACAO_AUTCOM)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.API != null) { //              
                 row_tLogRow_2[10]=    						    
				                String.valueOf(Insert_DW.API)			
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.DT_INTEGRACAO != null) { //              
                 row_tLogRow_2[11]=    						
								FormatterUtils.format_Date(Insert_DW.DT_INTEGRACAO, "yyyy-MM-dd HH:mm:ss")
					          ;	
							
	    		} //			
    			   				
	    		if(Insert_DW.MENSAGEM != null) { //              
                 row_tLogRow_2[12]=    						    
				                String.valueOf(Insert_DW.MENSAGEM)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_2.addRow(row_tLogRow_2);	
				nb_line_tLogRow_2++;
//////

//////                    
                    
///////////////////////    			

 
     row6 = Insert_DW;


	tos_count_tLogRow_2++;

/**
 * [tLogRow_2 main ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(row6.CD_PRODUTO == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, row6.CD_PRODUTO);
}

                    if(row6.DT_CRIACAO != null) {
pstmt_tDBOutput_4.setTimestamp(2, new java.sql.Timestamp(row6.DT_CRIACAO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(row6.VLR_DE == null) {
pstmt_tDBOutput_4.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(3, row6.VLR_DE);
}

                    if(row6.VLR_POR == null) {
pstmt_tDBOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(4, row6.VLR_POR);
}

                    if(row6.DTAINI == null) {
pstmt_tDBOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(5, row6.DTAINI);
}

                    if(row6.DTAFIN == null) {
pstmt_tDBOutput_4.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(6, row6.DTAFIN);
}

                    if(row6.DESCRICAO == null) {
pstmt_tDBOutput_4.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(7, row6.DESCRICAO);
}

                    if(row6.SITUACAO_PRODUTO == null) {
pstmt_tDBOutput_4.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(8, row6.SITUACAO_PRODUTO);
}

                    if(row6.TIPO_LINHA == null) {
pstmt_tDBOutput_4.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(9, row6.TIPO_LINHA);
}

                    if(row6.DT_ULTIMA_ATUALIZACAO_AUTCOM == null) {
pstmt_tDBOutput_4.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(10, row6.DT_ULTIMA_ATUALIZACAO_AUTCOM);
}

                    if(row6.API == null) {
pstmt_tDBOutput_4.setNull(11, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(11, row6.API);
}

                    if(row6.DT_INTEGRACAO != null) {
pstmt_tDBOutput_4.setTimestamp(12, new java.sql.Timestamp(row6.DT_INTEGRACAO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(12, java.sql.Types.TIMESTAMP);
}

                    if(row6.MENSAGEM == null) {
pstmt_tDBOutput_4.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(13, row6.MENSAGEM);
}

			
            try {
                nb_line_tDBOutput_4++;
				
                int processedCount_tDBOutput_4 = pstmt_tDBOutput_4.executeUpdate();
                insertedCount_tDBOutput_4 += processedCount_tDBOutput_4;
                rowsToCommitCount_tDBOutput_4 += processedCount_tDBOutput_4;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_4 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tLogRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_end ] stop
 */

} // End of branch "Insert_DW"



	
		} // close loop of lookup 'row13' // G_TM_M_043
	
	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tLogRow_2 end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_2 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_2 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_2);
                    }
                    
                    consoleOut_tLogRow_2.println(util_tLogRow_2.format().toString());
                    consoleOut_tLogRow_2.flush();
//////
globalMap.put("tLogRow_2_NB_LINE",nb_line_tLogRow_2);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Insert_DW");
			  	}
			  	
 

ok_Hash.put("tLogRow_2", true);
end_Hash.put("tLogRow_2", System.currentTimeMillis());




/**
 * [tLogRow_2 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



        if(pstmt_tDBOutput_4 != null) {
        		
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());




/**
 * [tDBOutput_4 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tLogRow_2 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_3 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_3=0;
	    String update_tDBOutput_3 = "UPDATE \"" + tableName_tDBOutput_3 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row16Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row16Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row17.nm_programa = next_tHashInput_4.nm_programa;
	row17.data_inicio_execucao = next_tHashInput_4.data_inicio_execucao;
	row17.data_termino_execucao = next_tHashInput_4.data_termino_execucao;
	row17.mensagem = next_tHashInput_4.mensagem;
	row17.uuid = next_tHashInput_4.uuid;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row17.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row17.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_3.setNull(5 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5 + count_tDBOutput_3, update_log.uuid);
}


            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                updatedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
		
			conn_tDBClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tDBClose_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_3", false);
		start_Hash.put("tDBClose_3", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_3";
	
	
		int tos_count_tDBClose_3 = 0;
		

 



/**
 * [tDBClose_3 begin ] stop
 */
	
	/**
	 * [tDBClose_3 main ] start
	 */

	

	
	
	currentComponent="tDBClose_3";
	
	



	java.sql.Connection conn_tDBClose_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	if(conn_tDBClose_3 != null && !conn_tDBClose_3.isClosed())
	{
        conn_tDBClose_3.close();
	}

 


	tos_count_tDBClose_3++;

/**
 * [tDBClose_3 main ] stop
 */
	
	/**
	 * [tDBClose_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_3";
	
	

 



/**
 * [tDBClose_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_3";
	
	

 



/**
 * [tDBClose_3 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_3 end ] start
	 */

	

	
	
	currentComponent="tDBClose_3";
	
	

 

ok_Hash.put("tDBClose_3", true);
end_Hash.put("tDBClose_3", System.currentTimeMillis());




/**
 * [tDBClose_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_3 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_3";
	
	

 



/**
 * [tDBClose_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_3_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return 16;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return 16;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DT_CRIACAO = readDate(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
						this.TIPO_LINHA = readString(dis,ois);
					
						this.API = readInteger(dis,ois);
					
						this.DT_INTEGRACAO = readDate(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DT_CRIACAO = readDate(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
						this.TIPO_LINHA = readString(dis,objectIn);
					
						this.API = readInteger(dis,objectIn);
					
						this.DT_INTEGRACAO = readDate(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeDate(this.DT_CRIACAO, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
						writeString(this.TIPO_LINHA, dos, oos);
					
					writeInteger(this.API, dos, oos);
					
						writeDate(this.DT_INTEGRACAO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeDate(this.DT_CRIACAO, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
						writeString(this.TIPO_LINHA, dos, objectOut);
					
					writeInteger(this.API, dos, objectOut);
					
						writeDate(this.DT_INTEGRACAO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tAdvancedHash_row8 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row8", false);
		start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAdvancedHash_row8 = 0;
		

			   		// connection name:row8
			   		// source node:tHashInput_2 - inputs:(after_tHashInput_1) outputs:(row8,row8) | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
			   		// linked node: tMap_1 - inputs:(row4,row8) outputs:(Dw_insert)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row8Struct>getLookup(matchingModeEnum_row8);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row8 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row10Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row8.CD_PRODUTO = next_tHashInput_2.CD_PRODUTO;
	row8.DT_CRIACAO = next_tHashInput_2.DT_CRIACAO;
	row8.VLR_DE = next_tHashInput_2.VLR_DE;
	row8.VLR_POR = next_tHashInput_2.VLR_POR;
	row8.DTAINI = next_tHashInput_2.DTAINI;
	row8.DTAFIN = next_tHashInput_2.DTAFIN;
	row8.DESCRICAO = next_tHashInput_2.DESCRICAO;
	row8.SITUACAO_PRODUTO = next_tHashInput_2.SITUACAO_PRODUTO;
	row8.TIPO_LINHA = next_tHashInput_2.TIPO_LINHA;
	row8.API = next_tHashInput_2.API;
	row8.DT_INTEGRACAO = next_tHashInput_2.DT_INTEGRACAO;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					


			   
			   

					row8Struct row8_HashRow = new row8Struct();
		   	   	   
				
				row8_HashRow.CD_PRODUTO = row8.CD_PRODUTO;
				
				row8_HashRow.DT_CRIACAO = row8.DT_CRIACAO;
				
				row8_HashRow.VLR_DE = row8.VLR_DE;
				
				row8_HashRow.VLR_POR = row8.VLR_POR;
				
				row8_HashRow.DTAINI = row8.DTAINI;
				
				row8_HashRow.DTAFIN = row8.DTAFIN;
				
				row8_HashRow.DESCRICAO = row8.DESCRICAO;
				
				row8_HashRow.SITUACAO_PRODUTO = row8.SITUACAO_PRODUTO;
				
				row8_HashRow.TIPO_LINHA = row8.TIPO_LINHA;
				
				row8_HashRow.API = row8.API;
				
				row8_HashRow.DT_INTEGRACAO = row8.DT_INTEGRACAO;
				
			tHash_Lookup_row8.put(row8_HashRow);
			
            




 


	tos_count_tAdvancedHash_row8++;

/**
 * [tAdvancedHash_row8 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

tHash_Lookup_row8.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row8", true);
end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());




/**
 * [tAdvancedHash_row8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_CRIACAO;

				public java.util.Date getDT_CRIACAO () {
					return this.DT_CRIACAO;
				}

				public Boolean DT_CRIACAOIsNullable(){
				    return true;
				}
				public Boolean DT_CRIACAOIsKey(){
				    return true;
				}
				public Integer DT_CRIACAOLength(){
				    return null;
				}
				public Integer DT_CRIACAOPrecision(){
				    return null;
				}
				public String DT_CRIACAODefault(){
				
					return null;
				
				}
				public String DT_CRIACAOComment(){
				
				    return "";
				
				}
				public String DT_CRIACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_CRIACAOOriginalDbColumnName(){
				
					return "DT_CRIACAO";
				
				}

				
			    public String VLR_DE;

				public String getVLR_DE () {
					return this.VLR_DE;
				}

				public Boolean VLR_DEIsNullable(){
				    return true;
				}
				public Boolean VLR_DEIsKey(){
				    return true;
				}
				public Integer VLR_DELength(){
				    return 16;
				}
				public Integer VLR_DEPrecision(){
				    return 2;
				}
				public String VLR_DEDefault(){
				
					return null;
				
				}
				public String VLR_DEComment(){
				
				    return "";
				
				}
				public String VLR_DEPattern(){
				
					return "";
				
				}
				public String VLR_DEOriginalDbColumnName(){
				
					return "VLR_DE";
				
				}

				
			    public String VLR_POR;

				public String getVLR_POR () {
					return this.VLR_POR;
				}

				public Boolean VLR_PORIsNullable(){
				    return true;
				}
				public Boolean VLR_PORIsKey(){
				    return true;
				}
				public Integer VLR_PORLength(){
				    return 16;
				}
				public Integer VLR_PORPrecision(){
				    return 2;
				}
				public String VLR_PORDefault(){
				
					return null;
				
				}
				public String VLR_PORComment(){
				
				    return "";
				
				}
				public String VLR_PORPattern(){
				
					return "";
				
				}
				public String VLR_POROriginalDbColumnName(){
				
					return "VLR_POR";
				
				}

				
			    public String DTAINI;

				public String getDTAINI () {
					return this.DTAINI;
				}

				public Boolean DTAINIIsNullable(){
				    return true;
				}
				public Boolean DTAINIIsKey(){
				    return true;
				}
				public Integer DTAINILength(){
				    return null;
				}
				public Integer DTAINIPrecision(){
				    return null;
				}
				public String DTAINIDefault(){
				
					return null;
				
				}
				public String DTAINIComment(){
				
				    return "";
				
				}
				public String DTAINIPattern(){
				
					return "";
				
				}
				public String DTAINIOriginalDbColumnName(){
				
					return "DTAINI";
				
				}

				
			    public String DTAFIN;

				public String getDTAFIN () {
					return this.DTAFIN;
				}

				public Boolean DTAFINIsNullable(){
				    return true;
				}
				public Boolean DTAFINIsKey(){
				    return true;
				}
				public Integer DTAFINLength(){
				    return null;
				}
				public Integer DTAFINPrecision(){
				    return null;
				}
				public String DTAFINDefault(){
				
					return null;
				
				}
				public String DTAFINComment(){
				
				    return "";
				
				}
				public String DTAFINPattern(){
				
					return "";
				
				}
				public String DTAFINOriginalDbColumnName(){
				
					return "DTAFIN";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return true;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String SITUACAO_PRODUTO;

				public String getSITUACAO_PRODUTO () {
					return this.SITUACAO_PRODUTO;
				}

				public Boolean SITUACAO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SITUACAO_PRODUTOIsKey(){
				    return false;
				}
				public Integer SITUACAO_PRODUTOLength(){
				    return null;
				}
				public Integer SITUACAO_PRODUTOPrecision(){
				    return null;
				}
				public String SITUACAO_PRODUTODefault(){
				
					return null;
				
				}
				public String SITUACAO_PRODUTOComment(){
				
				    return "";
				
				}
				public String SITUACAO_PRODUTOPattern(){
				
					return "";
				
				}
				public String SITUACAO_PRODUTOOriginalDbColumnName(){
				
					return "SITUACAO_PRODUTO";
				
				}

				
			    public String TIPO_LINHA;

				public String getTIPO_LINHA () {
					return this.TIPO_LINHA;
				}

				public Boolean TIPO_LINHAIsNullable(){
				    return true;
				}
				public Boolean TIPO_LINHAIsKey(){
				    return true;
				}
				public Integer TIPO_LINHALength(){
				    return null;
				}
				public Integer TIPO_LINHAPrecision(){
				    return null;
				}
				public String TIPO_LINHADefault(){
				
					return null;
				
				}
				public String TIPO_LINHAComment(){
				
				    return "";
				
				}
				public String TIPO_LINHAPattern(){
				
					return "";
				
				}
				public String TIPO_LINHAOriginalDbColumnName(){
				
					return "TIPO_LINHA";
				
				}

				
			    public Integer API;

				public Integer getAPI () {
					return this.API;
				}

				public Boolean APIIsNullable(){
				    return true;
				}
				public Boolean APIIsKey(){
				    return false;
				}
				public Integer APILength(){
				    return null;
				}
				public Integer APIPrecision(){
				    return null;
				}
				public String APIDefault(){
				
					return null;
				
				}
				public String APIComment(){
				
				    return "";
				
				}
				public String APIPattern(){
				
					return "";
				
				}
				public String APIOriginalDbColumnName(){
				
					return "API";
				
				}

				
			    public java.util.Date DT_INTEGRACAO;

				public java.util.Date getDT_INTEGRACAO () {
					return this.DT_INTEGRACAO;
				}

				public Boolean DT_INTEGRACAOIsNullable(){
				    return true;
				}
				public Boolean DT_INTEGRACAOIsKey(){
				    return false;
				}
				public Integer DT_INTEGRACAOLength(){
				    return null;
				}
				public Integer DT_INTEGRACAOPrecision(){
				    return null;
				}
				public String DT_INTEGRACAODefault(){
				
					return null;
				
				}
				public String DT_INTEGRACAOComment(){
				
				    return "";
				
				}
				public String DT_INTEGRACAOPattern(){
				
					return "dd-MM-yyyy hh:mm:ss";
				
				}
				public String DT_INTEGRACAOOriginalDbColumnName(){
				
					return "DT_INTEGRACAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VLR_DE == null) ? 0 : this.VLR_DE.hashCode());
					
						result = prime * result + ((this.VLR_POR == null) ? 0 : this.VLR_POR.hashCode());
					
						result = prime * result + ((this.DTAINI == null) ? 0 : this.DTAINI.hashCode());
					
						result = prime * result + ((this.DTAFIN == null) ? 0 : this.DTAFIN.hashCode());
					
						result = prime * result + ((this.DESCRICAO == null) ? 0 : this.DESCRICAO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VLR_DE == null) {
							if (other.VLR_DE != null)
								return false;
						
						} else if (!this.VLR_DE.equals(other.VLR_DE))
						
							return false;
					
						if (this.VLR_POR == null) {
							if (other.VLR_POR != null)
								return false;
						
						} else if (!this.VLR_POR.equals(other.VLR_POR))
						
							return false;
					
						if (this.DTAINI == null) {
							if (other.DTAINI != null)
								return false;
						
						} else if (!this.DTAINI.equals(other.DTAINI))
						
							return false;
					
						if (this.DTAFIN == null) {
							if (other.DTAFIN != null)
								return false;
						
						} else if (!this.DTAFIN.equals(other.DTAFIN))
						
							return false;
					
						if (this.DESCRICAO == null) {
							if (other.DESCRICAO != null)
								return false;
						
						} else if (!this.DESCRICAO.equals(other.DESCRICAO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_CRIACAO = this.DT_CRIACAO;
	            other.VLR_DE = this.VLR_DE;
	            other.VLR_POR = this.VLR_POR;
	            other.DTAINI = this.DTAINI;
	            other.DTAFIN = this.DTAFIN;
	            other.DESCRICAO = this.DESCRICAO;
	            other.SITUACAO_PRODUTO = this.SITUACAO_PRODUTO;
	            other.TIPO_LINHA = this.TIPO_LINHA;
	            other.API = this.API;
	            other.DT_INTEGRACAO = this.DT_INTEGRACAO;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VLR_DE = this.VLR_DE;
	            	other.VLR_POR = this.VLR_POR;
	            	other.DTAINI = this.DTAINI;
	            	other.DTAFIN = this.DTAFIN;
	            	other.DESCRICAO = this.DESCRICAO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_product_promotion, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_product_promotion) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.VLR_DE = readString(dis);
					
					this.VLR_POR = readString(dis);
					
					this.DTAINI = readString(dis);
					
					this.DTAFIN = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.VLR_DE,dos);
					
					// String
				
						writeString(this.VLR_POR,dos);
					
					// String
				
						writeString(this.DTAINI,dos);
					
					// String
				
						writeString(this.DTAFIN,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DT_CRIACAO = readDate(dis,ois);
					
						this.SITUACAO_PRODUTO = readString(dis,ois);
					
						this.TIPO_LINHA = readString(dis,ois);
					
						this.API = readInteger(dis,ois);
					
						this.DT_INTEGRACAO = readDate(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DT_CRIACAO = readDate(dis,objectIn);
					
						this.SITUACAO_PRODUTO = readString(dis,objectIn);
					
						this.TIPO_LINHA = readString(dis,objectIn);
					
						this.API = readInteger(dis,objectIn);
					
						this.DT_INTEGRACAO = readDate(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeDate(this.DT_CRIACAO, dos, oos);
					
						writeString(this.SITUACAO_PRODUTO, dos, oos);
					
						writeString(this.TIPO_LINHA, dos, oos);
					
					writeInteger(this.API, dos, oos);
					
						writeDate(this.DT_INTEGRACAO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeDate(this.DT_CRIACAO, dos, objectOut);
					
						writeString(this.SITUACAO_PRODUTO, dos, objectOut);
					
						writeString(this.TIPO_LINHA, dos, objectOut);
					
					writeInteger(this.API, dos, objectOut);
					
						writeDate(this.DT_INTEGRACAO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_CRIACAO="+String.valueOf(DT_CRIACAO));
		sb.append(",VLR_DE="+VLR_DE);
		sb.append(",VLR_POR="+VLR_POR);
		sb.append(",DTAINI="+DTAINI);
		sb.append(",DTAFIN="+DTAFIN);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",SITUACAO_PRODUTO="+SITUACAO_PRODUTO);
		sb.append(",TIPO_LINHA="+TIPO_LINHA);
		sb.append(",API="+String.valueOf(API));
		sb.append(",DT_INTEGRACAO="+String.valueOf(DT_INTEGRACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_DE, other.VLR_DE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VLR_POR, other.VLR_POR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAINI, other.DTAINI);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DTAFIN, other.DTAFIN);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCRICAO, other.DESCRICAO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tHashInput_3 - inputs:(after_tDBInput_2) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_2 - inputs:(row14,row13) outputs:(Insert_DW)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row10Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row13.CD_PRODUTO = next_tHashInput_3.CD_PRODUTO;
	row13.DT_CRIACAO = next_tHashInput_3.DT_CRIACAO;
	row13.VLR_DE = next_tHashInput_3.VLR_DE;
	row13.VLR_POR = next_tHashInput_3.VLR_POR;
	row13.DTAINI = next_tHashInput_3.DTAINI;
	row13.DTAFIN = next_tHashInput_3.DTAFIN;
	row13.DESCRICAO = next_tHashInput_3.DESCRICAO;
	row13.SITUACAO_PRODUTO = next_tHashInput_3.SITUACAO_PRODUTO;
	row13.TIPO_LINHA = next_tHashInput_3.TIPO_LINHA;
	row13.API = next_tHashInput_3.API;
	row13.DT_INTEGRACAO = next_tHashInput_3.DT_INTEGRACAO;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.CD_PRODUTO = row13.CD_PRODUTO;
				
				row13_HashRow.DT_CRIACAO = row13.DT_CRIACAO;
				
				row13_HashRow.VLR_DE = row13.VLR_DE;
				
				row13_HashRow.VLR_POR = row13.VLR_POR;
				
				row13_HashRow.DTAINI = row13.DTAINI;
				
				row13_HashRow.DTAFIN = row13.DTAFIN;
				
				row13_HashRow.DESCRICAO = row13.DESCRICAO;
				
				row13_HashRow.SITUACAO_PRODUTO = row13.SITUACAO_PRODUTO;
				
				row13_HashRow.TIPO_LINHA = row13.TIPO_LINHA;
				
				row13_HashRow.API = row13.API;
				
				row13_HashRow.DT_INTEGRACAO = row13.DT_INTEGRACAO;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_product_promotion_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final integracao_product_promotion integracao_product_promotionClass = new integracao_product_promotion();

        int exitCode = integracao_product_promotionClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = integracao_product_promotion.class.getClassLoader().getResourceAsStream("palacio_ferramentas/integracao_product_promotion_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = integracao_product_promotion.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("WINSPARE_DB", "id_String");
                        if(context.getStringValue("WINSPARE_DB") == null) {
                            context.WINSPARE_DB = null;
                        } else {
                            context.WINSPARE_DB=(String) context.getProperty("WINSPARE_DB");
                        }
                        context.setContextType("WINSPARE_HOST", "id_String");
                        if(context.getStringValue("WINSPARE_HOST") == null) {
                            context.WINSPARE_HOST = null;
                        } else {
                            context.WINSPARE_HOST=(String) context.getProperty("WINSPARE_HOST");
                        }
                        context.setContextType("WINSPARE_PORT", "id_String");
                        if(context.getStringValue("WINSPARE_PORT") == null) {
                            context.WINSPARE_PORT = null;
                        } else {
                            context.WINSPARE_PORT=(String) context.getProperty("WINSPARE_PORT");
                        }
                        context.setContextType("WINSPARE_PWD", "id_String");
                        if(context.getStringValue("WINSPARE_PWD") == null) {
                            context.WINSPARE_PWD = null;
                        } else {
                            context.WINSPARE_PWD=(String) context.getProperty("WINSPARE_PWD");
                        }
                        context.setContextType("WINSPARE_USER", "id_String");
                        if(context.getStringValue("WINSPARE_USER") == null) {
                            context.WINSPARE_USER = null;
                        } else {
                            context.WINSPARE_USER=(String) context.getProperty("WINSPARE_USER");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("WINSPARE_DB")) {
                context.WINSPARE_DB = (String) parentContextMap.get("WINSPARE_DB");
            }if (parentContextMap.containsKey("WINSPARE_HOST")) {
                context.WINSPARE_HOST = (String) parentContextMap.get("WINSPARE_HOST");
            }if (parentContextMap.containsKey("WINSPARE_PORT")) {
                context.WINSPARE_PORT = (String) parentContextMap.get("WINSPARE_PORT");
            }if (parentContextMap.containsKey("WINSPARE_PWD")) {
                context.WINSPARE_PWD = (String) parentContextMap.get("WINSPARE_PWD");
            }if (parentContextMap.containsKey("WINSPARE_USER")) {
                context.WINSPARE_USER = (String) parentContextMap.get("WINSPARE_USER");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : integracao_product_promotion");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_3");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_3", globalMap.get("conn_tDBConnection_3"));
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     788862 characters generated by Talend Open Studio for Big Data 
 *     on the 20 de março de 2025 16:39:19 BRT
 ************************************************************************************************/