// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_valida_anymarket_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.TalendDate;
import routines.Relational;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJava_3
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_valida_anymarket Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_valida_anymarket implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(DW_DB != null){
				
					this.setProperty("DW_DB", DW_DB.toString());
				
			}
			
			if(DW_HOST != null){
				
					this.setProperty("DW_HOST", DW_HOST.toString());
				
			}
			
			if(DW_PASSWORD != null){
				
					this.setProperty("DW_PASSWORD", DW_PASSWORD.toString());
				
			}
			
			if(DW_PORT != null){
				
					this.setProperty("DW_PORT", DW_PORT.toString());
				
			}
			
			if(DW_USER != null){
				
					this.setProperty("DW_USER", DW_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(EMAIL_PASSWORD != null){
				
					this.setProperty("EMAIL_PASSWORD", EMAIL_PASSWORD.toString());
				
			}
			
			if(EMAIL != null){
				
					this.setProperty("EMAIL", EMAIL.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(DW_POSTGRE_HOST != null){
				
					this.setProperty("DW_POSTGRE_HOST", DW_POSTGRE_HOST.toString());
				
			}
			
			if(DW_POSTGRE_PORT != null){
				
					this.setProperty("DW_POSTGRE_PORT", DW_POSTGRE_PORT.toString());
				
			}
			
			if(DW_POSTGRE_DB != null){
				
					this.setProperty("DW_POSTGRE_DB", DW_POSTGRE_DB.toString());
				
			}
			
			if(DW_POSTGRE_USER != null){
				
					this.setProperty("DW_POSTGRE_USER", DW_POSTGRE_USER.toString());
				
			}
			
			if(DW_POSTGRE_PASSWORD != null){
				
					this.setProperty("DW_POSTGRE_PASSWORD", DW_POSTGRE_PASSWORD.toString());
				
			}
			
			if(qtde_linhas != null){
				
					this.setProperty("qtde_linhas", qtde_linhas.toString());
				
			}
			
			if(contador != null){
				
					this.setProperty("contador", contador.toString());
				
			}
			
			if(porcentagem != null){
				
					this.setProperty("porcentagem", porcentagem.toString());
				
			}
			
			if(cont != null){
				
					this.setProperty("cont", cont.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String programa;
public String getPrograma(){
	return this.programa;
}
public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String DW_DB;
public String getDW_DB(){
	return this.DW_DB;
}
public String DW_HOST;
public String getDW_HOST(){
	return this.DW_HOST;
}
public String DW_PASSWORD;
public String getDW_PASSWORD(){
	return this.DW_PASSWORD;
}
public String DW_PORT;
public String getDW_PORT(){
	return this.DW_PORT;
}
public String DW_USER;
public String getDW_USER(){
	return this.DW_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String EMAIL_PASSWORD;
public String getEMAIL_PASSWORD(){
	return this.EMAIL_PASSWORD;
}
public String EMAIL;
public String getEMAIL(){
	return this.EMAIL;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String DW_POSTGRE_HOST;
public String getDW_POSTGRE_HOST(){
	return this.DW_POSTGRE_HOST;
}
public String DW_POSTGRE_PORT;
public String getDW_POSTGRE_PORT(){
	return this.DW_POSTGRE_PORT;
}
public String DW_POSTGRE_DB;
public String getDW_POSTGRE_DB(){
	return this.DW_POSTGRE_DB;
}
public String DW_POSTGRE_USER;
public String getDW_POSTGRE_USER(){
	return this.DW_POSTGRE_USER;
}
public String DW_POSTGRE_PASSWORD;
public String getDW_POSTGRE_PASSWORD(){
	return this.DW_POSTGRE_PASSWORD;
}
public Integer qtde_linhas;
public Integer getQtde_linhas(){
	return this.qtde_linhas;
}
public Integer contador;
public Integer getContador(){
	return this.contador;
}
public Integer porcentagem;
public Integer getPorcentagem(){
	return this.porcentagem;
}
public Integer cont;
public Integer getCont(){
	return this.cont;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_valida_anymarket";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_valida_anymarket.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_valida_anymarket.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_1_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_1_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_1_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("*****************************************************");
System.out.println("Iniciando VALIDACAO DA PLANILHA Anymarket");
System.out.println("Job Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("*****************************************************");
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_1 = "jdbc:postgresql://"+context.DW_POSTGRE_HOST+":"+"5432"+"/"+context.DW_POSTGRE_DB;
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = context.DW_POSTGRE_USER;
	
	
		
	final String decryptedPassword_tDBConnection_1 = context.DW_POSTGRE_PASSWORD; 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tJava_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


//Date dataNova = new Date();
//DateFormat formato = new SimpleDateFormat("yyyyMMdd");
//formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
//String data = formato.format(dataNova.getTime());


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());

context.data_execucao = data;


System.out.println("******************************************************");
System.out.println("Finalizado a abertura de conexoes com o banco de dados");
System.out.println("Job Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("******************************************************");
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tFixedFlowInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 0 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row13.SKU_Marketplace = null;        	            	
    	            	        	            	
    	            		row13.Codigo_Marketplace = null;        	            	
    	            	        	            	
    	            		row13.Empresa = null;        	            	
    	            	        	            	
    	            		row13.PrecoDe = null;        	            	
    	            	        	            	
    	            		row13.PrecoPor = null;        	            	
    	            	        	            	
    	            		row13.SALDO_DISPONIVEL = null;        	            	
    	            	        	            	
    	            		row13.VL_CUSTO = null;        	            	
    	            	        	            	
    	            		row13.TABELA3_PRECO_VENDA = null;        	            	
    	            	        	            	
    	            		row13.TABELA4_PRECO_VENDA = null;        	            	
    	            	        	            	
    	            		row13.VALIDA_PRECO = null;        	            	
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					



    
		row13Struct oneRow_tHashOutput_6 = new row13Struct();
				
					oneRow_tHashOutput_6.SKU_Marketplace = row13.SKU_Marketplace;
					oneRow_tHashOutput_6.Codigo_Marketplace = row13.Codigo_Marketplace;
					oneRow_tHashOutput_6.Empresa = row13.Empresa;
					oneRow_tHashOutput_6.PrecoDe = row13.PrecoDe;
					oneRow_tHashOutput_6.PrecoPor = row13.PrecoPor;
					oneRow_tHashOutput_6.SALDO_DISPONIVEL = row13.SALDO_DISPONIVEL;
					oneRow_tHashOutput_6.VL_CUSTO = row13.VL_CUSTO;
					oneRow_tHashOutput_6.TABELA3_PRECO_VENDA = row13.TABELA3_PRECO_VENDA;
					oneRow_tHashOutput_6.TABELA4_PRECO_VENDA = row13.TABELA4_PRECO_VENDA;
					oneRow_tHashOutput_6.VALIDA_PRECO = row13.VALIDA_PRECO;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 0);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFixedFlowInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd\"yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd\"yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd\"yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd\"yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao");
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao");
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	


   int batchSize_tDBOutput_1 = 10000;
   int batchSizeCounter_tDBOutput_1=0;

int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
    		pstmt_tDBOutput_1.addBatch();
    		nb_line_tDBOutput_1++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_1++;
    		  
            if(!whetherReject_tDBOutput_1) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }
    			if ((batchSize_tDBOutput_1 > 0) && (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {
                try {
						int countSum_tDBOutput_1 = 0;
						    
						for(int countEach_tDBOutput_1: pstmt_tDBOutput_1.executeBatch()) {
							countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
						}
				    	rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
				    	
				    		insertedCount_tDBOutput_1 += countSum_tDBOutput_1;
				    	
            	    	batchSizeCounter_tDBOutput_1 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_1){
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e_tDBOutput_1.getMessage());
				    	java.sql.SQLException ne_tDBOutput_1 = e_tDBOutput_1.getNextException(),sqle_tDBOutput_1=null;
				    	String errormessage_tDBOutput_1;
						if (ne_tDBOutput_1 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_1 = new java.sql.SQLException(e_tDBOutput_1.getMessage() + "\ncaused by: " + ne_tDBOutput_1.getMessage(), ne_tDBOutput_1.getSQLState(), ne_tDBOutput_1.getErrorCode(), ne_tDBOutput_1);
							errormessage_tDBOutput_1 = sqle_tDBOutput_1.getMessage();
						}else{
							errormessage_tDBOutput_1 = e_tDBOutput_1.getMessage();
						}
				    	
				    	int countSum_tDBOutput_1 = 0;
						for(int countEach_tDBOutput_1: e_tDBOutput_1.getUpdateCounts()) {
							countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
						}
						rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
						
				    		insertedCount_tDBOutput_1 += countSum_tDBOutput_1;
				    	
				    	System.err.println(errormessage_tDBOutput_1);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



	    try {
				int countSum_tDBOutput_1 = 0;
				if (pstmt_tDBOutput_1 != null && batchSizeCounter_tDBOutput_1 > 0) {
						
					for(int countEach_tDBOutput_1: pstmt_tDBOutput_1.executeBatch()) {
						countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
					}
					rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
						
				}
		    	
		    		insertedCount_tDBOutput_1 += countSum_tDBOutput_1;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_1){
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e_tDBOutput_1.getMessage());
	    	java.sql.SQLException ne_tDBOutput_1 = e_tDBOutput_1.getNextException(),sqle_tDBOutput_1=null;
	    	String errormessage_tDBOutput_1;
			if (ne_tDBOutput_1 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_1 = new java.sql.SQLException(e_tDBOutput_1.getMessage() + "\ncaused by: " + ne_tDBOutput_1.getMessage(), ne_tDBOutput_1.getSQLState(), ne_tDBOutput_1.getErrorCode(), ne_tDBOutput_1);
				errormessage_tDBOutput_1 = sqle_tDBOutput_1.getMessage();
			}else{
				errormessage_tDBOutput_1 = e_tDBOutput_1.getMessage();
			}
	    	
	    	int countSum_tDBOutput_1 = 0;
			for(int countEach_tDBOutput_1: e_tDBOutput_1.getUpdateCounts()) {
				countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
			}
			rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
			
	    		insertedCount_tDBOutput_1 += countSum_tDBOutput_1;
	    	
	    	System.err.println(errormessage_tDBOutput_1);
	    	
		}
	    
        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


System.out.println("****************************************");
System.out.println("Iniciado a Leitura dos dados da planilha");
System.out.println("Job Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("****************************************");
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tFileInputExcel_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public String PrecoPor;

				public String getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
					this.PrecoPor = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
					this.PrecoPor = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// String
				
						writeString(this.PrecoPor,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// String
				
						writeString(this.PrecoPor,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+PrecoPor);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public String PrecoPor;

				public String getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
					this.PrecoPor = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
					this.PrecoPor = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// String
				
						writeString(this.PrecoPor,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// String
				
						writeString(this.PrecoPor,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+PrecoPor);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saidaStruct implements routines.system.IPersistableRow<saidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return "";
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
row24Struct row24 = new row24Struct();
saidaStruct saida = new saidaStruct();
row22Struct row22 = new row22Struct();
row21Struct row21 = new row21Struct();
row23Struct row23 = new row23Struct();
row25Struct row25 = new row25Struct();









	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tConvertType_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_5", false);
		start_Hash.put("tConvertType_5", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tConvertType_5 = 0;
		
	int nb_line_tConvertType_5 = 0;  
 



/**
 * [tConvertType_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tConvertType_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_2", false);
		start_Hash.put("tConvertType_2", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida");
					}
				
		int tos_count_tConvertType_2 = 0;
		
	int nb_line_tConvertType_2 = 0;  
 



/**
 * [tConvertType_2 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
saidaStruct saida_tmp = new saidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */




	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row25Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row25Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_1", false);
		start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_1";
	
	
		int tos_count_tFileInputExcel_1 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:EMhBBX0+AumuGr0KsrcK8jeoFZw+CssZqH0dKA==");
        String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
        if (password_tFileInputExcel_1.isEmpty()){
            password_tFileInputExcel_1 = null;
        }
			class RegexUtil_tFileInputExcel_1 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

		Object source_tFileInputExcel_1 = "Z:/Planilha Anymarket.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;
		
		if(source_tFileInputExcel_1 instanceof String){
			workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_1), password_tFileInputExcel_1, true);
		} else if(source_tFileInputExcel_1 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_1, password_tFileInputExcel_1);
		} else{
			workbook_tFileInputExcel_1 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
    	for(org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_1 : workbook_tFileInputExcel_1){
   			sheetList_tFileInputExcel_1.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_1);
    	}
    	if(sheetList_tFileInputExcel_1.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
			if(sheet_FilterNull_tFileInputExcel_1!=null && sheetList_FilterNull_tFileInputExcel_1.iterator()!=null && sheet_FilterNull_tFileInputExcel_1.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_1.add(sheet_FilterNull_tFileInputExcel_1);
			}
		}
		sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
	if(sheetList_tFileInputExcel_1.size()>0){
		int nb_line_tFileInputExcel_1 = 0;

        int begin_line_tFileInputExcel_1 = 1;

        int footer_input_tFileInputExcel_1 = 0;

        int end_line_tFileInputExcel_1=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1:sheetList_tFileInputExcel_1){
			end_line_tFileInputExcel_1+=(sheet_tFileInputExcel_1.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
        int limit_tFileInputExcel_1 = -1;
        int start_column_tFileInputExcel_1 = 1-1;
        int end_column_tFileInputExcel_1 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(0);
        int rowCount_tFileInputExcel_1 = 0;
        int sheetIndex_tFileInputExcel_1 = 0;
        int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++){

        	int emptyColumnCount_tFileInputExcel_1 = 0;

        	if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
        		break;
        	}

            while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1 + currentRows_tFileInputExcel_1) {
                rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
                sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(++sheetIndex_tFileInputExcel_1);
                currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_1_CURRENT_SHEET",sheet_tFileInputExcel_1.getSheetName());
            if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
                row_tFileInputExcel_1 = sheet_tFileInputExcel_1.getRow(i_tFileInputExcel_1 - rowCount_tFileInputExcel_1);
            }
		    row7 = null;
					int tempRowLength_tFileInputExcel_1 = 5;
				
				int columnIndex_tFileInputExcel_1 = 0;
			
			String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
			int excel_end_column_tFileInputExcel_1;
			if(row_tFileInputExcel_1==null){
				excel_end_column_tFileInputExcel_1=0;
			}else{
				excel_end_column_tFileInputExcel_1=row_tFileInputExcel_1.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_1;
			if(end_column_tFileInputExcel_1 == -1){
				actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
			}
			else{
				actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 >	excel_end_column_tFileInputExcel_1 ? excel_end_column_tFileInputExcel_1 : end_column_tFileInputExcel_1;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_1;i++){
				if(i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1.getCell(i + start_column_tFileInputExcel_1);
					if(cell_tFileInputExcel_1!=null){
					switch (cell_tFileInputExcel_1.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
									temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1.format(cell_tFileInputExcel_1.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_1.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
											temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_1.getNumericCellValue());
										temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_1[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_1[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_1[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_1[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_1 = false;
			row7 = new row7Struct();
			int curColNum_tFileInputExcel_1 = -1;
			String curColName_tFileInputExcel_1 = "";
			try{
							columnIndex_tFileInputExcel_1 = 0;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SKU_Marketplace";

				row7.SKU_Marketplace = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row7.SKU_Marketplace = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 1;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Codigo_Marketplace";

				row7.Codigo_Marketplace = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row7.Codigo_Marketplace = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 2;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Empresa";

				row7.Empresa = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim();
			}else{
				row7.Empresa = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 3;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "PrecoDe";

				row7.PrecoDe = ParserUtils.parseTo_Double(ParserUtils.parseTo_Number(temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim(), null, '.'==decimalChar_tFileInputExcel_1 ? null : decimalChar_tFileInputExcel_1));
			}else{
				row7.PrecoDe = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 4;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim().length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "PrecoPor";

				row7.PrecoPor = ParserUtils.parseTo_Double(ParserUtils.parseTo_Number(temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].trim(), null, '.'==decimalChar_tFileInputExcel_1 ? null : decimalChar_tFileInputExcel_1));
			}else{
				row7.PrecoPor = null;
				emptyColumnCount_tFileInputExcel_1++;
			}

        if(emptyColumnCount_tFileInputExcel_1 >= 5){
        	break; //if meet the empty row, there will break the iterate.
        }
				nb_line_tFileInputExcel_1++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_1 = true;
					 System.err.println(e.getMessage());
					 row7 = null;
			}


		



 



/**
 * [tFileInputExcel_1 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 


	tos_count_tFileInputExcel_1++;

/**
 * [tFileInputExcel_1 main ] stop
 */
	
	/**
	 * [tFileInputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 
			row25 = null;



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

          row25 = null;
          row24 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
	        ope_tFilterRow_1.matches((row7.PrecoPor != null)
	                       , "PrecoPor!=null failed");
	        ope_tFilterRow_1.matches((row7.PrecoDe != null)
	                       , "PrecoDe!=null failed");
	        ope_tFilterRow_1.matches((row7.Codigo_Marketplace != null)
	                       , "Codigo_Marketplace!=null failed");
	        ope_tFilterRow_1.matches((row7.Empresa != null)
	                       , "Empresa!=null failed");
	        ope_tFilterRow_1.matches((row7.SKU_Marketplace != null)
	                       , "SKU_Marketplace!=null failed");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row24 == null){ 
                row24 = new row24Struct();
              }
               row24.SKU_Marketplace = row7.SKU_Marketplace;
               row24.Codigo_Marketplace = row7.Codigo_Marketplace;
               row24.Empresa = row7.Empresa;
               row24.PrecoDe = row7.PrecoDe;
               row24.PrecoPor = row7.PrecoPor;    
      nb_line_ok_tFilterRow_1++;
    } else {
            if (row25 == null){
              row25 = new row25Struct();
            }
                row25.SKU_Marketplace = row7.SKU_Marketplace;
                row25.Codigo_Marketplace = row7.Codigo_Marketplace;
                row25.Empresa = row7.Empresa;
                row25.PrecoDe = row7.PrecoDe;
                row25.PrecoPor = row7.PrecoPor;
	            row25.errorMessage = ope_tFilterRow_1.getErrorMsg();
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

saida = null;


// # Output table : 'saida'
saida_tmp.SKU_Marketplace = StringHandling.RIGHT(("00000" +row24.SKU_Marketplace),5) ;
saida_tmp.Codigo_Marketplace = row24.Codigo_Marketplace;
saida_tmp.Empresa = row24.Empresa ;
saida_tmp.PrecoDe = row24.PrecoDe;
saida_tmp.PrecoPor = row24.PrecoPor;
saida = saida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "saida"
if(saida != null) { 



	
	/**
	 * [tConvertType_2 main ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida"
						
						);
					}
					


  row22 = new row22Struct();
  boolean bHasError_tConvertType_2 = false;             
          try {
              if ("".equals(saida.SKU_Marketplace)){  
                saida.SKU_Marketplace = null;
              }
              row22.SKU_Marketplace=TypeConvert.String2String(saida.SKU_Marketplace);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(saida.Codigo_Marketplace)){  
                saida.Codigo_Marketplace = null;
              }
              row22.Codigo_Marketplace=TypeConvert.String2String(saida.Codigo_Marketplace);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(saida.Empresa)){  
                saida.Empresa = null;
              }
              row22.Empresa=TypeConvert.String2String(saida.Empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row22.PrecoDe=TypeConvert.Double2Double(saida.PrecoDe);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row22.PrecoPor=TypeConvert.Double2String(saida.PrecoPor);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_2) {row22 = null;}

  nb_line_tConvertType_2 ++ ;

 


	tos_count_tConvertType_2++;

/**
 * [tConvertType_2 main ] stop
 */
	
	/**
	 * [tConvertType_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_begin ] stop
 */
// Start of branch "row22"
if(row22 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

    //Code generate according to input schema and output schema
row21.SKU_Marketplace = row22.SKU_Marketplace;
row21.Codigo_Marketplace = row22.Codigo_Marketplace;
row21.Empresa = row22.Empresa;
row21.PrecoDe = row22.PrecoDe;
row21.PrecoPor = row22.PrecoPor;

    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_5 main ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					


  row23 = new row23Struct();
  boolean bHasError_tConvertType_5 = false;             
          try {
              row23.SKU_Marketplace=TypeConvert.String2String(row21.SKU_Marketplace);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row23.Codigo_Marketplace=TypeConvert.String2String(row21.Codigo_Marketplace);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row23.Empresa=TypeConvert.String2String(row21.Empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row23.PrecoDe=TypeConvert.Double2Double(row21.PrecoDe);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row23.PrecoPor=TypeConvert.String2Double(row21.PrecoPor);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_5) {row23 = null;}

  nb_line_tConvertType_5 ++ ;

 


	tos_count_tConvertType_5++;

/**
 * [tConvertType_5 main ] stop
 */
	
	/**
	 * [tConvertType_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 process_data_begin ] stop
 */
// Start of branch "row23"
if(row23 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					



    
		row23Struct oneRow_tHashOutput_2 = new row23Struct();
				
					oneRow_tHashOutput_2.SKU_Marketplace = row23.SKU_Marketplace;
					oneRow_tHashOutput_2.Codigo_Marketplace = row23.Codigo_Marketplace;
					oneRow_tHashOutput_2.Empresa = row23.Empresa;
					oneRow_tHashOutput_2.PrecoDe = row23.PrecoDe;
					oneRow_tHashOutput_2.PrecoPor = row23.PrecoPor;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "row23"




	
	/**
	 * [tConvertType_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "row22"




	
	/**
	 * [tConvertType_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_end ] stop
 */

} // End of branch "saida"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "row24"




// Start of branch "row25"
if(row25 != null) { 



	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					



    
		row25Struct oneRow_tHashOutput_7 = new row25Struct();
				
					oneRow_tHashOutput_7.SKU_Marketplace = row25.SKU_Marketplace;
					oneRow_tHashOutput_7.Codigo_Marketplace = row25.Codigo_Marketplace;
					oneRow_tHashOutput_7.Empresa = row25.Empresa;
					oneRow_tHashOutput_7.PrecoDe = row25.PrecoDe;
					oneRow_tHashOutput_7.PrecoPor = row25.PrecoPor;
					oneRow_tHashOutput_7.errorMessage = row25.errorMessage;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */

} // End of branch "row25"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "row7"




	
	/**
	 * [tFileInputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_1_NB_LINE",nb_line_tFileInputExcel_1);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_1 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_1.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_1", true);
end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());




/**
 * [tFileInputExcel_1 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tConvertType_2 end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
      globalMap.put("tConvertType_2_NB_LINE", nb_line_tConvertType_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida");
			  	}
			  	
 

ok_Hash.put("tConvertType_2", true);
end_Hash.put("tConvertType_2", System.currentTimeMillis());




/**
 * [tConvertType_2 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tConvertType_5 end ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	
      globalMap.put("tConvertType_5_NB_LINE", nb_line_tConvertType_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tConvertType_5", true);
end_Hash.put("tConvertType_5", System.currentTimeMillis());




/**
 * [tConvertType_5 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */
















	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputExcel_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tHashInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tConvertType_2 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tConvertType_5 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */
















	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public Integer SKU_Marketplace;

				public Integer getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
						this.SKU_Marketplace = readInteger(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
						this.SKU_Marketplace = readInteger(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+String.valueOf(SKU_Marketplace));
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_1> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public Integer SKU_Marketplace;

				public Integer getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
						this.SKU_Marketplace = readInteger(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
						this.SKU_Marketplace = readInteger(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+String.valueOf(SKU_Marketplace));
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public Integer SKU_Marketplace;

				public Integer getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
						this.SKU_Marketplace = readInteger(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
						this.SKU_Marketplace = readInteger(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+String.valueOf(SKU_Marketplace));
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();
row18Struct row18 = new row18Struct();
row19Struct row19 = new row19Struct();





	
	/**
	 * [tAggregateRow_1_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGOUT", false);
		start_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tAggregateRow_1_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_1 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_1 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_1 utilClass_tAggregateRow_1 = new UtilClass_tAggregateRow_1();

	
	
		class AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1 { // G_OutBegin_AggR_1100
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
    					Integer SKU_Marketplace;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.SKU_Marketplace == null) ? 0 : this.SKU_Marketplace.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1 other = (AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1) obj;
				
									if (this.SKU_Marketplace == null) {
										if (other.SKU_Marketplace != null) 
											return false;
									} else if (!this.SKU_Marketplace.equals(other.SKU_Marketplace)) 
										return false;
								
				
				return true;
			}
	  
	        
		} // G_OutBegin_AggR_1100

	

	class AggOperationStruct_tAggregateRow_1 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;
java.util.Set<AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1> distinctValues_SKU_Marketplace = new java.util.HashSet<AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1>();
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_1 other = (AggOperationStruct_tAggregateRow_1) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_1 operation_result_tAggregateRow_1 = null;
	AggOperationStruct_tAggregateRow_1 operation_finder_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();
	java.util.Map<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1> hash_tAggregateRow_1 = new java.util.HashMap<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1>();
	

 



/**
 * [tAggregateRow_1_AGGOUT begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row23Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row23Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row20.SKU_Marketplace = next_tHashInput_6.SKU_Marketplace;
	row20.Codigo_Marketplace = next_tHashInput_6.Codigo_Marketplace;
	row20.Empresa = next_tHashInput_6.Empresa;
	row20.PrecoDe = next_tHashInput_6.PrecoDe;
	row20.PrecoPor = next_tHashInput_6.PrecoPor;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


  row18 = new row18Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row18.SKU_Marketplace=TypeConvert.String2Integer(row20.SKU_Marketplace);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row18.Codigo_Marketplace=TypeConvert.String2String(row20.Codigo_Marketplace);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row18.Empresa=TypeConvert.String2String(row20.Empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row18.PrecoDe=TypeConvert.Double2Double(row20.PrecoDe);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row18.PrecoPor=TypeConvert.Double2Double(row20.PrecoPor);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row18 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row18"
if(row18 != null) { 



	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					
	


	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				
				AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1 countDistinctValues_SKU_Marketplace_tAggregateRow_1 = new AggCountDistinctValuesStruct_SKU_Marketplace_tAggregateRow_1();
			
				
				countDistinctValues_SKU_Marketplace_tAggregateRow_1.SKU_Marketplace = row18.SKU_Marketplace;
				operation_result_tAggregateRow_1.distinctValues_SKU_Marketplace.add(countDistinctValues_SKU_Marketplace_tAggregateRow_1);
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */

} // End of branch "row18"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_1_AGGOUT", true);
end_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGOUT end ] stop
 */


	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGIN", false);
		start_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
		int tos_count_tAggregateRow_1_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_1> values_tAggregateRow_1 = hash_tAggregateRow_1.values();

globalMap.put("tAggregateRow_1_NB_LINE", values_tAggregateRow_1.size());

for(AggOperationStruct_tAggregateRow_1 aggregated_row_tAggregateRow_1 : values_tAggregateRow_1) { // G_AggR_600



 



/**
 * [tAggregateRow_1_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
row19.SKU_Marketplace = (int) aggregated_row_tAggregateRow_1.distinctValues_SKU_Marketplace.size();
	                                	

 


	tos_count_tAggregateRow_1_AGGIN++;

/**
 * [tAggregateRow_1_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

    //Code generate according to input schema and output schema
//output_row.SKU_Marketplace = row19.SKU_Marketplace;
//output_row.Codigo_Marketplace = row19.Codigo_Marketplace;
//output_row.PrecoDe = row19.PrecoDe;
//output_row.PrecoPor = row19.PrecoPor;


context.qtde_linhas = row19.SKU_Marketplace;
System.out.println("Qtde de Linhas Lidas: "+context.qtde_linhas);

    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_1_AGGIN", true);
end_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGIN end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_1_AGGIN"
							globalMap.remove("tAggregateRow_1");
						
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
row2Struct row2 = new row2Struct();
row2Struct row15 = row2;




	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

	
				TalendThreadPool mtp_tDBInput_4 = new TalendThreadPool(20);

				globalMap.put("lockWrite_tDBInput_4", new Object[0]);
				int threadIdCounter_tDBInput_4 =0;
						
			int NB_ITERATE_tDBInput_4 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row23Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row23Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row1.SKU_Marketplace = next_tHashInput_2.SKU_Marketplace;
	row1.Codigo_Marketplace = next_tHashInput_2.Codigo_Marketplace;
	row1.Empresa = next_tHashInput_2.Empresa;
	row1.PrecoDe = next_tHashInput_2.PrecoDe;
	row1.PrecoPor = next_tHashInput_2.PrecoPor;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					


    	            
            globalMap.put("row1.SKU_Marketplace", row1.SKU_Marketplace);
    	            
            globalMap.put("row1.Codigo_Marketplace", row1.Codigo_Marketplace);
    	            
            globalMap.put("row1.Empresa", row1.Empresa);
    	            
            globalMap.put("row1.PrecoDe", row1.PrecoDe);
    	            
            globalMap.put("row1.PrecoPor", row1.PrecoPor);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tDBInput_4++;
	
				
			class tDBInput_4Thread extends TalendThread {//implements routines.system.TalendThreadPool.PropertySettable
				class ThreadedMap extends java.util.HashMap<String, Object> {
			
					private static final long serialVersionUID = 0L;
		
					public ThreadedMap(java.util.Map<String, Object> globalMap) {
						super(globalMap);
					}
		
					@Override
					public Object put(String key, Object value) {
						
							super.put(key, value);
							return relatorio_valida_anymarket.this.globalMap.put(key, value);
						
					}
				}	
				
				private java.util.Map<String, Object> globalMap = null;
				boolean isRunning = false;
				String iterateId = "";
				
				
						row1Struct row1 = new row1Struct();
row2Struct row2 = new row2Struct();
row2Struct row15 = row2;

					
	
				public tDBInput_4Thread(java.util.Map<String, Object> globalMap,row1Struct row1,row2Struct row2,row2Struct row15, int threadID) {
					super();
					
		        		if(row1 != null){
		            		
		    					this.row1.SKU_Marketplace = row1.SKU_Marketplace;
		    	            
		    					this.row1.Codigo_Marketplace = row1.Codigo_Marketplace;
		    	            
		    					this.row1.Empresa = row1.Empresa;
		    	            
		    					this.row1.PrecoDe = row1.PrecoDe;
		    	            
		    					this.row1.PrecoPor = row1.PrecoPor;
		    	            
		        		}
		        		
		        		if(row2 != null){
		            		
		    					this.row2.CD_PRODUTO = row2.CD_PRODUTO;
		    	            
		    					this.row2.CD_EMPRESA = row2.CD_EMPRESA;
		    	            
		    					this.row2.SALDO_DISPONIVEL = row2.SALDO_DISPONIVEL;
		    	            
		    					this.row2.VL_CUSTO = row2.VL_CUSTO;
		    	            
		    					this.row2.TABELA3_PRECO_VENDA = row2.TABELA3_PRECO_VENDA;
		    	            
		    					this.row2.TABELA4_PRECO_VENDA = row2.TABELA4_PRECO_VENDA;
		    	            
		        		}
		        		
		        		if(row15 != null){
		            		
		    					this.row15.CD_PRODUTO = row15.CD_PRODUTO;
		    	            
		    					this.row15.CD_EMPRESA = row15.CD_EMPRESA;
		    	            
		    					this.row15.SALDO_DISPONIVEL = row15.SALDO_DISPONIVEL;
		    	            
		    					this.row15.VL_CUSTO = row15.VL_CUSTO;
		    	            
		    					this.row15.TABELA3_PRECO_VENDA = row15.TABELA3_PRECO_VENDA;
		    	            
		    					this.row15.TABELA4_PRECO_VENDA = row15.TABELA4_PRECO_VENDA;
		    	            
		        		}
		        		
					
						synchronized (globalMap) {
							this.globalMap = java.util.Collections.synchronizedMap(new ThreadedMap(globalMap));
					
						}
					iterateId = "." + threadID;
					
					
				}


				public void run() {
					

					java.util.Map threadRunResultMap = new java.util.HashMap();
					threadRunResultMap.put("errorCode", null);
					threadRunResultMap.put("status", "");
					threadLocal.set(threadRunResultMap);
					
					this.isRunning = true;
					String currentComponent = "";
					String cLabel = null;
					java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();
					
					try {			
						
							if(execStat){
								runStat.updateStatOnConnection("iterate1",0,"exec"+iterateId);
							}				
						



	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tJava_5 = 0;
		


String foo = "bar";

context.contador = context.contador + 1;
context.cont = context.contador*100;

//System.out.println("Processamento: "+context.cont);
//System.out.println("Quantidade de registro processado: "+context.contador);
//System.out.println("contador: "+context.contador);
//System.out.println("qtde_linhas: "+context.qtde_linhas);

//System.out.println("percentual1: "+context.cont*100);
//System.out.println("percentual2: "+context.qtde_linhas*100);

context.porcentagem = (context.cont/context.qtde_linhas);

System.out.println("Porcentagem de processamento: "+context.porcentagem+"%");
 



/**
 * [tJava_5 begin ] stop
 */



	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select CD_PRODUTO,\n               CD_EMPRESA,\n               sum(SALDO_FISICO-RESERVADO_ORDEM_PRODUCAO-RESERVADO_PEDI"
+"DO_VENDA-RESERVADO_ENDERECAMENTO-RESERVADO_GARANTIA-RESERVADO_EXTERNO) SALDO_DISPONIVEL,\n                VL_CUSTO,\n   "
+"             TABELA3_PRECO_VENDA,\n                TABELA4_PRECO_VENDA\n      from dw_t_produto_empresa\n   where CD_PRO"
+"DUTO = '"+((String)globalMap.get("row1.SKU_Marketplace"))+"'\n       and CD_EMPRESA ='"+((String)globalMap.get("row1.Empresa"))+"'\n   group by CD_PRODUTO,\n                      CD_EMPRESA,\n                      VL_CUSTO,\n                      T"
+"ABELA3_PRECO_VENDA,\n                      TABELA4_PRECO_VENDA";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row2.CD_PRODUTO = null;
							} else {
	                         		
        	row2.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row2.CD_EMPRESA = null;
							} else {
	                         		
        	row2.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row2.SALDO_DISPONIVEL = null;
							} else {
		                          
            row2.SALDO_DISPONIVEL = rs_tDBInput_4.getInt(3);
            if(rs_tDBInput_4.wasNull()){
                    row2.SALDO_DISPONIVEL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row2.VL_CUSTO = null;
							} else {
	                         		
            row2.VL_CUSTO = rs_tDBInput_4.getDouble(4);
            if(rs_tDBInput_4.wasNull()){
                    row2.VL_CUSTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row2.TABELA3_PRECO_VENDA = null;
							} else {
	                         		
            row2.TABELA3_PRECO_VENDA = rs_tDBInput_4.getDouble(5);
            if(rs_tDBInput_4.wasNull()){
                    row2.TABELA3_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row2.TABELA4_PRECO_VENDA = null;
							} else {
	                         		
            row2.TABELA4_PRECO_VENDA = rs_tDBInput_4.getDouble(6);
            if(rs_tDBInput_4.wasNull()){
                    row2.TABELA4_PRECO_VENDA = null;
            }
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					



    
		row2Struct oneRow_tHashOutput_3 = new row2Struct();
				
					oneRow_tHashOutput_3.CD_PRODUTO = row2.CD_PRODUTO;
					oneRow_tHashOutput_3.CD_EMPRESA = row2.CD_EMPRESA;
					oneRow_tHashOutput_3.SALDO_DISPONIVEL = row2.SALDO_DISPONIVEL;
					oneRow_tHashOutput_3.VL_CUSTO = row2.VL_CUSTO;
					oneRow_tHashOutput_3.TABELA3_PRECO_VENDA = row2.TABELA3_PRECO_VENDA;
					oneRow_tHashOutput_3.TABELA4_PRECO_VENDA = row2.TABELA4_PRECO_VENDA;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 
     row15 = row2;


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */

	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());




/**
 * [tJava_5 end ] stop
 */






					if(execStat){
						runStat.updateStatOnConnection("iterate1",2,"exec"+iterateId);
					}				
				
						} catch (java.lang.Exception e) {
							this.status = "failure";
							Integer localErrorCode = (Integer) (((java.util.Map) threadLocal.get()).get("errorCode"));
							if (localErrorCode != null) {
								if (this.errorCode == null || localErrorCode.compareTo(this.errorCode) > 0) {
									this.errorCode = localErrorCode;
								}
							}					
				            		            
		                    TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
							
							this.exception = te;
							talendThreadPool.setErrorThread(this);
				            talendThreadPool.stopAllWorkers();
	
						} catch (java.lang.Error error){
							this.status = "failure";
							Integer localErrorCode = (Integer) (((java.util.Map) threadLocal.get()).get("errorCode"));
							if (localErrorCode != null) {
								if (this.errorCode == null || localErrorCode.compareTo(this.errorCode) > 0) {
									this.errorCode = localErrorCode;
								}
							}					
							this.error = error;				            		            
							talendThreadPool.setErrorThread(this);
				            talendThreadPool.stopAllWorkers();
						} finally {
							try{
								
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */

	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */






							}catch(java.lang.Exception e){	
								//ignore
							}catch(java.lang.Error error){
								//ignore
							}
							resourceMap = null;
						}
						this.isRunning = false;
				
						Integer localErrorCode = (Integer) (((java.util.Map) threadLocal.get()).get("errorCode"));
						String localStatus = (String) (((java.util.Map) threadLocal.get()).get("status"));
						if (localErrorCode != null) {
							if (this.errorCode == null || localErrorCode.compareTo(this.errorCode) > 0) {
								this.errorCode = localErrorCode;
							}
						} 
						if (!this.status.equals("failure")) {
							this.status = localStatus;
						}
						
						talendThreadPool.getTalendThreadResult().setErrorCode(this.errorCode);
						talendThreadPool.getTalendThreadResult().setStatus(this.status);						
					}
				}

				tDBInput_4Thread bt_tDBInput_4 = new tDBInput_4Thread(globalMap,row1,row2,row15,threadIdCounter_tDBInput_4++);
				mtp_tDBInput_4.execute(bt_tDBInput_4);

				




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());


			mtp_tDBInput_4.waitForEndOfQueue();
			
			TalendThread errorThread_tDBInput_4 = mtp_tDBInput_4.getErrorThread();

	if(errorThread_tDBInput_4 != null) {
		Integer localErrorCode = (Integer) (((java.util.Map) threadLocal.get()).get("errorCode"));
		String localStatus = (String) (((java.util.Map) threadLocal.get()).get("status"));
		
		if (errorThread_tDBInput_4.errorCode != null) {
			if (localErrorCode == null || errorThread_tDBInput_4.errorCode.compareTo(localErrorCode) > 0) {
				((java.util.Map) threadLocal.get()).put("errorCode", errorThread_tDBInput_4.errorCode);
			}
		} 
		if (!localStatus.equals("failure")) {
			((java.util.Map) threadLocal.get()).put("status", errorThread_tDBInput_4.status);
		}
		if(errorThread_tDBInput_4.exception!=null){
			throw errorThread_tDBInput_4.exception;
		}		
	}else{
		Integer threadErrorCode = mtp_tDBInput_4.getTalendThreadResult().getErrorCode();
		String threadStatus = mtp_tDBInput_4.getTalendThreadResult().getStatus();
		
		Integer localErrorCode = (Integer) (((java.util.Map) threadLocal
				.get()).get("errorCode"));
		String localStatus = (String) (((java.util.Map) threadLocal
				.get()).get("status"));

		if (threadErrorCode != null) {
			if (localErrorCode == null
					|| threadErrorCode.compareTo(localErrorCode) > 0) {
				((java.util.Map) threadLocal.get()).put("errorCode",
						threadErrorCode);
			}
		} 
		if (!localStatus.equals("failure")) {
			((java.util.Map) threadLocal.get()).put("status",
					threadStatus);
		}
	}
			
			


/**
 * [tFlowToIterate_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tJava_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println("*****************************************");
System.out.println("Finalizado a busca dos produtos no Autcom");
System.out.println("Job Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("*****************************************");
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ReportStruct implements routines.system.IPersistableRow<ReportStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ReportStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class report1Struct implements routines.system.IPersistableRow<report1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(report1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);

		row8Struct row8 = new row8Struct();
ReportStruct Report = new ReportStruct();
row10Struct row10 = new row10Struct();
row10Struct row3 = row10;
report1Struct report1 = new report1Struct();
row11Struct row11 = new row11Struct();
row11Struct row12 = row11;







	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashOutput_4 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_4.getKeyMap().put("tHashFile_relatorio_valida_anymarket_" +pid + "_tHashOutput_4", "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_6");
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
         class Util_tLogRow_1 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[10];

        public void addRow(String[] row) {

            for (int i = 0; i < 10; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 9 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 9 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%3$-");
        			        sbformat.append(colLengths[2]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%4$-");
        			        sbformat.append(colLengths[3]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%5$-");
        			        sbformat.append(colLengths[4]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%6$-");
        			        sbformat.append(colLengths[5]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%7$-");
        			        sbformat.append(colLengths[6]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%8$-");
        			        sbformat.append(colLengths[7]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%9$-");
        			        sbformat.append(colLengths[8]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%10$-");
        			        sbformat.append(colLengths[9]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                    for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                
                    //last column
                    for (int i = 0; i < colLengths[9] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
        util_tLogRow_1.setTableName("tLogRow_1");
        util_tLogRow_1.addRow(new String[]{"SKU_Marketplace","Codigo_Marketplace","Empresa","PrecoDe","PrecoPor","SALDO_DISPONIVEL","VL_CUSTO","TABELA3_PRECO_VENDA","TABELA4_PRECO_VENDA","VALIDA_PRECO",});        
 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Report");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */






	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashOutput_5 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_5.getKeyMap().put("tHashFile_relatorio_valida_anymarket_" +pid + "_tHashOutput_5", "tHashFile_relatorio_valida_anymarket_" + pid + "_tHashOutput_6");
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tLogRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_2", false);
		start_Hash.put("tLogRow_2", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tLogRow_2 = 0;
		

	///////////////////////
	
         class Util_tLogRow_2 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[10];

        public void addRow(String[] row) {

            for (int i = 0; i < 10; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 9 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 9 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%3$-");
        			        sbformat.append(colLengths[2]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%4$-");
        			        sbformat.append(colLengths[3]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%5$-");
        			        sbformat.append(colLengths[4]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%6$-");
        			        sbformat.append(colLengths[5]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%7$-");
        			        sbformat.append(colLengths[6]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%8$-");
        			        sbformat.append(colLengths[7]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%9$-");
        			        sbformat.append(colLengths[8]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%10$-");
        			        sbformat.append(colLengths[9]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                    for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[7] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[8] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                
                    //last column
                    for (int i = 0; i < colLengths[9] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_2 util_tLogRow_2 = new Util_tLogRow_2();
        util_tLogRow_2.setTableName("tLogRow_2");
        util_tLogRow_2.addRow(new String[]{"SKU_Marketplace","Codigo_Marketplace","Empresa","PrecoDe","PrecoPor","SALDO_DISPONIVEL","VL_CUSTO","TABELA3_PRECO_VENDA","TABELA4_PRECO_VENDA","VALIDA_PRECO",});        
 		StringBuilder strBuffer_tLogRow_2 = null;
		int nb_line_tLogRow_2 = 0;
///////////////////////    			



 



/**
 * [tLogRow_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"report1");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
					globalMap.get( "tHash_Lookup_row9" ))
					;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
ReportStruct Report_tmp = new ReportStruct();
report1Struct report1_tmp = new report1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row23Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row23Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row8.SKU_Marketplace = next_tHashInput_4.SKU_Marketplace;
	row8.Codigo_Marketplace = next_tHashInput_4.Codigo_Marketplace;
	row8.Empresa = next_tHashInput_4.Empresa;
	row8.PrecoDe = next_tHashInput_4.PrecoDe;
	row8.PrecoPor = next_tHashInput_4.PrecoPor;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
						row9Struct row9 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row9HashKey.CD_PRODUTO = row8.SKU_Marketplace ;
                        		    		
                        		    		    row9HashKey.CD_EMPRESA = row8.Empresa ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row9.lookup( row9HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row9.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_6 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row9 != null && tHash_Lookup_row9.getCount(row9HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row9' and it contains more one result from keys :  row9.CD_PRODUTO = '" + row9HashKey.CD_PRODUTO + "', row9.CD_EMPRESA = '" + row9HashKey.CD_EMPRESA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								 
							
							
								if (tHash_Lookup_row9 !=null && tHash_Lookup_row9.hasNext()) { // G 099
								
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							
							
								} // G 099
							
							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

Report = null;
report1 = null;

if(!rejectedInnerJoin_tMap_6 ) {

// # Output table : 'Report'
Report_tmp.SKU_Marketplace = row8.SKU_Marketplace ;
Report_tmp.Codigo_Marketplace = row8.Codigo_Marketplace ;
Report_tmp.Empresa = row8.Empresa ;
Report_tmp.PrecoDe = row8.PrecoDe ;
Report_tmp.PrecoPor = row8.PrecoPor ;
Report_tmp.SALDO_DISPONIVEL = row9.SALDO_DISPONIVEL ;
Report_tmp.VL_CUSTO = row9.VL_CUSTO != null ? row9.VL_CUSTO : 0 ;
Report_tmp.TABELA3_PRECO_VENDA = row9.TABELA3_PRECO_VENDA != null ? row9.TABELA3_PRECO_VENDA : 0 ;
Report_tmp.TABELA4_PRECO_VENDA = row9.TABELA4_PRECO_VENDA != null ? row9.TABELA4_PRECO_VENDA : 0 ;
Report = Report_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'report1'
// # Filter conditions 
if( rejectedInnerJoin_tMap_6 ) {
report1_tmp.SKU_Marketplace = row8.SKU_Marketplace;
report1_tmp.Codigo_Marketplace = row8.Codigo_Marketplace;
report1_tmp.Empresa = row8.Empresa ;
report1_tmp.PrecoDe = row8.PrecoDe;
report1_tmp.PrecoPor = row8.PrecoPor;
report1_tmp.SALDO_DISPONIVEL = row9.SALDO_DISPONIVEL;
report1_tmp.VL_CUSTO = row9.VL_CUSTO;
report1_tmp.TABELA3_PRECO_VENDA = row9.TABELA3_PRECO_VENDA != null ? row9.TABELA3_PRECO_VENDA : 0 ;
report1_tmp.TABELA4_PRECO_VENDA = row9.TABELA4_PRECO_VENDA != null ? row9.TABELA4_PRECO_VENDA : 0 ;
report1_tmp.VALIDA_PRECO = null;
report1 = report1_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "Report"
if(Report != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Report"
						
						);
					}
					

    //Code generate according to input schema and output schema
row10.SKU_Marketplace = Report.SKU_Marketplace;
row10.Codigo_Marketplace = Report.Codigo_Marketplace;
row10.Empresa = Report.Empresa;
row10.PrecoDe = Report.PrecoDe;
row10.PrecoPor = Report.PrecoPor;
row10.SALDO_DISPONIVEL = Report.SALDO_DISPONIVEL;
row10.VL_CUSTO = Report.VL_CUSTO;
row10.TABELA3_PRECO_VENDA = Report.TABELA3_PRECO_VENDA;
row10.TABELA4_PRECO_VENDA = Report.TABELA4_PRECO_VENDA;

if (Report.PrecoPor < (Report.VL_CUSTO - (Report.VL_CUSTO*0.15))) {
row10.VALIDA_PRECO = "ERRO, valor Menor que Custo";
} else{
row10.VALIDA_PRECO = "Preco OK";
}
//System.out.println(Report.PrecoPor);
//System.out.println(Report.VL_CUSTO - (Report.VL_CUSTO*0.15));

    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_1 = new String[10];
   				
	    		if(row10.SKU_Marketplace != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(row10.SKU_Marketplace)			
					          ;	
							
	    		} //			
    			   				
	    		if(row10.Codigo_Marketplace != null) { //              
                 row_tLogRow_1[1]=    						    
				                String.valueOf(row10.Codigo_Marketplace)			
					          ;	
							
	    		} //			
    			   				
	    		if(row10.Empresa != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(row10.Empresa)			
					          ;	
							
	    		} //			
    			   				
	    		if(row10.PrecoDe != null) { //              
                 row_tLogRow_1[3]=    						
								FormatterUtils.formatUnwithE(row10.PrecoDe)
					          ;	
							
	    		} //			
    			   				
	    		if(row10.PrecoPor != null) { //              
                 row_tLogRow_1[4]=    						
								FormatterUtils.formatUnwithE(row10.PrecoPor)
					          ;	
							
	    		} //			
    			   				
	    		if(row10.SALDO_DISPONIVEL != null) { //              
                 row_tLogRow_1[5]=    						    
				                String.valueOf(row10.SALDO_DISPONIVEL)			
					          ;	
							
	    		} //			
    			   				
	    		if(row10.VL_CUSTO != null) { //              
                 row_tLogRow_1[6]=    						
								FormatterUtils.formatUnwithE(row10.VL_CUSTO)
					          ;	
							
	    		} //			
    			   				
	    		if(row10.TABELA3_PRECO_VENDA != null) { //              
                 row_tLogRow_1[7]=    						
								FormatterUtils.formatUnwithE(row10.TABELA3_PRECO_VENDA)
					          ;	
							
	    		} //			
    			   				
	    		if(row10.TABELA4_PRECO_VENDA != null) { //              
                 row_tLogRow_1[8]=    						
								FormatterUtils.formatUnwithE(row10.TABELA4_PRECO_VENDA)
					          ;	
							
	    		} //			
    			   				
	    		if(row10.VALIDA_PRECO != null) { //              
                 row_tLogRow_1[9]=    						    
				                String.valueOf(row10.VALIDA_PRECO)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_1.addRow(row_tLogRow_1);	
				nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 
     row3 = row10;


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					




		if(tHashFile_tHashOutput_4 == null){
			tHashFile_tHashOutput_4 = mf_tHashOutput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_6");
			mf_tHashOutput_4.getResourceMap().put("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_4", tHashFile_tHashOutput_4);
		}
		row13Struct oneRow_tHashOutput_4 = new row13Struct();
			oneRow_tHashOutput_4.SKU_Marketplace = row3.SKU_Marketplace;
			oneRow_tHashOutput_4.Codigo_Marketplace = row3.Codigo_Marketplace;
			oneRow_tHashOutput_4.Empresa = row3.Empresa;
			oneRow_tHashOutput_4.PrecoDe = row3.PrecoDe;
			oneRow_tHashOutput_4.PrecoPor = row3.PrecoPor;
			oneRow_tHashOutput_4.SALDO_DISPONIVEL = row3.SALDO_DISPONIVEL;
			oneRow_tHashOutput_4.VL_CUSTO = row3.VL_CUSTO;
			oneRow_tHashOutput_4.TABELA3_PRECO_VENDA = row3.TABELA3_PRECO_VENDA;
			oneRow_tHashOutput_4.TABELA4_PRECO_VENDA = row3.TABELA4_PRECO_VENDA;
			oneRow_tHashOutput_4.VALIDA_PRECO = row3.VALIDA_PRECO;
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;	

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "Report"




// Start of branch "report1"
if(report1 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"report1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row11.SKU_Marketplace = report1.SKU_Marketplace;
row11.Codigo_Marketplace = report1.Codigo_Marketplace;
row11.Empresa = report1.Empresa;
row11.PrecoDe = report1.PrecoDe;
row11.PrecoPor = report1.PrecoPor;
row11.SALDO_DISPONIVEL = report1.SALDO_DISPONIVEL;
row11.VL_CUSTO = report1.VL_CUSTO;
row11.TABELA3_PRECO_VENDA = report1.TABELA3_PRECO_VENDA;
row11.TABELA4_PRECO_VENDA = report1.TABELA4_PRECO_VENDA;
row11.VALIDA_PRECO = "ERRO, Produto não localizado";

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_2 main ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_2 = new String[10];
   				
	    		if(row11.SKU_Marketplace != null) { //              
                 row_tLogRow_2[0]=    						    
				                String.valueOf(row11.SKU_Marketplace)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.Codigo_Marketplace != null) { //              
                 row_tLogRow_2[1]=    						    
				                String.valueOf(row11.Codigo_Marketplace)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.Empresa != null) { //              
                 row_tLogRow_2[2]=    						    
				                String.valueOf(row11.Empresa)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.PrecoDe != null) { //              
                 row_tLogRow_2[3]=    						
								FormatterUtils.formatUnwithE(row11.PrecoDe)
					          ;	
							
	    		} //			
    			   				
	    		if(row11.PrecoPor != null) { //              
                 row_tLogRow_2[4]=    						
								FormatterUtils.formatUnwithE(row11.PrecoPor)
					          ;	
							
	    		} //			
    			   				
	    		if(row11.SALDO_DISPONIVEL != null) { //              
                 row_tLogRow_2[5]=    						    
				                String.valueOf(row11.SALDO_DISPONIVEL)			
					          ;	
							
	    		} //			
    			   				
	    		if(row11.VL_CUSTO != null) { //              
                 row_tLogRow_2[6]=    						
								FormatterUtils.formatUnwithE(row11.VL_CUSTO)
					          ;	
							
	    		} //			
    			   				
	    		if(row11.TABELA3_PRECO_VENDA != null) { //              
                 row_tLogRow_2[7]=    						
								FormatterUtils.formatUnwithE(row11.TABELA3_PRECO_VENDA)
					          ;	
							
	    		} //			
    			   				
	    		if(row11.TABELA4_PRECO_VENDA != null) { //              
                 row_tLogRow_2[8]=    						
								FormatterUtils.formatUnwithE(row11.TABELA4_PRECO_VENDA)
					          ;	
							
	    		} //			
    			   				
	    		if(row11.VALIDA_PRECO != null) { //              
                 row_tLogRow_2[9]=    						    
				                String.valueOf(row11.VALIDA_PRECO)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_2.addRow(row_tLogRow_2);	
				nb_line_tLogRow_2++;
//////

//////                    
                    
///////////////////////    			

 
     row12 = row11;


	tos_count_tLogRow_2++;

/**
 * [tLogRow_2 main ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					




		if(tHashFile_tHashOutput_5 == null){
			tHashFile_tHashOutput_5 = mf_tHashOutput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_6");
			mf_tHashOutput_5.getResourceMap().put("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_5", tHashFile_tHashOutput_5);
		}
		row13Struct oneRow_tHashOutput_5 = new row13Struct();
			oneRow_tHashOutput_5.SKU_Marketplace = row12.SKU_Marketplace;
			oneRow_tHashOutput_5.Codigo_Marketplace = row12.Codigo_Marketplace;
			oneRow_tHashOutput_5.Empresa = row12.Empresa;
			oneRow_tHashOutput_5.PrecoDe = row12.PrecoDe;
			oneRow_tHashOutput_5.PrecoPor = row12.PrecoPor;
			oneRow_tHashOutput_5.SALDO_DISPONIVEL = row12.SALDO_DISPONIVEL;
			oneRow_tHashOutput_5.VL_CUSTO = row12.VL_CUSTO;
			oneRow_tHashOutput_5.TABELA3_PRECO_VENDA = row12.TABELA3_PRECO_VENDA;
			oneRow_tHashOutput_5.TABELA4_PRECO_VENDA = row12.TABELA4_PRECO_VENDA;
			oneRow_tHashOutput_5.VALIDA_PRECO = row12.VALIDA_PRECO;
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;	

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tLogRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "report1"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Report");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_1 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    
                    consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
                    consoleOut_tLogRow_1.flush();
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */










	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"report1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tLogRow_2 end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_2 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_2 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_2);
                    }
                    
                    consoleOut_tLogRow_2.println(util_tLogRow_2.format().toString());
                    consoleOut_tLogRow_2.flush();
//////
globalMap.put("tLogRow_2_NB_LINE",nb_line_tLogRow_2);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tLogRow_2", true);
end_Hash.put("tLogRow_2", System.currentTimeMillis());




/**
 * [tLogRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */










	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tLogRow_2 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class GravacaoStruct implements routines.system.IPersistableRow<GravacaoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public java.util.Date data_validacao;

				public java.util.Date getData_validacao () {
					return this.data_validacao;
				}

				public Boolean data_validacaoIsNullable(){
				    return true;
				}
				public Boolean data_validacaoIsKey(){
				    return false;
				}
				public Integer data_validacaoLength(){
				    return null;
				}
				public Integer data_validacaoPrecision(){
				    return null;
				}
				public String data_validacaoDefault(){
				
					return null;
				
				}
				public String data_validacaoComment(){
				
				    return "";
				
				}
				public String data_validacaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_validacaoOriginalDbColumnName(){
				
					return "data_validacao";
				
				}

				
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return true;
				}
				public Integer uuidLength(){
				    return null;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final GravacaoStruct other = (GravacaoStruct) obj;
		
						if (this.uuid == null) {
							if (other.uuid != null)
								return false;
						
						} else if (!this.uuid.equals(other.uuid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(GravacaoStruct other) {

		other.data_validacao = this.data_validacao;
	            other.SKU_Marketplace = this.SKU_Marketplace;
	            other.Codigo_Marketplace = this.Codigo_Marketplace;
	            other.PrecoDe = this.PrecoDe;
	            other.PrecoPor = this.PrecoPor;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.VALIDA_PRECO = this.VALIDA_PRECO;
	            other.uuid = this.uuid;
	            other.Empresa = this.Empresa;
	            
	}

	public void copyKeysDataTo(GravacaoStruct other) {

		other.uuid = this.uuid;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.data_validacao = readDate(dis);
					
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
					this.uuid = readString(dis);
					
					this.Empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.data_validacao = readDate(dis);
					
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
					this.uuid = readString(dis);
					
					this.Empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_validacao,dos);
					
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_validacao,dos);
					
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_validacao="+String.valueOf(data_validacao));
		sb.append(",SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
		sb.append(",uuid="+uuid);
		sb.append(",Empresa="+Empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(GravacaoStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.uuid, other.uuid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public String VALIDA_PRECO;

				public String getVALIDA_PRECO () {
					return this.VALIDA_PRECO;
				}

				public Boolean VALIDA_PRECOIsNullable(){
				    return true;
				}
				public Boolean VALIDA_PRECOIsKey(){
				    return false;
				}
				public Integer VALIDA_PRECOLength(){
				    return null;
				}
				public Integer VALIDA_PRECOPrecision(){
				    return null;
				}
				public String VALIDA_PRECODefault(){
				
					return null;
				
				}
				public String VALIDA_PRECOComment(){
				
				    return "";
				
				}
				public String VALIDA_PRECOPattern(){
				
					return "";
				
				}
				public String VALIDA_PRECOOriginalDbColumnName(){
				
					return "VALIDA_PRECO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
					this.VALIDA_PRECO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
					// Double
				
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
					// String
				
						writeString(this.VALIDA_PRECO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",VALIDA_PRECO="+VALIDA_PRECO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();
row14Struct row17 = row14;
GravacaoStruct Gravacao = new GravacaoStruct();






	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Gravacao");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_anymarket");
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_anymarket");
}


int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	


   int batchSize_tDBOutput_3 = 10000;
   int batchSizeCounter_tDBOutput_3=0;

int count_tDBOutput_3=0;
        java.lang.StringBuilder sb_tDBOutput_3 = new java.lang.StringBuilder();
        sb_tDBOutput_3.append("INSERT INTO \"").append(tableName_tDBOutput_3).append("\" (\"data_validacao\",\"SKU_Marketplace\",\"Codigo_Marketplace\",\"PrecoDe\",\"PrecoPor\",\"SALDO_DISPONIVEL\",\"VL_CUSTO\",\"TABELA3_PRECO_VENDA\",\"TABELA4_PRECO_VENDA\",\"VALIDA_PRECO\",\"uuid\",\"Empresa\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_3 = sb_tDBOutput_3.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
GravacaoStruct Gravacao_tmp = new GravacaoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		int nb_line_tFileOutputExcel_1 = 0;

		String fileName_tFileOutputExcel_1="Z:/Validacao-"+context.data_execucao+".xls";
		java.io.File file_tFileOutputExcel_1 = new java.io.File(fileName_tFileOutputExcel_1);
		boolean isFileGenerated_tFileOutputExcel_1 = true;
		if(file_tFileOutputExcel_1.exists()){
			isFileGenerated_tFileOutputExcel_1 = false;
		}
//create directory only if not exists
          java.io.File parentFile_tFileOutputExcel_1 = file_tFileOutputExcel_1.getParentFile();
          if (parentFile_tFileOutputExcel_1 != null && !parentFile_tFileOutputExcel_1.exists()) {
        	
             parentFile_tFileOutputExcel_1.mkdirs();
        	
          }

		jxl.write.WritableWorkbook writeableWorkbook_tFileOutputExcel_1 = null;
		jxl.write.WritableSheet writableSheet_tFileOutputExcel_1 = null;

		jxl.WorkbookSettings workbookSettings_tFileOutputExcel_1 = new jxl.WorkbookSettings();
        workbookSettings_tFileOutputExcel_1.setEncoding("ISO-8859-15");
        if (file_tFileOutputExcel_1.exists()) {
        jxl.Workbook workbook_tFileOutputExcel_1 = jxl.Workbook.getWorkbook(file_tFileOutputExcel_1,workbookSettings_tFileOutputExcel_1);
        workbookSettings_tFileOutputExcel_1.setWriteAccess(null);
        writeableWorkbook_tFileOutputExcel_1 = new jxl.write.biff.WritableWorkbookImpl(
                	new java.io.BufferedOutputStream(new java.io.FileOutputStream(file_tFileOutputExcel_1, false)),
                	workbook_tFileOutputExcel_1,
                	true,
                    workbookSettings_tFileOutputExcel_1);
        }else{
		writeableWorkbook_tFileOutputExcel_1 = new jxl.write.biff.WritableWorkbookImpl(
            		new java.io.BufferedOutputStream(new java.io.FileOutputStream(fileName_tFileOutputExcel_1)),
            		true,
            		workbookSettings_tFileOutputExcel_1);
        }

        writableSheet_tFileOutputExcel_1 = writeableWorkbook_tFileOutputExcel_1.getSheet("Sheet1");
        if(writableSheet_tFileOutputExcel_1 == null){
        	writableSheet_tFileOutputExcel_1 = writeableWorkbook_tFileOutputExcel_1.createSheet("Sheet1", writeableWorkbook_tFileOutputExcel_1.getNumberOfSheets());
		}

        else {

            String[] sheetNames_tFileOutputExcel_1 = writeableWorkbook_tFileOutputExcel_1.getSheetNames();
            for (int i = 0; i < sheetNames_tFileOutputExcel_1.length; i++) {
                if (sheetNames_tFileOutputExcel_1[i].equals("Sheet1")) {
                    writeableWorkbook_tFileOutputExcel_1.removeSheet(i);
                    break;
                }
            }

			writableSheet_tFileOutputExcel_1 = writeableWorkbook_tFileOutputExcel_1.createSheet("Sheet1", writeableWorkbook_tFileOutputExcel_1.getNumberOfSheets());
        }

        //modif start
        int startRowNum_tFileOutputExcel_1 = writableSheet_tFileOutputExcel_1.getRows();
		//modif end

		int[] fitWidth_tFileOutputExcel_1 = new int[10];
		for(int i_tFileOutputExcel_1=0;i_tFileOutputExcel_1<10;i_tFileOutputExcel_1++){
		    int fitCellViewSize_tFileOutputExcel_1=writableSheet_tFileOutputExcel_1.getColumnView(i_tFileOutputExcel_1).getSize();
			fitWidth_tFileOutputExcel_1[i_tFileOutputExcel_1]=fitCellViewSize_tFileOutputExcel_1/256;
			if(fitCellViewSize_tFileOutputExcel_1%256!=0){
				fitWidth_tFileOutputExcel_1[i_tFileOutputExcel_1]+=1;
			}
		}



		if (startRowNum_tFileOutputExcel_1 == 0){
	//modif end
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(0, nb_line_tFileOutputExcel_1, "SKU_Marketplace"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[0]=fitWidth_tFileOutputExcel_1[0]>15?fitWidth_tFileOutputExcel_1[0]:15;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(1, nb_line_tFileOutputExcel_1, "Codigo_Marketplace"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[1]=fitWidth_tFileOutputExcel_1[1]>18?fitWidth_tFileOutputExcel_1[1]:18;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(2, nb_line_tFileOutputExcel_1, "Empresa"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[2]=fitWidth_tFileOutputExcel_1[2]>7?fitWidth_tFileOutputExcel_1[2]:7;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(3, nb_line_tFileOutputExcel_1, "PrecoDe"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[3]=fitWidth_tFileOutputExcel_1[3]>7?fitWidth_tFileOutputExcel_1[3]:7;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(4, nb_line_tFileOutputExcel_1, "PrecoPor"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[4]=fitWidth_tFileOutputExcel_1[4]>8?fitWidth_tFileOutputExcel_1[4]:8;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(5, nb_line_tFileOutputExcel_1, "SALDO_DISPONIVEL"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[5]=fitWidth_tFileOutputExcel_1[5]>16?fitWidth_tFileOutputExcel_1[5]:16;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(6, nb_line_tFileOutputExcel_1, "VL_CUSTO"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[6]=fitWidth_tFileOutputExcel_1[6]>8?fitWidth_tFileOutputExcel_1[6]:8;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(7, nb_line_tFileOutputExcel_1, "TABELA3_PRECO_VENDA"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[7]=fitWidth_tFileOutputExcel_1[7]>19?fitWidth_tFileOutputExcel_1[7]:19;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(8, nb_line_tFileOutputExcel_1, "TABELA4_PRECO_VENDA"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[8]=fitWidth_tFileOutputExcel_1[8]>19?fitWidth_tFileOutputExcel_1[8]:19;
		//modif start
			writableSheet_tFileOutputExcel_1.addCell(new jxl.write.Label(9, nb_line_tFileOutputExcel_1, "VALIDA_PRECO"
			));
		//modif end
		fitWidth_tFileOutputExcel_1[9]=fitWidth_tFileOutputExcel_1[9]>12?fitWidth_tFileOutputExcel_1[9]:12;
		nb_line_tFileOutputExcel_1 ++;
		headerIsInserted_tFileOutputExcel_1 = true;
	}


 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row13Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row13Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row14.SKU_Marketplace = next_tHashInput_5.SKU_Marketplace;
	row14.Codigo_Marketplace = next_tHashInput_5.Codigo_Marketplace;
	row14.Empresa = next_tHashInput_5.Empresa;
	row14.PrecoDe = next_tHashInput_5.PrecoDe;
	row14.PrecoPor = next_tHashInput_5.PrecoPor;
	row14.SALDO_DISPONIVEL = next_tHashInput_5.SALDO_DISPONIVEL;
	row14.VL_CUSTO = next_tHashInput_5.VL_CUSTO;
	row14.TABELA3_PRECO_VENDA = next_tHashInput_5.TABELA3_PRECO_VENDA;
	row14.TABELA4_PRECO_VENDA = next_tHashInput_5.TABELA4_PRECO_VENDA;
	row14.VALIDA_PRECO = next_tHashInput_5.VALIDA_PRECO;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

								   				
	    				if(row14.SKU_Marketplace != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 0;
					

					
						jxl.write.WritableCell cell_0_tFileOutputExcel_1 = new jxl.write.Label(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.SKU_Marketplace
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_0_tFileOutputExcel_1);
							int currentWith_0_tFileOutputExcel_1 = cell_0_tFileOutputExcel_1.getContents().trim().length();
							fitWidth_tFileOutputExcel_1[0]=fitWidth_tFileOutputExcel_1[0]>currentWith_0_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[0]:currentWith_0_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.Codigo_Marketplace != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 1;
					

					
						jxl.write.WritableCell cell_1_tFileOutputExcel_1 = new jxl.write.Label(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.Codigo_Marketplace
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_1_tFileOutputExcel_1);
							int currentWith_1_tFileOutputExcel_1 = cell_1_tFileOutputExcel_1.getContents().trim().length();
							fitWidth_tFileOutputExcel_1[1]=fitWidth_tFileOutputExcel_1[1]>currentWith_1_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[1]:currentWith_1_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.Empresa != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 2;
					

					
						jxl.write.WritableCell cell_2_tFileOutputExcel_1 = new jxl.write.Label(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.Empresa
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_2_tFileOutputExcel_1);
							int currentWith_2_tFileOutputExcel_1 = cell_2_tFileOutputExcel_1.getContents().trim().length();
							fitWidth_tFileOutputExcel_1[2]=fitWidth_tFileOutputExcel_1[2]>currentWith_2_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[2]:currentWith_2_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.PrecoDe != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 3;
					

					
						jxl.write.WritableCell cell_3_tFileOutputExcel_1 = new jxl.write.Number(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.PrecoDe
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_3_tFileOutputExcel_1);
							int currentWith_3_tFileOutputExcel_1 = String.valueOf(((jxl.write.Number)cell_3_tFileOutputExcel_1).getValue()).trim().length();
							currentWith_3_tFileOutputExcel_1=currentWith_3_tFileOutputExcel_1>10?10:currentWith_3_tFileOutputExcel_1;
							fitWidth_tFileOutputExcel_1[3]=fitWidth_tFileOutputExcel_1[3]>currentWith_3_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[3]:currentWith_3_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.PrecoPor != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 4;
					

					
						jxl.write.WritableCell cell_4_tFileOutputExcel_1 = new jxl.write.Number(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.PrecoPor
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_4_tFileOutputExcel_1);
							int currentWith_4_tFileOutputExcel_1 = String.valueOf(((jxl.write.Number)cell_4_tFileOutputExcel_1).getValue()).trim().length();
							currentWith_4_tFileOutputExcel_1=currentWith_4_tFileOutputExcel_1>10?10:currentWith_4_tFileOutputExcel_1;
							fitWidth_tFileOutputExcel_1[4]=fitWidth_tFileOutputExcel_1[4]>currentWith_4_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[4]:currentWith_4_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.SALDO_DISPONIVEL != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 5;
					

					
						jxl.write.WritableCell cell_5_tFileOutputExcel_1 = new jxl.write.Number(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.SALDO_DISPONIVEL
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_5_tFileOutputExcel_1);
							int currentWith_5_tFileOutputExcel_1 = String.valueOf(((jxl.write.Number)cell_5_tFileOutputExcel_1).getValue()).trim().length();
							currentWith_5_tFileOutputExcel_1=currentWith_5_tFileOutputExcel_1>10?10:currentWith_5_tFileOutputExcel_1;
							fitWidth_tFileOutputExcel_1[5]=fitWidth_tFileOutputExcel_1[5]>currentWith_5_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[5]:currentWith_5_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.VL_CUSTO != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 6;
					

					
						jxl.write.WritableCell cell_6_tFileOutputExcel_1 = new jxl.write.Number(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.VL_CUSTO
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_6_tFileOutputExcel_1);
							int currentWith_6_tFileOutputExcel_1 = String.valueOf(((jxl.write.Number)cell_6_tFileOutputExcel_1).getValue()).trim().length();
							currentWith_6_tFileOutputExcel_1=currentWith_6_tFileOutputExcel_1>10?10:currentWith_6_tFileOutputExcel_1;
							fitWidth_tFileOutputExcel_1[6]=fitWidth_tFileOutputExcel_1[6]>currentWith_6_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[6]:currentWith_6_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.TABELA3_PRECO_VENDA != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 7;
					

					
						jxl.write.WritableCell cell_7_tFileOutputExcel_1 = new jxl.write.Number(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.TABELA3_PRECO_VENDA
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_7_tFileOutputExcel_1);
							int currentWith_7_tFileOutputExcel_1 = String.valueOf(((jxl.write.Number)cell_7_tFileOutputExcel_1).getValue()).trim().length();
							currentWith_7_tFileOutputExcel_1=currentWith_7_tFileOutputExcel_1>10?10:currentWith_7_tFileOutputExcel_1;
							fitWidth_tFileOutputExcel_1[7]=fitWidth_tFileOutputExcel_1[7]>currentWith_7_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[7]:currentWith_7_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.TABELA4_PRECO_VENDA != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 8;
					

					
						jxl.write.WritableCell cell_8_tFileOutputExcel_1 = new jxl.write.Number(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.TABELA4_PRECO_VENDA
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_8_tFileOutputExcel_1);
							int currentWith_8_tFileOutputExcel_1 = String.valueOf(((jxl.write.Number)cell_8_tFileOutputExcel_1).getValue()).trim().length();
							currentWith_8_tFileOutputExcel_1=currentWith_8_tFileOutputExcel_1>10?10:currentWith_8_tFileOutputExcel_1;
							fitWidth_tFileOutputExcel_1[8]=fitWidth_tFileOutputExcel_1[8]>currentWith_8_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[8]:currentWith_8_tFileOutputExcel_1+2;
	    				} 
					
								   				
	    				if(row14.VALIDA_PRECO != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_1 = 9;
					

					
						jxl.write.WritableCell cell_9_tFileOutputExcel_1 = new jxl.write.Label(columnIndex_tFileOutputExcel_1, startRowNum_tFileOutputExcel_1 + nb_line_tFileOutputExcel_1,
					
//modif end
								row14.VALIDA_PRECO
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_1.addCell(cell_9_tFileOutputExcel_1);
							int currentWith_9_tFileOutputExcel_1 = cell_9_tFileOutputExcel_1.getContents().trim().length();
							fitWidth_tFileOutputExcel_1[9]=fitWidth_tFileOutputExcel_1[9]>currentWith_9_tFileOutputExcel_1?fitWidth_tFileOutputExcel_1[9]:currentWith_9_tFileOutputExcel_1+2;
	    				} 
					
    			nb_line_tFileOutputExcel_1++;
				
 
     row17 = row14;


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

Gravacao = null;


// # Output table : 'Gravacao'
Gravacao_tmp.data_validacao = TalendDate.getCurrentDate();
Gravacao_tmp.SKU_Marketplace = row17.SKU_Marketplace;
Gravacao_tmp.Codigo_Marketplace = row17.Codigo_Marketplace;
Gravacao_tmp.PrecoDe = row17.PrecoDe;
Gravacao_tmp.PrecoPor = row17.PrecoPor;
Gravacao_tmp.SALDO_DISPONIVEL = row17.SALDO_DISPONIVEL;
Gravacao_tmp.VL_CUSTO = row17.VL_CUSTO;
Gravacao_tmp.TABELA3_PRECO_VENDA = row17.TABELA3_PRECO_VENDA;
Gravacao_tmp.TABELA4_PRECO_VENDA = row17.TABELA4_PRECO_VENDA;
Gravacao_tmp.VALIDA_PRECO = row17.VALIDA_PRECO;
Gravacao_tmp.uuid = java.util.UUID.randomUUID().toString();;
Gravacao_tmp.Empresa = row17.Empresa ;
Gravacao = Gravacao_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "Gravacao"
if(Gravacao != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Gravacao"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(Gravacao.data_validacao != null) {
pstmt_tDBOutput_3.setTimestamp(1, new java.sql.Timestamp(Gravacao.data_validacao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.TIMESTAMP);
}

                    if(Gravacao.SKU_Marketplace == null) {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(2, Gravacao.SKU_Marketplace);
}

                    if(Gravacao.Codigo_Marketplace == null) {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(3, Gravacao.Codigo_Marketplace);
}

                    if(Gravacao.PrecoDe == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_3.setDouble(4, Gravacao.PrecoDe);
}

                    if(Gravacao.PrecoPor == null) {
pstmt_tDBOutput_3.setNull(5, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_3.setDouble(5, Gravacao.PrecoPor);
}

                    if(Gravacao.SALDO_DISPONIVEL == null) {
pstmt_tDBOutput_3.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(6, Gravacao.SALDO_DISPONIVEL);
}

                    if(Gravacao.VL_CUSTO == null) {
pstmt_tDBOutput_3.setNull(7, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_3.setDouble(7, Gravacao.VL_CUSTO);
}

                    if(Gravacao.TABELA3_PRECO_VENDA == null) {
pstmt_tDBOutput_3.setNull(8, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_3.setDouble(8, Gravacao.TABELA3_PRECO_VENDA);
}

                    if(Gravacao.TABELA4_PRECO_VENDA == null) {
pstmt_tDBOutput_3.setNull(9, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_3.setDouble(9, Gravacao.TABELA4_PRECO_VENDA);
}

                    if(Gravacao.VALIDA_PRECO == null) {
pstmt_tDBOutput_3.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(10, Gravacao.VALIDA_PRECO);
}

                    if(Gravacao.uuid == null) {
pstmt_tDBOutput_3.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(11, Gravacao.uuid);
}

                    if(Gravacao.Empresa == null) {
pstmt_tDBOutput_3.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(12, Gravacao.Empresa);
}

			
    		pstmt_tDBOutput_3.addBatch();
    		nb_line_tDBOutput_3++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_3++;
    		  
    			if ((batchSize_tDBOutput_3 > 0) && (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {
                try {
						int countSum_tDBOutput_3 = 0;
						    
						for(int countEach_tDBOutput_3: pstmt_tDBOutput_3.executeBatch()) {
							countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
						}
				    	rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
				    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
            	    	batchSizeCounter_tDBOutput_3 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_3){
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e_tDBOutput_3.getMessage());
				    	java.sql.SQLException ne_tDBOutput_3 = e_tDBOutput_3.getNextException(),sqle_tDBOutput_3=null;
				    	String errormessage_tDBOutput_3;
						if (ne_tDBOutput_3 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_3 = new java.sql.SQLException(e_tDBOutput_3.getMessage() + "\ncaused by: " + ne_tDBOutput_3.getMessage(), ne_tDBOutput_3.getSQLState(), ne_tDBOutput_3.getErrorCode(), ne_tDBOutput_3);
							errormessage_tDBOutput_3 = sqle_tDBOutput_3.getMessage();
						}else{
							errormessage_tDBOutput_3 = e_tDBOutput_3.getMessage();
						}
				    	
				    	int countSum_tDBOutput_3 = 0;
						for(int countEach_tDBOutput_3: e_tDBOutput_3.getUpdateCounts()) {
							countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
						}
						rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
						
				    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
				    	System.err.println(errormessage_tDBOutput_3);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "Gravacao"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

		writeableWorkbook_tFileOutputExcel_1.write();
		writeableWorkbook_tFileOutputExcel_1.close();
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



	    try {
				int countSum_tDBOutput_3 = 0;
				if (pstmt_tDBOutput_3 != null && batchSizeCounter_tDBOutput_3 > 0) {
						
					for(int countEach_tDBOutput_3: pstmt_tDBOutput_3.executeBatch()) {
						countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
					}
					rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
						
				}
		    	
		    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_3){
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e_tDBOutput_3.getMessage());
	    	java.sql.SQLException ne_tDBOutput_3 = e_tDBOutput_3.getNextException(),sqle_tDBOutput_3=null;
	    	String errormessage_tDBOutput_3;
			if (ne_tDBOutput_3 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_3 = new java.sql.SQLException(e_tDBOutput_3.getMessage() + "\ncaused by: " + ne_tDBOutput_3.getMessage(), ne_tDBOutput_3.getSQLState(), ne_tDBOutput_3.getErrorCode(), ne_tDBOutput_3);
				errormessage_tDBOutput_3 = sqle_tDBOutput_3.getMessage();
			}else{
				errormessage_tDBOutput_3 = e_tDBOutput_3.getMessage();
			}
	    	
	    	int countSum_tDBOutput_3 = 0;
			for(int countEach_tDBOutput_3: e_tDBOutput_3.getUpdateCounts()) {
				countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
			}
			rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
			
	    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
	    	
	    	System.err.println(errormessage_tDBOutput_3);
	    	
		}
	    
        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Gravacao");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tHashInput_7Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String SKU_Marketplace;

				public String getSKU_Marketplace () {
					return this.SKU_Marketplace;
				}

				public Boolean SKU_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean SKU_MarketplaceIsKey(){
				    return false;
				}
				public Integer SKU_MarketplaceLength(){
				    return null;
				}
				public Integer SKU_MarketplacePrecision(){
				    return null;
				}
				public String SKU_MarketplaceDefault(){
				
					return null;
				
				}
				public String SKU_MarketplaceComment(){
				
				    return "";
				
				}
				public String SKU_MarketplacePattern(){
				
					return "";
				
				}
				public String SKU_MarketplaceOriginalDbColumnName(){
				
					return "SKU_Marketplace";
				
				}

				
			    public String Codigo_Marketplace;

				public String getCodigo_Marketplace () {
					return this.Codigo_Marketplace;
				}

				public Boolean Codigo_MarketplaceIsNullable(){
				    return true;
				}
				public Boolean Codigo_MarketplaceIsKey(){
				    return false;
				}
				public Integer Codigo_MarketplaceLength(){
				    return null;
				}
				public Integer Codigo_MarketplacePrecision(){
				    return null;
				}
				public String Codigo_MarketplaceDefault(){
				
					return null;
				
				}
				public String Codigo_MarketplaceComment(){
				
				    return "";
				
				}
				public String Codigo_MarketplacePattern(){
				
					return "";
				
				}
				public String Codigo_MarketplaceOriginalDbColumnName(){
				
					return "Codigo_Marketplace";
				
				}

				
			    public String Empresa;

				public String getEmpresa () {
					return this.Empresa;
				}

				public Boolean EmpresaIsNullable(){
				    return true;
				}
				public Boolean EmpresaIsKey(){
				    return false;
				}
				public Integer EmpresaLength(){
				    return null;
				}
				public Integer EmpresaPrecision(){
				    return null;
				}
				public String EmpresaDefault(){
				
					return null;
				
				}
				public String EmpresaComment(){
				
				    return "";
				
				}
				public String EmpresaPattern(){
				
					return "";
				
				}
				public String EmpresaOriginalDbColumnName(){
				
					return "Empresa";
				
				}

				
			    public Double PrecoDe;

				public Double getPrecoDe () {
					return this.PrecoDe;
				}

				public Boolean PrecoDeIsNullable(){
				    return true;
				}
				public Boolean PrecoDeIsKey(){
				    return false;
				}
				public Integer PrecoDeLength(){
				    return null;
				}
				public Integer PrecoDePrecision(){
				    return null;
				}
				public String PrecoDeDefault(){
				
					return null;
				
				}
				public String PrecoDeComment(){
				
				    return "";
				
				}
				public String PrecoDePattern(){
				
					return "";
				
				}
				public String PrecoDeOriginalDbColumnName(){
				
					return "PrecoDe";
				
				}

				
			    public Double PrecoPor;

				public Double getPrecoPor () {
					return this.PrecoPor;
				}

				public Boolean PrecoPorIsNullable(){
				    return true;
				}
				public Boolean PrecoPorIsKey(){
				    return false;
				}
				public Integer PrecoPorLength(){
				    return null;
				}
				public Integer PrecoPorPrecision(){
				    return null;
				}
				public String PrecoPorDefault(){
				
					return null;
				
				}
				public String PrecoPorComment(){
				
				    return "";
				
				}
				public String PrecoPorPattern(){
				
					return "";
				
				}
				public String PrecoPorOriginalDbColumnName(){
				
					return "PrecoPor";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.SKU_Marketplace = readString(dis);
					
					this.Codigo_Marketplace = readString(dis);
					
					this.Empresa = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoDe = null;
           				} else {
           			    	this.PrecoDe = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PrecoPor = null;
           				} else {
           			    	this.PrecoPor = dis.readDouble();
           				}
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU_Marketplace,dos);
					
					// String
				
						writeString(this.Codigo_Marketplace,dos);
					
					// String
				
						writeString(this.Empresa,dos);
					
					// Double
				
						if(this.PrecoDe == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoDe);
		            	}
					
					// Double
				
						if(this.PrecoPor == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PrecoPor);
		            	}
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU_Marketplace="+SKU_Marketplace);
		sb.append(",Codigo_Marketplace="+Codigo_Marketplace);
		sb.append(",Empresa="+Empresa);
		sb.append(",PrecoDe="+String.valueOf(PrecoDe));
		sb.append(",PrecoPor="+String.valueOf(PrecoPor));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tFileOutputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_3", false);
		start_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tFileOutputExcel_3 = 0;
		


		
		int columnIndex_tFileOutputExcel_3 = 0;
		boolean headerIsInserted_tFileOutputExcel_3 = false;
		
		
		int nb_line_tFileOutputExcel_3 = 0;

		String fileName_tFileOutputExcel_3="Z:/Validacao-"+context.data_execucao+".xls";
		java.io.File file_tFileOutputExcel_3 = new java.io.File(fileName_tFileOutputExcel_3);
		boolean isFileGenerated_tFileOutputExcel_3 = true;
		if(file_tFileOutputExcel_3.exists()){
			isFileGenerated_tFileOutputExcel_3 = false;
		}
//create directory only if not exists
          java.io.File parentFile_tFileOutputExcel_3 = file_tFileOutputExcel_3.getParentFile();
          if (parentFile_tFileOutputExcel_3 != null && !parentFile_tFileOutputExcel_3.exists()) {
        	
             parentFile_tFileOutputExcel_3.mkdirs();
        	
          }

		jxl.write.WritableWorkbook writeableWorkbook_tFileOutputExcel_3 = null;
		jxl.write.WritableSheet writableSheet_tFileOutputExcel_3 = null;

		jxl.WorkbookSettings workbookSettings_tFileOutputExcel_3 = new jxl.WorkbookSettings();
        workbookSettings_tFileOutputExcel_3.setEncoding("ISO-8859-15");
        if (file_tFileOutputExcel_3.exists()) {
        jxl.Workbook workbook_tFileOutputExcel_3 = jxl.Workbook.getWorkbook(file_tFileOutputExcel_3,workbookSettings_tFileOutputExcel_3);
        workbookSettings_tFileOutputExcel_3.setWriteAccess(null);
        writeableWorkbook_tFileOutputExcel_3 = new jxl.write.biff.WritableWorkbookImpl(
                	new java.io.BufferedOutputStream(new java.io.FileOutputStream(file_tFileOutputExcel_3, false)),
                	workbook_tFileOutputExcel_3,
                	true,
                    workbookSettings_tFileOutputExcel_3);
        }else{
		writeableWorkbook_tFileOutputExcel_3 = new jxl.write.biff.WritableWorkbookImpl(
            		new java.io.BufferedOutputStream(new java.io.FileOutputStream(fileName_tFileOutputExcel_3)),
            		true,
            		workbookSettings_tFileOutputExcel_3);
        }

        writableSheet_tFileOutputExcel_3 = writeableWorkbook_tFileOutputExcel_3.getSheet("Erro");
        if(writableSheet_tFileOutputExcel_3 == null){
        	writableSheet_tFileOutputExcel_3 = writeableWorkbook_tFileOutputExcel_3.createSheet("Erro", writeableWorkbook_tFileOutputExcel_3.getNumberOfSheets());
		}

        else {

            String[] sheetNames_tFileOutputExcel_3 = writeableWorkbook_tFileOutputExcel_3.getSheetNames();
            for (int i = 0; i < sheetNames_tFileOutputExcel_3.length; i++) {
                if (sheetNames_tFileOutputExcel_3[i].equals("Erro")) {
                    writeableWorkbook_tFileOutputExcel_3.removeSheet(i);
                    break;
                }
            }

			writableSheet_tFileOutputExcel_3 = writeableWorkbook_tFileOutputExcel_3.createSheet("Erro", writeableWorkbook_tFileOutputExcel_3.getNumberOfSheets());
        }

        //modif start
        int startRowNum_tFileOutputExcel_3 = writableSheet_tFileOutputExcel_3.getRows();
		//modif end

		int[] fitWidth_tFileOutputExcel_3 = new int[6];
		for(int i_tFileOutputExcel_3=0;i_tFileOutputExcel_3<6;i_tFileOutputExcel_3++){
		    int fitCellViewSize_tFileOutputExcel_3=writableSheet_tFileOutputExcel_3.getColumnView(i_tFileOutputExcel_3).getSize();
			fitWidth_tFileOutputExcel_3[i_tFileOutputExcel_3]=fitCellViewSize_tFileOutputExcel_3/256;
			if(fitCellViewSize_tFileOutputExcel_3%256!=0){
				fitWidth_tFileOutputExcel_3[i_tFileOutputExcel_3]+=1;
			}
		}



		if (startRowNum_tFileOutputExcel_3 == 0){
	//modif end
		//modif start
			writableSheet_tFileOutputExcel_3.addCell(new jxl.write.Label(0, nb_line_tFileOutputExcel_3, "SKU_Marketplace"
			));
		//modif end
		fitWidth_tFileOutputExcel_3[0]=fitWidth_tFileOutputExcel_3[0]>15?fitWidth_tFileOutputExcel_3[0]:15;
		//modif start
			writableSheet_tFileOutputExcel_3.addCell(new jxl.write.Label(1, nb_line_tFileOutputExcel_3, "Codigo_Marketplace"
			));
		//modif end
		fitWidth_tFileOutputExcel_3[1]=fitWidth_tFileOutputExcel_3[1]>18?fitWidth_tFileOutputExcel_3[1]:18;
		//modif start
			writableSheet_tFileOutputExcel_3.addCell(new jxl.write.Label(2, nb_line_tFileOutputExcel_3, "Empresa"
			));
		//modif end
		fitWidth_tFileOutputExcel_3[2]=fitWidth_tFileOutputExcel_3[2]>7?fitWidth_tFileOutputExcel_3[2]:7;
		//modif start
			writableSheet_tFileOutputExcel_3.addCell(new jxl.write.Label(3, nb_line_tFileOutputExcel_3, "PrecoDe"
			));
		//modif end
		fitWidth_tFileOutputExcel_3[3]=fitWidth_tFileOutputExcel_3[3]>7?fitWidth_tFileOutputExcel_3[3]:7;
		//modif start
			writableSheet_tFileOutputExcel_3.addCell(new jxl.write.Label(4, nb_line_tFileOutputExcel_3, "PrecoPor"
			));
		//modif end
		fitWidth_tFileOutputExcel_3[4]=fitWidth_tFileOutputExcel_3[4]>8?fitWidth_tFileOutputExcel_3[4]:8;
		//modif start
			writableSheet_tFileOutputExcel_3.addCell(new jxl.write.Label(5, nb_line_tFileOutputExcel_3, "errorMessage"
			));
		//modif end
		fitWidth_tFileOutputExcel_3[5]=fitWidth_tFileOutputExcel_3[5]>12?fitWidth_tFileOutputExcel_3[5]:12;
		nb_line_tFileOutputExcel_3 ++;
		headerIsInserted_tFileOutputExcel_3 = true;
	}


 



/**
 * [tFileOutputExcel_3 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row25Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row25Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row25Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row26.SKU_Marketplace = next_tHashInput_7.SKU_Marketplace;
	row26.Codigo_Marketplace = next_tHashInput_7.Codigo_Marketplace;
	row26.Empresa = next_tHashInput_7.Empresa;
	row26.PrecoDe = next_tHashInput_7.PrecoDe;
	row26.PrecoPor = next_tHashInput_7.PrecoPor;
	row26.errorMessage = next_tHashInput_7.errorMessage;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

								   				
	    				if(row26.SKU_Marketplace != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_3 = 0;
					

					
						jxl.write.WritableCell cell_0_tFileOutputExcel_3 = new jxl.write.Label(columnIndex_tFileOutputExcel_3, startRowNum_tFileOutputExcel_3 + nb_line_tFileOutputExcel_3,
					
//modif end
								row26.SKU_Marketplace
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_3.addCell(cell_0_tFileOutputExcel_3);
							int currentWith_0_tFileOutputExcel_3 = cell_0_tFileOutputExcel_3.getContents().trim().length();
							fitWidth_tFileOutputExcel_3[0]=fitWidth_tFileOutputExcel_3[0]>currentWith_0_tFileOutputExcel_3?fitWidth_tFileOutputExcel_3[0]:currentWith_0_tFileOutputExcel_3+2;
	    				} 
					
								   				
	    				if(row26.Codigo_Marketplace != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_3 = 1;
					

					
						jxl.write.WritableCell cell_1_tFileOutputExcel_3 = new jxl.write.Label(columnIndex_tFileOutputExcel_3, startRowNum_tFileOutputExcel_3 + nb_line_tFileOutputExcel_3,
					
//modif end
								row26.Codigo_Marketplace
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_3.addCell(cell_1_tFileOutputExcel_3);
							int currentWith_1_tFileOutputExcel_3 = cell_1_tFileOutputExcel_3.getContents().trim().length();
							fitWidth_tFileOutputExcel_3[1]=fitWidth_tFileOutputExcel_3[1]>currentWith_1_tFileOutputExcel_3?fitWidth_tFileOutputExcel_3[1]:currentWith_1_tFileOutputExcel_3+2;
	    				} 
					
								   				
	    				if(row26.Empresa != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_3 = 2;
					

					
						jxl.write.WritableCell cell_2_tFileOutputExcel_3 = new jxl.write.Label(columnIndex_tFileOutputExcel_3, startRowNum_tFileOutputExcel_3 + nb_line_tFileOutputExcel_3,
					
//modif end
								row26.Empresa
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_3.addCell(cell_2_tFileOutputExcel_3);
							int currentWith_2_tFileOutputExcel_3 = cell_2_tFileOutputExcel_3.getContents().trim().length();
							fitWidth_tFileOutputExcel_3[2]=fitWidth_tFileOutputExcel_3[2]>currentWith_2_tFileOutputExcel_3?fitWidth_tFileOutputExcel_3[2]:currentWith_2_tFileOutputExcel_3+2;
	    				} 
					
								   				
	    				if(row26.PrecoDe != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_3 = 3;
					

					
						jxl.write.WritableCell cell_3_tFileOutputExcel_3 = new jxl.write.Number(columnIndex_tFileOutputExcel_3, startRowNum_tFileOutputExcel_3 + nb_line_tFileOutputExcel_3,
					
//modif end
								row26.PrecoDe
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_3.addCell(cell_3_tFileOutputExcel_3);
							int currentWith_3_tFileOutputExcel_3 = String.valueOf(((jxl.write.Number)cell_3_tFileOutputExcel_3).getValue()).trim().length();
							currentWith_3_tFileOutputExcel_3=currentWith_3_tFileOutputExcel_3>10?10:currentWith_3_tFileOutputExcel_3;
							fitWidth_tFileOutputExcel_3[3]=fitWidth_tFileOutputExcel_3[3]>currentWith_3_tFileOutputExcel_3?fitWidth_tFileOutputExcel_3[3]:currentWith_3_tFileOutputExcel_3+2;
	    				} 
					
								   				
	    				if(row26.PrecoPor != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_3 = 4;
					

					
						jxl.write.WritableCell cell_4_tFileOutputExcel_3 = new jxl.write.Number(columnIndex_tFileOutputExcel_3, startRowNum_tFileOutputExcel_3 + nb_line_tFileOutputExcel_3,
					
//modif end
								row26.PrecoPor
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_3.addCell(cell_4_tFileOutputExcel_3);
							int currentWith_4_tFileOutputExcel_3 = String.valueOf(((jxl.write.Number)cell_4_tFileOutputExcel_3).getValue()).trim().length();
							currentWith_4_tFileOutputExcel_3=currentWith_4_tFileOutputExcel_3>10?10:currentWith_4_tFileOutputExcel_3;
							fitWidth_tFileOutputExcel_3[4]=fitWidth_tFileOutputExcel_3[4]>currentWith_4_tFileOutputExcel_3?fitWidth_tFileOutputExcel_3[4]:currentWith_4_tFileOutputExcel_3+2;
	    				} 
					
								   				
	    				if(row26.errorMessage != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_3 = 5;
					

					
						jxl.write.WritableCell cell_5_tFileOutputExcel_3 = new jxl.write.Label(columnIndex_tFileOutputExcel_3, startRowNum_tFileOutputExcel_3 + nb_line_tFileOutputExcel_3,
					
//modif end
								row26.errorMessage
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_3.addCell(cell_5_tFileOutputExcel_3);
							int currentWith_5_tFileOutputExcel_3 = cell_5_tFileOutputExcel_3.getContents().trim().length();
							fitWidth_tFileOutputExcel_3[5]=fitWidth_tFileOutputExcel_3[5]>currentWith_5_tFileOutputExcel_3?fitWidth_tFileOutputExcel_3[5]:currentWith_5_tFileOutputExcel_3+2;
	    				} 
					
    			nb_line_tFileOutputExcel_3++;
				
 


	tos_count_tFileOutputExcel_3++;

/**
 * [tFileOutputExcel_3 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

		writeableWorkbook_tFileOutputExcel_3.write();
		writeableWorkbook_tFileOutputExcel_3.close();
		if(headerIsInserted_tFileOutputExcel_3 && nb_line_tFileOutputExcel_3 > 0){
			nb_line_tFileOutputExcel_3 = nb_line_tFileOutputExcel_3 -1;
		}
		globalMap.put("tFileOutputExcel_3_NB_LINE",nb_line_tFileOutputExcel_3);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_3", true);
end_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());




/**
 * [tFileOutputExcel_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfupdate_log_0Struct implements routines.system.IPersistableRow<copyOfupdate_log_0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 255;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfupdate_log_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
copyOfupdate_log_0Struct copyOfupdate_log_0 = new copyOfupdate_log_0Struct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfupdate_log_0");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao");
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao");
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	


   int batchSize_tDBOutput_2 = 10000;
   int batchSizeCounter_tDBOutput_2=0;

int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfupdate_log_0Struct copyOfupdate_log_0_tmp = new copyOfupdate_log_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.nm_programa = next_tHashInput_1.nm_programa;
	row6.data_inicio_execucao = next_tHashInput_1.data_inicio_execucao;
	row6.data_termino_execucao = next_tHashInput_1.data_termino_execucao;
	row6.mensagem = next_tHashInput_1.mensagem;
	row6.uuid = next_tHashInput_1.uuid;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

copyOfupdate_log_0 = null;


// # Output table : 'copyOfupdate_log_0'
copyOfupdate_log_0_tmp.nm_programa = context.programa;
copyOfupdate_log_0_tmp.data_inicio_execucao = row6.data_inicio_execucao;
copyOfupdate_log_0_tmp.data_termino_execucao = TalendDate.getCurrentDate();
copyOfupdate_log_0_tmp.mensagem = row6.mensagem;
copyOfupdate_log_0_tmp.uuid = row6.uuid;
copyOfupdate_log_0 = copyOfupdate_log_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "copyOfupdate_log_0"
if(copyOfupdate_log_0 != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfupdate_log_0"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(copyOfupdate_log_0.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, copyOfupdate_log_0.nm_programa);
}

                    if(copyOfupdate_log_0.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(copyOfupdate_log_0.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(copyOfupdate_log_0.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(copyOfupdate_log_0.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(copyOfupdate_log_0.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, copyOfupdate_log_0.mensagem);
}

                    if(copyOfupdate_log_0.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, copyOfupdate_log_0.uuid);
}


    		pstmt_tDBOutput_2.addBatch();
    		nb_line_tDBOutput_2++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_2++;
    		  
    			if ((batchSize_tDBOutput_2 > 0) && (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {
                try {
						int countSum_tDBOutput_2 = 0;
						    
						for(int countEach_tDBOutput_2: pstmt_tDBOutput_2.executeBatch()) {
							countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
						}
				    	rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
				    	
				    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
				    	
            	    	batchSizeCounter_tDBOutput_2 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_2){
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e_tDBOutput_2.getMessage());
				    	java.sql.SQLException ne_tDBOutput_2 = e_tDBOutput_2.getNextException(),sqle_tDBOutput_2=null;
				    	String errormessage_tDBOutput_2;
						if (ne_tDBOutput_2 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_2 = new java.sql.SQLException(e_tDBOutput_2.getMessage() + "\ncaused by: " + ne_tDBOutput_2.getMessage(), ne_tDBOutput_2.getSQLState(), ne_tDBOutput_2.getErrorCode(), ne_tDBOutput_2);
							errormessage_tDBOutput_2 = sqle_tDBOutput_2.getMessage();
						}else{
							errormessage_tDBOutput_2 = e_tDBOutput_2.getMessage();
						}
				    	
				    	int countSum_tDBOutput_2 = 0;
						for(int countEach_tDBOutput_2: e_tDBOutput_2.getUpdateCounts()) {
							countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
						}
						rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
						
				    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
				    	
				    	System.err.println(errormessage_tDBOutput_2);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "copyOfupdate_log_0"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



	    try {
				int countSum_tDBOutput_2 = 0;
				if (pstmt_tDBOutput_2 != null && batchSizeCounter_tDBOutput_2 > 0) {
						
					for(int countEach_tDBOutput_2: pstmt_tDBOutput_2.executeBatch()) {
						countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
					}
					rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
						
				}
		    	
		    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_2){
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e_tDBOutput_2.getMessage());
	    	java.sql.SQLException ne_tDBOutput_2 = e_tDBOutput_2.getNextException(),sqle_tDBOutput_2=null;
	    	String errormessage_tDBOutput_2;
			if (ne_tDBOutput_2 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_2 = new java.sql.SQLException(e_tDBOutput_2.getMessage() + "\ncaused by: " + ne_tDBOutput_2.getMessage(), ne_tDBOutput_2.getSQLState(), ne_tDBOutput_2.getErrorCode(), ne_tDBOutput_2);
				errormessage_tDBOutput_2 = sqle_tDBOutput_2.getMessage();
			}else{
				errormessage_tDBOutput_2 = e_tDBOutput_2.getMessage();
			}
	    	
	    	int countSum_tDBOutput_2 = 0;
			for(int countEach_tDBOutput_2: e_tDBOutput_2.getUpdateCounts()) {
				countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
			}
			rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
			
	    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
	    	
	    	System.err.println(errormessage_tDBOutput_2);
	    	
		}
	    
        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfupdate_log_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return false;
				}
				public Integer CD_EMPRESALength(){
				    return null;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double TABELA3_PRECO_VENDA;

				public Double getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public Double TABELA4_PRECO_VENDA;

				public Double getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return null;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return null;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_anymarket, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_anymarket) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.TABELA3_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA3_PRECO_VENDA = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.TABELA4_PRECO_VENDA = null;
           				} else {
           			    	this.TABELA4_PRECO_VENDA = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
						if(this.TABELA3_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
						if(this.TABELA4_PRECO_VENDA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
						if(this.VL_CUSTO == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.VL_CUSTO);
		            	}
					
						if(this.TABELA3_PRECO_VENDA == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.TABELA3_PRECO_VENDA);
		            	}
					
						if(this.TABELA4_PRECO_VENDA == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.TABELA4_PRECO_VENDA);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_4) outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_6 - inputs:(row8,row9) outputs:(Report,report1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row2Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row2Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row9.CD_PRODUTO = next_tHashInput_3.CD_PRODUTO;
	row9.CD_EMPRESA = next_tHashInput_3.CD_EMPRESA;
	row9.SALDO_DISPONIVEL = next_tHashInput_3.SALDO_DISPONIVEL;
	row9.VL_CUSTO = next_tHashInput_3.VL_CUSTO;
	row9.TABELA3_PRECO_VENDA = next_tHashInput_3.TABELA3_PRECO_VENDA;
	row9.TABELA4_PRECO_VENDA = next_tHashInput_3.TABELA4_PRECO_VENDA;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.CD_PRODUTO = row9.CD_PRODUTO;
				
				row9_HashRow.CD_EMPRESA = row9.CD_EMPRESA;
				
				row9_HashRow.SALDO_DISPONIVEL = row9.SALDO_DISPONIVEL;
				
				row9_HashRow.VL_CUSTO = row9.VL_CUSTO;
				
				row9_HashRow.TABELA3_PRECO_VENDA = row9.TABELA3_PRECO_VENDA;
				
				row9_HashRow.TABELA4_PRECO_VENDA = row9.TABELA4_PRECO_VENDA;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_anymarket_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

tHash_Lookup_row9.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_2", false);
		start_Hash.put("tPostjob_2", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_2";
	
	
		int tos_count_tPostjob_2 = 0;
		

 



/**
 * [tPostjob_2 begin ] stop
 */
	
	/**
	 * [tPostjob_2 main ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 


	tos_count_tPostjob_2++;

/**
 * [tPostjob_2 main ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_2 end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 

ok_Hash.put("tPostjob_2", true);
end_Hash.put("tPostjob_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tDBClose_1Process(globalMap);



/**
 * [tPostjob_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_2 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	



	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
        conn_tDBClose_1.close();
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_valida_anymarket relatorio_valida_anymarketClass = new relatorio_valida_anymarket();

        int exitCode = relatorio_valida_anymarketClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_valida_anymarket.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_valida_anymarket_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_valida_anymarket.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("DW_DB", "id_String");
                        if(context.getStringValue("DW_DB") == null) {
                            context.DW_DB = null;
                        } else {
                            context.DW_DB=(String) context.getProperty("DW_DB");
                        }
                        context.setContextType("DW_HOST", "id_String");
                        if(context.getStringValue("DW_HOST") == null) {
                            context.DW_HOST = null;
                        } else {
                            context.DW_HOST=(String) context.getProperty("DW_HOST");
                        }
                        context.setContextType("DW_PASSWORD", "id_String");
                        if(context.getStringValue("DW_PASSWORD") == null) {
                            context.DW_PASSWORD = null;
                        } else {
                            context.DW_PASSWORD=(String) context.getProperty("DW_PASSWORD");
                        }
                        context.setContextType("DW_PORT", "id_String");
                        if(context.getStringValue("DW_PORT") == null) {
                            context.DW_PORT = null;
                        } else {
                            context.DW_PORT=(String) context.getProperty("DW_PORT");
                        }
                        context.setContextType("DW_USER", "id_String");
                        if(context.getStringValue("DW_USER") == null) {
                            context.DW_USER = null;
                        } else {
                            context.DW_USER=(String) context.getProperty("DW_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("EMAIL_PASSWORD", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD") == null) {
                            context.EMAIL_PASSWORD = null;
                        } else {
                            context.EMAIL_PASSWORD=(String) context.getProperty("EMAIL_PASSWORD");
                        }
                        context.setContextType("EMAIL", "id_String");
                        if(context.getStringValue("EMAIL") == null) {
                            context.EMAIL = null;
                        } else {
                            context.EMAIL=(String) context.getProperty("EMAIL");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("DW_POSTGRE_HOST", "id_String");
                        if(context.getStringValue("DW_POSTGRE_HOST") == null) {
                            context.DW_POSTGRE_HOST = null;
                        } else {
                            context.DW_POSTGRE_HOST=(String) context.getProperty("DW_POSTGRE_HOST");
                        }
                        context.setContextType("DW_POSTGRE_PORT", "id_String");
                        if(context.getStringValue("DW_POSTGRE_PORT") == null) {
                            context.DW_POSTGRE_PORT = null;
                        } else {
                            context.DW_POSTGRE_PORT=(String) context.getProperty("DW_POSTGRE_PORT");
                        }
                        context.setContextType("DW_POSTGRE_DB", "id_String");
                        if(context.getStringValue("DW_POSTGRE_DB") == null) {
                            context.DW_POSTGRE_DB = null;
                        } else {
                            context.DW_POSTGRE_DB=(String) context.getProperty("DW_POSTGRE_DB");
                        }
                        context.setContextType("DW_POSTGRE_USER", "id_String");
                        if(context.getStringValue("DW_POSTGRE_USER") == null) {
                            context.DW_POSTGRE_USER = null;
                        } else {
                            context.DW_POSTGRE_USER=(String) context.getProperty("DW_POSTGRE_USER");
                        }
                        context.setContextType("DW_POSTGRE_PASSWORD", "id_String");
                        if(context.getStringValue("DW_POSTGRE_PASSWORD") == null) {
                            context.DW_POSTGRE_PASSWORD = null;
                        } else {
                            context.DW_POSTGRE_PASSWORD=(String) context.getProperty("DW_POSTGRE_PASSWORD");
                        }
                        context.setContextType("qtde_linhas", "id_Integer");
                        if(context.getStringValue("qtde_linhas") == null) {
                            context.qtde_linhas = null;
                        } else {
                            try{
                                context.qtde_linhas=routines.system.ParserUtils.parseTo_Integer (context.getProperty("qtde_linhas"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "qtde_linhas", e.getMessage()));
                                context.qtde_linhas=null;
                            }
                        }
                        context.setContextType("contador", "id_Integer");
                        if(context.getStringValue("contador") == null) {
                            context.contador = null;
                        } else {
                            try{
                                context.contador=routines.system.ParserUtils.parseTo_Integer (context.getProperty("contador"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "contador", e.getMessage()));
                                context.contador=null;
                            }
                        }
                        context.setContextType("porcentagem", "id_Integer");
                        if(context.getStringValue("porcentagem") == null) {
                            context.porcentagem = null;
                        } else {
                            try{
                                context.porcentagem=routines.system.ParserUtils.parseTo_Integer (context.getProperty("porcentagem"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "porcentagem", e.getMessage()));
                                context.porcentagem=null;
                            }
                        }
                        context.setContextType("cont", "id_Integer");
                        if(context.getStringValue("cont") == null) {
                            context.cont = null;
                        } else {
                            try{
                                context.cont=routines.system.ParserUtils.parseTo_Integer (context.getProperty("cont"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "cont", e.getMessage()));
                                context.cont=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("DW_DB")) {
                context.DW_DB = (String) parentContextMap.get("DW_DB");
            }if (parentContextMap.containsKey("DW_HOST")) {
                context.DW_HOST = (String) parentContextMap.get("DW_HOST");
            }if (parentContextMap.containsKey("DW_PASSWORD")) {
                context.DW_PASSWORD = (String) parentContextMap.get("DW_PASSWORD");
            }if (parentContextMap.containsKey("DW_PORT")) {
                context.DW_PORT = (String) parentContextMap.get("DW_PORT");
            }if (parentContextMap.containsKey("DW_USER")) {
                context.DW_USER = (String) parentContextMap.get("DW_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD")) {
                context.EMAIL_PASSWORD = (String) parentContextMap.get("EMAIL_PASSWORD");
            }if (parentContextMap.containsKey("EMAIL")) {
                context.EMAIL = (String) parentContextMap.get("EMAIL");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("DW_POSTGRE_HOST")) {
                context.DW_POSTGRE_HOST = (String) parentContextMap.get("DW_POSTGRE_HOST");
            }if (parentContextMap.containsKey("DW_POSTGRE_PORT")) {
                context.DW_POSTGRE_PORT = (String) parentContextMap.get("DW_POSTGRE_PORT");
            }if (parentContextMap.containsKey("DW_POSTGRE_DB")) {
                context.DW_POSTGRE_DB = (String) parentContextMap.get("DW_POSTGRE_DB");
            }if (parentContextMap.containsKey("DW_POSTGRE_USER")) {
                context.DW_POSTGRE_USER = (String) parentContextMap.get("DW_POSTGRE_USER");
            }if (parentContextMap.containsKey("DW_POSTGRE_PASSWORD")) {
                context.DW_POSTGRE_PASSWORD = (String) parentContextMap.get("DW_POSTGRE_PASSWORD");
            }if (parentContextMap.containsKey("qtde_linhas")) {
                context.qtde_linhas = (Integer) parentContextMap.get("qtde_linhas");
            }if (parentContextMap.containsKey("contador")) {
                context.contador = (Integer) parentContextMap.get("contador");
            }if (parentContextMap.containsKey("porcentagem")) {
                context.porcentagem = (Integer) parentContextMap.get("porcentagem");
            }if (parentContextMap.containsKey("cont")) {
                context.cont = (Integer) parentContextMap.get("cont");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_2Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_2) {
globalMap.put("tPostjob_2_SUBPROCESS_STATE", -1);

e_tPostjob_2.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_valida_anymarket");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     828400 characters generated by Talend Open Studio for Big Data 
 *     on the 19 de março de 2024 15:13:10 BRT
 ************************************************************************************************/