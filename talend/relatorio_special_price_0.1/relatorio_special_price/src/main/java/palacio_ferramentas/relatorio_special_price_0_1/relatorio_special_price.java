// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_special_price_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJava_3
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;
import java.math.BigDecimal;
import java.math.RoundingMode;

	//the import part of tJavaRow_3
	//import java.util.List;
import java.math.BigDecimal;
import java.math.RoundingMode;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_special_price Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_special_price implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(data_atual != null){
				
					this.setProperty("data_atual", data_atual.toString());
				
			}
			
			if(data_atual1 != null){
				
					this.setProperty("data_atual1", data_atual1.toString());
				
			}
			
			if(Arquivo != null){
				
					this.setProperty("Arquivo", Arquivo.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(Pasta_Rede != null){
				
					this.setProperty("Pasta_Rede", Pasta_Rede.toString());
				
			}
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(EMAIL_PASSWORD_P != null){
				
					this.setProperty("EMAIL_PASSWORD_P", EMAIL_PASSWORD_P.toString());
				
			}
			
			if(EMAIL_P != null){
				
					this.setProperty("EMAIL_P", EMAIL_P.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(SMTP_P != null){
				
					this.setProperty("SMTP_P", SMTP_P.toString());
				
			}
			
			if(SMTP_PORT_P != null){
				
					this.setProperty("SMTP_PORT_P", SMTP_PORT_P.toString());
				
			}
			
			if(Pasta_Rede_Leitura != null){
				
					this.setProperty("Pasta_Rede_Leitura", Pasta_Rede_Leitura.toString());
				
			}
			
			if(caminho != null){
				
					this.setProperty("caminho", caminho.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String data_atual;
public String getData_atual(){
	return this.data_atual;
}
public String data_atual1;
public String getData_atual1(){
	return this.data_atual1;
}
public Integer Arquivo;
public Integer getArquivo(){
	return this.Arquivo;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String Pasta_Rede;
public String getPasta_Rede(){
	return this.Pasta_Rede;
}
public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String EMAIL_PASSWORD_P;
public String getEMAIL_PASSWORD_P(){
	return this.EMAIL_PASSWORD_P;
}
public String EMAIL_P;
public String getEMAIL_P(){
	return this.EMAIL_P;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public String SMTP_P;
public String getSMTP_P(){
	return this.SMTP_P;
}
public String SMTP_PORT_P;
public String getSMTP_PORT_P(){
	return this.SMTP_PORT_P;
}
public String Pasta_Rede_Leitura;
public String getPasta_Rede_Leitura(){
	return this.Pasta_Rede_Leitura;
}
public String caminho;
public String getCaminho(){
	return this.caminho;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_special_price";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_special_price.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_special_price.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSendMail_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tSendMail_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_20_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSendMail_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					((java.util.Map)threadLocal.get()).put("errorCode", null);
					tDie_1Process(globalMap);
					if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
						((java.util.Map)threadLocal.get()).put("status", "end");
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		
	

	
        String properties_tDBConnection_1 = System.getenv(context.JDBC_PARAMETERS);
        if (properties_tDBConnection_1 == null || properties_tDBConnection_1.trim().length() == 0) {
            properties_tDBConnection_1 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_1.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_1 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_1.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_1 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_1 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_1;
	String dbUser_tDBConnection_1 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.AUTCOM_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
		
			String driverClass_tDBConnection_1 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_1",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tDBConnection_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		


	
            String dbProperties_tDBConnection_2 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_2 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_2 != null && !"".equals(dbProperties_tDBConnection_2.trim())) {
                url_tDBConnection_2 = url_tDBConnection_2 + "?" + dbProperties_tDBConnection_2;
            }
	String dbUser_tDBConnection_2 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_2 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_2 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_2.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_2 = drivers_tDBConnection_2.nextElement();
        if (redShiftDriverNames_tDBConnection_2.contains(d_tDBConnection_2.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_2);
                java.sql.DriverManager.registerDriver(d_tDBConnection_2);
            } catch (java.lang.Exception e_tDBConnection_2) {
globalMap.put("tDBConnection_2_ERROR_MESSAGE",e_tDBConnection_2.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_2 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_2","");

 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk81", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


String foo = "bar";

//context.data_atual = TalendDate.getCurrentDate();

Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


Date dataNova1 = new Date();
DateFormat formato1 = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato1.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data1 = formato1.format(dataNova1.getTime());


System.out.println(data);
context.data_atual = data;
context.data_atual1 = data1;

context.data_execucao = data1;
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();
insert_logStruct insert_log = new insert_logStruct();
row80Struct row80 = new row80Struct();






	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_relatorio_special_price_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row79.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row79.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row80 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row80 = new row80Struct();
                                row80.nm_programa = insert_log.nm_programa;
                                row80.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row80.data_termino_execucao = insert_log.data_termino_execucao;
                                row80.mensagem = insert_log.mensagem;
                                row80.uuid = insert_log.uuid;
                                row80.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row80"
if(row80 != null) { 



	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					



    
		row80Struct oneRow_tHashOutput_13 = new row80Struct();
				
					oneRow_tHashOutput_13.nm_programa = row80.nm_programa;
					oneRow_tHashOutput_13.data_inicio_execucao = row80.data_inicio_execucao;
					oneRow_tHashOutput_13.data_termino_execucao = row80.data_termino_execucao;
					oneRow_tHashOutput_13.mensagem = row80.mensagem;
					oneRow_tHashOutput_13.uuid = row80.uuid;
					oneRow_tHashOutput_13.versao = row80.versao;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */

} // End of branch "row80"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tDBInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();
row17Struct row17 = new row17Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
		


	class Util_tLogRow_1 {
	
		String[] des_top = { ".", "-" };

        String[] des_data = { "-", "+" };

        String[] des_frame = { "|" }; 
        
        public void printLine(StringBuilder sb, int titleWidth, int dataWidth){
        
        	sb.append("+");
			for(int i=0; i<titleWidth+2; i++)
				sb.append("-");
			sb.append("+");
			for(int i=0; i<dataWidth+2; i++)
				sb.append("-");
        	sb.append("+" + "\n");
        }      

		public String print(String[] row, int nbLine){
			
			StringBuilder sb = new StringBuilder();
			
			    String title = "#" + nbLine + ". " + "tLogRow_1";
			    
		
			//step 1: get the max length of all the row[] member;
			int dataWidth = 5;		//the length of the string "value"	
			for(int i=0;i<row.length;i++) {
				if(row[i] == null && 4 > dataWidth) {
					dataWidth = 4;
				}
				else if(row[i] != null && row[i].length()>dataWidth) 
					dataWidth = row[i].length();
			}			
						
			int titleWidth = 12;
			
			int totalWidth = dataWidth + titleWidth + 5;
			
			//step 2: print the header with line number
			sb.append(".");
			for(int i=0 ; i<totalWidth ; i++)
				sb.append("-");			
			sb.append("." + "\n" + "|");
			
			int emptyCenterWidth = (totalWidth-title.length())/2;
			for(int i=0 ; i<emptyCenterWidth; i++)
				sb.append(" ");	
			sb.append(title);
			for(int i=0 ; i<totalWidth - emptyCenterWidth - title.length() ; i++)
				sb.append(" ");	
			sb.append("|" + "\n");
			
			//step 3: print "key" and "value"			
			printLine(sb,titleWidth,dataWidth);
			
			sb.append("|" + " key");
			for(int i=0; i<titleWidth-2; i++)
				sb.append(" ");
        	sb.append("|" + " value");
			for(int i=0; i<dataWidth-4; i++)
				sb.append(" ");
			sb.append("|" + "\n");
			
			printLine(sb,titleWidth,dataWidth);
			
			//step 4: print dataset
			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "job");
				for(int i=0; i<titleWidth -"job".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[0]);
				for(int i=0; row[0] == null && i<dataWidth - 3 || row[0] != null && i<dataWidth -row[0].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "nm_relatorio");
				for(int i=0; i<titleWidth -"nm_relatorio".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[1]);
				for(int i=0; row[1] == null && i<dataWidth - 3 || row[1] != null && i<dataWidth -row[1].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "caminho");
				for(int i=0; i<titleWidth -"caminho".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[2]);
				for(int i=0; row[2] == null && i<dataWidth - 3 || row[2] != null && i<dataWidth -row[2].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "email");
				for(int i=0; i<titleWidth -"email".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[3]);
				for(int i=0; row[3] == null && i<dataWidth - 3 || row[3] != null && i<dataWidth -row[3].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//step 5: print a line gap
			printLine(sb,titleWidth,dataWidth);
			return sb.toString();

		}


	}

	Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();




	java.io.PrintStream consoleOut_tLogRow_1 = null;
	if (globalMap.get("tLogRow_CONSOLE")!=null){
        consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
    }else{
        consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
        globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
    }

 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
    
	
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "select job,\n       nm_relatorio,\n--       REPLACE(caminho,'/','\\') \ncaminho,\n       string_agg(distinct trim(email"
+"),',') email\n  from dw_t_relatorio_email\nwhere job = '"+context.programa+"'\n group by job, nm_relatorio, caminho";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row16.job = null;
							} else {
	                         		
        	row16.job = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row16.nm_relatorio = null;
							} else {
	                         		
        	row16.nm_relatorio = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row16.caminho = null;
							} else {
	                         		
        	row16.caminho = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row16.email = null;
							} else {
	                         		
        	row16.email = routines.system.JDBCUtil.getString(rs_tDBInput_3, 4, false);
		                    }
					


 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					

    //Code generated according to input schema and output schema
row17.job = row16.job;
row17.nm_relatorio = row16.nm_relatorio;
row17.caminho = row16.caminho;
row17.email = row16.email;
context.SEND_EMAIL = row16.email;
context.caminho = row16.caminho;
    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row17.job != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row17.job)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row17.nm_relatorio != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row17.nm_relatorio)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row17.caminho != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row17.caminho)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row17.email != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row17.email)							
				);


							
	    		} //  			

				
				String[] row_tLogRow_1 = new String[4];
   				
	    		if(row17.job != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(row17.job)			
					          ;	
							
	    		} //			
    			   				
	    		if(row17.nm_relatorio != null) { //              
                 row_tLogRow_1[1]=    						    
				                String.valueOf(row17.nm_relatorio)			
					          ;	
							
	    		} //			
    			   				
	    		if(row17.caminho != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(row17.caminho)			
					          ;	
							
	    		} //			
    			   				
	    		if(row17.email != null) { //              
                 row_tLogRow_1[3]=    						    
				                String.valueOf(row17.email)			
					          ;	
							
	    		} //			
    			
				nb_line_tLogRow_1++;
                consoleOut_tLogRow_1.println(util_tLogRow_1.print(row_tLogRow_1,nb_line_tLogRow_1));
                consoleOut_tLogRow_1.flush();
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tFileInputDelimited_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_relatorio_special_price_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_5", false);
		start_Hash.put("tFileInputDelimited_5", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_5";
	
	
		int tos_count_tFileInputDelimited_5 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_5 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_5 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_5 = null;
				int limit_tFileInputDelimited_5 = -1;
				try{
					
						Object filename_tFileInputDelimited_5 = ""+context.caminho+"/Parametro/Parametro.csv";
						if(filename_tFileInputDelimited_5 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_5 = 0, random_value_tFileInputDelimited_5 = -1;
			if(footer_value_tFileInputDelimited_5 >0 || random_value_tFileInputDelimited_5 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_5 = new org.talend.fileprocess.FileInputDelimited(""+context.caminho+"/Parametro/Parametro.csv", "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_5
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_5_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_5!=null && fid_tFileInputDelimited_5.nextRecord()) {
						rowstate_tFileInputDelimited_5.reset();
						
			    						row75 = null;			
												
									boolean whetherReject_tFileInputDelimited_5 = false;
									row75 = new row75Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_5 = 0;
				
					String temp = ""; 
				
					columnIndexWithD_tFileInputDelimited_5 = 0;
					
						temp = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						if(temp.length() > 0) {
							
								try {
								
    								row75.Quantidade = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_5) {
globalMap.put("tFileInputDelimited_5_ERROR_MESSAGE",ex_tFileInputDelimited_5.getMessage());
									rowstate_tFileInputDelimited_5.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"Quantidade", "row75", temp, ex_tFileInputDelimited_5), ex_tFileInputDelimited_5));
								}
    							
						} else {						
							
								
									row75.Quantidade = null;
								
							
						}
					
				
				
										
										if(rowstate_tFileInputDelimited_5.getException()!=null) {
											throw rowstate_tFileInputDelimited_5.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_5_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_5 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row75 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_5 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 


	tos_count_tFileInputDelimited_5++;

/**
 * [tFileInputDelimited_5 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 



/**
 * [tFileInputDelimited_5 process_data_begin ] stop
 */
// Start of branch "row75"
if(row75 != null) { 



	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					



    
		row75Struct oneRow_tHashOutput_12 = new row75Struct();
				
					oneRow_tHashOutput_12.Quantidade = row75.Quantidade;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */

} // End of branch "row75"




	
	/**
	 * [tFileInputDelimited_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 



/**
 * [tFileInputDelimited_5 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	



            }
            }finally{
                if(!((Object)(""+context.caminho+"/Parametro/Parametro.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_5!=null){
                		fid_tFileInputDelimited_5.close();
                	}
                }
                if(fid_tFileInputDelimited_5!=null){
                	globalMap.put("tFileInputDelimited_5_NB_LINE", fid_tFileInputDelimited_5.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_5", true);
end_Hash.put("tFileInputDelimited_5", System.currentTimeMillis());




/**
 * [tFileInputDelimited_5 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk76", 0, "ok");
								} 
							
							tFileDelete_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_5 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";
	
	

 



/**
 * [tFileInputDelimited_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_5_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
	java.io.File path_tFileDelete_1=new java.io.File(""+context.caminho+"/Parametro/Parametro.csv");
	if(path_tFileDelete_1.exists()){
		if(path_tFileDelete_1.isFile()){
	    	if(path_tFileDelete_1.delete()){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
	    	}
		}else if(path_tFileDelete_1.isDirectory()){ 
	    	DeleteFoldertFileDelete_1 dftFileDelete_1 = new DeleteFoldertFileDelete_1();
	    	if(dftFileDelete_1.delete(path_tFileDelete_1)){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "Path deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No path deleted.");
	    	}
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File or path does not exist or is invalid.");
    }
    globalMap.put("tFileDelete_1_DELETE_PATH",""+context.caminho+"/Parametro/Parametro.csv");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk77", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row76Struct row76 = new row76Struct();
row78Struct row78 = new row78Struct();





	
	/**
	 * [tFileOutputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_3", false);
		start_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tFileOutputDelimited_3 = 0;
		

String fileName_tFileOutputDelimited_3 = "";
    fileName_tFileOutputDelimited_3 = (new java.io.File(""+context.caminho+"/Parametro/Parametro.csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_3 = null;
    String extension_tFileOutputDelimited_3 = null;
    String directory_tFileOutputDelimited_3 = null;
    if((fileName_tFileOutputDelimited_3.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") < fileName_tFileOutputDelimited_3.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        }
        directory_tFileOutputDelimited_3 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_3 = true;
    java.io.File filetFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
    globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
        if(filetFileOutputDelimited_3.exists()){
            isFileGenerated_tFileOutputDelimited_3 = false;
        }
            int nb_line_tFileOutputDelimited_3 = 0;
            int splitedFileNo_tFileOutputDelimited_3 = 0;
            int currentRow_tFileOutputDelimited_3 = 0;

            final String OUT_DELIM_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_3:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_3:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_3 != null && directory_tFileOutputDelimited_3.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_3 = new java.io.File(directory_tFileOutputDelimited_3);
                        if(!dir_tFileOutputDelimited_3.exists()) {
                            dir_tFileOutputDelimited_3.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_3 = null;

                        outtFileOutputDelimited_3 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_3, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_3", outtFileOutputDelimited_3);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_3.length()==0){
                                        outtFileOutputDelimited_3.write("Quantidade");
                                        outtFileOutputDelimited_3.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

 



/**
 * [tFileOutputDelimited_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row75Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row75Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row76.Quantidade = next_tHashInput_2.Quantidade;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					

    //Code generate according to input schema and output schema
row78.Quantidade = row76.Quantidade+1;
context.Arquivo = row78.Quantidade;
    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_3 = new StringBuilder();
                            if(row78.Quantidade != null) {
                        sb_tFileOutputDelimited_3.append(
                            row78.Quantidade
                        );
                            }
                    sb_tFileOutputDelimited_3.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_3++;
                    resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

                        outtFileOutputDelimited_3.write(sb_tFileOutputDelimited_3.toString());

                    }



 


	tos_count_tFileOutputDelimited_3++;

/**
 * [tFileOutputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_3!=null) {
						outtFileOutputDelimited_3.flush();
						outtFileOutputDelimited_3.close();
					}
				
				globalMap.put("tFileOutputDelimited_3_NB_LINE",nb_line_tFileOutputDelimited_3);
				globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_3", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_3", true);
end_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_3") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_3 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_3");
						if(outtFileOutputDelimited_3!=null) {
							outtFileOutputDelimited_3.flush();
							outtFileOutputDelimited_3.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return null;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 5;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return null;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public String VL_CUSTO;

				public String getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
					this.VL_CUSTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
					this.VL_CUSTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// String
				
						writeString(this.VL_CUSTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// String
				
						writeString(this.VL_CUSTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",VL_CUSTO="+VL_CUSTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();
row31Struct row31 = new row31Struct();





	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_special_price_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tConvertType_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_8", false);
		start_Hash.put("tConvertType_8", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tConvertType_8 = 0;
		
	int nb_line_tConvertType_8 = 0;  
 



/**
 * [tConvertType_8 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select G.ITE_CODITE,\n       I.ITE_DESITE,\n       I.ITE_REFERE,\n       ROUND(G.ITE_PRECUS,4) VL_CUSTO\n  FROM CADITE "
+"I,\n       ITEGER G\n WHERE G.ITE_CODITE = I.ITE_CODITE\n   AND I.ITE_ITEATI = 'S'\n   AND G.ITE_CODEMP = '001'";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row12.COD_ITEM = null;
							} else {
	                         		
        	row12.COD_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row12.DESCRICAO = null;
							} else {
	                         		
        	row12.DESCRICAO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row12.MARCA = null;
							} else {
	                         		
        	row12.MARCA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row12.VL_CUSTO = null;
							} else {
	                         		
        	row12.VL_CUSTO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 4, false);
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_8 main ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					


  row31 = new row31Struct();
  boolean bHasError_tConvertType_8 = false;             
          try {
              row31.COD_ITEM=TypeConvert.String2String(row12.COD_ITEM);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row31.DESCRICAO=TypeConvert.String2String(row12.DESCRICAO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row31.MARCA=TypeConvert.String2String(row12.MARCA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row31.VL_CUSTO=TypeConvert.String2BigDecimal(row12.VL_CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_8_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_8 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_8) {row31 = null;}

  nb_line_tConvertType_8 ++ ;

 


	tos_count_tConvertType_8++;

/**
 * [tConvertType_8 main ] stop
 */
	
	/**
	 * [tConvertType_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	

 



/**
 * [tConvertType_8 process_data_begin ] stop
 */
// Start of branch "row31"
if(row31 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					



    
		row31Struct oneRow_tHashOutput_1 = new row31Struct();
				
					oneRow_tHashOutput_1.COD_ITEM = row31.COD_ITEM;
					oneRow_tHashOutput_1.DESCRICAO = row31.DESCRICAO;
					oneRow_tHashOutput_1.MARCA = row31.MARCA;
					oneRow_tHashOutput_1.VL_CUSTO = row31.VL_CUSTO;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row31"




	
	/**
	 * [tConvertType_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	

 



/**
 * [tConvertType_8 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tConvertType_8 end ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	
      globalMap.put("tConvertType_8_NB_LINE", nb_line_tConvertType_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tConvertType_8", true);
end_Hash.put("tConvertType_8", System.currentTimeMillis());




/**
 * [tConvertType_8 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tFileInputDelimited_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tConvertType_8 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_8";
	
	

 



/**
 * [tConvertType_8 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class Saida10Struct implements routines.system.IPersistableRow<Saida10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+special_price);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row85Struct implements routines.system.IPersistableRow<row85Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+special_price);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row85Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+special_price);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+special_price);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saidaStruct implements routines.system.IPersistableRow<saidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+special_price);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String store_view_code;

				public String getStore_view_code () {
					return this.store_view_code;
				}

				public Boolean store_view_codeIsNullable(){
				    return true;
				}
				public Boolean store_view_codeIsKey(){
				    return false;
				}
				public Integer store_view_codeLength(){
				    return null;
				}
				public Integer store_view_codePrecision(){
				    return null;
				}
				public String store_view_codeDefault(){
				
					return null;
				
				}
				public String store_view_codeComment(){
				
				    return "";
				
				}
				public String store_view_codePattern(){
				
					return "";
				
				}
				public String store_view_codeOriginalDbColumnName(){
				
					return "store_view_code";
				
				}

				
			    public String attribute_set_code;

				public String getAttribute_set_code () {
					return this.attribute_set_code;
				}

				public Boolean attribute_set_codeIsNullable(){
				    return true;
				}
				public Boolean attribute_set_codeIsKey(){
				    return false;
				}
				public Integer attribute_set_codeLength(){
				    return null;
				}
				public Integer attribute_set_codePrecision(){
				    return null;
				}
				public String attribute_set_codeDefault(){
				
					return null;
				
				}
				public String attribute_set_codeComment(){
				
				    return "";
				
				}
				public String attribute_set_codePattern(){
				
					return "";
				
				}
				public String attribute_set_codeOriginalDbColumnName(){
				
					return "attribute_set_code";
				
				}

				
			    public String product_type;

				public String getProduct_type () {
					return this.product_type;
				}

				public Boolean product_typeIsNullable(){
				    return true;
				}
				public Boolean product_typeIsKey(){
				    return false;
				}
				public Integer product_typeLength(){
				    return null;
				}
				public Integer product_typePrecision(){
				    return null;
				}
				public String product_typeDefault(){
				
					return null;
				
				}
				public String product_typeComment(){
				
				    return "";
				
				}
				public String product_typePattern(){
				
					return "";
				
				}
				public String product_typeOriginalDbColumnName(){
				
					return "product_type";
				
				}

				
			    public String categories;

				public String getCategories () {
					return this.categories;
				}

				public Boolean categoriesIsNullable(){
				    return true;
				}
				public Boolean categoriesIsKey(){
				    return false;
				}
				public Integer categoriesLength(){
				    return null;
				}
				public Integer categoriesPrecision(){
				    return null;
				}
				public String categoriesDefault(){
				
					return null;
				
				}
				public String categoriesComment(){
				
				    return "";
				
				}
				public String categoriesPattern(){
				
					return "";
				
				}
				public String categoriesOriginalDbColumnName(){
				
					return "categories";
				
				}

				
			    public String product_websites;

				public String getProduct_websites () {
					return this.product_websites;
				}

				public Boolean product_websitesIsNullable(){
				    return true;
				}
				public Boolean product_websitesIsKey(){
				    return false;
				}
				public Integer product_websitesLength(){
				    return null;
				}
				public Integer product_websitesPrecision(){
				    return null;
				}
				public String product_websitesDefault(){
				
					return null;
				
				}
				public String product_websitesComment(){
				
				    return "";
				
				}
				public String product_websitesPattern(){
				
					return "";
				
				}
				public String product_websitesOriginalDbColumnName(){
				
					return "product_websites";
				
				}

				
			    public String name;

				public String getName () {
					return this.name;
				}

				public Boolean nameIsNullable(){
				    return true;
				}
				public Boolean nameIsKey(){
				    return false;
				}
				public Integer nameLength(){
				    return null;
				}
				public Integer namePrecision(){
				    return null;
				}
				public String nameDefault(){
				
					return null;
				
				}
				public String nameComment(){
				
				    return "";
				
				}
				public String namePattern(){
				
					return "";
				
				}
				public String nameOriginalDbColumnName(){
				
					return "name";
				
				}

				
			    public String short_description;

				public String getShort_description () {
					return this.short_description;
				}

				public Boolean short_descriptionIsNullable(){
				    return true;
				}
				public Boolean short_descriptionIsKey(){
				    return false;
				}
				public Integer short_descriptionLength(){
				    return null;
				}
				public Integer short_descriptionPrecision(){
				    return null;
				}
				public String short_descriptionDefault(){
				
					return null;
				
				}
				public String short_descriptionComment(){
				
				    return "";
				
				}
				public String short_descriptionPattern(){
				
					return "";
				
				}
				public String short_descriptionOriginalDbColumnName(){
				
					return "short_description";
				
				}

				
			    public String weight;

				public String getWeight () {
					return this.weight;
				}

				public Boolean weightIsNullable(){
				    return true;
				}
				public Boolean weightIsKey(){
				    return false;
				}
				public Integer weightLength(){
				    return null;
				}
				public Integer weightPrecision(){
				    return null;
				}
				public String weightDefault(){
				
					return null;
				
				}
				public String weightComment(){
				
				    return "";
				
				}
				public String weightPattern(){
				
					return "";
				
				}
				public String weightOriginalDbColumnName(){
				
					return "weight";
				
				}

				
			    public String product_online;

				public String getProduct_online () {
					return this.product_online;
				}

				public Boolean product_onlineIsNullable(){
				    return true;
				}
				public Boolean product_onlineIsKey(){
				    return false;
				}
				public Integer product_onlineLength(){
				    return null;
				}
				public Integer product_onlinePrecision(){
				    return null;
				}
				public String product_onlineDefault(){
				
					return null;
				
				}
				public String product_onlineComment(){
				
				    return "";
				
				}
				public String product_onlinePattern(){
				
					return "";
				
				}
				public String product_onlineOriginalDbColumnName(){
				
					return "product_online";
				
				}

				
			    public String tax_class_name;

				public String getTax_class_name () {
					return this.tax_class_name;
				}

				public Boolean tax_class_nameIsNullable(){
				    return true;
				}
				public Boolean tax_class_nameIsKey(){
				    return false;
				}
				public Integer tax_class_nameLength(){
				    return null;
				}
				public Integer tax_class_namePrecision(){
				    return null;
				}
				public String tax_class_nameDefault(){
				
					return null;
				
				}
				public String tax_class_nameComment(){
				
				    return "";
				
				}
				public String tax_class_namePattern(){
				
					return "";
				
				}
				public String tax_class_nameOriginalDbColumnName(){
				
					return "tax_class_name";
				
				}

				
			    public String visibility;

				public String getVisibility () {
					return this.visibility;
				}

				public Boolean visibilityIsNullable(){
				    return true;
				}
				public Boolean visibilityIsKey(){
				    return false;
				}
				public Integer visibilityLength(){
				    return null;
				}
				public Integer visibilityPrecision(){
				    return null;
				}
				public String visibilityDefault(){
				
					return null;
				
				}
				public String visibilityComment(){
				
				    return "";
				
				}
				public String visibilityPattern(){
				
					return "";
				
				}
				public String visibilityOriginalDbColumnName(){
				
					return "visibility";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public String special_price_from_date;

				public String getSpecial_price_from_date () {
					return this.special_price_from_date;
				}

				public Boolean special_price_from_dateIsNullable(){
				    return true;
				}
				public Boolean special_price_from_dateIsKey(){
				    return false;
				}
				public Integer special_price_from_dateLength(){
				    return null;
				}
				public Integer special_price_from_datePrecision(){
				    return null;
				}
				public String special_price_from_dateDefault(){
				
					return null;
				
				}
				public String special_price_from_dateComment(){
				
				    return "";
				
				}
				public String special_price_from_datePattern(){
				
					return "";
				
				}
				public String special_price_from_dateOriginalDbColumnName(){
				
					return "special_price_from_date";
				
				}

				
			    public String special_price_to_date;

				public String getSpecial_price_to_date () {
					return this.special_price_to_date;
				}

				public Boolean special_price_to_dateIsNullable(){
				    return true;
				}
				public Boolean special_price_to_dateIsKey(){
				    return false;
				}
				public Integer special_price_to_dateLength(){
				    return null;
				}
				public Integer special_price_to_datePrecision(){
				    return null;
				}
				public String special_price_to_dateDefault(){
				
					return null;
				
				}
				public String special_price_to_dateComment(){
				
				    return "";
				
				}
				public String special_price_to_datePattern(){
				
					return "";
				
				}
				public String special_price_to_dateOriginalDbColumnName(){
				
					return "special_price_to_date";
				
				}

				
			    public String url_key;

				public String getUrl_key () {
					return this.url_key;
				}

				public Boolean url_keyIsNullable(){
				    return true;
				}
				public Boolean url_keyIsKey(){
				    return false;
				}
				public Integer url_keyLength(){
				    return null;
				}
				public Integer url_keyPrecision(){
				    return null;
				}
				public String url_keyDefault(){
				
					return null;
				
				}
				public String url_keyComment(){
				
				    return "";
				
				}
				public String url_keyPattern(){
				
					return "";
				
				}
				public String url_keyOriginalDbColumnName(){
				
					return "url_key";
				
				}

				
			    public String meta_title;

				public String getMeta_title () {
					return this.meta_title;
				}

				public Boolean meta_titleIsNullable(){
				    return true;
				}
				public Boolean meta_titleIsKey(){
				    return false;
				}
				public Integer meta_titleLength(){
				    return null;
				}
				public Integer meta_titlePrecision(){
				    return null;
				}
				public String meta_titleDefault(){
				
					return null;
				
				}
				public String meta_titleComment(){
				
				    return "";
				
				}
				public String meta_titlePattern(){
				
					return "";
				
				}
				public String meta_titleOriginalDbColumnName(){
				
					return "meta_title";
				
				}

				
			    public String meta_keywords;

				public String getMeta_keywords () {
					return this.meta_keywords;
				}

				public Boolean meta_keywordsIsNullable(){
				    return true;
				}
				public Boolean meta_keywordsIsKey(){
				    return false;
				}
				public Integer meta_keywordsLength(){
				    return null;
				}
				public Integer meta_keywordsPrecision(){
				    return null;
				}
				public String meta_keywordsDefault(){
				
					return null;
				
				}
				public String meta_keywordsComment(){
				
				    return "";
				
				}
				public String meta_keywordsPattern(){
				
					return "";
				
				}
				public String meta_keywordsOriginalDbColumnName(){
				
					return "meta_keywords";
				
				}

				
			    public String meta_description;

				public String getMeta_description () {
					return this.meta_description;
				}

				public Boolean meta_descriptionIsNullable(){
				    return true;
				}
				public Boolean meta_descriptionIsKey(){
				    return false;
				}
				public Integer meta_descriptionLength(){
				    return null;
				}
				public Integer meta_descriptionPrecision(){
				    return null;
				}
				public String meta_descriptionDefault(){
				
					return null;
				
				}
				public String meta_descriptionComment(){
				
				    return "";
				
				}
				public String meta_descriptionPattern(){
				
					return "";
				
				}
				public String meta_descriptionOriginalDbColumnName(){
				
					return "meta_description";
				
				}

				
			    public String base_image;

				public String getBase_image () {
					return this.base_image;
				}

				public Boolean base_imageIsNullable(){
				    return true;
				}
				public Boolean base_imageIsKey(){
				    return false;
				}
				public Integer base_imageLength(){
				    return null;
				}
				public Integer base_imagePrecision(){
				    return null;
				}
				public String base_imageDefault(){
				
					return null;
				
				}
				public String base_imageComment(){
				
				    return "";
				
				}
				public String base_imagePattern(){
				
					return "";
				
				}
				public String base_imageOriginalDbColumnName(){
				
					return "base_image";
				
				}

				
			    public String base_image_label;

				public String getBase_image_label () {
					return this.base_image_label;
				}

				public Boolean base_image_labelIsNullable(){
				    return true;
				}
				public Boolean base_image_labelIsKey(){
				    return false;
				}
				public Integer base_image_labelLength(){
				    return null;
				}
				public Integer base_image_labelPrecision(){
				    return null;
				}
				public String base_image_labelDefault(){
				
					return null;
				
				}
				public String base_image_labelComment(){
				
				    return "";
				
				}
				public String base_image_labelPattern(){
				
					return "";
				
				}
				public String base_image_labelOriginalDbColumnName(){
				
					return "base_image_label";
				
				}

				
			    public String small_image;

				public String getSmall_image () {
					return this.small_image;
				}

				public Boolean small_imageIsNullable(){
				    return true;
				}
				public Boolean small_imageIsKey(){
				    return false;
				}
				public Integer small_imageLength(){
				    return null;
				}
				public Integer small_imagePrecision(){
				    return null;
				}
				public String small_imageDefault(){
				
					return null;
				
				}
				public String small_imageComment(){
				
				    return "";
				
				}
				public String small_imagePattern(){
				
					return "";
				
				}
				public String small_imageOriginalDbColumnName(){
				
					return "small_image";
				
				}

				
			    public String small_image_label;

				public String getSmall_image_label () {
					return this.small_image_label;
				}

				public Boolean small_image_labelIsNullable(){
				    return true;
				}
				public Boolean small_image_labelIsKey(){
				    return false;
				}
				public Integer small_image_labelLength(){
				    return null;
				}
				public Integer small_image_labelPrecision(){
				    return null;
				}
				public String small_image_labelDefault(){
				
					return null;
				
				}
				public String small_image_labelComment(){
				
				    return "";
				
				}
				public String small_image_labelPattern(){
				
					return "";
				
				}
				public String small_image_labelOriginalDbColumnName(){
				
					return "small_image_label";
				
				}

				
			    public String thumbnail_image;

				public String getThumbnail_image () {
					return this.thumbnail_image;
				}

				public Boolean thumbnail_imageIsNullable(){
				    return true;
				}
				public Boolean thumbnail_imageIsKey(){
				    return false;
				}
				public Integer thumbnail_imageLength(){
				    return null;
				}
				public Integer thumbnail_imagePrecision(){
				    return null;
				}
				public String thumbnail_imageDefault(){
				
					return null;
				
				}
				public String thumbnail_imageComment(){
				
				    return "";
				
				}
				public String thumbnail_imagePattern(){
				
					return "";
				
				}
				public String thumbnail_imageOriginalDbColumnName(){
				
					return "thumbnail_image";
				
				}

				
			    public String thumbnail_image_label;

				public String getThumbnail_image_label () {
					return this.thumbnail_image_label;
				}

				public Boolean thumbnail_image_labelIsNullable(){
				    return true;
				}
				public Boolean thumbnail_image_labelIsKey(){
				    return false;
				}
				public Integer thumbnail_image_labelLength(){
				    return null;
				}
				public Integer thumbnail_image_labelPrecision(){
				    return null;
				}
				public String thumbnail_image_labelDefault(){
				
					return null;
				
				}
				public String thumbnail_image_labelComment(){
				
				    return "";
				
				}
				public String thumbnail_image_labelPattern(){
				
					return "";
				
				}
				public String thumbnail_image_labelOriginalDbColumnName(){
				
					return "thumbnail_image_label";
				
				}

				
			    public String swatch_image;

				public String getSwatch_image () {
					return this.swatch_image;
				}

				public Boolean swatch_imageIsNullable(){
				    return true;
				}
				public Boolean swatch_imageIsKey(){
				    return false;
				}
				public Integer swatch_imageLength(){
				    return null;
				}
				public Integer swatch_imagePrecision(){
				    return null;
				}
				public String swatch_imageDefault(){
				
					return null;
				
				}
				public String swatch_imageComment(){
				
				    return "";
				
				}
				public String swatch_imagePattern(){
				
					return "";
				
				}
				public String swatch_imageOriginalDbColumnName(){
				
					return "swatch_image";
				
				}

				
			    public String swatch_image_label;

				public String getSwatch_image_label () {
					return this.swatch_image_label;
				}

				public Boolean swatch_image_labelIsNullable(){
				    return true;
				}
				public Boolean swatch_image_labelIsKey(){
				    return false;
				}
				public Integer swatch_image_labelLength(){
				    return null;
				}
				public Integer swatch_image_labelPrecision(){
				    return null;
				}
				public String swatch_image_labelDefault(){
				
					return null;
				
				}
				public String swatch_image_labelComment(){
				
				    return "";
				
				}
				public String swatch_image_labelPattern(){
				
					return "";
				
				}
				public String swatch_image_labelOriginalDbColumnName(){
				
					return "swatch_image_label";
				
				}

				
			    public String created_at;

				public String getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String updated_at;

				public String getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				
			    public String new_from_date;

				public String getNew_from_date () {
					return this.new_from_date;
				}

				public Boolean new_from_dateIsNullable(){
				    return true;
				}
				public Boolean new_from_dateIsKey(){
				    return false;
				}
				public Integer new_from_dateLength(){
				    return null;
				}
				public Integer new_from_datePrecision(){
				    return null;
				}
				public String new_from_dateDefault(){
				
					return null;
				
				}
				public String new_from_dateComment(){
				
				    return "";
				
				}
				public String new_from_datePattern(){
				
					return "";
				
				}
				public String new_from_dateOriginalDbColumnName(){
				
					return "new_from_date";
				
				}

				
			    public String new_to_date;

				public String getNew_to_date () {
					return this.new_to_date;
				}

				public Boolean new_to_dateIsNullable(){
				    return true;
				}
				public Boolean new_to_dateIsKey(){
				    return false;
				}
				public Integer new_to_dateLength(){
				    return null;
				}
				public Integer new_to_datePrecision(){
				    return null;
				}
				public String new_to_dateDefault(){
				
					return null;
				
				}
				public String new_to_dateComment(){
				
				    return "";
				
				}
				public String new_to_datePattern(){
				
					return "";
				
				}
				public String new_to_dateOriginalDbColumnName(){
				
					return "new_to_date";
				
				}

				
			    public String display_product_options_in;

				public String getDisplay_product_options_in () {
					return this.display_product_options_in;
				}

				public Boolean display_product_options_inIsNullable(){
				    return true;
				}
				public Boolean display_product_options_inIsKey(){
				    return false;
				}
				public Integer display_product_options_inLength(){
				    return null;
				}
				public Integer display_product_options_inPrecision(){
				    return null;
				}
				public String display_product_options_inDefault(){
				
					return null;
				
				}
				public String display_product_options_inComment(){
				
				    return "";
				
				}
				public String display_product_options_inPattern(){
				
					return "";
				
				}
				public String display_product_options_inOriginalDbColumnName(){
				
					return "display_product_options_in";
				
				}

				
			    public String map_price;

				public String getMap_price () {
					return this.map_price;
				}

				public Boolean map_priceIsNullable(){
				    return true;
				}
				public Boolean map_priceIsKey(){
				    return false;
				}
				public Integer map_priceLength(){
				    return null;
				}
				public Integer map_pricePrecision(){
				    return null;
				}
				public String map_priceDefault(){
				
					return null;
				
				}
				public String map_priceComment(){
				
				    return "";
				
				}
				public String map_pricePattern(){
				
					return "";
				
				}
				public String map_priceOriginalDbColumnName(){
				
					return "map_price";
				
				}

				
			    public String msrp_price;

				public String getMsrp_price () {
					return this.msrp_price;
				}

				public Boolean msrp_priceIsNullable(){
				    return true;
				}
				public Boolean msrp_priceIsKey(){
				    return false;
				}
				public Integer msrp_priceLength(){
				    return null;
				}
				public Integer msrp_pricePrecision(){
				    return null;
				}
				public String msrp_priceDefault(){
				
					return null;
				
				}
				public String msrp_priceComment(){
				
				    return "";
				
				}
				public String msrp_pricePattern(){
				
					return "";
				
				}
				public String msrp_priceOriginalDbColumnName(){
				
					return "msrp_price";
				
				}

				
			    public String map_enabled;

				public String getMap_enabled () {
					return this.map_enabled;
				}

				public Boolean map_enabledIsNullable(){
				    return true;
				}
				public Boolean map_enabledIsKey(){
				    return false;
				}
				public Integer map_enabledLength(){
				    return null;
				}
				public Integer map_enabledPrecision(){
				    return null;
				}
				public String map_enabledDefault(){
				
					return null;
				
				}
				public String map_enabledComment(){
				
				    return "";
				
				}
				public String map_enabledPattern(){
				
					return "";
				
				}
				public String map_enabledOriginalDbColumnName(){
				
					return "map_enabled";
				
				}

				
			    public String gift_message_available;

				public String getGift_message_available () {
					return this.gift_message_available;
				}

				public Boolean gift_message_availableIsNullable(){
				    return true;
				}
				public Boolean gift_message_availableIsKey(){
				    return false;
				}
				public Integer gift_message_availableLength(){
				    return null;
				}
				public Integer gift_message_availablePrecision(){
				    return null;
				}
				public String gift_message_availableDefault(){
				
					return null;
				
				}
				public String gift_message_availableComment(){
				
				    return "";
				
				}
				public String gift_message_availablePattern(){
				
					return "";
				
				}
				public String gift_message_availableOriginalDbColumnName(){
				
					return "gift_message_available";
				
				}

				
			    public String custom_design;

				public String getCustom_design () {
					return this.custom_design;
				}

				public Boolean custom_designIsNullable(){
				    return true;
				}
				public Boolean custom_designIsKey(){
				    return false;
				}
				public Integer custom_designLength(){
				    return null;
				}
				public Integer custom_designPrecision(){
				    return null;
				}
				public String custom_designDefault(){
				
					return null;
				
				}
				public String custom_designComment(){
				
				    return "";
				
				}
				public String custom_designPattern(){
				
					return "";
				
				}
				public String custom_designOriginalDbColumnName(){
				
					return "custom_design";
				
				}

				
			    public String custom_design_from;

				public String getCustom_design_from () {
					return this.custom_design_from;
				}

				public Boolean custom_design_fromIsNullable(){
				    return true;
				}
				public Boolean custom_design_fromIsKey(){
				    return false;
				}
				public Integer custom_design_fromLength(){
				    return null;
				}
				public Integer custom_design_fromPrecision(){
				    return null;
				}
				public String custom_design_fromDefault(){
				
					return null;
				
				}
				public String custom_design_fromComment(){
				
				    return "";
				
				}
				public String custom_design_fromPattern(){
				
					return "";
				
				}
				public String custom_design_fromOriginalDbColumnName(){
				
					return "custom_design_from";
				
				}

				
			    public String custom_design_to;

				public String getCustom_design_to () {
					return this.custom_design_to;
				}

				public Boolean custom_design_toIsNullable(){
				    return true;
				}
				public Boolean custom_design_toIsKey(){
				    return false;
				}
				public Integer custom_design_toLength(){
				    return null;
				}
				public Integer custom_design_toPrecision(){
				    return null;
				}
				public String custom_design_toDefault(){
				
					return null;
				
				}
				public String custom_design_toComment(){
				
				    return "";
				
				}
				public String custom_design_toPattern(){
				
					return "";
				
				}
				public String custom_design_toOriginalDbColumnName(){
				
					return "custom_design_to";
				
				}

				
			    public String custom_layout_update;

				public String getCustom_layout_update () {
					return this.custom_layout_update;
				}

				public Boolean custom_layout_updateIsNullable(){
				    return true;
				}
				public Boolean custom_layout_updateIsKey(){
				    return false;
				}
				public Integer custom_layout_updateLength(){
				    return null;
				}
				public Integer custom_layout_updatePrecision(){
				    return null;
				}
				public String custom_layout_updateDefault(){
				
					return null;
				
				}
				public String custom_layout_updateComment(){
				
				    return "";
				
				}
				public String custom_layout_updatePattern(){
				
					return "";
				
				}
				public String custom_layout_updateOriginalDbColumnName(){
				
					return "custom_layout_update";
				
				}

				
			    public String page_layout;

				public String getPage_layout () {
					return this.page_layout;
				}

				public Boolean page_layoutIsNullable(){
				    return true;
				}
				public Boolean page_layoutIsKey(){
				    return false;
				}
				public Integer page_layoutLength(){
				    return null;
				}
				public Integer page_layoutPrecision(){
				    return null;
				}
				public String page_layoutDefault(){
				
					return null;
				
				}
				public String page_layoutComment(){
				
				    return "";
				
				}
				public String page_layoutPattern(){
				
					return "";
				
				}
				public String page_layoutOriginalDbColumnName(){
				
					return "page_layout";
				
				}

				
			    public String product_options_container;

				public String getProduct_options_container () {
					return this.product_options_container;
				}

				public Boolean product_options_containerIsNullable(){
				    return true;
				}
				public Boolean product_options_containerIsKey(){
				    return false;
				}
				public Integer product_options_containerLength(){
				    return null;
				}
				public Integer product_options_containerPrecision(){
				    return null;
				}
				public String product_options_containerDefault(){
				
					return null;
				
				}
				public String product_options_containerComment(){
				
				    return "";
				
				}
				public String product_options_containerPattern(){
				
					return "";
				
				}
				public String product_options_containerOriginalDbColumnName(){
				
					return "product_options_container";
				
				}

				
			    public String msrp_display_actual_price_type;

				public String getMsrp_display_actual_price_type () {
					return this.msrp_display_actual_price_type;
				}

				public Boolean msrp_display_actual_price_typeIsNullable(){
				    return true;
				}
				public Boolean msrp_display_actual_price_typeIsKey(){
				    return false;
				}
				public Integer msrp_display_actual_price_typeLength(){
				    return null;
				}
				public Integer msrp_display_actual_price_typePrecision(){
				    return null;
				}
				public String msrp_display_actual_price_typeDefault(){
				
					return null;
				
				}
				public String msrp_display_actual_price_typeComment(){
				
				    return "";
				
				}
				public String msrp_display_actual_price_typePattern(){
				
					return "";
				
				}
				public String msrp_display_actual_price_typeOriginalDbColumnName(){
				
					return "msrp_display_actual_price_type";
				
				}

				
			    public String country_of_manufacture;

				public String getCountry_of_manufacture () {
					return this.country_of_manufacture;
				}

				public Boolean country_of_manufactureIsNullable(){
				    return true;
				}
				public Boolean country_of_manufactureIsKey(){
				    return false;
				}
				public Integer country_of_manufactureLength(){
				    return null;
				}
				public Integer country_of_manufacturePrecision(){
				    return null;
				}
				public String country_of_manufactureDefault(){
				
					return null;
				
				}
				public String country_of_manufactureComment(){
				
				    return "";
				
				}
				public String country_of_manufacturePattern(){
				
					return "";
				
				}
				public String country_of_manufactureOriginalDbColumnName(){
				
					return "country_of_manufacture";
				
				}

				
			    public String additional_attributes;

				public String getAdditional_attributes () {
					return this.additional_attributes;
				}

				public Boolean additional_attributesIsNullable(){
				    return true;
				}
				public Boolean additional_attributesIsKey(){
				    return false;
				}
				public Integer additional_attributesLength(){
				    return null;
				}
				public Integer additional_attributesPrecision(){
				    return null;
				}
				public String additional_attributesDefault(){
				
					return null;
				
				}
				public String additional_attributesComment(){
				
				    return "";
				
				}
				public String additional_attributesPattern(){
				
					return "";
				
				}
				public String additional_attributesOriginalDbColumnName(){
				
					return "additional_attributes";
				
				}

				
			    public String qty;

				public String getQty () {
					return this.qty;
				}

				public Boolean qtyIsNullable(){
				    return true;
				}
				public Boolean qtyIsKey(){
				    return false;
				}
				public Integer qtyLength(){
				    return null;
				}
				public Integer qtyPrecision(){
				    return null;
				}
				public String qtyDefault(){
				
					return null;
				
				}
				public String qtyComment(){
				
				    return "";
				
				}
				public String qtyPattern(){
				
					return "";
				
				}
				public String qtyOriginalDbColumnName(){
				
					return "qty";
				
				}

				
			    public String out_of_stock_qty;

				public String getOut_of_stock_qty () {
					return this.out_of_stock_qty;
				}

				public Boolean out_of_stock_qtyIsNullable(){
				    return true;
				}
				public Boolean out_of_stock_qtyIsKey(){
				    return false;
				}
				public Integer out_of_stock_qtyLength(){
				    return null;
				}
				public Integer out_of_stock_qtyPrecision(){
				    return null;
				}
				public String out_of_stock_qtyDefault(){
				
					return null;
				
				}
				public String out_of_stock_qtyComment(){
				
				    return "";
				
				}
				public String out_of_stock_qtyPattern(){
				
					return "";
				
				}
				public String out_of_stock_qtyOriginalDbColumnName(){
				
					return "out_of_stock_qty";
				
				}

				
			    public String use_config_min_qty;

				public String getUse_config_min_qty () {
					return this.use_config_min_qty;
				}

				public Boolean use_config_min_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_min_qtyIsKey(){
				    return false;
				}
				public Integer use_config_min_qtyLength(){
				    return null;
				}
				public Integer use_config_min_qtyPrecision(){
				    return null;
				}
				public String use_config_min_qtyDefault(){
				
					return null;
				
				}
				public String use_config_min_qtyComment(){
				
				    return "";
				
				}
				public String use_config_min_qtyPattern(){
				
					return "";
				
				}
				public String use_config_min_qtyOriginalDbColumnName(){
				
					return "use_config_min_qty";
				
				}

				
			    public String is_qty_decimal;

				public String getIs_qty_decimal () {
					return this.is_qty_decimal;
				}

				public Boolean is_qty_decimalIsNullable(){
				    return true;
				}
				public Boolean is_qty_decimalIsKey(){
				    return false;
				}
				public Integer is_qty_decimalLength(){
				    return null;
				}
				public Integer is_qty_decimalPrecision(){
				    return null;
				}
				public String is_qty_decimalDefault(){
				
					return null;
				
				}
				public String is_qty_decimalComment(){
				
				    return "";
				
				}
				public String is_qty_decimalPattern(){
				
					return "";
				
				}
				public String is_qty_decimalOriginalDbColumnName(){
				
					return "is_qty_decimal";
				
				}

				
			    public String allow_backorders;

				public String getAllow_backorders () {
					return this.allow_backorders;
				}

				public Boolean allow_backordersIsNullable(){
				    return true;
				}
				public Boolean allow_backordersIsKey(){
				    return false;
				}
				public Integer allow_backordersLength(){
				    return null;
				}
				public Integer allow_backordersPrecision(){
				    return null;
				}
				public String allow_backordersDefault(){
				
					return null;
				
				}
				public String allow_backordersComment(){
				
				    return "";
				
				}
				public String allow_backordersPattern(){
				
					return "";
				
				}
				public String allow_backordersOriginalDbColumnName(){
				
					return "allow_backorders";
				
				}

				
			    public String use_config_backorders;

				public String getUse_config_backorders () {
					return this.use_config_backorders;
				}

				public Boolean use_config_backordersIsNullable(){
				    return true;
				}
				public Boolean use_config_backordersIsKey(){
				    return false;
				}
				public Integer use_config_backordersLength(){
				    return null;
				}
				public Integer use_config_backordersPrecision(){
				    return null;
				}
				public String use_config_backordersDefault(){
				
					return null;
				
				}
				public String use_config_backordersComment(){
				
				    return "";
				
				}
				public String use_config_backordersPattern(){
				
					return "";
				
				}
				public String use_config_backordersOriginalDbColumnName(){
				
					return "use_config_backorders";
				
				}

				
			    public String min_cart_qty;

				public String getMin_cart_qty () {
					return this.min_cart_qty;
				}

				public Boolean min_cart_qtyIsNullable(){
				    return true;
				}
				public Boolean min_cart_qtyIsKey(){
				    return false;
				}
				public Integer min_cart_qtyLength(){
				    return null;
				}
				public Integer min_cart_qtyPrecision(){
				    return null;
				}
				public String min_cart_qtyDefault(){
				
					return null;
				
				}
				public String min_cart_qtyComment(){
				
				    return "";
				
				}
				public String min_cart_qtyPattern(){
				
					return "";
				
				}
				public String min_cart_qtyOriginalDbColumnName(){
				
					return "min_cart_qty";
				
				}

				
			    public String use_config_min_sale_qty;

				public String getUse_config_min_sale_qty () {
					return this.use_config_min_sale_qty;
				}

				public Boolean use_config_min_sale_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_min_sale_qtyIsKey(){
				    return false;
				}
				public Integer use_config_min_sale_qtyLength(){
				    return null;
				}
				public Integer use_config_min_sale_qtyPrecision(){
				    return null;
				}
				public String use_config_min_sale_qtyDefault(){
				
					return null;
				
				}
				public String use_config_min_sale_qtyComment(){
				
				    return "";
				
				}
				public String use_config_min_sale_qtyPattern(){
				
					return "";
				
				}
				public String use_config_min_sale_qtyOriginalDbColumnName(){
				
					return "use_config_min_sale_qty";
				
				}

				
			    public String max_cart_qty;

				public String getMax_cart_qty () {
					return this.max_cart_qty;
				}

				public Boolean max_cart_qtyIsNullable(){
				    return true;
				}
				public Boolean max_cart_qtyIsKey(){
				    return false;
				}
				public Integer max_cart_qtyLength(){
				    return null;
				}
				public Integer max_cart_qtyPrecision(){
				    return null;
				}
				public String max_cart_qtyDefault(){
				
					return null;
				
				}
				public String max_cart_qtyComment(){
				
				    return "";
				
				}
				public String max_cart_qtyPattern(){
				
					return "";
				
				}
				public String max_cart_qtyOriginalDbColumnName(){
				
					return "max_cart_qty";
				
				}

				
			    public String use_config_max_sale_qty;

				public String getUse_config_max_sale_qty () {
					return this.use_config_max_sale_qty;
				}

				public Boolean use_config_max_sale_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_max_sale_qtyIsKey(){
				    return false;
				}
				public Integer use_config_max_sale_qtyLength(){
				    return null;
				}
				public Integer use_config_max_sale_qtyPrecision(){
				    return null;
				}
				public String use_config_max_sale_qtyDefault(){
				
					return null;
				
				}
				public String use_config_max_sale_qtyComment(){
				
				    return "";
				
				}
				public String use_config_max_sale_qtyPattern(){
				
					return "";
				
				}
				public String use_config_max_sale_qtyOriginalDbColumnName(){
				
					return "use_config_max_sale_qty";
				
				}

				
			    public String is_in_stock;

				public String getIs_in_stock () {
					return this.is_in_stock;
				}

				public Boolean is_in_stockIsNullable(){
				    return true;
				}
				public Boolean is_in_stockIsKey(){
				    return false;
				}
				public Integer is_in_stockLength(){
				    return null;
				}
				public Integer is_in_stockPrecision(){
				    return null;
				}
				public String is_in_stockDefault(){
				
					return null;
				
				}
				public String is_in_stockComment(){
				
				    return "";
				
				}
				public String is_in_stockPattern(){
				
					return "";
				
				}
				public String is_in_stockOriginalDbColumnName(){
				
					return "is_in_stock";
				
				}

				
			    public String notify_on_stock_below;

				public String getNotify_on_stock_below () {
					return this.notify_on_stock_below;
				}

				public Boolean notify_on_stock_belowIsNullable(){
				    return true;
				}
				public Boolean notify_on_stock_belowIsKey(){
				    return false;
				}
				public Integer notify_on_stock_belowLength(){
				    return null;
				}
				public Integer notify_on_stock_belowPrecision(){
				    return null;
				}
				public String notify_on_stock_belowDefault(){
				
					return null;
				
				}
				public String notify_on_stock_belowComment(){
				
				    return "";
				
				}
				public String notify_on_stock_belowPattern(){
				
					return "";
				
				}
				public String notify_on_stock_belowOriginalDbColumnName(){
				
					return "notify_on_stock_below";
				
				}

				
			    public String use_config_notify_stock_qty;

				public String getUse_config_notify_stock_qty () {
					return this.use_config_notify_stock_qty;
				}

				public Boolean use_config_notify_stock_qtyIsNullable(){
				    return true;
				}
				public Boolean use_config_notify_stock_qtyIsKey(){
				    return false;
				}
				public Integer use_config_notify_stock_qtyLength(){
				    return null;
				}
				public Integer use_config_notify_stock_qtyPrecision(){
				    return null;
				}
				public String use_config_notify_stock_qtyDefault(){
				
					return null;
				
				}
				public String use_config_notify_stock_qtyComment(){
				
				    return "";
				
				}
				public String use_config_notify_stock_qtyPattern(){
				
					return "";
				
				}
				public String use_config_notify_stock_qtyOriginalDbColumnName(){
				
					return "use_config_notify_stock_qty";
				
				}

				
			    public String manage_stock;

				public String getManage_stock () {
					return this.manage_stock;
				}

				public Boolean manage_stockIsNullable(){
				    return true;
				}
				public Boolean manage_stockIsKey(){
				    return false;
				}
				public Integer manage_stockLength(){
				    return null;
				}
				public Integer manage_stockPrecision(){
				    return null;
				}
				public String manage_stockDefault(){
				
					return null;
				
				}
				public String manage_stockComment(){
				
				    return "";
				
				}
				public String manage_stockPattern(){
				
					return "";
				
				}
				public String manage_stockOriginalDbColumnName(){
				
					return "manage_stock";
				
				}

				
			    public String use_config_manage_stock;

				public String getUse_config_manage_stock () {
					return this.use_config_manage_stock;
				}

				public Boolean use_config_manage_stockIsNullable(){
				    return true;
				}
				public Boolean use_config_manage_stockIsKey(){
				    return false;
				}
				public Integer use_config_manage_stockLength(){
				    return null;
				}
				public Integer use_config_manage_stockPrecision(){
				    return null;
				}
				public String use_config_manage_stockDefault(){
				
					return null;
				
				}
				public String use_config_manage_stockComment(){
				
				    return "";
				
				}
				public String use_config_manage_stockPattern(){
				
					return "";
				
				}
				public String use_config_manage_stockOriginalDbColumnName(){
				
					return "use_config_manage_stock";
				
				}

				
			    public String use_config_qty_increments;

				public String getUse_config_qty_increments () {
					return this.use_config_qty_increments;
				}

				public Boolean use_config_qty_incrementsIsNullable(){
				    return true;
				}
				public Boolean use_config_qty_incrementsIsKey(){
				    return false;
				}
				public Integer use_config_qty_incrementsLength(){
				    return null;
				}
				public Integer use_config_qty_incrementsPrecision(){
				    return null;
				}
				public String use_config_qty_incrementsDefault(){
				
					return null;
				
				}
				public String use_config_qty_incrementsComment(){
				
				    return "";
				
				}
				public String use_config_qty_incrementsPattern(){
				
					return "";
				
				}
				public String use_config_qty_incrementsOriginalDbColumnName(){
				
					return "use_config_qty_increments";
				
				}

				
			    public String qty_increments;

				public String getQty_increments () {
					return this.qty_increments;
				}

				public Boolean qty_incrementsIsNullable(){
				    return true;
				}
				public Boolean qty_incrementsIsKey(){
				    return false;
				}
				public Integer qty_incrementsLength(){
				    return null;
				}
				public Integer qty_incrementsPrecision(){
				    return null;
				}
				public String qty_incrementsDefault(){
				
					return null;
				
				}
				public String qty_incrementsComment(){
				
				    return "";
				
				}
				public String qty_incrementsPattern(){
				
					return "";
				
				}
				public String qty_incrementsOriginalDbColumnName(){
				
					return "qty_increments";
				
				}

				
			    public String use_config_enable_qty_inc;

				public String getUse_config_enable_qty_inc () {
					return this.use_config_enable_qty_inc;
				}

				public Boolean use_config_enable_qty_incIsNullable(){
				    return true;
				}
				public Boolean use_config_enable_qty_incIsKey(){
				    return false;
				}
				public Integer use_config_enable_qty_incLength(){
				    return null;
				}
				public Integer use_config_enable_qty_incPrecision(){
				    return null;
				}
				public String use_config_enable_qty_incDefault(){
				
					return null;
				
				}
				public String use_config_enable_qty_incComment(){
				
				    return "";
				
				}
				public String use_config_enable_qty_incPattern(){
				
					return "";
				
				}
				public String use_config_enable_qty_incOriginalDbColumnName(){
				
					return "use_config_enable_qty_inc";
				
				}

				
			    public String enable_qty_increments;

				public String getEnable_qty_increments () {
					return this.enable_qty_increments;
				}

				public Boolean enable_qty_incrementsIsNullable(){
				    return true;
				}
				public Boolean enable_qty_incrementsIsKey(){
				    return false;
				}
				public Integer enable_qty_incrementsLength(){
				    return null;
				}
				public Integer enable_qty_incrementsPrecision(){
				    return null;
				}
				public String enable_qty_incrementsDefault(){
				
					return null;
				
				}
				public String enable_qty_incrementsComment(){
				
				    return "";
				
				}
				public String enable_qty_incrementsPattern(){
				
					return "";
				
				}
				public String enable_qty_incrementsOriginalDbColumnName(){
				
					return "enable_qty_increments";
				
				}

				
			    public String is_decimal_divided;

				public String getIs_decimal_divided () {
					return this.is_decimal_divided;
				}

				public Boolean is_decimal_dividedIsNullable(){
				    return true;
				}
				public Boolean is_decimal_dividedIsKey(){
				    return false;
				}
				public Integer is_decimal_dividedLength(){
				    return null;
				}
				public Integer is_decimal_dividedPrecision(){
				    return null;
				}
				public String is_decimal_dividedDefault(){
				
					return null;
				
				}
				public String is_decimal_dividedComment(){
				
				    return "";
				
				}
				public String is_decimal_dividedPattern(){
				
					return "";
				
				}
				public String is_decimal_dividedOriginalDbColumnName(){
				
					return "is_decimal_divided";
				
				}

				
			    public String website_id;

				public String getWebsite_id () {
					return this.website_id;
				}

				public Boolean website_idIsNullable(){
				    return true;
				}
				public Boolean website_idIsKey(){
				    return false;
				}
				public Integer website_idLength(){
				    return null;
				}
				public Integer website_idPrecision(){
				    return null;
				}
				public String website_idDefault(){
				
					return null;
				
				}
				public String website_idComment(){
				
				    return "";
				
				}
				public String website_idPattern(){
				
					return "";
				
				}
				public String website_idOriginalDbColumnName(){
				
					return "website_id";
				
				}

				
			    public String deferred_stock_update;

				public String getDeferred_stock_update () {
					return this.deferred_stock_update;
				}

				public Boolean deferred_stock_updateIsNullable(){
				    return true;
				}
				public Boolean deferred_stock_updateIsKey(){
				    return false;
				}
				public Integer deferred_stock_updateLength(){
				    return null;
				}
				public Integer deferred_stock_updatePrecision(){
				    return null;
				}
				public String deferred_stock_updateDefault(){
				
					return null;
				
				}
				public String deferred_stock_updateComment(){
				
				    return "";
				
				}
				public String deferred_stock_updatePattern(){
				
					return "";
				
				}
				public String deferred_stock_updateOriginalDbColumnName(){
				
					return "deferred_stock_update";
				
				}

				
			    public String use_config_deferred_stock_update;

				public String getUse_config_deferred_stock_update () {
					return this.use_config_deferred_stock_update;
				}

				public Boolean use_config_deferred_stock_updateIsNullable(){
				    return true;
				}
				public Boolean use_config_deferred_stock_updateIsKey(){
				    return false;
				}
				public Integer use_config_deferred_stock_updateLength(){
				    return null;
				}
				public Integer use_config_deferred_stock_updatePrecision(){
				    return null;
				}
				public String use_config_deferred_stock_updateDefault(){
				
					return null;
				
				}
				public String use_config_deferred_stock_updateComment(){
				
				    return "";
				
				}
				public String use_config_deferred_stock_updatePattern(){
				
					return "";
				
				}
				public String use_config_deferred_stock_updateOriginalDbColumnName(){
				
					return "use_config_deferred_stock_update";
				
				}

				
			    public String related_skus;

				public String getRelated_skus () {
					return this.related_skus;
				}

				public Boolean related_skusIsNullable(){
				    return true;
				}
				public Boolean related_skusIsKey(){
				    return false;
				}
				public Integer related_skusLength(){
				    return null;
				}
				public Integer related_skusPrecision(){
				    return null;
				}
				public String related_skusDefault(){
				
					return null;
				
				}
				public String related_skusComment(){
				
				    return "";
				
				}
				public String related_skusPattern(){
				
					return "";
				
				}
				public String related_skusOriginalDbColumnName(){
				
					return "related_skus";
				
				}

				
			    public String related_position;

				public String getRelated_position () {
					return this.related_position;
				}

				public Boolean related_positionIsNullable(){
				    return true;
				}
				public Boolean related_positionIsKey(){
				    return false;
				}
				public Integer related_positionLength(){
				    return null;
				}
				public Integer related_positionPrecision(){
				    return null;
				}
				public String related_positionDefault(){
				
					return null;
				
				}
				public String related_positionComment(){
				
				    return "";
				
				}
				public String related_positionPattern(){
				
					return "";
				
				}
				public String related_positionOriginalDbColumnName(){
				
					return "related_position";
				
				}

				
			    public String crosssell_skus;

				public String getCrosssell_skus () {
					return this.crosssell_skus;
				}

				public Boolean crosssell_skusIsNullable(){
				    return true;
				}
				public Boolean crosssell_skusIsKey(){
				    return false;
				}
				public Integer crosssell_skusLength(){
				    return null;
				}
				public Integer crosssell_skusPrecision(){
				    return null;
				}
				public String crosssell_skusDefault(){
				
					return null;
				
				}
				public String crosssell_skusComment(){
				
				    return "";
				
				}
				public String crosssell_skusPattern(){
				
					return "";
				
				}
				public String crosssell_skusOriginalDbColumnName(){
				
					return "crosssell_skus";
				
				}

				
			    public String crosssell_position;

				public String getCrosssell_position () {
					return this.crosssell_position;
				}

				public Boolean crosssell_positionIsNullable(){
				    return true;
				}
				public Boolean crosssell_positionIsKey(){
				    return false;
				}
				public Integer crosssell_positionLength(){
				    return null;
				}
				public Integer crosssell_positionPrecision(){
				    return null;
				}
				public String crosssell_positionDefault(){
				
					return null;
				
				}
				public String crosssell_positionComment(){
				
				    return "";
				
				}
				public String crosssell_positionPattern(){
				
					return "";
				
				}
				public String crosssell_positionOriginalDbColumnName(){
				
					return "crosssell_position";
				
				}

				
			    public String upsell_skus;

				public String getUpsell_skus () {
					return this.upsell_skus;
				}

				public Boolean upsell_skusIsNullable(){
				    return true;
				}
				public Boolean upsell_skusIsKey(){
				    return false;
				}
				public Integer upsell_skusLength(){
				    return null;
				}
				public Integer upsell_skusPrecision(){
				    return null;
				}
				public String upsell_skusDefault(){
				
					return null;
				
				}
				public String upsell_skusComment(){
				
				    return "";
				
				}
				public String upsell_skusPattern(){
				
					return "";
				
				}
				public String upsell_skusOriginalDbColumnName(){
				
					return "upsell_skus";
				
				}

				
			    public String upsell_position;

				public String getUpsell_position () {
					return this.upsell_position;
				}

				public Boolean upsell_positionIsNullable(){
				    return true;
				}
				public Boolean upsell_positionIsKey(){
				    return false;
				}
				public Integer upsell_positionLength(){
				    return null;
				}
				public Integer upsell_positionPrecision(){
				    return null;
				}
				public String upsell_positionDefault(){
				
					return null;
				
				}
				public String upsell_positionComment(){
				
				    return "";
				
				}
				public String upsell_positionPattern(){
				
					return "";
				
				}
				public String upsell_positionOriginalDbColumnName(){
				
					return "upsell_position";
				
				}

				
			    public String additional_images;

				public String getAdditional_images () {
					return this.additional_images;
				}

				public Boolean additional_imagesIsNullable(){
				    return true;
				}
				public Boolean additional_imagesIsKey(){
				    return false;
				}
				public Integer additional_imagesLength(){
				    return null;
				}
				public Integer additional_imagesPrecision(){
				    return null;
				}
				public String additional_imagesDefault(){
				
					return null;
				
				}
				public String additional_imagesComment(){
				
				    return "";
				
				}
				public String additional_imagesPattern(){
				
					return "";
				
				}
				public String additional_imagesOriginalDbColumnName(){
				
					return "additional_images";
				
				}

				
			    public String additional_image_labels;

				public String getAdditional_image_labels () {
					return this.additional_image_labels;
				}

				public Boolean additional_image_labelsIsNullable(){
				    return true;
				}
				public Boolean additional_image_labelsIsKey(){
				    return false;
				}
				public Integer additional_image_labelsLength(){
				    return null;
				}
				public Integer additional_image_labelsPrecision(){
				    return null;
				}
				public String additional_image_labelsDefault(){
				
					return null;
				
				}
				public String additional_image_labelsComment(){
				
				    return "";
				
				}
				public String additional_image_labelsPattern(){
				
					return "";
				
				}
				public String additional_image_labelsOriginalDbColumnName(){
				
					return "additional_image_labels";
				
				}

				
			    public String hide_from_product_page;

				public String getHide_from_product_page () {
					return this.hide_from_product_page;
				}

				public Boolean hide_from_product_pageIsNullable(){
				    return true;
				}
				public Boolean hide_from_product_pageIsKey(){
				    return false;
				}
				public Integer hide_from_product_pageLength(){
				    return null;
				}
				public Integer hide_from_product_pagePrecision(){
				    return null;
				}
				public String hide_from_product_pageDefault(){
				
					return null;
				
				}
				public String hide_from_product_pageComment(){
				
				    return "";
				
				}
				public String hide_from_product_pagePattern(){
				
					return "";
				
				}
				public String hide_from_product_pageOriginalDbColumnName(){
				
					return "hide_from_product_page";
				
				}

				
			    public String custom_options;

				public String getCustom_options () {
					return this.custom_options;
				}

				public Boolean custom_optionsIsNullable(){
				    return true;
				}
				public Boolean custom_optionsIsKey(){
				    return false;
				}
				public Integer custom_optionsLength(){
				    return null;
				}
				public Integer custom_optionsPrecision(){
				    return null;
				}
				public String custom_optionsDefault(){
				
					return null;
				
				}
				public String custom_optionsComment(){
				
				    return "";
				
				}
				public String custom_optionsPattern(){
				
					return "";
				
				}
				public String custom_optionsOriginalDbColumnName(){
				
					return "custom_options";
				
				}

				
			    public String bundle_price_type;

				public String getBundle_price_type () {
					return this.bundle_price_type;
				}

				public Boolean bundle_price_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_price_typeIsKey(){
				    return false;
				}
				public Integer bundle_price_typeLength(){
				    return null;
				}
				public Integer bundle_price_typePrecision(){
				    return null;
				}
				public String bundle_price_typeDefault(){
				
					return null;
				
				}
				public String bundle_price_typeComment(){
				
				    return "";
				
				}
				public String bundle_price_typePattern(){
				
					return "";
				
				}
				public String bundle_price_typeOriginalDbColumnName(){
				
					return "bundle_price_type";
				
				}

				
			    public String bundle_sku_type;

				public String getBundle_sku_type () {
					return this.bundle_sku_type;
				}

				public Boolean bundle_sku_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_sku_typeIsKey(){
				    return false;
				}
				public Integer bundle_sku_typeLength(){
				    return null;
				}
				public Integer bundle_sku_typePrecision(){
				    return null;
				}
				public String bundle_sku_typeDefault(){
				
					return null;
				
				}
				public String bundle_sku_typeComment(){
				
				    return "";
				
				}
				public String bundle_sku_typePattern(){
				
					return "";
				
				}
				public String bundle_sku_typeOriginalDbColumnName(){
				
					return "bundle_sku_type";
				
				}

				
			    public String bundle_price_view;

				public String getBundle_price_view () {
					return this.bundle_price_view;
				}

				public Boolean bundle_price_viewIsNullable(){
				    return true;
				}
				public Boolean bundle_price_viewIsKey(){
				    return false;
				}
				public Integer bundle_price_viewLength(){
				    return null;
				}
				public Integer bundle_price_viewPrecision(){
				    return null;
				}
				public String bundle_price_viewDefault(){
				
					return null;
				
				}
				public String bundle_price_viewComment(){
				
				    return "";
				
				}
				public String bundle_price_viewPattern(){
				
					return "";
				
				}
				public String bundle_price_viewOriginalDbColumnName(){
				
					return "bundle_price_view";
				
				}

				
			    public String bundle_weight_type;

				public String getBundle_weight_type () {
					return this.bundle_weight_type;
				}

				public Boolean bundle_weight_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_weight_typeIsKey(){
				    return false;
				}
				public Integer bundle_weight_typeLength(){
				    return null;
				}
				public Integer bundle_weight_typePrecision(){
				    return null;
				}
				public String bundle_weight_typeDefault(){
				
					return null;
				
				}
				public String bundle_weight_typeComment(){
				
				    return "";
				
				}
				public String bundle_weight_typePattern(){
				
					return "";
				
				}
				public String bundle_weight_typeOriginalDbColumnName(){
				
					return "bundle_weight_type";
				
				}

				
			    public String bundle_values;

				public String getBundle_values () {
					return this.bundle_values;
				}

				public Boolean bundle_valuesIsNullable(){
				    return true;
				}
				public Boolean bundle_valuesIsKey(){
				    return false;
				}
				public Integer bundle_valuesLength(){
				    return null;
				}
				public Integer bundle_valuesPrecision(){
				    return null;
				}
				public String bundle_valuesDefault(){
				
					return null;
				
				}
				public String bundle_valuesComment(){
				
				    return "";
				
				}
				public String bundle_valuesPattern(){
				
					return "";
				
				}
				public String bundle_valuesOriginalDbColumnName(){
				
					return "bundle_values";
				
				}

				
			    public String bundle_shipment_type;

				public String getBundle_shipment_type () {
					return this.bundle_shipment_type;
				}

				public Boolean bundle_shipment_typeIsNullable(){
				    return true;
				}
				public Boolean bundle_shipment_typeIsKey(){
				    return false;
				}
				public Integer bundle_shipment_typeLength(){
				    return null;
				}
				public Integer bundle_shipment_typePrecision(){
				    return null;
				}
				public String bundle_shipment_typeDefault(){
				
					return null;
				
				}
				public String bundle_shipment_typeComment(){
				
				    return "";
				
				}
				public String bundle_shipment_typePattern(){
				
					return "";
				
				}
				public String bundle_shipment_typeOriginalDbColumnName(){
				
					return "bundle_shipment_type";
				
				}

				
			    public String configurable_variations;

				public String getConfigurable_variations () {
					return this.configurable_variations;
				}

				public Boolean configurable_variationsIsNullable(){
				    return true;
				}
				public Boolean configurable_variationsIsKey(){
				    return false;
				}
				public Integer configurable_variationsLength(){
				    return null;
				}
				public Integer configurable_variationsPrecision(){
				    return null;
				}
				public String configurable_variationsDefault(){
				
					return null;
				
				}
				public String configurable_variationsComment(){
				
				    return "";
				
				}
				public String configurable_variationsPattern(){
				
					return "";
				
				}
				public String configurable_variationsOriginalDbColumnName(){
				
					return "configurable_variations";
				
				}

				
			    public String configurable_variation_labels;

				public String getConfigurable_variation_labels () {
					return this.configurable_variation_labels;
				}

				public Boolean configurable_variation_labelsIsNullable(){
				    return true;
				}
				public Boolean configurable_variation_labelsIsKey(){
				    return false;
				}
				public Integer configurable_variation_labelsLength(){
				    return null;
				}
				public Integer configurable_variation_labelsPrecision(){
				    return null;
				}
				public String configurable_variation_labelsDefault(){
				
					return null;
				
				}
				public String configurable_variation_labelsComment(){
				
				    return "";
				
				}
				public String configurable_variation_labelsPattern(){
				
					return "";
				
				}
				public String configurable_variation_labelsOriginalDbColumnName(){
				
					return "configurable_variation_labels";
				
				}

				
			    public String downloadable_links;

				public String getDownloadable_links () {
					return this.downloadable_links;
				}

				public Boolean downloadable_linksIsNullable(){
				    return true;
				}
				public Boolean downloadable_linksIsKey(){
				    return false;
				}
				public Integer downloadable_linksLength(){
				    return null;
				}
				public Integer downloadable_linksPrecision(){
				    return null;
				}
				public String downloadable_linksDefault(){
				
					return null;
				
				}
				public String downloadable_linksComment(){
				
				    return "";
				
				}
				public String downloadable_linksPattern(){
				
					return "";
				
				}
				public String downloadable_linksOriginalDbColumnName(){
				
					return "downloadable_links";
				
				}

				
			    public String downloadable_samples;

				public String getDownloadable_samples () {
					return this.downloadable_samples;
				}

				public Boolean downloadable_samplesIsNullable(){
				    return true;
				}
				public Boolean downloadable_samplesIsKey(){
				    return false;
				}
				public Integer downloadable_samplesLength(){
				    return null;
				}
				public Integer downloadable_samplesPrecision(){
				    return null;
				}
				public String downloadable_samplesDefault(){
				
					return null;
				
				}
				public String downloadable_samplesComment(){
				
				    return "";
				
				}
				public String downloadable_samplesPattern(){
				
					return "";
				
				}
				public String downloadable_samplesOriginalDbColumnName(){
				
					return "downloadable_samples";
				
				}

				
			    public String associated_skus;

				public String getAssociated_skus () {
					return this.associated_skus;
				}

				public Boolean associated_skusIsNullable(){
				    return true;
				}
				public Boolean associated_skusIsKey(){
				    return false;
				}
				public Integer associated_skusLength(){
				    return null;
				}
				public Integer associated_skusPrecision(){
				    return null;
				}
				public String associated_skusDefault(){
				
					return null;
				
				}
				public String associated_skusComment(){
				
				    return "";
				
				}
				public String associated_skusPattern(){
				
					return "";
				
				}
				public String associated_skusOriginalDbColumnName(){
				
					return "associated_skus";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.store_view_code = readString(dis);
					
					this.attribute_set_code = readString(dis);
					
					this.product_type = readString(dis);
					
					this.categories = readString(dis);
					
					this.product_websites = readString(dis);
					
					this.name = readString(dis);
					
					this.short_description = readString(dis);
					
					this.weight = readString(dis);
					
					this.product_online = readString(dis);
					
					this.tax_class_name = readString(dis);
					
					this.visibility = readString(dis);
					
					this.price = readString(dis);
					
					this.special_price = readString(dis);
					
					this.special_price_from_date = readString(dis);
					
					this.special_price_to_date = readString(dis);
					
					this.url_key = readString(dis);
					
					this.meta_title = readString(dis);
					
					this.meta_keywords = readString(dis);
					
					this.meta_description = readString(dis);
					
					this.base_image = readString(dis);
					
					this.base_image_label = readString(dis);
					
					this.small_image = readString(dis);
					
					this.small_image_label = readString(dis);
					
					this.thumbnail_image = readString(dis);
					
					this.thumbnail_image_label = readString(dis);
					
					this.swatch_image = readString(dis);
					
					this.swatch_image_label = readString(dis);
					
					this.created_at = readString(dis);
					
					this.updated_at = readString(dis);
					
					this.new_from_date = readString(dis);
					
					this.new_to_date = readString(dis);
					
					this.display_product_options_in = readString(dis);
					
					this.map_price = readString(dis);
					
					this.msrp_price = readString(dis);
					
					this.map_enabled = readString(dis);
					
					this.gift_message_available = readString(dis);
					
					this.custom_design = readString(dis);
					
					this.custom_design_from = readString(dis);
					
					this.custom_design_to = readString(dis);
					
					this.custom_layout_update = readString(dis);
					
					this.page_layout = readString(dis);
					
					this.product_options_container = readString(dis);
					
					this.msrp_display_actual_price_type = readString(dis);
					
					this.country_of_manufacture = readString(dis);
					
					this.additional_attributes = readString(dis);
					
					this.qty = readString(dis);
					
					this.out_of_stock_qty = readString(dis);
					
					this.use_config_min_qty = readString(dis);
					
					this.is_qty_decimal = readString(dis);
					
					this.allow_backorders = readString(dis);
					
					this.use_config_backorders = readString(dis);
					
					this.min_cart_qty = readString(dis);
					
					this.use_config_min_sale_qty = readString(dis);
					
					this.max_cart_qty = readString(dis);
					
					this.use_config_max_sale_qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
					this.notify_on_stock_below = readString(dis);
					
					this.use_config_notify_stock_qty = readString(dis);
					
					this.manage_stock = readString(dis);
					
					this.use_config_manage_stock = readString(dis);
					
					this.use_config_qty_increments = readString(dis);
					
					this.qty_increments = readString(dis);
					
					this.use_config_enable_qty_inc = readString(dis);
					
					this.enable_qty_increments = readString(dis);
					
					this.is_decimal_divided = readString(dis);
					
					this.website_id = readString(dis);
					
					this.deferred_stock_update = readString(dis);
					
					this.use_config_deferred_stock_update = readString(dis);
					
					this.related_skus = readString(dis);
					
					this.related_position = readString(dis);
					
					this.crosssell_skus = readString(dis);
					
					this.crosssell_position = readString(dis);
					
					this.upsell_skus = readString(dis);
					
					this.upsell_position = readString(dis);
					
					this.additional_images = readString(dis);
					
					this.additional_image_labels = readString(dis);
					
					this.hide_from_product_page = readString(dis);
					
					this.custom_options = readString(dis);
					
					this.bundle_price_type = readString(dis);
					
					this.bundle_sku_type = readString(dis);
					
					this.bundle_price_view = readString(dis);
					
					this.bundle_weight_type = readString(dis);
					
					this.bundle_values = readString(dis);
					
					this.bundle_shipment_type = readString(dis);
					
					this.configurable_variations = readString(dis);
					
					this.configurable_variation_labels = readString(dis);
					
					this.downloadable_links = readString(dis);
					
					this.downloadable_samples = readString(dis);
					
					this.associated_skus = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.store_view_code = readString(dis);
					
					this.attribute_set_code = readString(dis);
					
					this.product_type = readString(dis);
					
					this.categories = readString(dis);
					
					this.product_websites = readString(dis);
					
					this.name = readString(dis);
					
					this.short_description = readString(dis);
					
					this.weight = readString(dis);
					
					this.product_online = readString(dis);
					
					this.tax_class_name = readString(dis);
					
					this.visibility = readString(dis);
					
					this.price = readString(dis);
					
					this.special_price = readString(dis);
					
					this.special_price_from_date = readString(dis);
					
					this.special_price_to_date = readString(dis);
					
					this.url_key = readString(dis);
					
					this.meta_title = readString(dis);
					
					this.meta_keywords = readString(dis);
					
					this.meta_description = readString(dis);
					
					this.base_image = readString(dis);
					
					this.base_image_label = readString(dis);
					
					this.small_image = readString(dis);
					
					this.small_image_label = readString(dis);
					
					this.thumbnail_image = readString(dis);
					
					this.thumbnail_image_label = readString(dis);
					
					this.swatch_image = readString(dis);
					
					this.swatch_image_label = readString(dis);
					
					this.created_at = readString(dis);
					
					this.updated_at = readString(dis);
					
					this.new_from_date = readString(dis);
					
					this.new_to_date = readString(dis);
					
					this.display_product_options_in = readString(dis);
					
					this.map_price = readString(dis);
					
					this.msrp_price = readString(dis);
					
					this.map_enabled = readString(dis);
					
					this.gift_message_available = readString(dis);
					
					this.custom_design = readString(dis);
					
					this.custom_design_from = readString(dis);
					
					this.custom_design_to = readString(dis);
					
					this.custom_layout_update = readString(dis);
					
					this.page_layout = readString(dis);
					
					this.product_options_container = readString(dis);
					
					this.msrp_display_actual_price_type = readString(dis);
					
					this.country_of_manufacture = readString(dis);
					
					this.additional_attributes = readString(dis);
					
					this.qty = readString(dis);
					
					this.out_of_stock_qty = readString(dis);
					
					this.use_config_min_qty = readString(dis);
					
					this.is_qty_decimal = readString(dis);
					
					this.allow_backorders = readString(dis);
					
					this.use_config_backorders = readString(dis);
					
					this.min_cart_qty = readString(dis);
					
					this.use_config_min_sale_qty = readString(dis);
					
					this.max_cart_qty = readString(dis);
					
					this.use_config_max_sale_qty = readString(dis);
					
					this.is_in_stock = readString(dis);
					
					this.notify_on_stock_below = readString(dis);
					
					this.use_config_notify_stock_qty = readString(dis);
					
					this.manage_stock = readString(dis);
					
					this.use_config_manage_stock = readString(dis);
					
					this.use_config_qty_increments = readString(dis);
					
					this.qty_increments = readString(dis);
					
					this.use_config_enable_qty_inc = readString(dis);
					
					this.enable_qty_increments = readString(dis);
					
					this.is_decimal_divided = readString(dis);
					
					this.website_id = readString(dis);
					
					this.deferred_stock_update = readString(dis);
					
					this.use_config_deferred_stock_update = readString(dis);
					
					this.related_skus = readString(dis);
					
					this.related_position = readString(dis);
					
					this.crosssell_skus = readString(dis);
					
					this.crosssell_position = readString(dis);
					
					this.upsell_skus = readString(dis);
					
					this.upsell_position = readString(dis);
					
					this.additional_images = readString(dis);
					
					this.additional_image_labels = readString(dis);
					
					this.hide_from_product_page = readString(dis);
					
					this.custom_options = readString(dis);
					
					this.bundle_price_type = readString(dis);
					
					this.bundle_sku_type = readString(dis);
					
					this.bundle_price_view = readString(dis);
					
					this.bundle_weight_type = readString(dis);
					
					this.bundle_values = readString(dis);
					
					this.bundle_shipment_type = readString(dis);
					
					this.configurable_variations = readString(dis);
					
					this.configurable_variation_labels = readString(dis);
					
					this.downloadable_links = readString(dis);
					
					this.downloadable_samples = readString(dis);
					
					this.associated_skus = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.store_view_code,dos);
					
					// String
				
						writeString(this.attribute_set_code,dos);
					
					// String
				
						writeString(this.product_type,dos);
					
					// String
				
						writeString(this.categories,dos);
					
					// String
				
						writeString(this.product_websites,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.short_description,dos);
					
					// String
				
						writeString(this.weight,dos);
					
					// String
				
						writeString(this.product_online,dos);
					
					// String
				
						writeString(this.tax_class_name,dos);
					
					// String
				
						writeString(this.visibility,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// String
				
						writeString(this.special_price_from_date,dos);
					
					// String
				
						writeString(this.special_price_to_date,dos);
					
					// String
				
						writeString(this.url_key,dos);
					
					// String
				
						writeString(this.meta_title,dos);
					
					// String
				
						writeString(this.meta_keywords,dos);
					
					// String
				
						writeString(this.meta_description,dos);
					
					// String
				
						writeString(this.base_image,dos);
					
					// String
				
						writeString(this.base_image_label,dos);
					
					// String
				
						writeString(this.small_image,dos);
					
					// String
				
						writeString(this.small_image_label,dos);
					
					// String
				
						writeString(this.thumbnail_image,dos);
					
					// String
				
						writeString(this.thumbnail_image_label,dos);
					
					// String
				
						writeString(this.swatch_image,dos);
					
					// String
				
						writeString(this.swatch_image_label,dos);
					
					// String
				
						writeString(this.created_at,dos);
					
					// String
				
						writeString(this.updated_at,dos);
					
					// String
				
						writeString(this.new_from_date,dos);
					
					// String
				
						writeString(this.new_to_date,dos);
					
					// String
				
						writeString(this.display_product_options_in,dos);
					
					// String
				
						writeString(this.map_price,dos);
					
					// String
				
						writeString(this.msrp_price,dos);
					
					// String
				
						writeString(this.map_enabled,dos);
					
					// String
				
						writeString(this.gift_message_available,dos);
					
					// String
				
						writeString(this.custom_design,dos);
					
					// String
				
						writeString(this.custom_design_from,dos);
					
					// String
				
						writeString(this.custom_design_to,dos);
					
					// String
				
						writeString(this.custom_layout_update,dos);
					
					// String
				
						writeString(this.page_layout,dos);
					
					// String
				
						writeString(this.product_options_container,dos);
					
					// String
				
						writeString(this.msrp_display_actual_price_type,dos);
					
					// String
				
						writeString(this.country_of_manufacture,dos);
					
					// String
				
						writeString(this.additional_attributes,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.out_of_stock_qty,dos);
					
					// String
				
						writeString(this.use_config_min_qty,dos);
					
					// String
				
						writeString(this.is_qty_decimal,dos);
					
					// String
				
						writeString(this.allow_backorders,dos);
					
					// String
				
						writeString(this.use_config_backorders,dos);
					
					// String
				
						writeString(this.min_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_min_sale_qty,dos);
					
					// String
				
						writeString(this.max_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_max_sale_qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// String
				
						writeString(this.notify_on_stock_below,dos);
					
					// String
				
						writeString(this.use_config_notify_stock_qty,dos);
					
					// String
				
						writeString(this.manage_stock,dos);
					
					// String
				
						writeString(this.use_config_manage_stock,dos);
					
					// String
				
						writeString(this.use_config_qty_increments,dos);
					
					// String
				
						writeString(this.qty_increments,dos);
					
					// String
				
						writeString(this.use_config_enable_qty_inc,dos);
					
					// String
				
						writeString(this.enable_qty_increments,dos);
					
					// String
				
						writeString(this.is_decimal_divided,dos);
					
					// String
				
						writeString(this.website_id,dos);
					
					// String
				
						writeString(this.deferred_stock_update,dos);
					
					// String
				
						writeString(this.use_config_deferred_stock_update,dos);
					
					// String
				
						writeString(this.related_skus,dos);
					
					// String
				
						writeString(this.related_position,dos);
					
					// String
				
						writeString(this.crosssell_skus,dos);
					
					// String
				
						writeString(this.crosssell_position,dos);
					
					// String
				
						writeString(this.upsell_skus,dos);
					
					// String
				
						writeString(this.upsell_position,dos);
					
					// String
				
						writeString(this.additional_images,dos);
					
					// String
				
						writeString(this.additional_image_labels,dos);
					
					// String
				
						writeString(this.hide_from_product_page,dos);
					
					// String
				
						writeString(this.custom_options,dos);
					
					// String
				
						writeString(this.bundle_price_type,dos);
					
					// String
				
						writeString(this.bundle_sku_type,dos);
					
					// String
				
						writeString(this.bundle_price_view,dos);
					
					// String
				
						writeString(this.bundle_weight_type,dos);
					
					// String
				
						writeString(this.bundle_values,dos);
					
					// String
				
						writeString(this.bundle_shipment_type,dos);
					
					// String
				
						writeString(this.configurable_variations,dos);
					
					// String
				
						writeString(this.configurable_variation_labels,dos);
					
					// String
				
						writeString(this.downloadable_links,dos);
					
					// String
				
						writeString(this.downloadable_samples,dos);
					
					// String
				
						writeString(this.associated_skus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.store_view_code,dos);
					
					// String
				
						writeString(this.attribute_set_code,dos);
					
					// String
				
						writeString(this.product_type,dos);
					
					// String
				
						writeString(this.categories,dos);
					
					// String
				
						writeString(this.product_websites,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.short_description,dos);
					
					// String
				
						writeString(this.weight,dos);
					
					// String
				
						writeString(this.product_online,dos);
					
					// String
				
						writeString(this.tax_class_name,dos);
					
					// String
				
						writeString(this.visibility,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// String
				
						writeString(this.special_price_from_date,dos);
					
					// String
				
						writeString(this.special_price_to_date,dos);
					
					// String
				
						writeString(this.url_key,dos);
					
					// String
				
						writeString(this.meta_title,dos);
					
					// String
				
						writeString(this.meta_keywords,dos);
					
					// String
				
						writeString(this.meta_description,dos);
					
					// String
				
						writeString(this.base_image,dos);
					
					// String
				
						writeString(this.base_image_label,dos);
					
					// String
				
						writeString(this.small_image,dos);
					
					// String
				
						writeString(this.small_image_label,dos);
					
					// String
				
						writeString(this.thumbnail_image,dos);
					
					// String
				
						writeString(this.thumbnail_image_label,dos);
					
					// String
				
						writeString(this.swatch_image,dos);
					
					// String
				
						writeString(this.swatch_image_label,dos);
					
					// String
				
						writeString(this.created_at,dos);
					
					// String
				
						writeString(this.updated_at,dos);
					
					// String
				
						writeString(this.new_from_date,dos);
					
					// String
				
						writeString(this.new_to_date,dos);
					
					// String
				
						writeString(this.display_product_options_in,dos);
					
					// String
				
						writeString(this.map_price,dos);
					
					// String
				
						writeString(this.msrp_price,dos);
					
					// String
				
						writeString(this.map_enabled,dos);
					
					// String
				
						writeString(this.gift_message_available,dos);
					
					// String
				
						writeString(this.custom_design,dos);
					
					// String
				
						writeString(this.custom_design_from,dos);
					
					// String
				
						writeString(this.custom_design_to,dos);
					
					// String
				
						writeString(this.custom_layout_update,dos);
					
					// String
				
						writeString(this.page_layout,dos);
					
					// String
				
						writeString(this.product_options_container,dos);
					
					// String
				
						writeString(this.msrp_display_actual_price_type,dos);
					
					// String
				
						writeString(this.country_of_manufacture,dos);
					
					// String
				
						writeString(this.additional_attributes,dos);
					
					// String
				
						writeString(this.qty,dos);
					
					// String
				
						writeString(this.out_of_stock_qty,dos);
					
					// String
				
						writeString(this.use_config_min_qty,dos);
					
					// String
				
						writeString(this.is_qty_decimal,dos);
					
					// String
				
						writeString(this.allow_backorders,dos);
					
					// String
				
						writeString(this.use_config_backorders,dos);
					
					// String
				
						writeString(this.min_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_min_sale_qty,dos);
					
					// String
				
						writeString(this.max_cart_qty,dos);
					
					// String
				
						writeString(this.use_config_max_sale_qty,dos);
					
					// String
				
						writeString(this.is_in_stock,dos);
					
					// String
				
						writeString(this.notify_on_stock_below,dos);
					
					// String
				
						writeString(this.use_config_notify_stock_qty,dos);
					
					// String
				
						writeString(this.manage_stock,dos);
					
					// String
				
						writeString(this.use_config_manage_stock,dos);
					
					// String
				
						writeString(this.use_config_qty_increments,dos);
					
					// String
				
						writeString(this.qty_increments,dos);
					
					// String
				
						writeString(this.use_config_enable_qty_inc,dos);
					
					// String
				
						writeString(this.enable_qty_increments,dos);
					
					// String
				
						writeString(this.is_decimal_divided,dos);
					
					// String
				
						writeString(this.website_id,dos);
					
					// String
				
						writeString(this.deferred_stock_update,dos);
					
					// String
				
						writeString(this.use_config_deferred_stock_update,dos);
					
					// String
				
						writeString(this.related_skus,dos);
					
					// String
				
						writeString(this.related_position,dos);
					
					// String
				
						writeString(this.crosssell_skus,dos);
					
					// String
				
						writeString(this.crosssell_position,dos);
					
					// String
				
						writeString(this.upsell_skus,dos);
					
					// String
				
						writeString(this.upsell_position,dos);
					
					// String
				
						writeString(this.additional_images,dos);
					
					// String
				
						writeString(this.additional_image_labels,dos);
					
					// String
				
						writeString(this.hide_from_product_page,dos);
					
					// String
				
						writeString(this.custom_options,dos);
					
					// String
				
						writeString(this.bundle_price_type,dos);
					
					// String
				
						writeString(this.bundle_sku_type,dos);
					
					// String
				
						writeString(this.bundle_price_view,dos);
					
					// String
				
						writeString(this.bundle_weight_type,dos);
					
					// String
				
						writeString(this.bundle_values,dos);
					
					// String
				
						writeString(this.bundle_shipment_type,dos);
					
					// String
				
						writeString(this.configurable_variations,dos);
					
					// String
				
						writeString(this.configurable_variation_labels,dos);
					
					// String
				
						writeString(this.downloadable_links,dos);
					
					// String
				
						writeString(this.downloadable_samples,dos);
					
					// String
				
						writeString(this.associated_skus,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",store_view_code="+store_view_code);
		sb.append(",attribute_set_code="+attribute_set_code);
		sb.append(",product_type="+product_type);
		sb.append(",categories="+categories);
		sb.append(",product_websites="+product_websites);
		sb.append(",name="+name);
		sb.append(",short_description="+short_description);
		sb.append(",weight="+weight);
		sb.append(",product_online="+product_online);
		sb.append(",tax_class_name="+tax_class_name);
		sb.append(",visibility="+visibility);
		sb.append(",price="+price);
		sb.append(",special_price="+special_price);
		sb.append(",special_price_from_date="+special_price_from_date);
		sb.append(",special_price_to_date="+special_price_to_date);
		sb.append(",url_key="+url_key);
		sb.append(",meta_title="+meta_title);
		sb.append(",meta_keywords="+meta_keywords);
		sb.append(",meta_description="+meta_description);
		sb.append(",base_image="+base_image);
		sb.append(",base_image_label="+base_image_label);
		sb.append(",small_image="+small_image);
		sb.append(",small_image_label="+small_image_label);
		sb.append(",thumbnail_image="+thumbnail_image);
		sb.append(",thumbnail_image_label="+thumbnail_image_label);
		sb.append(",swatch_image="+swatch_image);
		sb.append(",swatch_image_label="+swatch_image_label);
		sb.append(",created_at="+created_at);
		sb.append(",updated_at="+updated_at);
		sb.append(",new_from_date="+new_from_date);
		sb.append(",new_to_date="+new_to_date);
		sb.append(",display_product_options_in="+display_product_options_in);
		sb.append(",map_price="+map_price);
		sb.append(",msrp_price="+msrp_price);
		sb.append(",map_enabled="+map_enabled);
		sb.append(",gift_message_available="+gift_message_available);
		sb.append(",custom_design="+custom_design);
		sb.append(",custom_design_from="+custom_design_from);
		sb.append(",custom_design_to="+custom_design_to);
		sb.append(",custom_layout_update="+custom_layout_update);
		sb.append(",page_layout="+page_layout);
		sb.append(",product_options_container="+product_options_container);
		sb.append(",msrp_display_actual_price_type="+msrp_display_actual_price_type);
		sb.append(",country_of_manufacture="+country_of_manufacture);
		sb.append(",additional_attributes="+additional_attributes);
		sb.append(",qty="+qty);
		sb.append(",out_of_stock_qty="+out_of_stock_qty);
		sb.append(",use_config_min_qty="+use_config_min_qty);
		sb.append(",is_qty_decimal="+is_qty_decimal);
		sb.append(",allow_backorders="+allow_backorders);
		sb.append(",use_config_backorders="+use_config_backorders);
		sb.append(",min_cart_qty="+min_cart_qty);
		sb.append(",use_config_min_sale_qty="+use_config_min_sale_qty);
		sb.append(",max_cart_qty="+max_cart_qty);
		sb.append(",use_config_max_sale_qty="+use_config_max_sale_qty);
		sb.append(",is_in_stock="+is_in_stock);
		sb.append(",notify_on_stock_below="+notify_on_stock_below);
		sb.append(",use_config_notify_stock_qty="+use_config_notify_stock_qty);
		sb.append(",manage_stock="+manage_stock);
		sb.append(",use_config_manage_stock="+use_config_manage_stock);
		sb.append(",use_config_qty_increments="+use_config_qty_increments);
		sb.append(",qty_increments="+qty_increments);
		sb.append(",use_config_enable_qty_inc="+use_config_enable_qty_inc);
		sb.append(",enable_qty_increments="+enable_qty_increments);
		sb.append(",is_decimal_divided="+is_decimal_divided);
		sb.append(",website_id="+website_id);
		sb.append(",deferred_stock_update="+deferred_stock_update);
		sb.append(",use_config_deferred_stock_update="+use_config_deferred_stock_update);
		sb.append(",related_skus="+related_skus);
		sb.append(",related_position="+related_position);
		sb.append(",crosssell_skus="+crosssell_skus);
		sb.append(",crosssell_position="+crosssell_position);
		sb.append(",upsell_skus="+upsell_skus);
		sb.append(",upsell_position="+upsell_position);
		sb.append(",additional_images="+additional_images);
		sb.append(",additional_image_labels="+additional_image_labels);
		sb.append(",hide_from_product_page="+hide_from_product_page);
		sb.append(",custom_options="+custom_options);
		sb.append(",bundle_price_type="+bundle_price_type);
		sb.append(",bundle_sku_type="+bundle_sku_type);
		sb.append(",bundle_price_view="+bundle_price_view);
		sb.append(",bundle_weight_type="+bundle_weight_type);
		sb.append(",bundle_values="+bundle_values);
		sb.append(",bundle_shipment_type="+bundle_shipment_type);
		sb.append(",configurable_variations="+configurable_variations);
		sb.append(",configurable_variation_labels="+configurable_variation_labels);
		sb.append(",downloadable_links="+downloadable_links);
		sb.append(",downloadable_samples="+downloadable_samples);
		sb.append(",associated_skus="+associated_skus);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();
saidaStruct saida = new saidaStruct();
row25Struct row25 = new row25Struct();
row3Struct row3 = new row3Struct();
row85Struct row85 = new row85Struct();
Saida10Struct Saida10 = new Saida10Struct();









	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida10");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida10Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_relatorio_special_price_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida10Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row85");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida10Struct Saida10_tmp = new Saida10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tFilterRow_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_17", false);
		start_Hash.put("tFilterRow_17", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tFilterRow_17 = 0;
		
    int nb_line_tFilterRow_17 = 0;
    int nb_line_ok_tFilterRow_17 = 0;
    int nb_line_reject_tFilterRow_17 = 0;

    class Operator_tFilterRow_17 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_17(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_17 begin ] stop
 */



	
	/**
	 * [tUniqRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_4", false);
		start_Hash.put("tUniqRow_4", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tUniqRow_4 = 0;
		

	
		class KeyStruct_tUniqRow_4 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String sku;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.sku == null) ? 0 : this.sku.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_4 other = (KeyStruct_tUniqRow_4) obj;
				
									if (this.sku == null) {
										if (other.sku != null) 
											return false;
								
									} else if (!this.sku.equals(other.sku))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_4 = 0;
int nb_duplicates_tUniqRow_4 = 0;
KeyStruct_tUniqRow_4 finder_tUniqRow_4 = new KeyStruct_tUniqRow_4();
java.util.Set<KeyStruct_tUniqRow_4> keystUniqRow_4 = new java.util.HashSet<KeyStruct_tUniqRow_4>(); 

 



/**
 * [tUniqRow_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
saidaStruct saida_tmp = new saidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_2", false);
		start_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_2";
	
	
		int tos_count_tFileInputDelimited_2 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_2 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_2 = 0;
				int footer_tFileInputDelimited_2 = 0;
				int totalLinetFileInputDelimited_2 = 0;
				int limittFileInputDelimited_2 = -1;
				int lastLinetFileInputDelimited_2 = -1;	
				
				char fieldSeparator_tFileInputDelimited_2[] = null;
				
				//support passing value (property: Field Separator) by 'context.fs' or 'globalMap.get("fs")'. 
				if ( ((String)",").length() > 0 ){
					fieldSeparator_tFileInputDelimited_2 = ((String)",").toCharArray();
				}else {			
					throw new IllegalArgumentException("Field Separator must be assigned a char."); 
				}
			
				char rowSeparator_tFileInputDelimited_2[] = null;
			
				//support passing value (property: Row Separator) by 'context.rs' or 'globalMap.get("rs")'. 
				if ( ((String)"\r\n").length() > 0 ){
					rowSeparator_tFileInputDelimited_2 = ((String)"\r\n").toCharArray();
				}else {
					throw new IllegalArgumentException("Row Separator must be assigned a char."); 
				}
			
				Object filename_tFileInputDelimited_2 = /** Start field tFileInputDelimited_2:FILENAME */""+context.Pasta_Rede_Leitura+"/export_catalog_product.csv"/** End field tFileInputDelimited_2:FILENAME */;		
				com.talend.csv.CSVReader csvReadertFileInputDelimited_2 = null;
	
				try{
					
						String[] rowtFileInputDelimited_2=null;
						int currentLinetFileInputDelimited_2 = 0;
	        			int outputLinetFileInputDelimited_2 = 0;
						try {//TD110 begin
							if(filename_tFileInputDelimited_2 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_2 = 0;
			if(footer_value_tFileInputDelimited_2 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer shouldn't be bigger than 0.");
			}
		
								csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader((java.io.InputStream)filename_tFileInputDelimited_2, fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
							}else{
								csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader(String.valueOf(filename_tFileInputDelimited_2),fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
		        			}
					
					
					csvReadertFileInputDelimited_2.setTrimWhitespace(false);
					if ( (rowSeparator_tFileInputDelimited_2[0] != '\n') && (rowSeparator_tFileInputDelimited_2[0] != '\r') )
	        			csvReadertFileInputDelimited_2.setLineEnd(""+rowSeparator_tFileInputDelimited_2[0]);
						
	        				csvReadertFileInputDelimited_2.setQuoteChar('"');
						
	            				csvReadertFileInputDelimited_2.setEscapeChar(csvReadertFileInputDelimited_2.getQuoteChar());
							      
		
			
						if(footer_tFileInputDelimited_2 > 0){
						for(totalLinetFileInputDelimited_2=0;totalLinetFileInputDelimited_2 < 1; totalLinetFileInputDelimited_2++){
							csvReadertFileInputDelimited_2.readNext();
						}
						csvReadertFileInputDelimited_2.setSkipEmptyRecords(true);
			            while (csvReadertFileInputDelimited_2.readNext()) {
							
								rowtFileInputDelimited_2=csvReadertFileInputDelimited_2.getValues();
								if(!(rowtFileInputDelimited_2.length == 1 && ("\015").equals(rowtFileInputDelimited_2[0]))){//empty line when row separator is '\n'
							
	                
	                		totalLinetFileInputDelimited_2++;
	                
							
								}
							
	                
			            }
	            		int lastLineTemptFileInputDelimited_2 = totalLinetFileInputDelimited_2 - footer_tFileInputDelimited_2   < 0? 0 : totalLinetFileInputDelimited_2 - footer_tFileInputDelimited_2 ;
	            		if(lastLinetFileInputDelimited_2 > 0){
	                		lastLinetFileInputDelimited_2 = lastLinetFileInputDelimited_2 < lastLineTemptFileInputDelimited_2 ? lastLinetFileInputDelimited_2 : lastLineTemptFileInputDelimited_2; 
	            		}else {
	                		lastLinetFileInputDelimited_2 = lastLineTemptFileInputDelimited_2;
	            		}
	         
			          	csvReadertFileInputDelimited_2.close();
				        if(filename_tFileInputDelimited_2 instanceof java.io.InputStream){
				 			csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader((java.io.InputStream)filename_tFileInputDelimited_2, fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
		        		}else{
							csvReadertFileInputDelimited_2=new com.talend.csv.CSVReader(String.valueOf(filename_tFileInputDelimited_2),fieldSeparator_tFileInputDelimited_2[0], "ISO-8859-15");
						}
						csvReadertFileInputDelimited_2.setTrimWhitespace(false);
						if ( (rowSeparator_tFileInputDelimited_2[0] != '\n') && (rowSeparator_tFileInputDelimited_2[0] != '\r') )	
	        				csvReadertFileInputDelimited_2.setLineEnd(""+rowSeparator_tFileInputDelimited_2[0]);
						
							csvReadertFileInputDelimited_2.setQuoteChar('"');
						
	        				csvReadertFileInputDelimited_2.setEscapeChar(csvReadertFileInputDelimited_2.getQuoteChar());
							  
	        		}
	        
			        if(limittFileInputDelimited_2 != 0){
			        	for(currentLinetFileInputDelimited_2=0;currentLinetFileInputDelimited_2 < 1;currentLinetFileInputDelimited_2++){
			        		csvReadertFileInputDelimited_2.readNext();
			        	}
			        }
			        csvReadertFileInputDelimited_2.setSkipEmptyRecords(true);
	        
	    		} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",e.getMessage());
					
						
						System.err.println(e.getMessage());
					
	    		}//TD110 end
	        
			    
	        	while ( limittFileInputDelimited_2 != 0 && csvReadertFileInputDelimited_2!=null && csvReadertFileInputDelimited_2.readNext() ) { 
	        		rowstate_tFileInputDelimited_2.reset();
	        
		        	rowtFileInputDelimited_2=csvReadertFileInputDelimited_2.getValues();
		        	
					
	        			if(rowtFileInputDelimited_2.length == 1 && ("\015").equals(rowtFileInputDelimited_2[0])){//empty line when row separator is '\n'
	        				continue;
	        			}
					
	        	
	        	
	        		currentLinetFileInputDelimited_2++;
	            
		            if(lastLinetFileInputDelimited_2 > -1 && currentLinetFileInputDelimited_2 > lastLinetFileInputDelimited_2) {
		                break;
	    	        }
	        	    outputLinetFileInputDelimited_2++;
	            	if (limittFileInputDelimited_2 > 0 && outputLinetFileInputDelimited_2 > limittFileInputDelimited_2) {
	                	break;
	            	}  
	                                                                      
					
	    							row24 = null;			
								
								boolean whetherReject_tFileInputDelimited_2 = false;
								row24 = new row24Struct();
								try {			
									
				char fieldSeparator_tFileInputDelimited_2_ListType[] = null;
				//support passing value (property: Field Separator) by 'context.fs' or 'globalMap.get("fs")'. 
				if ( ((String)",").length() > 0 ){
					fieldSeparator_tFileInputDelimited_2_ListType = ((String)",").toCharArray();
				}else {			
					throw new IllegalArgumentException("Field Separator must be assigned a char."); 
				}
				if(rowtFileInputDelimited_2.length == 1 && ("\015").equals(rowtFileInputDelimited_2[0])){//empty line when row separator is '\n'
					
							row24.sku = null;
					
							row24.store_view_code = null;
					
							row24.attribute_set_code = null;
					
							row24.product_type = null;
					
							row24.categories = null;
					
							row24.product_websites = null;
					
							row24.name = null;
					
							row24.short_description = null;
					
							row24.weight = null;
					
							row24.product_online = null;
					
							row24.tax_class_name = null;
					
							row24.visibility = null;
					
							row24.price = null;
					
							row24.special_price = null;
					
							row24.special_price_from_date = null;
					
							row24.special_price_to_date = null;
					
							row24.url_key = null;
					
							row24.meta_title = null;
					
							row24.meta_keywords = null;
					
							row24.meta_description = null;
					
							row24.base_image = null;
					
							row24.base_image_label = null;
					
							row24.small_image = null;
					
							row24.small_image_label = null;
					
							row24.thumbnail_image = null;
					
							row24.thumbnail_image_label = null;
					
							row24.swatch_image = null;
					
							row24.swatch_image_label = null;
					
							row24.created_at = null;
					
							row24.updated_at = null;
					
							row24.new_from_date = null;
					
							row24.new_to_date = null;
					
							row24.display_product_options_in = null;
					
							row24.map_price = null;
					
							row24.msrp_price = null;
					
							row24.map_enabled = null;
					
							row24.gift_message_available = null;
					
							row24.custom_design = null;
					
							row24.custom_design_from = null;
					
							row24.custom_design_to = null;
					
							row24.custom_layout_update = null;
					
							row24.page_layout = null;
					
							row24.product_options_container = null;
					
							row24.msrp_display_actual_price_type = null;
					
							row24.country_of_manufacture = null;
					
							row24.additional_attributes = null;
					
							row24.qty = null;
					
							row24.out_of_stock_qty = null;
					
							row24.use_config_min_qty = null;
					
							row24.is_qty_decimal = null;
					
							row24.allow_backorders = null;
					
							row24.use_config_backorders = null;
					
							row24.min_cart_qty = null;
					
							row24.use_config_min_sale_qty = null;
					
							row24.max_cart_qty = null;
					
							row24.use_config_max_sale_qty = null;
					
							row24.is_in_stock = null;
					
							row24.notify_on_stock_below = null;
					
							row24.use_config_notify_stock_qty = null;
					
							row24.manage_stock = null;
					
							row24.use_config_manage_stock = null;
					
							row24.use_config_qty_increments = null;
					
							row24.qty_increments = null;
					
							row24.use_config_enable_qty_inc = null;
					
							row24.enable_qty_increments = null;
					
							row24.is_decimal_divided = null;
					
							row24.website_id = null;
					
							row24.deferred_stock_update = null;
					
							row24.use_config_deferred_stock_update = null;
					
							row24.related_skus = null;
					
							row24.related_position = null;
					
							row24.crosssell_skus = null;
					
							row24.crosssell_position = null;
					
							row24.upsell_skus = null;
					
							row24.upsell_position = null;
					
							row24.additional_images = null;
					
							row24.additional_image_labels = null;
					
							row24.hide_from_product_page = null;
					
							row24.custom_options = null;
					
							row24.bundle_price_type = null;
					
							row24.bundle_sku_type = null;
					
							row24.bundle_price_view = null;
					
							row24.bundle_weight_type = null;
					
							row24.bundle_values = null;
					
							row24.bundle_shipment_type = null;
					
							row24.configurable_variations = null;
					
							row24.configurable_variation_labels = null;
					
							row24.downloadable_links = null;
					
							row24.downloadable_samples = null;
					
							row24.associated_skus = null;
					
				}else{
					
					for(int i_tFileInputDelimited_2=0;i_tFileInputDelimited_2<rowtFileInputDelimited_2.length;i_tFileInputDelimited_2++){
						rowtFileInputDelimited_2[i_tFileInputDelimited_2]=rowtFileInputDelimited_2[i_tFileInputDelimited_2].trim();
					}
					
	                int columnIndexWithD_tFileInputDelimited_2 = 0; //Column Index 
	                
						columnIndexWithD_tFileInputDelimited_2 = 0;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.sku = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.sku = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 1;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.store_view_code = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.store_view_code = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 2;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.attribute_set_code = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.attribute_set_code = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 3;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 4;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.categories = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.categories = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 5;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_websites = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_websites = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 6;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.name = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.name = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 7;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.short_description = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.short_description = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 8;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.weight = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.weight = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 9;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_online = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_online = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 10;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.tax_class_name = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.tax_class_name = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 11;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.visibility = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.visibility = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 12;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 13;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.special_price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.special_price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 14;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.special_price_from_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.special_price_from_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 15;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.special_price_to_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.special_price_to_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 16;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.url_key = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.url_key = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 17;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.meta_title = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.meta_title = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 18;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.meta_keywords = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.meta_keywords = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 19;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.meta_description = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.meta_description = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 20;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.base_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.base_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 21;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.base_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.base_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 22;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.small_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.small_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 23;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.small_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.small_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 24;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.thumbnail_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.thumbnail_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 25;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.thumbnail_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.thumbnail_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 26;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.swatch_image = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.swatch_image = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 27;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.swatch_image_label = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.swatch_image_label = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 28;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.created_at = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.created_at = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 29;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.updated_at = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.updated_at = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 30;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.new_from_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.new_from_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 31;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.new_to_date = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.new_to_date = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 32;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.display_product_options_in = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.display_product_options_in = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 33;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.map_price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.map_price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 34;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.msrp_price = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.msrp_price = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 35;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.map_enabled = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.map_enabled = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 36;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.gift_message_available = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.gift_message_available = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 37;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_design = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_design = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 38;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_design_from = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_design_from = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 39;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_design_to = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_design_to = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 40;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_layout_update = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_layout_update = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 41;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.page_layout = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.page_layout = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 42;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.product_options_container = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.product_options_container = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 43;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.msrp_display_actual_price_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.msrp_display_actual_price_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 44;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.country_of_manufacture = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.country_of_manufacture = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 45;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.additional_attributes = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.additional_attributes = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 46;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 47;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.out_of_stock_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.out_of_stock_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 48;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_min_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_min_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 49;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.is_qty_decimal = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.is_qty_decimal = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 50;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.allow_backorders = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.allow_backorders = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 51;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_backorders = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_backorders = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 52;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.min_cart_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.min_cart_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 53;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_min_sale_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_min_sale_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 54;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.max_cart_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.max_cart_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 55;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_max_sale_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_max_sale_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 56;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.is_in_stock = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.is_in_stock = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 57;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.notify_on_stock_below = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.notify_on_stock_below = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 58;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_notify_stock_qty = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_notify_stock_qty = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 59;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.manage_stock = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.manage_stock = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 60;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_manage_stock = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_manage_stock = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 61;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_qty_increments = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_qty_increments = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 62;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.qty_increments = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.qty_increments = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 63;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_enable_qty_inc = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_enable_qty_inc = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 64;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.enable_qty_increments = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.enable_qty_increments = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 65;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.is_decimal_divided = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.is_decimal_divided = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 66;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.website_id = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.website_id = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 67;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.deferred_stock_update = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.deferred_stock_update = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 68;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.use_config_deferred_stock_update = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.use_config_deferred_stock_update = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 69;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.related_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.related_skus = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 70;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.related_position = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.related_position = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 71;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.crosssell_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.crosssell_skus = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 72;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.crosssell_position = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.crosssell_position = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 73;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.upsell_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.upsell_skus = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 74;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.upsell_position = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.upsell_position = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 75;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.additional_images = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.additional_images = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 76;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.additional_image_labels = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.additional_image_labels = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 77;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.hide_from_product_page = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.hide_from_product_page = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 78;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.custom_options = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.custom_options = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 79;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_price_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_price_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 80;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_sku_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_sku_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 81;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_price_view = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_price_view = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 82;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_weight_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_weight_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 83;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_values = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_values = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 84;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.bundle_shipment_type = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.bundle_shipment_type = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 85;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.configurable_variations = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.configurable_variations = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 86;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.configurable_variation_labels = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.configurable_variation_labels = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 87;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.downloadable_links = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.downloadable_links = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 88;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.downloadable_samples = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.downloadable_samples = null;
							
						
						}
						
						
					
						columnIndexWithD_tFileInputDelimited_2 = 89;
						
						
						
						if(columnIndexWithD_tFileInputDelimited_2 < rowtFileInputDelimited_2.length){
						
						
							
									row24.associated_skus = rowtFileInputDelimited_2[columnIndexWithD_tFileInputDelimited_2];
									
							
						
						}else{
						
							
								row24.associated_skus = null;
							
						
						}
						
						
					
				}
				
									
									if(rowstate_tFileInputDelimited_2.getException()!=null) {
										throw rowstate_tFileInputDelimited_2.getException();
									}
									
									
	    						} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",e.getMessage());
							        whetherReject_tFileInputDelimited_2 = true;
        							
                							System.err.println(e.getMessage());
                							row24 = null;
                						
            							globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE", e.getMessage());
            							
	    						}
	
							

 



/**
 * [tFileInputDelimited_2 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 


	tos_count_tFileInputDelimited_2++;

/**
 * [tFileInputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

saida = null;


// # Output table : 'saida'
saida_tmp.sku = row24.sku;
saida_tmp.special_price = row24.special_price ;
saida = saida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "saida"
if(saida != null) { 



	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida"
						
						);
					}
					

    //Code generated according to input schema and output schema
row25.sku = saida.sku.replaceAll("-1", "");;
row25.special_price = saida.special_price;

if (saida.special_price.length() <= 1) {
row25.validaproduto = 0;
} else{
row25.validaproduto = 1;
}


/*if (saida.sku.length() <= 5) {
row25.validaproduto = 1;
} else{
row25.validaproduto = 0;
}*/
    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_4 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
row3 = null;			
if(row25.sku == null){
	finder_tUniqRow_4.sku = null;
}else{
	finder_tUniqRow_4.sku = row25.sku.toLowerCase();
}	
finder_tUniqRow_4.hashCodeDirty = true;
if (!keystUniqRow_4.contains(finder_tUniqRow_4)) {
		KeyStruct_tUniqRow_4 new_tUniqRow_4 = new KeyStruct_tUniqRow_4();

		
if(row25.sku == null){
	new_tUniqRow_4.sku = null;
}else{
	new_tUniqRow_4.sku = row25.sku.toLowerCase();
}
		
		keystUniqRow_4.add(new_tUniqRow_4);if(row3 == null){ 
	
	row3 = new row3Struct();
}row3.sku = row25.sku;			row3.special_price = row25.special_price;			row3.validaproduto = row25.validaproduto;					
		nb_uniques_tUniqRow_4++;
	} else {
	  nb_duplicates_tUniqRow_4++;
	}

 


	tos_count_tUniqRow_4++;

/**
 * [tUniqRow_4 main ] stop
 */
	
	/**
	 * [tUniqRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tFilterRow_17 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

          row85 = null;
    Operator_tFilterRow_17 ope_tFilterRow_17 = new Operator_tFilterRow_17("&&");
            ope_tFilterRow_17.matches((row3.validaproduto == null? false : row3.validaproduto.compareTo(ParserUtils.parseTo_Integer(String.valueOf(1))) == 0)
                           , "validaproduto.compareTo(1) == 0 failed");
		 	
    
    if (ope_tFilterRow_17.getMatchFlag()) {
              if(row85 == null){ 
                row85 = new row85Struct();
              }
               row85.sku = row3.sku;
               row85.special_price = row3.special_price;
               row85.validaproduto = row3.validaproduto;    
      nb_line_ok_tFilterRow_17++;
    } else {
      nb_line_reject_tFilterRow_17++;
    }

nb_line_tFilterRow_17++;

 


	tos_count_tFilterRow_17++;

/**
 * [tFilterRow_17 main ] stop
 */
	
	/**
	 * [tFilterRow_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	

 



/**
 * [tFilterRow_17 process_data_begin ] stop
 */
// Start of branch "row85"
if(row85 != null) { 



	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row85"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_18 = false;
		boolean mainRowRejected_tMap_18 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

Saida10 = null;


// # Output table : 'Saida10'
Saida10_tmp.sku = row85.sku ;
Saida10_tmp.special_price = row85.special_price ;
Saida10_tmp.validaproduto = row85.validaproduto ;
Saida10 = Saida10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "Saida10"
if(Saida10 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida10"
						
						);
					}
					



    
		Saida10Struct oneRow_tHashOutput_2 = new Saida10Struct();
				
					oneRow_tHashOutput_2.sku = Saida10.sku;
					oneRow_tHashOutput_2.special_price = Saida10.special_price;
					oneRow_tHashOutput_2.validaproduto = Saida10.validaproduto;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "Saida10"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_end ] stop
 */

} // End of branch "row85"




	
	/**
	 * [tFilterRow_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	

 



/**
 * [tFilterRow_17 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tUniqRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */

} // End of branch "saida"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tFileInputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	


				nb_line_tFileInputDelimited_2++;
			}
			
			}finally{
    			if(!(filename_tFileInputDelimited_2 instanceof java.io.InputStream)){
    				if(csvReadertFileInputDelimited_2!=null){
    					csvReadertFileInputDelimited_2.close();
    				}
    			}
    			if(csvReadertFileInputDelimited_2!=null){
    				globalMap.put("tFileInputDelimited_2_NB_LINE",nb_line_tFileInputDelimited_2);
    			}
				
			}
						  

 

ok_Hash.put("tFileInputDelimited_2", true);
end_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());




/**
 * [tFileInputDelimited_2 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tUniqRow_4 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

globalMap.put("tUniqRow_4_NB_UNIQUES",nb_uniques_tUniqRow_4);
globalMap.put("tUniqRow_4_NB_DUPLICATES",nb_duplicates_tUniqRow_4);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tUniqRow_4", true);
end_Hash.put("tUniqRow_4", System.currentTimeMillis());




/**
 * [tUniqRow_4 end ] stop
 */

	
	/**
	 * [tFilterRow_17 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	
    globalMap.put("tFilterRow_17_NB_LINE", nb_line_tFilterRow_17);
    globalMap.put("tFilterRow_17_NB_LINE_OK", nb_line_ok_tFilterRow_17);
    globalMap.put("tFilterRow_17_NB_LINE_REJECT", nb_line_reject_tFilterRow_17);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tFilterRow_17", true);
end_Hash.put("tFilterRow_17", System.currentTimeMillis());




/**
 * [tFilterRow_17 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row85");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tJava_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tUniqRow_4 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 finally ] stop
 */

	
	/**
	 * [tFilterRow_17 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_17";
	
	

 



/**
 * [tFilterRow_17 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


//context.data_execucao = data;

System.out.println("Finalizado Processo de Leitura Dados do Magento: "+data);

 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk23", 0, "ok");
								} 
							
							tHashInput_20Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String special_price;

				public String getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return null;
				}
				public Integer special_pricePrecision(){
				    return null;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.special_price = readString(dis);
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.special_price,dos);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+special_price);
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();
row11Struct row11 = new row11Struct();
row2Struct row2 = new row2Struct();






	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_relatorio_special_price_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tHashInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_20", false);
		start_Hash.put("tHashInput_20", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_20";
	
	
		int tos_count_tHashInput_20 = 0;
		


int nb_line_tHashInput_20 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_20=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida10Struct> tHashFile_tHashInput_20 = mf_tHashInput_20.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_20==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<Saida10Struct> iterator_tHashInput_20 = tHashFile_tHashInput_20.iterator();
while (iterator_tHashInput_20.hasNext()) {
    Saida10Struct next_tHashInput_20 = iterator_tHashInput_20.next();

	row5.sku = next_tHashInput_20.sku;
	row5.special_price = next_tHashInput_20.special_price;
	row5.validaproduto = next_tHashInput_20.validaproduto;

 



/**
 * [tHashInput_20 begin ] stop
 */
	
	/**
	 * [tHashInput_20 main ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 


	tos_count_tHashInput_20++;

/**
 * [tHashInput_20 main ] stop
 */
	
	/**
	 * [tHashInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


  row11 = new row11Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row11.sku=TypeConvert.String2String(row5.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.special_price=TypeConvert.String2BigDecimal(row5.special_price);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.validaproduto=TypeConvert.Integer2Integer(row5.validaproduto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row11 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row11"
if(row11 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

    //Code generated according to input schema and output schema
row2.sku = row11.sku;
row2.special_price = row11.special_price.multiply(new BigDecimal(0.9));
row2.validaproduto = row11.validaproduto;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					



    
		row2Struct oneRow_tHashOutput_4 = new row2Struct();
				
					oneRow_tHashOutput_4.sku = row2.sku;
					oneRow_tHashOutput_4.special_price = row2.special_price;
					oneRow_tHashOutput_4.validaproduto = row2.validaproduto;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row11"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_20 end ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	
    

		
			nb_line_tHashInput_20++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_20_NB_LINE", nb_line_tHashInput_20);       

 

ok_Hash.put("tHashInput_20", true);
end_Hash.put("tHashInput_20", System.currentTimeMillis());




/**
 * [tHashInput_20 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_20:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_20 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class RelatorioStruct implements routines.system.IPersistableRow<RelatorioStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal promocional;

				public BigDecimal getPromocional () {
					return this.promocional;
				}

				public Boolean promocionalIsNullable(){
				    return true;
				}
				public Boolean promocionalIsKey(){
				    return false;
				}
				public Integer promocionalLength(){
				    return 8;
				}
				public Integer promocionalPrecision(){
				    return 2;
				}
				public String promocionalDefault(){
				
					return null;
				
				}
				public String promocionalComment(){
				
				    return "";
				
				}
				public String promocionalPattern(){
				
					return "";
				
				}
				public String promocionalOriginalDbColumnName(){
				
					return "promocional";
				
				}

				
			    public BigDecimal valor_custo;

				public BigDecimal getValor_custo () {
					return this.valor_custo;
				}

				public Boolean valor_custoIsNullable(){
				    return true;
				}
				public Boolean valor_custoIsKey(){
				    return false;
				}
				public Integer valor_custoLength(){
				    return 5;
				}
				public Integer valor_custoPrecision(){
				    return 2;
				}
				public String valor_custoDefault(){
				
					return null;
				
				}
				public String valor_custoComment(){
				
				    return "";
				
				}
				public String valor_custoPattern(){
				
					return "";
				
				}
				public String valor_custoOriginalDbColumnName(){
				
					return "valor_custo";
				
				}

				
			    public BigDecimal margem;

				public BigDecimal getMargem () {
					return this.margem;
				}

				public Boolean margemIsNullable(){
				    return true;
				}
				public Boolean margemIsKey(){
				    return false;
				}
				public Integer margemLength(){
				    return 5;
				}
				public Integer margemPrecision(){
				    return 2;
				}
				public String margemDefault(){
				
					return null;
				
				}
				public String margemComment(){
				
				    return "";
				
				}
				public String margemPattern(){
				
					return "";
				
				}
				public String margemOriginalDbColumnName(){
				
					return "margem";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.promocional = (BigDecimal) dis.readObject();
					
						this.valor_custo = (BigDecimal) dis.readObject();
					
						this.margem = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.promocional = (BigDecimal) dis.readObject();
					
						this.valor_custo = (BigDecimal) dis.readObject();
					
						this.margem = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.promocional);
					
					// BigDecimal
				
       			    	dos.writeObject(this.valor_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.margem);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.promocional);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.valor_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.margem);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",promocional="+String.valueOf(promocional));
		sb.append(",valor_custo="+String.valueOf(valor_custo));
		sb.append(",margem="+String.valueOf(margem));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RelatorioStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				
			    public BigDecimal valor_custo;

				public BigDecimal getValor_custo () {
					return this.valor_custo;
				}

				public Boolean valor_custoIsNullable(){
				    return true;
				}
				public Boolean valor_custoIsKey(){
				    return false;
				}
				public Integer valor_custoLength(){
				    return 5;
				}
				public Integer valor_custoPrecision(){
				    return 2;
				}
				public String valor_custoDefault(){
				
					return null;
				
				}
				public String valor_custoComment(){
				
				    return "";
				
				}
				public String valor_custoPattern(){
				
					return "";
				
				}
				public String valor_custoOriginalDbColumnName(){
				
					return "valor_custo";
				
				}

				
			    public BigDecimal margem;

				public BigDecimal getMargem () {
					return this.margem;
				}

				public Boolean margemIsNullable(){
				    return true;
				}
				public Boolean margemIsKey(){
				    return false;
				}
				public Integer margemLength(){
				    return 5;
				}
				public Integer margemPrecision(){
				    return 2;
				}
				public String margemDefault(){
				
					return null;
				
				}
				public String margemComment(){
				
				    return "";
				
				}
				public String margemPattern(){
				
					return "";
				
				}
				public String margemOriginalDbColumnName(){
				
					return "margem";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
						this.valor_custo = (BigDecimal) dis.readObject();
					
						this.margem = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
						this.valor_custo = (BigDecimal) dis.readObject();
					
						this.margem = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.valor_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.margem);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.valor_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.margem);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
		sb.append(",valor_custo="+String.valueOf(valor_custo));
		sb.append(",margem="+String.valueOf(margem));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class CustoStruct implements routines.system.IPersistableRow<CustoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				
			    public BigDecimal valor_custo;

				public BigDecimal getValor_custo () {
					return this.valor_custo;
				}

				public Boolean valor_custoIsNullable(){
				    return true;
				}
				public Boolean valor_custoIsKey(){
				    return false;
				}
				public Integer valor_custoLength(){
				    return 5;
				}
				public Integer valor_custoPrecision(){
				    return 2;
				}
				public String valor_custoDefault(){
				
					return null;
				
				}
				public String valor_custoComment(){
				
				    return "";
				
				}
				public String valor_custoPattern(){
				
					return "";
				
				}
				public String valor_custoOriginalDbColumnName(){
				
					return "valor_custo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
						this.valor_custo = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
						this.valor_custo = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.valor_custo);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.valor_custo);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
		sb.append(",valor_custo="+String.valueOf(valor_custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(CustoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);

		row1Struct row1 = new row1Struct();
CustoStruct Custo = new CustoStruct();
row6Struct row6 = new row6Struct();
RelatorioStruct Relatorio = new RelatorioStruct();







	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Relatorio");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		String fileName_tFileOutputExcel_1="/root/e_mail/Special_Price_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_1.setAppend(false,false, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("sku");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESCRICAO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("MARCA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("promocional");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("valor_custo");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("margem");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
RelatorioStruct Relatorio_tmp = new RelatorioStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Custo");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
					globalMap.get( "tHash_Lookup_row4" ))
					;					
					
	

row4Struct row4HashKey = new row4Struct();
row4Struct row4Default = new row4Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
CustoStruct Custo_tmp = new CustoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row2Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row2Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row1.sku = next_tHashInput_1.sku;
	row1.special_price = next_tHashInput_1.special_price;
	row1.validaproduto = next_tHashInput_1.validaproduto;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row4Struct row4 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row4" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow4 = false;
       		  	    	
       		  	    	
 							row4Struct row4ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row4HashKey.COD_ITEM = row1.sku ;
                        		    		

								
		                        	row4HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row4.lookup( row4HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row4.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_1 = true;
	  								
						
									
	
		  								forceLooprow4 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow4 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row4 != null && tHash_Lookup_row4.hasNext()) || forceLooprow4) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row4'
									
                    		  	 
							   
                    		  	 
	       		  	    	row4Struct fromLookup_row4 = null;
							row4 = row4Default;
										 
							
								
								if(!forceLooprow4) { // G 46
								
							
								 
							
								
								fromLookup_row4 = tHash_Lookup_row4.next();

							

							if(fromLookup_row4 != null) {
								row4 = fromLookup_row4;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow4 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

Custo = null;

if(!rejectedInnerJoin_tMap_1 ) {

// # Output table : 'Custo'
Custo_tmp.sku = row1.sku ;
Custo_tmp.DESCRICAO = row4.DESCRICAO ;
Custo_tmp.MARCA = row4.MARCA ;
Custo_tmp.special_price = row1.special_price ;
Custo_tmp.validaproduto = row1.validaproduto ;
Custo_tmp.valor_custo = row4.VL_CUSTO ;
Custo = Custo_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "Custo"
if(Custo != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Custo"
						
						);
					}
					

    //Code generated according to input schema and output schema
row6.sku = Custo.sku;
row6.DESCRICAO = Custo.DESCRICAO;
row6.MARCA = Custo.MARCA;
row6.special_price = Custo.special_price;
row6.validaproduto = Custo.validaproduto;
row6.valor_custo = Custo.valor_custo;
row6.margem = (Custo.special_price.divide(Custo.valor_custo, 5, RoundingMode.HALF_UP)).subtract(new BigDecimal(1));
//row6.margem = (Custo.special_price.divide(Custo.valor_custo)).subtract(new BigDecimal(1));


//((item.qtd_item *item.vl_unitario) / item.total_custo)-1 as margem
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

Relatorio = null;


// # Output table : 'Relatorio'
Relatorio_tmp.sku = row6.sku;
Relatorio_tmp.DESCRICAO = row6.DESCRICAO ;
Relatorio_tmp.MARCA = row6.MARCA ;
Relatorio_tmp.promocional = row6.special_price;
Relatorio_tmp.valor_custo = row6.valor_custo;
Relatorio_tmp.margem = row6.margem;
Relatorio = Relatorio_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "Relatorio"
if(Relatorio != null) { 



	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Relatorio"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(Relatorio.sku != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(Relatorio.sku));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(Relatorio.DESCRICAO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(Relatorio.DESCRICAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(Relatorio.MARCA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(Relatorio.MARCA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(Relatorio.promocional != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((Relatorio.promocional.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(Relatorio.valor_custo != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((Relatorio.valor_custo.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(Relatorio.margem != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((Relatorio.margem.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */

} // End of branch "Relatorio"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "Custo"



	
		} // close loop of lookup 'row4' // G_TM_M_043
	
	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row4 != null) {
						tHash_Lookup_row4.endGet();
					}
					globalMap.remove( "tHash_Lookup_row4" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Custo");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

							columnIndex_tFileOutputExcel_1 = 0;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 1;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 2;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 3;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 4;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 5;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Relatorio");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row4"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String OPERADOR;

				public String getOPERADOR () {
					return this.OPERADOR;
				}

				public Boolean OPERADORIsNullable(){
				    return true;
				}
				public Boolean OPERADORIsKey(){
				    return false;
				}
				public Integer OPERADORLength(){
				    return 12;
				}
				public Integer OPERADORPrecision(){
				    return 2;
				}
				public String OPERADORDefault(){
				
					return null;
				
				}
				public String OPERADORComment(){
				
				    return "";
				
				}
				public String OPERADORPattern(){
				
					return "";
				
				}
				public String OPERADOROriginalDbColumnName(){
				
					return "OPERADOR";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.OPERADOR = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.OPERADOR = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.OPERADOR,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.OPERADOR,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",OPERADOR="+OPERADOR);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row7Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_relatorio_special_price_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row7Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT DISTINCT(ALT_CODITE) cd_produto,\n          ALT_CODOPE           OPERADOR,\n          ALT_CUSATU           VL_AT"
+"UAL,\n          ALT_CUSANT           VL_ANTERIOR\n   FROM PREALT PA \n  INNER JOIN ITEGER IG ON PA.ALT_CODITE = IG.ITE_C"
+"ODITE AND IG.ITE_CODEMP = '001'\n  WHERE ALT_DTAALT = CURDATE() \n     AND ALT_CODEMP  = '001'\n    AND ALT_CUSATU <> AL"
+"T_CUSANT";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row7.CD_PRODUTO = null;
							} else {
	                         		
        	row7.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row7.OPERADOR = null;
							} else {
	                         		
        	row7.OPERADOR = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row7.VL_ATUAL = null;
							} else {
		                          
            row7.VL_ATUAL = rs_tDBInput_2.getBigDecimal(3);
            if(rs_tDBInput_2.wasNull()){
                    row7.VL_ATUAL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row7.VL_ANTERIOR = null;
							} else {
		                          
            row7.VL_ANTERIOR = rs_tDBInput_2.getBigDecimal(4);
            if(rs_tDBInput_2.wasNull()){
                    row7.VL_ANTERIOR = null;
            }
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					



    
		row7Struct oneRow_tHashOutput_5 = new row7Struct();
				
					oneRow_tHashOutput_5.CD_PRODUTO = row7.CD_PRODUTO;
					oneRow_tHashOutput_5.OPERADOR = row7.OPERADOR;
					oneRow_tHashOutput_5.VL_ATUAL = row7.VL_ATUAL;
					oneRow_tHashOutput_5.VL_ANTERIOR = row7.VL_ANTERIOR;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal PRECO;

				public BigDecimal getPRECO () {
					return this.PRECO;
				}

				public Boolean PRECOIsNullable(){
				    return true;
				}
				public Boolean PRECOIsKey(){
				    return false;
				}
				public Integer PRECOLength(){
				    return 8;
				}
				public Integer PRECOPrecision(){
				    return 2;
				}
				public String PRECODefault(){
				
					return null;
				
				}
				public String PRECOComment(){
				
				    return "";
				
				}
				public String PRECOPattern(){
				
					return "";
				
				}
				public String PRECOOriginalDbColumnName(){
				
					return "PRECO";
				
				}

				
			    public BigDecimal VL_CUSTO_ANTERIOR;

				public BigDecimal getVL_CUSTO_ANTERIOR () {
					return this.VL_CUSTO_ANTERIOR;
				}

				public Boolean VL_CUSTO_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ANTERIOROriginalDbColumnName(){
				
					return "VL_CUSTO_ANTERIOR";
				
				}

				
			    public BigDecimal MARGEM_ANTERIOR;

				public BigDecimal getMARGEM_ANTERIOR () {
					return this.MARGEM_ANTERIOR;
				}

				public Boolean MARGEM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean MARGEM_ANTERIORIsKey(){
				    return false;
				}
				public Integer MARGEM_ANTERIORLength(){
				    return 12;
				}
				public Integer MARGEM_ANTERIORPrecision(){
				    return 2;
				}
				public String MARGEM_ANTERIORDefault(){
				
					return null;
				
				}
				public String MARGEM_ANTERIORComment(){
				
				    return "";
				
				}
				public String MARGEM_ANTERIORPattern(){
				
					return "";
				
				}
				public String MARGEM_ANTERIOROriginalDbColumnName(){
				
					return "MARGEM_ANTERIOR";
				
				}

				
			    public BigDecimal VL_CUSTO_ATUAL;

				public BigDecimal getVL_CUSTO_ATUAL () {
					return this.VL_CUSTO_ATUAL;
				}

				public Boolean VL_CUSTO_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ATUALIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ATUALLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ATUALPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ATUALDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ATUALComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ATUALPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ATUALOriginalDbColumnName(){
				
					return "VL_CUSTO_ATUAL";
				
				}

				
			    public BigDecimal MARGEM_ATUAL;

				public BigDecimal getMARGEM_ATUAL () {
					return this.MARGEM_ATUAL;
				}

				public Boolean MARGEM_ATUALIsNullable(){
				    return true;
				}
				public Boolean MARGEM_ATUALIsKey(){
				    return false;
				}
				public Integer MARGEM_ATUALLength(){
				    return 12;
				}
				public Integer MARGEM_ATUALPrecision(){
				    return 2;
				}
				public String MARGEM_ATUALDefault(){
				
					return null;
				
				}
				public String MARGEM_ATUALComment(){
				
				    return "";
				
				}
				public String MARGEM_ATUALPattern(){
				
					return "";
				
				}
				public String MARGEM_ATUALOriginalDbColumnName(){
				
					return "MARGEM_ATUAL";
				
				}

				
			    public BigDecimal VARIACAO_CUSTO;

				public BigDecimal getVARIACAO_CUSTO () {
					return this.VARIACAO_CUSTO;
				}

				public Boolean VARIACAO_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VARIACAO_CUSTOIsKey(){
				    return false;
				}
				public Integer VARIACAO_CUSTOLength(){
				    return 12;
				}
				public Integer VARIACAO_CUSTOPrecision(){
				    return 2;
				}
				public String VARIACAO_CUSTODefault(){
				
					return null;
				
				}
				public String VARIACAO_CUSTOComment(){
				
				    return "";
				
				}
				public String VARIACAO_CUSTOPattern(){
				
					return "";
				
				}
				public String VARIACAO_CUSTOOriginalDbColumnName(){
				
					return "VARIACAO_CUSTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.MARGEM_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
						this.MARGEM_ATUAL = (BigDecimal) dis.readObject();
					
						this.VARIACAO_CUSTO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.MARGEM_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
						this.MARGEM_ATUAL = (BigDecimal) dis.readObject();
					
						this.VARIACAO_CUSTO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARGEM_ANTERIOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARGEM_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VARIACAO_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARGEM_ANTERIOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARGEM_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VARIACAO_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",PRECO="+String.valueOf(PRECO));
		sb.append(",VL_CUSTO_ANTERIOR="+String.valueOf(VL_CUSTO_ANTERIOR));
		sb.append(",MARGEM_ANTERIOR="+String.valueOf(MARGEM_ANTERIOR));
		sb.append(",VL_CUSTO_ATUAL="+String.valueOf(VL_CUSTO_ATUAL));
		sb.append(",MARGEM_ATUAL="+String.valueOf(MARGEM_ATUAL));
		sb.append(",VARIACAO_CUSTO="+String.valueOf(VARIACAO_CUSTO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal PRECO;

				public BigDecimal getPRECO () {
					return this.PRECO;
				}

				public Boolean PRECOIsNullable(){
				    return true;
				}
				public Boolean PRECOIsKey(){
				    return false;
				}
				public Integer PRECOLength(){
				    return 8;
				}
				public Integer PRECOPrecision(){
				    return 2;
				}
				public String PRECODefault(){
				
					return null;
				
				}
				public String PRECOComment(){
				
				    return "";
				
				}
				public String PRECOPattern(){
				
					return "";
				
				}
				public String PRECOOriginalDbColumnName(){
				
					return "PRECO";
				
				}

				
			    public BigDecimal VL_CUSTO_ANTERIOR;

				public BigDecimal getVL_CUSTO_ANTERIOR () {
					return this.VL_CUSTO_ANTERIOR;
				}

				public Boolean VL_CUSTO_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ANTERIOROriginalDbColumnName(){
				
					return "VL_CUSTO_ANTERIOR";
				
				}

				
			    public BigDecimal MARGEM_ANTERIOR;

				public BigDecimal getMARGEM_ANTERIOR () {
					return this.MARGEM_ANTERIOR;
				}

				public Boolean MARGEM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean MARGEM_ANTERIORIsKey(){
				    return false;
				}
				public Integer MARGEM_ANTERIORLength(){
				    return 12;
				}
				public Integer MARGEM_ANTERIORPrecision(){
				    return 2;
				}
				public String MARGEM_ANTERIORDefault(){
				
					return null;
				
				}
				public String MARGEM_ANTERIORComment(){
				
				    return "";
				
				}
				public String MARGEM_ANTERIORPattern(){
				
					return "";
				
				}
				public String MARGEM_ANTERIOROriginalDbColumnName(){
				
					return "MARGEM_ANTERIOR";
				
				}

				
			    public BigDecimal VL_CUSTO_ATUAL;

				public BigDecimal getVL_CUSTO_ATUAL () {
					return this.VL_CUSTO_ATUAL;
				}

				public Boolean VL_CUSTO_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ATUALIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ATUALLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ATUALPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ATUALDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ATUALComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ATUALPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ATUALOriginalDbColumnName(){
				
					return "VL_CUSTO_ATUAL";
				
				}

				
			    public BigDecimal MARGEM_ATUAL;

				public BigDecimal getMARGEM_ATUAL () {
					return this.MARGEM_ATUAL;
				}

				public Boolean MARGEM_ATUALIsNullable(){
				    return true;
				}
				public Boolean MARGEM_ATUALIsKey(){
				    return false;
				}
				public Integer MARGEM_ATUALLength(){
				    return 12;
				}
				public Integer MARGEM_ATUALPrecision(){
				    return 2;
				}
				public String MARGEM_ATUALDefault(){
				
					return null;
				
				}
				public String MARGEM_ATUALComment(){
				
				    return "";
				
				}
				public String MARGEM_ATUALPattern(){
				
					return "";
				
				}
				public String MARGEM_ATUALOriginalDbColumnName(){
				
					return "MARGEM_ATUAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.MARGEM_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
						this.MARGEM_ATUAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.MARGEM_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
						this.MARGEM_ATUAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARGEM_ANTERIOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARGEM_ATUAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARGEM_ANTERIOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARGEM_ATUAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",PRECO="+String.valueOf(PRECO));
		sb.append(",VL_CUSTO_ANTERIOR="+String.valueOf(VL_CUSTO_ANTERIOR));
		sb.append(",MARGEM_ANTERIOR="+String.valueOf(MARGEM_ANTERIOR));
		sb.append(",VL_CUSTO_ATUAL="+String.valueOf(VL_CUSTO_ATUAL));
		sb.append(",MARGEM_ATUAL="+String.valueOf(MARGEM_ATUAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal PRECO;

				public BigDecimal getPRECO () {
					return this.PRECO;
				}

				public Boolean PRECOIsNullable(){
				    return true;
				}
				public Boolean PRECOIsKey(){
				    return false;
				}
				public Integer PRECOLength(){
				    return 8;
				}
				public Integer PRECOPrecision(){
				    return 2;
				}
				public String PRECODefault(){
				
					return null;
				
				}
				public String PRECOComment(){
				
				    return "";
				
				}
				public String PRECOPattern(){
				
					return "";
				
				}
				public String PRECOOriginalDbColumnName(){
				
					return "PRECO";
				
				}

				
			    public BigDecimal VL_CUSTO_ANTERIOR;

				public BigDecimal getVL_CUSTO_ANTERIOR () {
					return this.VL_CUSTO_ANTERIOR;
				}

				public Boolean VL_CUSTO_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ANTERIOROriginalDbColumnName(){
				
					return "VL_CUSTO_ANTERIOR";
				
				}

				
			    public BigDecimal VL_CUSTO_ATUAL;

				public BigDecimal getVL_CUSTO_ATUAL () {
					return this.VL_CUSTO_ATUAL;
				}

				public Boolean VL_CUSTO_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ATUALIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ATUALLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ATUALPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ATUALDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ATUALComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ATUALPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ATUALOriginalDbColumnName(){
				
					return "VL_CUSTO_ATUAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ATUAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ATUAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",PRECO="+String.valueOf(PRECO));
		sb.append(",VL_CUSTO_ANTERIOR="+String.valueOf(VL_CUSTO_ANTERIOR));
		sb.append(",VL_CUSTO_ATUAL="+String.valueOf(VL_CUSTO_ATUAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Relatorio_1Struct implements routines.system.IPersistableRow<Relatorio_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal PRECO;

				public BigDecimal getPRECO () {
					return this.PRECO;
				}

				public Boolean PRECOIsNullable(){
				    return true;
				}
				public Boolean PRECOIsKey(){
				    return false;
				}
				public Integer PRECOLength(){
				    return 8;
				}
				public Integer PRECOPrecision(){
				    return 2;
				}
				public String PRECODefault(){
				
					return null;
				
				}
				public String PRECOComment(){
				
				    return "";
				
				}
				public String PRECOPattern(){
				
					return "";
				
				}
				public String PRECOOriginalDbColumnName(){
				
					return "PRECO";
				
				}

				
			    public BigDecimal VL_CUSTO_ANTERIOR;

				public BigDecimal getVL_CUSTO_ANTERIOR () {
					return this.VL_CUSTO_ANTERIOR;
				}

				public Boolean VL_CUSTO_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ANTERIOROriginalDbColumnName(){
				
					return "VL_CUSTO_ANTERIOR";
				
				}

				
			    public BigDecimal VL_CUSTO_ATUAL;

				public BigDecimal getVL_CUSTO_ATUAL () {
					return this.VL_CUSTO_ATUAL;
				}

				public Boolean VL_CUSTO_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTO_ATUALIsKey(){
				    return false;
				}
				public Integer VL_CUSTO_ATUALLength(){
				    return 12;
				}
				public Integer VL_CUSTO_ATUALPrecision(){
				    return 2;
				}
				public String VL_CUSTO_ATUALDefault(){
				
					return null;
				
				}
				public String VL_CUSTO_ATUALComment(){
				
				    return "";
				
				}
				public String VL_CUSTO_ATUALPattern(){
				
					return "";
				
				}
				public String VL_CUSTO_ATUALOriginalDbColumnName(){
				
					return "VL_CUSTO_ATUAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
					this.DESCRICAO = readString(dis);
					
					this.MARCA = readString(dis);
					
						this.PRECO = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ANTERIOR = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO_ATUAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO_ATUAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.DESCRICAO,dos);
					
					// String
				
						writeString(this.MARCA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ANTERIOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO_ATUAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",PRECO="+String.valueOf(PRECO));
		sb.append(",VL_CUSTO_ANTERIOR="+String.valueOf(VL_CUSTO_ANTERIOR));
		sb.append(",VL_CUSTO_ATUAL="+String.valueOf(VL_CUSTO_ATUAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Relatorio_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public BigDecimal special_price;

				public BigDecimal getSpecial_price () {
					return this.special_price;
				}

				public Boolean special_priceIsNullable(){
				    return true;
				}
				public Boolean special_priceIsKey(){
				    return false;
				}
				public Integer special_priceLength(){
				    return 8;
				}
				public Integer special_pricePrecision(){
				    return 2;
				}
				public String special_priceDefault(){
				
					return null;
				
				}
				public String special_priceComment(){
				
				    return "";
				
				}
				public String special_pricePattern(){
				
					return "";
				
				}
				public String special_priceOriginalDbColumnName(){
				
					return "special_price";
				
				}

				
			    public Integer validaproduto;

				public Integer getValidaproduto () {
					return this.validaproduto;
				}

				public Boolean validaprodutoIsNullable(){
				    return true;
				}
				public Boolean validaprodutoIsKey(){
				    return false;
				}
				public Integer validaprodutoLength(){
				    return null;
				}
				public Integer validaprodutoPrecision(){
				    return null;
				}
				public String validaprodutoDefault(){
				
					return null;
				
				}
				public String validaprodutoComment(){
				
				    return "";
				
				}
				public String validaprodutoPattern(){
				
					return "";
				
				}
				public String validaprodutoOriginalDbColumnName(){
				
					return "validaproduto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.sku = readString(dis);
					
						this.special_price = (BigDecimal) dis.readObject();
					
						this.validaproduto = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.sku,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.special_price);
					
					// Integer
				
						writeInteger(this.validaproduto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("sku="+sku);
		sb.append(",special_price="+String.valueOf(special_price));
		sb.append(",validaproduto="+String.valueOf(validaproduto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_6Process(globalMap);
		tHashInput_7Process(globalMap);

		row8Struct row8 = new row8Struct();
Relatorio_1Struct Relatorio_1 = new Relatorio_1Struct();
row13Struct row13 = new row13Struct();
row14Struct row14 = new row14Struct();
row15Struct row15 = new row15Struct();








	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		
		int columnIndex_tFileOutputExcel_2 = 0;
		boolean headerIsInserted_tFileOutputExcel_2 = false;
		
		
		String fileName_tFileOutputExcel_2=""+context.caminho+"/"+context.Arquivo+"/Custo_Special_Price_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_2 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_2 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_2.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_2.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_2.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_2.setAppend(false,false, false);
		xlsxTool_tFileOutputExcel_2.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_2.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_2 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_2 = chm_tFileOutputExcel_2.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_2", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_2) {
			
				xlsxTool_tFileOutputExcel_2.prepareXlsxFile(fileName_tFileOutputExcel_2);
			
		}
		
		xlsxTool_tFileOutputExcel_2.setFont("");
		
		if (xlsxTool_tFileOutputExcel_2.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_2.addRow();
		
		xlsxTool_tFileOutputExcel_2.addCellValue("sku");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DESCRICAO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("MARCA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("PRECO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_CUSTO_ANTERIOR");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("MARGEM_ANTERIOR");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VL_CUSTO_ATUAL");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("MARGEM_ATUAL");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VARIACAO_CUSTO");
		
		nb_line_tFileOutputExcel_2++;
		headerIsInserted_tFileOutputExcel_2 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Relatorio_1");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
					globalMap.get( "tHash_Lookup_row9" ))
					;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
					globalMap.get( "tHash_Lookup_row10" ))
					;					
					
	

row10Struct row10HashKey = new row10Struct();
row10Struct row10Default = new row10Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
Relatorio_1Struct Relatorio_1_tmp = new Relatorio_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row2Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row2Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row2Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row8.sku = next_tHashInput_4.sku;
	row8.special_price = next_tHashInput_4.special_price;
	row8.validaproduto = next_tHashInput_4.validaproduto;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row9Struct row9 = null;
					
						row10Struct row10 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row9HashKey.CD_PRODUTO = row8.sku ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row9.lookup( row9HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row9.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_5 = true;
	  								
						
									
	
		  								forceLooprow9 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow9 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row9 != null && tHash_Lookup_row9.hasNext()) || forceLooprow9) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row9'
									
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								
								if(!forceLooprow9) { // G 46
								
							
								 
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow9 = false;
									 	
							
	            	
	           	
	            	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row10" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow10 = false;
       		  	    	
       		  	    	
 							row10Struct row10ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row10HashKey.COD_ITEM = row8.sku ;
                        		    		

								
		                        	row10HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row10.lookup( row10HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row10' and it contains more one result from keys :  row10.COD_ITEM = '" + row10HashKey.COD_ITEM + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row10Struct fromLookup_row10 = null;
							row10 = row10Default;
										 
							
								 
							
							
								if (tHash_Lookup_row10 !=null && tHash_Lookup_row10.hasNext()) { // G 099
								
							
								
								fromLookup_row10 = tHash_Lookup_row10.next();

							
							
								} // G 099
							
							

							if(fromLookup_row10 != null) {
								row10 = fromLookup_row10;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

Relatorio_1 = null;

if(!rejectedInnerJoin_tMap_5 ) {

// # Output table : 'Relatorio_1'
Relatorio_1_tmp.sku = row8.sku ;
Relatorio_1_tmp.DESCRICAO = row10.DESCRICAO ;
Relatorio_1_tmp.MARCA = row10.MARCA ;
Relatorio_1_tmp.PRECO = row8.special_price ;
Relatorio_1_tmp.VL_CUSTO_ANTERIOR = row9.VL_ANTERIOR ;
Relatorio_1_tmp.VL_CUSTO_ATUAL = row9.VL_ATUAL ;
Relatorio_1 = Relatorio_1_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "Relatorio_1"
if(Relatorio_1 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Relatorio_1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row13.sku = Relatorio_1.sku;
row13.DESCRICAO = Relatorio_1.DESCRICAO;
row13.MARCA = Relatorio_1.MARCA;
row13.PRECO = Relatorio_1.PRECO.multiply(new BigDecimal(0.9));
row13.VL_CUSTO_ANTERIOR = Relatorio_1.VL_CUSTO_ANTERIOR;
row13.VL_CUSTO_ATUAL = Relatorio_1.VL_CUSTO_ATUAL;
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

    //Code generated according to input schema and output schema
row14.sku = row13.sku;
row14.DESCRICAO = row13.DESCRICAO;
row14.MARCA = row13.MARCA;
row14.PRECO = row13.PRECO;
row14.VL_CUSTO_ANTERIOR = row13.VL_CUSTO_ANTERIOR;
row14.MARGEM_ANTERIOR = (row13.PRECO.divide(row14.VL_CUSTO_ANTERIOR, 5, RoundingMode.HALF_UP)).subtract(new BigDecimal(1));
row14.VL_CUSTO_ATUAL = row13.VL_CUSTO_ATUAL;
row14.MARGEM_ATUAL = (row13.PRECO.divide(row14.VL_CUSTO_ATUAL, 5, RoundingMode.HALF_UP)).subtract(new BigDecimal(1));




    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

    //Code generated according to input schema and output schema
row15.sku = row14.sku;
row15.DESCRICAO = row14.DESCRICAO;
row15.MARCA = row14.MARCA;
row15.PRECO = row14.PRECO;
row15.VL_CUSTO_ANTERIOR = row14.VL_CUSTO_ANTERIOR;
row15.MARGEM_ANTERIOR = row14.MARGEM_ANTERIOR;
row15.VL_CUSTO_ATUAL = row14.VL_CUSTO_ATUAL;
row15.MARGEM_ATUAL = row14.MARGEM_ATUAL;
row15.VARIACAO_CUSTO = row15.MARGEM_ATUAL.subtract(row15.MARGEM_ANTERIOR);

    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_2.addRow();
									   				
	    				if(row15.sku != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row15.sku));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.DESCRICAO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row15.DESCRICAO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.MARCA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row15.MARCA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.PRECO != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row15.PRECO.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.VL_CUSTO_ANTERIOR != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row15.VL_CUSTO_ANTERIOR.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.MARGEM_ANTERIOR != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row15.MARGEM_ANTERIOR.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.VL_CUSTO_ATUAL != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row15.VL_CUSTO_ATUAL.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.MARGEM_ATUAL != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row15.MARGEM_ATUAL.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row15.VARIACAO_CUSTO != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row15.VARIACAO_CUSTO.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "Relatorio_1"



	
		} // close loop of lookup 'row9' // G_TM_M_043
	
	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
					if(tHash_Lookup_row10 != null) {
						tHash_Lookup_row10.endGet();
					}
					globalMap.remove( "tHash_Lookup_row10" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Relatorio_1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

							columnIndex_tFileOutputExcel_2 = 0;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 1;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 2;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 3;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 4;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 5;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 6;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 7;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 8;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
	
	
	
			xlsxTool_tFileOutputExcel_2.writeExcel(fileName_tFileOutputExcel_2,true);
	
		if(headerIsInserted_tFileOutputExcel_2 && nb_line_tFileOutputExcel_2 > 0){
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		}
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());




/**
 * [tFileOutputExcel_2 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tSendMail_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row10"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public void tSendMail_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSendMail_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tSendMail_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSendMail_1", false);
		start_Hash.put("tSendMail_1", System.currentTimeMillis());
		
	
	currentComponent="tSendMail_1";
	
	
		int tos_count_tSendMail_1 = 0;
		

 



/**
 * [tSendMail_1 begin ] stop
 */
	
	/**
	 * [tSendMail_1 main ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 

	String smtpHost_tSendMail_1 = System.getenv(context.SMTP_P);
        String smtpPort_tSendMail_1 = System.getenv(context.SMTP_PORT_P);
	String from_tSendMail_1 = (System.getenv(context.EMAIL_P));
    String to_tSendMail_1 = (context.SEND_EMAIL).replace(";",",");
    String cc_tSendMail_1 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String bcc_tSendMail_1 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String subject_tSendMail_1 = ("Relatório de preços promocionados");
    
	java.util.List<java.util.Map<String, String>> headers_tSendMail_1 = new java.util.ArrayList<java.util.Map<String,String>>();
	java.util.List<String> attachments_tSendMail_1 = new java.util.ArrayList<String>();
	java.util.List<String> contentTransferEncoding_tSendMail_1 = new java.util.ArrayList<String>();
		attachments_tSendMail_1.add("/root/e_mail/Special_Price_"+context.data_execucao+".xlsx");
		contentTransferEncoding_tSendMail_1.add("DEFAULT");	

	String message_tSendMail_1 = (("Conforme Solicitado, Segue Relatório de validação de preços promocionados\nObrigado") == null || "".equals("Conforme Solicitado, Segue Relatório de validação de preços promocionados\nObrigado")) ? "\"\"" : ("Conforme Solicitado, Segue Relatório de validação de preços promocionados\nObrigado") ;
	java.util.Properties props_tSendMail_1 = System.getProperties();     
	props_tSendMail_1.put("mail.smtp.host", smtpHost_tSendMail_1);
	props_tSendMail_1.put("mail.smtp.port", smtpPort_tSendMail_1);
	
		props_tSendMail_1.put("mail.mime.encodefilename", "true");
		props_tSendMail_1.put("mail.smtp.starttls.enable","true");     
	try {
		
		
			props_tSendMail_1.put("mail.smtp.auth", "true");
			javax.mail.Session session_tSendMail_1 = javax.mail.Session.getInstance(props_tSendMail_1, new javax.mail.Authenticator(){         
				protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
				
                
	final String decryptedPassword_tSendMail_1 = System.getenv(context.EMAIL_PASSWORD_P); 
				
				
				return new javax.mail.PasswordAuthentication(System.getenv(context.EMAIL_P), decryptedPassword_tSendMail_1); 
				}         
			});   
		
		
		javax.mail.Message msg_tSendMail_1 = new javax.mail.internet.MimeMessage(session_tSendMail_1);
		msg_tSendMail_1.setFrom(new javax.mail.internet.InternetAddress(from_tSendMail_1, null));
		msg_tSendMail_1.setRecipients(javax.mail.Message.RecipientType.TO,javax.mail.internet.InternetAddress.parse(to_tSendMail_1, false));
		if (cc_tSendMail_1 != null) msg_tSendMail_1.setRecipients(javax.mail.Message.RecipientType.CC, javax.mail.internet.InternetAddress.parse(cc_tSendMail_1, false));
		if (bcc_tSendMail_1 != null) msg_tSendMail_1.setRecipients(javax.mail.Message.RecipientType.BCC, javax.mail.internet.InternetAddress.parse(bcc_tSendMail_1, false));
		msg_tSendMail_1.setSubject(subject_tSendMail_1);

		for (int i_tSendMail_1 = 0; i_tSendMail_1 < headers_tSendMail_1.size(); i_tSendMail_1++) {
			java.util.Map<String, String> header_tSendMail_1 = headers_tSendMail_1.get(i_tSendMail_1);
			msg_tSendMail_1.setHeader(header_tSendMail_1.get("KEY"), header_tSendMail_1.get("VALUE"));    
		}  
		msg_tSendMail_1.setSentDate(new Date());
		msg_tSendMail_1.setHeader("X-Priority", "3"); //High->1 Normal->3 Low->5
		javax.mail.Multipart mp_tSendMail_1 = new javax.mail.internet.MimeMultipart();
		javax.mail.internet.MimeBodyPart mbpText_tSendMail_1 = new javax.mail.internet.MimeBodyPart();
		mbpText_tSendMail_1.setText(message_tSendMail_1,"ISO-8859-15", "plain");
		mp_tSendMail_1.addBodyPart(mbpText_tSendMail_1);
  
		javax.mail.internet.MimeBodyPart mbpFile_tSendMail_1 = null;

		for (int i_tSendMail_1 = 0; i_tSendMail_1 < attachments_tSendMail_1.size(); i_tSendMail_1++){
			String filename_tSendMail_1 = attachments_tSendMail_1.get(i_tSendMail_1);
			javax.activation.FileDataSource fds_tSendMail_1 = null;
			java.io.File file_tSendMail_1 = new java.io.File(filename_tSendMail_1);
			
    		if (file_tSendMail_1.isDirectory()){
				java.io.File[] subFiles_tSendMail_1 = file_tSendMail_1.listFiles();
				for(java.io.File subFile_tSendMail_1 : subFiles_tSendMail_1){
					if (subFile_tSendMail_1.isFile()){
						fds_tSendMail_1 = new javax.activation.FileDataSource(subFile_tSendMail_1.getAbsolutePath());
						mbpFile_tSendMail_1 = new javax.mail.internet.MimeBodyPart();
						mbpFile_tSendMail_1.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_1));
						mbpFile_tSendMail_1.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_1.getName()));
						if(contentTransferEncoding_tSendMail_1.get(i_tSendMail_1).equalsIgnoreCase("base64")){
							mbpFile_tSendMail_1.setHeader("Content-Transfer-Encoding", "base64");
						}
						mp_tSendMail_1.addBodyPart(mbpFile_tSendMail_1);
					}
				}
    		}else{
				mbpFile_tSendMail_1 = new javax.mail.internet.MimeBodyPart();
				fds_tSendMail_1 = new javax.activation.FileDataSource(filename_tSendMail_1);
				mbpFile_tSendMail_1.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_1)); 
				mbpFile_tSendMail_1.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_1.getName()));
				if(contentTransferEncoding_tSendMail_1.get(i_tSendMail_1).equalsIgnoreCase("base64")){
					mbpFile_tSendMail_1.setHeader("Content-Transfer-Encoding", "base64");
				}
				mp_tSendMail_1.addBodyPart(mbpFile_tSendMail_1);
			}
		}
		// -- set the content --
		msg_tSendMail_1.setContent(mp_tSendMail_1);
		// add handlers for main MIME types
		javax.activation.MailcapCommandMap mc_tSendMail_1 = ( javax.activation.MailcapCommandMap)javax.activation.CommandMap.getDefaultCommandMap();
		mc_tSendMail_1.addMailcap("text/html;; x-java-content-handler=com.sun.mail.handlers.text_html");
		mc_tSendMail_1.addMailcap("text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml");
		mc_tSendMail_1.addMailcap("text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain");
		mc_tSendMail_1.addMailcap("multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed");
		mc_tSendMail_1.addMailcap("message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822");
		javax.activation.CommandMap.setDefaultCommandMap(mc_tSendMail_1);
		// add com.sun.mail.handlers to job imports / depenencies (TESB-27110)
		com.sun.mail.handlers.text_plain text_plain_h_tSendMail_1 = null;
		// -- Send the message --
		javax.mail.Transport.send(msg_tSendMail_1);
	} catch(java.lang.Exception e){
globalMap.put("tSendMail_1_ERROR_MESSAGE",e.getMessage());
  		
			throw(e);
		
	}finally{
		props_tSendMail_1.remove("mail.smtp.host");
		props_tSendMail_1.remove("mail.smtp.port");
		
		props_tSendMail_1.remove("mail.mime.encodefilename");
		
			props_tSendMail_1.remove("mail.smtp.starttls.enable");
		
		props_tSendMail_1.remove("mail.smtp.auth");     
	}

 


	tos_count_tSendMail_1++;

/**
 * [tSendMail_1 main ] stop
 */
	
	/**
	 * [tSendMail_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 



/**
 * [tSendMail_1 process_data_begin ] stop
 */
	
	/**
	 * [tSendMail_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 



/**
 * [tSendMail_1 process_data_end ] stop
 */
	
	/**
	 * [tSendMail_1 end ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 

ok_Hash.put("tSendMail_1", true);
end_Hash.put("tSendMail_1", System.currentTimeMillis());




/**
 * [tSendMail_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSendMail_1:OnSubjobOk1", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tJava_2Process(globalMap); 
						
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSendMail_1:OnSubjobOk2", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSendMail_1 finally ] start
	 */

	

	
	
	currentComponent="tSendMail_1";
	
	

 



/**
 * [tSendMail_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSendMail_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Erro ao Enviar email");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Erro ao Enviar email");
	globalMap.put("tDie_1_DIE_MESSAGES", "Erro ao Enviar email");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
    	errorCode = new Integer(3);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(3));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_1_DIE_CODE", errorCode);

    
	if(true){	
		TDieException e_tDie_1 = new TDieException();

		

		throw e_tDie_1;
	}

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("**************************************************************************");
System.out.println("2 - Finalizado o processo de envio de emails :"+TalendDate.getCurrentDate());
System.out.println("**************************************************************************");
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tFileDelete_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tFileDelete_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_2", false);
		start_Hash.put("tFileDelete_2", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_2";
	
	
		int tos_count_tFileDelete_2 = 0;
		

 



/**
 * [tFileDelete_2 begin ] stop
 */
	
	/**
	 * [tFileDelete_2 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

class DeleteFoldertFileDelete_2{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_2=new java.io.File("/root/e_mail/Special_Price_"+context.data_execucao+".xlsx");
    if(file_tFileDelete_2.exists()&& file_tFileDelete_2.isFile()){
    	if(file_tFileDelete_2.delete()){
    		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_2_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_2_DELETE_PATH","/root/e_mail/Special_Price_"+context.data_execucao+".xlsx");
 


	tos_count_tFileDelete_2++;

/**
 * [tFileDelete_2 main ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_2 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

ok_Hash.put("tFileDelete_2", true);
end_Hash.put("tFileDelete_2", System.currentTimeMillis());




/**
 * [tFileDelete_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_2 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row80Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row80Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row81.nm_programa = next_tHashInput_5.nm_programa;
	row81.data_inicio_execucao = next_tHashInput_5.data_inicio_execucao;
	row81.data_termino_execucao = next_tHashInput_5.data_termino_execucao;
	row81.mensagem = next_tHashInput_5.mensagem;
	row81.uuid = next_tHashInput_5.uuid;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row81.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row81.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableComparableLookupRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return null;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 5;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ITEM == null) ? 0 : this.COD_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row4Struct other = (row4Struct) obj;
		
						if (this.COD_ITEM == null) {
							if (other.COD_ITEM != null)
								return false;
						
						} else if (!this.COD_ITEM.equals(other.COD_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row4Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            other.DESCRICAO = this.DESCRICAO;
	            other.MARCA = this.MARCA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            
	}

	public void copyKeysDataTo(row4Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DESCRICAO = readString(dis,ois);
					
						this.MARCA = readString(dis,ois);
					
       			    	this.VL_CUSTO = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DESCRICAO = readString(dis,objectIn);
					
						this.MARCA = readString(dis,objectIn);
					
       			    	this.VL_CUSTO = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DESCRICAO, dos, oos);
					
						writeString(this.MARCA, dos, oos);
					
       			    	oos.writeObject(this.VL_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DESCRICAO, dos, objectOut);
					
						writeString(this.MARCA, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ITEM, other.COD_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tAdvancedHash_row4 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row4", false);
		start_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tAdvancedHash_row4 = 0;
		

			   		// connection name:row4
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_1) outputs:(row4,row4) | target node:tAdvancedHash_row4 - inputs:(row4) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row4) outputs:(Custo)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row4 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row4Struct>getLookup(matchingModeEnum_row4);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row4", tHash_Lookup_row4);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row4 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row31Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row31Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row4.COD_ITEM = next_tHashInput_3.COD_ITEM;
	row4.DESCRICAO = next_tHashInput_3.DESCRICAO;
	row4.MARCA = next_tHashInput_3.MARCA;
	row4.VL_CUSTO = next_tHashInput_3.VL_CUSTO;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					


			   
			   

					row4Struct row4_HashRow = new row4Struct();
		   	   	   
				
				row4_HashRow.COD_ITEM = row4.COD_ITEM;
				
				row4_HashRow.DESCRICAO = row4.DESCRICAO;
				
				row4_HashRow.MARCA = row4.MARCA;
				
				row4_HashRow.VL_CUSTO = row4.VL_CUSTO;
				
			tHash_Lookup_row4.put(row4_HashRow);
			
            




 


	tos_count_tAdvancedHash_row4++;

/**
 * [tAdvancedHash_row4 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

tHash_Lookup_row4.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row4", true);
end_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());




/**
 * [tAdvancedHash_row4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String OPERADOR;

				public String getOPERADOR () {
					return this.OPERADOR;
				}

				public Boolean OPERADORIsNullable(){
				    return true;
				}
				public Boolean OPERADORIsKey(){
				    return false;
				}
				public Integer OPERADORLength(){
				    return 12;
				}
				public Integer OPERADORPrecision(){
				    return 2;
				}
				public String OPERADORDefault(){
				
					return null;
				
				}
				public String OPERADORComment(){
				
				    return "";
				
				}
				public String OPERADORPattern(){
				
					return "";
				
				}
				public String OPERADOROriginalDbColumnName(){
				
					return "OPERADOR";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.OPERADOR = this.OPERADOR;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.OPERADOR = readString(dis,ois);
					
       			    	this.VL_ATUAL = (BigDecimal) ois.readObject();
					
       			    	this.VL_ANTERIOR = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.OPERADOR = readString(dis,objectIn);
					
       			    	this.VL_ATUAL = (BigDecimal) objectIn.readObject();
					
       			    	this.VL_ANTERIOR = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.OPERADOR, dos, oos);
					
       			    	oos.writeObject(this.VL_ATUAL);
					
       			    	oos.writeObject(this.VL_ANTERIOR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.OPERADOR, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_ATUAL);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_ANTERIOR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",OPERADOR="+OPERADOR);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_4) outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_5 - inputs:(row8,row9,row10) outputs:(Relatorio_1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row7Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row7Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row7Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row9.CD_PRODUTO = next_tHashInput_6.CD_PRODUTO;
	row9.OPERADOR = next_tHashInput_6.OPERADOR;
	row9.VL_ATUAL = next_tHashInput_6.VL_ATUAL;
	row9.VL_ANTERIOR = next_tHashInput_6.VL_ANTERIOR;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.CD_PRODUTO = row9.CD_PRODUTO;
				
				row9_HashRow.OPERADOR = row9.OPERADOR;
				
				row9_HashRow.VL_ATUAL = row9.VL_ATUAL;
				
				row9_HashRow.VL_ANTERIOR = row9.VL_ANTERIOR;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

tHash_Lookup_row9.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableComparableLookupRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return null;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String DESCRICAO;

				public String getDESCRICAO () {
					return this.DESCRICAO;
				}

				public Boolean DESCRICAOIsNullable(){
				    return true;
				}
				public Boolean DESCRICAOIsKey(){
				    return false;
				}
				public Integer DESCRICAOLength(){
				    return null;
				}
				public Integer DESCRICAOPrecision(){
				    return null;
				}
				public String DESCRICAODefault(){
				
					return null;
				
				}
				public String DESCRICAOComment(){
				
				    return "";
				
				}
				public String DESCRICAOPattern(){
				
					return "";
				
				}
				public String DESCRICAOOriginalDbColumnName(){
				
					return "DESCRICAO";
				
				}

				
			    public String MARCA;

				public String getMARCA () {
					return this.MARCA;
				}

				public Boolean MARCAIsNullable(){
				    return true;
				}
				public Boolean MARCAIsKey(){
				    return false;
				}
				public Integer MARCALength(){
				    return null;
				}
				public Integer MARCAPrecision(){
				    return null;
				}
				public String MARCADefault(){
				
					return null;
				
				}
				public String MARCAComment(){
				
				    return "";
				
				}
				public String MARCAPattern(){
				
					return "";
				
				}
				public String MARCAOriginalDbColumnName(){
				
					return "MARCA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 5;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ITEM == null) ? 0 : this.COD_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.COD_ITEM == null) {
							if (other.COD_ITEM != null)
								return false;
						
						} else if (!this.COD_ITEM.equals(other.COD_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            other.DESCRICAO = this.DESCRICAO;
	            other.MARCA = this.MARCA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_special_price, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_special_price) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DESCRICAO = readString(dis,ois);
					
						this.MARCA = readString(dis,ois);
					
       			    	this.VL_CUSTO = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DESCRICAO = readString(dis,objectIn);
					
						this.MARCA = readString(dis,objectIn);
					
       			    	this.VL_CUSTO = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DESCRICAO, dos, oos);
					
						writeString(this.MARCA, dos, oos);
					
       			    	oos.writeObject(this.VL_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DESCRICAO, dos, objectOut);
					
						writeString(this.MARCA, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_CUSTO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",DESCRICAO="+DESCRICAO);
		sb.append(",MARCA="+MARCA);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ITEM, other.COD_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tAdvancedHash_row10 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row10", false);
		start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tAdvancedHash_row10 = 0;
		

			   		// connection name:row10
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_4) outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10) outputs:()
			   		// linked node: tMap_5 - inputs:(row8,row9,row10) outputs:(Relatorio_1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row10Struct>getLookup(matchingModeEnum_row10);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row10 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row31Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row31Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row31Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row10.COD_ITEM = next_tHashInput_7.COD_ITEM;
	row10.DESCRICAO = next_tHashInput_7.DESCRICAO;
	row10.MARCA = next_tHashInput_7.MARCA;
	row10.VL_CUSTO = next_tHashInput_7.VL_CUSTO;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


			   
			   

					row10Struct row10_HashRow = new row10Struct();
		   	   	   
				
				row10_HashRow.COD_ITEM = row10.COD_ITEM;
				
				row10_HashRow.DESCRICAO = row10.DESCRICAO;
				
				row10_HashRow.MARCA = row10.MARCA;
				
				row10_HashRow.VL_CUSTO = row10.VL_CUSTO;
				
			tHash_Lookup_row10.put(row10_HashRow);
			
            




 


	tos_count_tAdvancedHash_row10++;

/**
 * [tAdvancedHash_row10 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_special_price_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

tHash_Lookup_row10.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row10", true);
end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());




/**
 * [tAdvancedHash_row10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_special_price relatorio_special_priceClass = new relatorio_special_price();

        int exitCode = relatorio_special_priceClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_special_price.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_special_price_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_special_price.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("data_atual", "id_String");
                        if(context.getStringValue("data_atual") == null) {
                            context.data_atual = null;
                        } else {
                            context.data_atual=(String) context.getProperty("data_atual");
                        }
                        context.setContextType("data_atual1", "id_String");
                        if(context.getStringValue("data_atual1") == null) {
                            context.data_atual1 = null;
                        } else {
                            context.data_atual1=(String) context.getProperty("data_atual1");
                        }
                        context.setContextType("Arquivo", "id_Integer");
                        if(context.getStringValue("Arquivo") == null) {
                            context.Arquivo = null;
                        } else {
                            try{
                                context.Arquivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Arquivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Arquivo", e.getMessage()));
                                context.Arquivo=null;
                            }
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("Pasta_Rede", "id_String");
                        if(context.getStringValue("Pasta_Rede") == null) {
                            context.Pasta_Rede = null;
                        } else {
                            context.Pasta_Rede=(String) context.getProperty("Pasta_Rede");
                        }
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("EMAIL_PASSWORD_P", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD_P") == null) {
                            context.EMAIL_PASSWORD_P = null;
                        } else {
                            context.EMAIL_PASSWORD_P=(String) context.getProperty("EMAIL_PASSWORD_P");
                        }
                        context.setContextType("EMAIL_P", "id_String");
                        if(context.getStringValue("EMAIL_P") == null) {
                            context.EMAIL_P = null;
                        } else {
                            context.EMAIL_P=(String) context.getProperty("EMAIL_P");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("SMTP_P", "id_String");
                        if(context.getStringValue("SMTP_P") == null) {
                            context.SMTP_P = null;
                        } else {
                            context.SMTP_P=(String) context.getProperty("SMTP_P");
                        }
                        context.setContextType("SMTP_PORT_P", "id_String");
                        if(context.getStringValue("SMTP_PORT_P") == null) {
                            context.SMTP_PORT_P = null;
                        } else {
                            context.SMTP_PORT_P=(String) context.getProperty("SMTP_PORT_P");
                        }
                        context.setContextType("Pasta_Rede_Leitura", "id_String");
                        if(context.getStringValue("Pasta_Rede_Leitura") == null) {
                            context.Pasta_Rede_Leitura = null;
                        } else {
                            context.Pasta_Rede_Leitura=(String) context.getProperty("Pasta_Rede_Leitura");
                        }
                        context.setContextType("caminho", "id_String");
                        if(context.getStringValue("caminho") == null) {
                            context.caminho = null;
                        } else {
                            context.caminho=(String) context.getProperty("caminho");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("data_atual")) {
                context.data_atual = (String) parentContextMap.get("data_atual");
            }if (parentContextMap.containsKey("data_atual1")) {
                context.data_atual1 = (String) parentContextMap.get("data_atual1");
            }if (parentContextMap.containsKey("Arquivo")) {
                context.Arquivo = (Integer) parentContextMap.get("Arquivo");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("Pasta_Rede")) {
                context.Pasta_Rede = (String) parentContextMap.get("Pasta_Rede");
            }if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD_P")) {
                context.EMAIL_PASSWORD_P = (String) parentContextMap.get("EMAIL_PASSWORD_P");
            }if (parentContextMap.containsKey("EMAIL_P")) {
                context.EMAIL_P = (String) parentContextMap.get("EMAIL_P");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("SMTP_P")) {
                context.SMTP_P = (String) parentContextMap.get("SMTP_P");
            }if (parentContextMap.containsKey("SMTP_PORT_P")) {
                context.SMTP_PORT_P = (String) parentContextMap.get("SMTP_PORT_P");
            }if (parentContextMap.containsKey("Pasta_Rede_Leitura")) {
                context.Pasta_Rede_Leitura = (String) parentContextMap.get("Pasta_Rede_Leitura");
            }if (parentContextMap.containsKey("caminho")) {
                context.caminho = (String) parentContextMap.get("caminho");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}catch (java.lang.Error e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_special_price");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     826113 characters generated by Talend Open Studio for Big Data 
 *     on the 26 de abril de 2024 15:18:49 BRT
 ************************************************************************************************/