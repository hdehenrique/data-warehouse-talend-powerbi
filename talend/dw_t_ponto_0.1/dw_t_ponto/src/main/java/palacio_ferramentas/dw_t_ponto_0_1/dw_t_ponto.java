// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.dw_t_ponto_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: dw_t_ponto Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class dw_t_ponto implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(PONTEC_HOST != null){
				
					this.setProperty("PONTEC_HOST", PONTEC_HOST.toString());
				
			}
			
			if(PONTEC_DB != null){
				
					this.setProperty("PONTEC_DB", PONTEC_DB.toString());
				
			}
			
			if(PONTEC_PORT != null){
				
					this.setProperty("PONTEC_PORT", PONTEC_PORT.toString());
				
			}
			
			if(PONTEC_USER != null){
				
					this.setProperty("PONTEC_USER", PONTEC_USER.toString());
				
			}
			
			if(PONTEC_PASSWORD != null){
				
					this.setProperty("PONTEC_PASSWORD", PONTEC_PASSWORD.toString());
				
			}
			
			if(PONTEC_JDBC_PARAMETERS != null){
				
					this.setProperty("PONTEC_JDBC_PARAMETERS", PONTEC_JDBC_PARAMETERS.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String PONTEC_HOST;
public String getPONTEC_HOST(){
	return this.PONTEC_HOST;
}
public String PONTEC_DB;
public String getPONTEC_DB(){
	return this.PONTEC_DB;
}
public String PONTEC_PORT;
public String getPONTEC_PORT(){
	return this.PONTEC_PORT;
}
public String PONTEC_USER;
public String getPONTEC_USER(){
	return this.PONTEC_USER;
}
public String PONTEC_PASSWORD;
public String getPONTEC_PASSWORD(){
	return this.PONTEC_PASSWORD;
}
public String PONTEC_JDBC_PARAMETERS;
public String getPONTEC_JDBC_PARAMETERS(){
	return this.PONTEC_JDBC_PARAMETERS;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "dw_t_ponto";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				dw_t_ponto.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(dw_t_ponto.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError2", 0, "error");
						}
					
					errorCode = null;
					tDie_2Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					errorCode = null;
					tDie_1Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public String entrada1;

				public String getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public String saida1;

				public String getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public String entrada2;

				public String getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public String saida2;

				public String getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public String mem_entrada1;

				public String getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public String mem_saida1;

				public String getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public String mem_entrada2;

				public String getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public String mem_saida2;

				public String getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readString(dis);
					
					this.saida1 = readString(dis);
					
					this.entrada2 = readString(dis);
					
					this.saida2 = readString(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readString(dis);
					
					this.mem_saida1 = readString(dis);
					
					this.mem_entrada2 = readString(dis);
					
					this.mem_saida2 = readString(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readString(dis);
					
					this.saida1 = readString(dis);
					
					this.entrada2 = readString(dis);
					
					this.saida2 = readString(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readString(dis);
					
					this.mem_saida1 = readString(dis);
					
					this.mem_entrada2 = readString(dis);
					
					this.mem_saida2 = readString(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// String
				
						writeString(this.entrada1,dos);
					
					// String
				
						writeString(this.saida1,dos);
					
					// String
				
						writeString(this.entrada2,dos);
					
					// String
				
						writeString(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// String
				
						writeString(this.mem_entrada1,dos);
					
					// String
				
						writeString(this.mem_saida1,dos);
					
					// String
				
						writeString(this.mem_entrada2,dos);
					
					// String
				
						writeString(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// String
				
						writeString(this.entrada1,dos);
					
					// String
				
						writeString(this.saida1,dos);
					
					// String
				
						writeString(this.entrada2,dos);
					
					// String
				
						writeString(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// String
				
						writeString(this.mem_entrada1,dos);
					
					// String
				
						writeString(this.mem_saida1,dos);
					
					// String
				
						writeString(this.mem_entrada2,dos);
					
					// String
				
						writeString(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+entrada1);
		sb.append(",saida1="+saida1);
		sb.append(",entrada2="+entrada2);
		sb.append(",saida2="+saida2);
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+mem_entrada1);
		sb.append(",mem_saida1="+mem_saida1);
		sb.append(",mem_entrada2="+mem_entrada2);
		sb.append(",mem_saida2="+mem_saida2);
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
row11Struct row11 = new row11Struct();





	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_dw_t_ponto_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
			org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_1 = org.talend.designer.components.util.mssql.MSSqlUtilFactory.getMSSqlGenerateTimestampUtil();
			
			java.util.List<String> talendToDBList_tDBInput_1 = new java.util.ArrayList();
			String[] talendToDBArray_tDBInput_1  = new String[]{"FLOAT","NUMERIC","NUMERIC IDENTITY","DECIMAL","DECIMAL IDENTITY","REAL"}; 
			java.util.Collections.addAll(talendToDBList_tDBInput_1, talendToDBArray_tDBInput_1); 
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
			String dbschema_tDBInput_1 = (String)globalMap.get("dbschema_tDBConnection_1");
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select cast(data As Date) data_batimento,\n       func.id,\n       func.nome,\n       cast(func.admissao As Date) admis"
+"sao,\n       cast(func.demissao As Date) demissao,\n       (SELECT x.descricao\n          FROM [Ponto4 SQL].dbo.motivos_"
+"demissao x\n         WHERE x.id = func.motivo_demissao_id) motivo_demissao,\n       func.afast_motivo,\n       cast(func"
+".nascimento As Date) nascimento,\n       func.sexo_masculino,\n       estado_civil_id,\n       func.invisivel Status,\n "
+"      centro_custos,\n       dep.descricao departamento,\n       funcao.descricao funcao,\n       emp.nome empresa,\n   "
+"    case when entrada1 = 'abona' THEN '00:00'\n            when entrada1 = 'abono' THEN '00:00'\n            when entrad"
+"a1 = 'ART 471' THEN '00:00'\n            when entrada1 = 'curso' THEN '00:00'\n            when entrada1 = 'lic.pat' THE"
+"N '00:00'\n            when entrada1 = 'FEIRA' THEN '00:00'\n            when entrada1 = 'ARTG 62' THEN '00:00'\n			when"
+" entrada1 = 'atestad' THEN '00:00'\n			when entrada1 = 'aviso p' THEN '00:00'\n			when entrada1 = 'compens' THEN '00:00'"
+"\n			when entrada1 = 'CURSO E' THEN '00:00'\n			when entrada1 = 'DEMISSÃO S' THEN '00:00'\n			when entrada1 = 'DEMITIDO'"
+" THEN '00:00'\n			when entrada1 = 'esquece' THEN '00:00'\n			when entrada1 = 'esqueceu c' THEN '00:00'\n			when entrada1"
+" = 'Falta' THEN '00:00'\n			when entrada1 = 'feriado' THEN '00:00'\n			when entrada1 = 'férias' THEN '00:00'\n			when en"
+"trada1 = 'filial' THEN '00:00'\n			when entrada1 = 'HA COMP' THEN '00:00'\n			when entrada1 = 'HOME OF' THEN '00:00'\n		"
+"	when entrada1 = 'homeoff' THEN '00:00'\n			when entrada1 = 'inss' THEN '00:00'\n			when entrada1 = 'justifi' THEN '00:0"
+"0'\n			when entrada1 = 'lic.mat' THEN '00:00'\n			when entrada1 = 'PALESTR' THEN '00:00'\n			when entrada1 = 'PATERNI' T"
+"HEN '00:00'\n			when entrada1 = 'PEDIDO ' THEN '00:00'\n			when entrada1 = 'VENC CO' THEN '00:00'\n			when entrada1 = 'V"
+"IAGEM' THEN '00:00'\n            when entrada1 = 'L.PAT' THEN '00:00'\n       else entrada1\n        end entrada1,\n    "
+"   case when saida1 = 'abona' THEN '00:00'\n            when saida1 = 'abono' THEN '00:00'\n            when saida1 = 'A"
+"RT 471' THEN '00:00'\n            when saida1 = 'curso' THEN '00:00'\n            when saida1 = 'lic.pat' THEN '00:00'\n"
+"            when saida1 = 'FEIRA' THEN '00:00'\n            when saida1 = 'ARTG 62' THEN '00:00'\n			when saida1 = 'ates"
+"tad' THEN '00:00'\n			when saida1 = 'aviso p' THEN '00:00'\n			when saida1 = 'compens' THEN '00:00'\n			when saida1 = 'C"
+"URSO E' THEN '00:00'\n			when saida1 = 'DEMISSÃO S' THEN '00:00'\n			when saida1 = 'DEMITIDO' THEN '00:00'\n			when said"
+"a1 = 'esquece' THEN '00:00'\n			when saida1 = 'esqueceu c' THEN '00:00'\n			when saida1 = 'Falta' THEN '00:00'\n			when "
+"saida1 = 'feriado' THEN '00:00'\n			when saida1 = 'férias' THEN '00:00'\n			when saida1 = 'filial' THEN '00:00'\n			when"
+" saida1 = 'HA COMP' THEN '00:00'\n			when saida1 = 'HOME OF' THEN '00:00'\n			when saida1 = 'homeoff' THEN '00:00'\n			w"
+"hen saida1 = 'inss' THEN '00:00'\n			when saida1 = 'justifi' THEN '00:00'\n			when saida1 = 'lic.mat' THEN '00:00'\n			w"
+"hen saida1 = 'PALESTR' THEN '00:00'\n			when saida1 = 'PATERNI' THEN '00:00'\n			when saida1 = 'PEDIDO ' THEN '00:00'\n	"
+"		when saida1 = 'VENC CO' THEN '00:00'\n			when saida1 = 'VIAGEM' THEN '00:00'\n            when saida1 = 'L.PAT' THEN '"
+"00:00'\n       else saida1\n        end saida1,\n       case when entrada2 = 'abona' THEN '00:00'\n            when entr"
+"ada2 = 'abono' THEN '00:00'\n            when entrada2 = 'ART 471' THEN '00:00'\n            when entrada2 = 'ARTG 62' T"
+"HEN '00:00'\n            when entrada2 = 'curso' THEN '00:00'\n            when entrada2 = 'lic.pat' THEN '00:00'\n     "
+"       when entrada2 = 'FEIRA' THEN '00:00'\n			when entrada2 = 'atestad' THEN '00:00'\n			when entrada2 = 'aviso p' THE"
+"N '00:00'\n			when entrada2 = 'compens' THEN '00:00'\n			when entrada2 = 'CURSO E' THEN '00:00'\n			when entrada2 = 'DEM"
+"ISSÃO S' THEN '00:00'\n			when entrada2 = 'DEMITIDO' THEN '00:00'\n			when entrada2 = 'esquece' THEN '00:00'\n			when en"
+"trada2 = 'esqueceu c' THEN '00:00'\n			when entrada2 = 'Falta' THEN '00:00'\n			when entrada2 = 'feriado' THEN '00:00'\n"
+"			when entrada2 = 'férias' THEN '00:00'\n			when entrada2 = 'filial' THEN '00:00'\n			when entrada2 = 'HA COMP' THEN '0"
+"0:00'\n			when entrada2 = 'HOME OF' THEN '00:00'\n			when entrada2 = 'homeoff' THEN '00:00'\n			when entrada2 = 'inss' T"
+"HEN '00:00'\n			when entrada2 = 'justifi' THEN '00:00'\n			when entrada2 = 'lic.mat' THEN '00:00'\n			when entrada2 = 'P"
+"ALESTR' THEN '00:00'\n			when entrada2 = 'PATERNI' THEN '00:00'\n			when entrada2 = 'PEDIDO ' THEN '00:00'\n			when entr"
+"ada2 = 'VENC CO' THEN '00:00'\n			when entrada2 = 'VIAGEM' THEN '00:00'\n            when entrada2 = 'L.PAT' THEN '00:00"
+"'\n       else entrada2\n        end entrada2,\n       case when entrada2 = 'abona' THEN '00:00'\n            when saida"
+"2 = 'abono' THEN '00:00'\n            when saida2 = 'ART 471' THEN '00:00'\n            when saida2 = 'curso' THEN '00:0"
+"0'\n            when saida2 = 'lic.pat' THEN '00:00'\n            when saida2 = 'FEIRA' THEN '00:00'\n            when s"
+"aida2 = 'ARTG 62' THEN '00:00'\n			when saida2 = 'atestad' THEN '00:00'\n			when saida2 = 'aviso p' THEN '00:00'\n			whe"
+"n saida2 = 'compens' THEN '00:00'\n			when saida2 = 'CURSO E' THEN '00:00'\n			when saida2 = 'DEMISSÃO S' THEN '00:00'\n"
+"			when saida2 = 'DEMITIDO' THEN '00:00'\n			when saida2 = 'esquece' THEN '00:00'\n			when saida2 = 'esqueceu c' THEN '0"
+"0:00'\n			when saida2 = 'Falta' THEN '00:00'\n			when saida2 = 'feriado' THEN '00:00'\n			when saida2 = 'férias' THEN '0"
+"0:00'\n			when saida2 = 'filial' THEN '00:00'\n			when saida2 = 'HA COMP' THEN '00:00'\n			when saida2 = 'HOME OF' THEN "
+"'00:00'\n			when saida2 = 'homeoff' THEN '00:00'\n			when saida2 = 'inss' THEN '00:00'\n			when saida2 = 'justifi' THEN "
+"'00:00'\n			when saida2 = 'lic.mat' THEN '00:00'\n			when saida2 = 'PALESTR' THEN '00:00'\n			when saida2 = 'PATERNI' TH"
+"EN '00:00'\n			when saida2 = 'PEDIDO ' THEN '00:00'\n			when saida2 = 'VENC CO' THEN '00:00'\n			when saida2 = 'VIAGEM' "
+"THEN '00:00'\n            when saida2 = 'L.PAT' THEN '00:00'\n       else saida2\n        end saida2,\n       case when "
+"entrada1 = 'abona' THEN 'ABONA'\n            when entrada1 = 'abono' THEN 'ABONO'\n            when entrada1 = 'ART 471'"
+" THEN 'ART 471'\n            when entrada1 = 'curso' THEN '00:00'\n            when entrada1 = 'lic.pat' THEN '00:00'\n "
+"           when entrada1 = 'FEIRA' THEN '00:00'\n            when entrada1 = 'ARTG 62' THEN 'ARTG 62'\n			when entrada1 "
+"= 'atestad' THEN 'ATESTAD'\n			when entrada1 = 'aviso p' THEN 'AVISO P'\n			when entrada1 = 'compens' THEN 'COMPENS'\n		"
+"	when entrada1 = 'CURSO E' THEN 'CURSO E'\n			when entrada1 = 'DEMISSÃO S' THEN 'DEMISSÃO S'\n			when entrada1 = 'DEMITI"
+"DO' THEN 'DEMITIDO'\n			when entrada1 = 'esquece' THEN 'ESQUECE'\n			when entrada1 = 'esqueceu c' THEN 'ESQUECEU C'\n			"
+"when entrada1 = 'Falta' THEN 'FALTA'\n			when entrada1 = 'feriado' THEN 'FERIADO'\n			when entrada1 = 'férias' THEN 'FÉR"
+"IAS'\n			when entrada1 = 'filial' THEN 'FILIAL'\n			when entrada1 = 'HA COMP' THEN 'HA COMP'\n			when entrada1 = 'HOME O"
+"F' THEN 'HOME OF'\n			when entrada1 = 'homeoff' THEN 'HOMEOFF'\n			when entrada1 = 'inss' THEN 'INSS'\n			when entrada1 "
+"= 'justifi' THEN 'JUSTIFI'\n			when entrada1 = 'lic.mat' THEN 'LIC.MAT'\n			when entrada1 = 'PALESTR' THEN 'PALESTR'\n		"
+"	when entrada1 = 'PATERNI' THEN 'PATERNI'\n			when entrada1 = 'PEDIDO ' THEN 'PEDIDO '\n			when entrada1 = 'VENC CO' THE"
+"N 'VENC CO'\n			when entrada1 = 'VIAGEM' THEN 'VIAGEM'\n       else 'NORMAL'\n        end Motivo, \n       mem_entrada1,"
+"\n       mem_saida1,\n       mem_entrada2,\n       mem_saida2\n  from [Ponto4 SQL].dbo.funcionarios  func,\n       [Pont"
+"o4 SQL].dbo.departamentos dep,\n       [Ponto4 SQL].dbo.empresas      emp,\n       [Ponto4 SQL].dbo.funcoes       funcao"
+",\n       [Ponto4 SQL].dbo.batidas       bat\n where func.departamento_id = dep.id\n   and func.empresa_id  = emp.id\n  "
+" and func.funcao_id  = funcao.id\n   and func.id = bat.funcionario_id\n--   and bat.data >= {d'2024-02-01'}\n   and bat."
+"data >= GETDATE()-30";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row1.data_batimento = null;
							} else {
										
			row1.data_batimento = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 1);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row1.id = null;
							} else {
		                          
            row1.id = rs_tDBInput_1.getInt(2);
            if(rs_tDBInput_1.wasNull()){
                    row1.id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row1.nome = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(3);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(3).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.nome = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.nome = tmpContent_tDBInput_1;
                }
            } else {
                row1.nome = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row1.admissao = null;
							} else {
										
			row1.admissao = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 4);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row1.demissao = null;
							} else {
										
			row1.demissao = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 5);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row1.motivo_demissao = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(6);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(6).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.motivo_demissao = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.motivo_demissao = tmpContent_tDBInput_1;
                }
            } else {
                row1.motivo_demissao = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row1.afast_motivo = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(7);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(7).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.afast_motivo = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.afast_motivo = tmpContent_tDBInput_1;
                }
            } else {
                row1.afast_motivo = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row1.nascimento = null;
							} else {
										
			row1.nascimento = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 8);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 9) {
								row1.sexo_masculino = null;
							} else {
		                          
            row1.sexo_masculino = rs_tDBInput_1.getInt(9);
            if(rs_tDBInput_1.wasNull()){
                    row1.sexo_masculino = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 10) {
								row1.estado_civil_id = null;
							} else {
		                          
            row1.estado_civil_id = rs_tDBInput_1.getInt(10);
            if(rs_tDBInput_1.wasNull()){
                    row1.estado_civil_id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 11) {
								row1.Status = null;
							} else {
		                          
            row1.Status = rs_tDBInput_1.getInt(11);
            if(rs_tDBInput_1.wasNull()){
                    row1.Status = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 12) {
								row1.centro_custos = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(12);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(12).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.centro_custos = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.centro_custos = tmpContent_tDBInput_1;
                }
            } else {
                row1.centro_custos = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 13) {
								row1.departamento = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(13);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(13).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.departamento = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.departamento = tmpContent_tDBInput_1;
                }
            } else {
                row1.departamento = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 14) {
								row1.funcao = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(14);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(14).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.funcao = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.funcao = tmpContent_tDBInput_1;
                }
            } else {
                row1.funcao = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 15) {
								row1.empresa = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(15);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(15).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.empresa = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.empresa = tmpContent_tDBInput_1;
                }
            } else {
                row1.empresa = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 16) {
								row1.entrada1 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(16);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(16).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.entrada1 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.entrada1 = tmpContent_tDBInput_1;
                }
            } else {
                row1.entrada1 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 17) {
								row1.saida1 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(17);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(17).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.saida1 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.saida1 = tmpContent_tDBInput_1;
                }
            } else {
                row1.saida1 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 18) {
								row1.entrada2 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(18);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(18).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.entrada2 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.entrada2 = tmpContent_tDBInput_1;
                }
            } else {
                row1.entrada2 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 19) {
								row1.saida2 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(19);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(19).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.saida2 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.saida2 = tmpContent_tDBInput_1;
                }
            } else {
                row1.saida2 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 20) {
								row1.Motivo = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(20);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(20).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.Motivo = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.Motivo = tmpContent_tDBInput_1;
                }
            } else {
                row1.Motivo = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 21) {
								row1.mem_entrada1 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(21);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(21).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.mem_entrada1 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.mem_entrada1 = tmpContent_tDBInput_1;
                }
            } else {
                row1.mem_entrada1 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 22) {
								row1.mem_saida1 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(22);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(22).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.mem_saida1 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.mem_saida1 = tmpContent_tDBInput_1;
                }
            } else {
                row1.mem_saida1 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 23) {
								row1.mem_entrada2 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(23);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(23).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.mem_entrada2 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.mem_entrada2 = tmpContent_tDBInput_1;
                }
            } else {
                row1.mem_entrada2 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 24) {
								row1.mem_saida2 = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(24);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(24).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.mem_saida2 = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.mem_saida2 = tmpContent_tDBInput_1;
                }
            } else {
                row1.mem_saida2 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 25) {
								row1.horas_trabalhadas = null;
							} else {
										
			row1.horas_trabalhadas = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 25);
			
		                    }
					





 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					


  row11 = new row11Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row11.data_batimento=TypeConvert.Date2Date(row1.data_batimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.id=TypeConvert.Integer2Integer(row1.id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.nome=TypeConvert.String2String(row1.nome);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.admissao=TypeConvert.Date2Date(row1.admissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.demissao=TypeConvert.Date2Date(row1.demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.motivo_demissao=TypeConvert.String2String(row1.motivo_demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.afast_motivo=TypeConvert.String2String(row1.afast_motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.nascimento=TypeConvert.Date2Date(row1.nascimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.sexo_masculino=TypeConvert.Integer2Integer(row1.sexo_masculino);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.estado_civil_id=TypeConvert.Integer2Integer(row1.estado_civil_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.Status=TypeConvert.Integer2Integer(row1.Status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.centro_custos=TypeConvert.String2String(row1.centro_custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.departamento=TypeConvert.String2String(row1.departamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.funcao=TypeConvert.String2String(row1.funcao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.empresa=TypeConvert.String2String(row1.empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.entrada1=TypeConvert.String2Date(row1.entrada1, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.saida1=TypeConvert.String2Date(row1.saida1, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.entrada2=TypeConvert.String2Date(row1.entrada2, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.saida2=TypeConvert.String2Date(row1.saida2, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.Motivo=TypeConvert.String2String(row1.Motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.mem_entrada1=TypeConvert.String2Date(row1.mem_entrada1, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.mem_saida1=TypeConvert.String2Date(row1.mem_saida1, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.mem_entrada2=TypeConvert.String2Date(row1.mem_entrada2, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.mem_saida2=TypeConvert.String2Date(row1.mem_saida2, "HH:mm");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.horas_trabalhadas=TypeConvert.Date2Date(row1.horas_trabalhadas);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row11 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row11"
if(row11 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					



    
		row11Struct oneRow_tHashOutput_1 = new row11Struct();
				
					oneRow_tHashOutput_1.data_batimento = row11.data_batimento;
					oneRow_tHashOutput_1.id = row11.id;
					oneRow_tHashOutput_1.nome = row11.nome;
					oneRow_tHashOutput_1.admissao = row11.admissao;
					oneRow_tHashOutput_1.demissao = row11.demissao;
					oneRow_tHashOutput_1.motivo_demissao = row11.motivo_demissao;
					oneRow_tHashOutput_1.afast_motivo = row11.afast_motivo;
					oneRow_tHashOutput_1.nascimento = row11.nascimento;
					oneRow_tHashOutput_1.sexo_masculino = row11.sexo_masculino;
					oneRow_tHashOutput_1.estado_civil_id = row11.estado_civil_id;
					oneRow_tHashOutput_1.Status = row11.Status;
					oneRow_tHashOutput_1.centro_custos = row11.centro_custos;
					oneRow_tHashOutput_1.departamento = row11.departamento;
					oneRow_tHashOutput_1.funcao = row11.funcao;
					oneRow_tHashOutput_1.empresa = row11.empresa;
					oneRow_tHashOutput_1.entrada1 = row11.entrada1;
					oneRow_tHashOutput_1.saida1 = row11.saida1;
					oneRow_tHashOutput_1.entrada2 = row11.entrada2;
					oneRow_tHashOutput_1.saida2 = row11.saida2;
					oneRow_tHashOutput_1.Motivo = row11.Motivo;
					oneRow_tHashOutput_1.mem_entrada1 = row11.mem_entrada1;
					oneRow_tHashOutput_1.mem_saida1 = row11.mem_saida1;
					oneRow_tHashOutput_1.mem_entrada2 = row11.mem_entrada2;
					oneRow_tHashOutput_1.mem_saida2 = row11.mem_saida2;
					oneRow_tHashOutput_1.horas_trabalhadas = row11.horas_trabalhadas;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row11"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		


	
            String dbProperties_tDBConnection_2 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_2 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_2 != null && !"".equals(dbProperties_tDBConnection_2.trim())) {
                url_tDBConnection_2 = url_tDBConnection_2 + "?" + dbProperties_tDBConnection_2;
            }
	String dbUser_tDBConnection_2 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_2 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_2 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_2.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_2 = drivers_tDBConnection_2.nextElement();
        if (redShiftDriverNames_tDBConnection_2.contains(d_tDBConnection_2.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_2);
                java.sql.DriverManager.registerDriver(d_tDBConnection_2);
            } catch (java.lang.Exception e_tDBConnection_2) {
globalMap.put("tDBConnection_2_ERROR_MESSAGE",e_tDBConnection_2.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_2 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_2","");

 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDie_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */
	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_2", 5, "Erro de conexão com o Banco de Dados Postegre DW", 1);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_2_DIE_PRIORITY", 5);
	System.err.println("Erro de conexão com o Banco de Dados Postegre DW");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "Erro de conexão com o Banco de Dados Postegre DW");
	globalMap.put("tDie_2_DIE_MESSAGES", "Erro de conexão com o Banco de Dados Postegre DW");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
        errorCode = new Integer(1);
        globalMap.put("tDie_2_DIE_CODE", errorCode);        

    
	

	
	
	System.exit(1);

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */
	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		
	

	
			String url_tDBConnection_1 = "jdbc:jtds:sqlserver://" + System.getenv(context.PONTEC_HOST) ;
		String port_tDBConnection_1 = System.getenv(context.PONTEC_PORT);
		String dbname_tDBConnection_1 = System.getenv(context.PONTEC_DB) ;
    	if (!"".equals(port_tDBConnection_1)) {
    		url_tDBConnection_1 += ":" + System.getenv(context.PONTEC_PORT);
    	}
    	if (!"".equals(dbname_tDBConnection_1)) {
    		
				url_tDBConnection_1 += "//" + System.getenv(context.PONTEC_DB); 
    	}

		url_tDBConnection_1 += ";appName=" + projectName + ";" + System.getenv(context.PONTEC_JDBC_PARAMETERS);  
	String dbUser_tDBConnection_1 = System.getenv(context.PONTEC_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.PONTEC_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
		
			String driverClass_tDBConnection_1 = "net.sourceforge.jtds.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(false);
	}

	globalMap.put("dbschema_tDBConnection_1", "");

	globalMap.put("db_tDBConnection_1",  System.getenv(context.PONTEC_DB));
	
	globalMap.put("shareIdentitySetting_tDBConnection_1",  false);

	globalMap.put("driver_tDBConnection_1", "JTDS");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();
insert_logStruct insert_log = new insert_logStruct();
row80Struct row80 = new row80Struct();






	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_dw_t_ponto_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row79.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row79.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row80 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row80 = new row80Struct();
                                row80.nm_programa = insert_log.nm_programa;
                                row80.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row80.data_termino_execucao = insert_log.data_termino_execucao;
                                row80.mensagem = insert_log.mensagem;
                                row80.uuid = insert_log.uuid;
                                row80.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row80"
if(row80 != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					



    
		row80Struct oneRow_tHashOutput_3 = new row80Struct();
				
					oneRow_tHashOutput_3.nm_programa = row80.nm_programa;
					oneRow_tHashOutput_3.data_inicio_execucao = row80.data_inicio_execucao;
					oneRow_tHashOutput_3.data_termino_execucao = row80.data_termino_execucao;
					oneRow_tHashOutput_3.mensagem = row80.mensagem;
					oneRow_tHashOutput_3.uuid = row80.uuid;
					oneRow_tHashOutput_3.versao = row80.versao;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "row80"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_1", 5, "Erro de conexão com o Banco de Dados CAIXAPROGRAMADO", 2);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Erro de conexão com o Banco de Dados CAIXAPROGRAMADO");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Erro de conexão com o Banco de Dados CAIXAPROGRAMADO");
	globalMap.put("tDie_1_DIE_MESSAGES", "Erro de conexão com o Banco de Dados CAIXAPROGRAMADO");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
        errorCode = new Integer(2);
        globalMap.put("tDie_1_DIE_CODE", errorCode);        

    
	

	
	
	System.exit(2);

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_dw_t_ponto_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
    
	
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "select \n    data_batimento,\n	id,\n	nome,\n	admissao,\n	demissao,\n	motivo_demissao,\n	afast_motivo,\n	nascimento,\n	s"
+"exo_masculino,\n	estado_civil_id,\n	\"Status\",\n	centro_custos,\n	departamento,\n	funcao,\n	empresa,\n	entrada1,\n	said"
+"a1,\n	entrada2,\n	saida2,\n	\"Motivo\",\n	mem_entrada1,\n	mem_saida1,\n	mem_entrada2,\n	mem_saida2,\n	horas_trabalhadas"
+"\nfrom dw_t_ponto where data_batimento >= current_date -30";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row8.data_batimento = null;
							} else {
										
			row8.data_batimento = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 1);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row8.id = null;
							} else {
		                          
            row8.id = rs_tDBInput_3.getInt(2);
            if(rs_tDBInput_3.wasNull()){
                    row8.id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row8.nome = null;
							} else {
	                         		
        	row8.nome = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row8.admissao = null;
							} else {
										
			row8.admissao = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 4);
		                    }
							if(colQtyInRs_tDBInput_3 < 5) {
								row8.demissao = null;
							} else {
										
			row8.demissao = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 5);
		                    }
							if(colQtyInRs_tDBInput_3 < 6) {
								row8.motivo_demissao = null;
							} else {
	                         		
        	row8.motivo_demissao = routines.system.JDBCUtil.getString(rs_tDBInput_3, 6, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 7) {
								row8.afast_motivo = null;
							} else {
	                         		
        	row8.afast_motivo = routines.system.JDBCUtil.getString(rs_tDBInput_3, 7, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 8) {
								row8.nascimento = null;
							} else {
										
			row8.nascimento = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 8);
		                    }
							if(colQtyInRs_tDBInput_3 < 9) {
								row8.sexo_masculino = null;
							} else {
		                          
            row8.sexo_masculino = rs_tDBInput_3.getInt(9);
            if(rs_tDBInput_3.wasNull()){
                    row8.sexo_masculino = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 10) {
								row8.estado_civil_id = null;
							} else {
		                          
            row8.estado_civil_id = rs_tDBInput_3.getInt(10);
            if(rs_tDBInput_3.wasNull()){
                    row8.estado_civil_id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 11) {
								row8.Status = null;
							} else {
		                          
            row8.Status = rs_tDBInput_3.getInt(11);
            if(rs_tDBInput_3.wasNull()){
                    row8.Status = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 12) {
								row8.centro_custos = null;
							} else {
	                         		
        	row8.centro_custos = routines.system.JDBCUtil.getString(rs_tDBInput_3, 12, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 13) {
								row8.departamento = null;
							} else {
	                         		
        	row8.departamento = routines.system.JDBCUtil.getString(rs_tDBInput_3, 13, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 14) {
								row8.funcao = null;
							} else {
	                         		
        	row8.funcao = routines.system.JDBCUtil.getString(rs_tDBInput_3, 14, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 15) {
								row8.empresa = null;
							} else {
	                         		
        	row8.empresa = routines.system.JDBCUtil.getString(rs_tDBInput_3, 15, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 16) {
								row8.entrada1 = null;
							} else {
										
			row8.entrada1 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 16);
		                    }
							if(colQtyInRs_tDBInput_3 < 17) {
								row8.saida1 = null;
							} else {
										
			row8.saida1 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 17);
		                    }
							if(colQtyInRs_tDBInput_3 < 18) {
								row8.entrada2 = null;
							} else {
										
			row8.entrada2 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 18);
		                    }
							if(colQtyInRs_tDBInput_3 < 19) {
								row8.saida2 = null;
							} else {
										
			row8.saida2 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 19);
		                    }
							if(colQtyInRs_tDBInput_3 < 20) {
								row8.Motivo = null;
							} else {
	                         		
        	row8.Motivo = routines.system.JDBCUtil.getString(rs_tDBInput_3, 20, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 21) {
								row8.mem_entrada1 = null;
							} else {
										
			row8.mem_entrada1 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 21);
		                    }
							if(colQtyInRs_tDBInput_3 < 22) {
								row8.mem_saida1 = null;
							} else {
										
			row8.mem_saida1 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 22);
		                    }
							if(colQtyInRs_tDBInput_3 < 23) {
								row8.mem_entrada2 = null;
							} else {
										
			row8.mem_entrada2 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 23);
		                    }
							if(colQtyInRs_tDBInput_3 < 24) {
								row8.mem_saida2 = null;
							} else {
										
			row8.mem_saida2 = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 24);
		                    }
							if(colQtyInRs_tDBInput_3 < 25) {
								row8.horas_trabalhadas = null;
							} else {
										
			row8.horas_trabalhadas = routines.system.JDBCUtil.getDate(rs_tDBInput_3, 25);
		                    }
					


 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					



    
		row8Struct oneRow_tHashOutput_2 = new row8Struct();
				
					oneRow_tHashOutput_2.data_batimento = row8.data_batimento;
					oneRow_tHashOutput_2.id = row8.id;
					oneRow_tHashOutput_2.nome = row8.nome;
					oneRow_tHashOutput_2.admissao = row8.admissao;
					oneRow_tHashOutput_2.demissao = row8.demissao;
					oneRow_tHashOutput_2.motivo_demissao = row8.motivo_demissao;
					oneRow_tHashOutput_2.afast_motivo = row8.afast_motivo;
					oneRow_tHashOutput_2.nascimento = row8.nascimento;
					oneRow_tHashOutput_2.sexo_masculino = row8.sexo_masculino;
					oneRow_tHashOutput_2.estado_civil_id = row8.estado_civil_id;
					oneRow_tHashOutput_2.Status = row8.Status;
					oneRow_tHashOutput_2.centro_custos = row8.centro_custos;
					oneRow_tHashOutput_2.departamento = row8.departamento;
					oneRow_tHashOutput_2.funcao = row8.funcao;
					oneRow_tHashOutput_2.empresa = row8.empresa;
					oneRow_tHashOutput_2.entrada1 = row8.entrada1;
					oneRow_tHashOutput_2.saida1 = row8.saida1;
					oneRow_tHashOutput_2.entrada2 = row8.entrada2;
					oneRow_tHashOutput_2.saida2 = row8.saida2;
					oneRow_tHashOutput_2.Motivo = row8.Motivo;
					oneRow_tHashOutput_2.mem_entrada1 = row8.mem_entrada1;
					oneRow_tHashOutput_2.mem_saida1 = row8.mem_saida1;
					oneRow_tHashOutput_2.mem_entrada2 = row8.mem_entrada2;
					oneRow_tHashOutput_2.mem_saida2 = row8.mem_saida2;
					oneRow_tHashOutput_2.horas_trabalhadas = row8.horas_trabalhadas;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tHashInput_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return true;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return true;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.data_batimento == null) ? 0 : this.data_batimento.hashCode());
					
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.data_batimento == null) {
							if (other.data_batimento != null)
								return false;
						
						} else if (!this.data_batimento.equals(other.data_batimento))
						
							return false;
					
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.data_batimento = this.data_batimento;
	            other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.afast_motivo = this.afast_motivo;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.Status = this.Status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            other.entrada1 = this.entrada1;
	            other.saida1 = this.saida1;
	            other.entrada2 = this.entrada2;
	            other.saida2 = this.saida2;
	            other.Motivo = this.Motivo;
	            other.mem_entrada1 = this.mem_entrada1;
	            other.mem_saida1 = this.mem_saida1;
	            other.mem_entrada2 = this.mem_entrada2;
	            other.mem_saida2 = this.mem_saida2;
	            other.horas_trabalhadas = this.horas_trabalhadas;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.data_batimento = this.data_batimento;
	            	other.id = this.id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.data_batimento, other.data_batimento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return true;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return true;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.data_batimento == null) ? 0 : this.data_batimento.hashCode());
					
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row12Struct other = (row12Struct) obj;
		
						if (this.data_batimento == null) {
							if (other.data_batimento != null)
								return false;
						
						} else if (!this.data_batimento.equals(other.data_batimento))
						
							return false;
					
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row12Struct other) {

		other.data_batimento = this.data_batimento;
	            other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.afast_motivo = this.afast_motivo;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.Status = this.Status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            other.entrada1 = this.entrada1;
	            other.saida1 = this.saida1;
	            other.entrada2 = this.entrada2;
	            other.saida2 = this.saida2;
	            other.Motivo = this.Motivo;
	            other.mem_entrada1 = this.mem_entrada1;
	            other.mem_saida1 = this.mem_saida1;
	            other.mem_entrada2 = this.mem_entrada2;
	            other.mem_saida2 = this.mem_saida2;
	            other.horas_trabalhadas = this.horas_trabalhadas;
	            
	}

	public void copyKeysDataTo(row12Struct other) {

		other.data_batimento = this.data_batimento;
	            	other.id = this.id;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.data_batimento, other.data_batimento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class InsertStruct implements routines.system.IPersistableRow<InsertStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String data_batimento;

				public String getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return true;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return true;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.data_batimento == null) ? 0 : this.data_batimento.hashCode());
					
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final InsertStruct other = (InsertStruct) obj;
		
						if (this.data_batimento == null) {
							if (other.data_batimento != null)
								return false;
						
						} else if (!this.data_batimento.equals(other.data_batimento))
						
							return false;
					
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(InsertStruct other) {

		other.data_batimento = this.data_batimento;
	            other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.afast_motivo = this.afast_motivo;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.Status = this.Status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            other.entrada1 = this.entrada1;
	            other.saida1 = this.saida1;
	            other.entrada2 = this.entrada2;
	            other.saida2 = this.saida2;
	            other.Motivo = this.Motivo;
	            other.mem_entrada1 = this.mem_entrada1;
	            other.mem_saida1 = this.mem_saida1;
	            other.mem_entrada2 = this.mem_entrada2;
	            other.mem_saida2 = this.mem_saida2;
	            other.horas_trabalhadas = this.horas_trabalhadas;
	            
	}

	public void copyKeysDataTo(InsertStruct other) {

		other.data_batimento = this.data_batimento;
	            	other.id = this.id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+data_batimento);
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(InsertStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.data_batimento, other.data_batimento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class UpdateStruct implements routines.system.IPersistableRow<UpdateStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String data_batimento;

				public String getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return true;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return true;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.data_batimento == null) ? 0 : this.data_batimento.hashCode());
					
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final UpdateStruct other = (UpdateStruct) obj;
		
						if (this.data_batimento == null) {
							if (other.data_batimento != null)
								return false;
						
						} else if (!this.data_batimento.equals(other.data_batimento))
						
							return false;
					
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(UpdateStruct other) {

		other.data_batimento = this.data_batimento;
	            other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.afast_motivo = this.afast_motivo;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.Status = this.Status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            other.entrada1 = this.entrada1;
	            other.saida1 = this.saida1;
	            other.entrada2 = this.entrada2;
	            other.saida2 = this.saida2;
	            other.Motivo = this.Motivo;
	            other.mem_entrada1 = this.mem_entrada1;
	            other.mem_saida1 = this.mem_saida1;
	            other.mem_entrada2 = this.mem_entrada2;
	            other.mem_saida2 = this.mem_saida2;
	            other.horas_trabalhadas = this.horas_trabalhadas;
	            
	}

	public void copyKeysDataTo(UpdateStruct other) {

		other.data_batimento = this.data_batimento;
	            	other.id = this.id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+data_batimento);
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(UpdateStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.data_batimento, other.data_batimento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public String data_batimento;

				public String getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+data_batimento);
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_2Process(globalMap);

		row9Struct row9 = new row9Struct();
row6Struct row6 = new row6Struct();
InsertStruct Insert = new InsertStruct();
row12Struct row12 = new row12Struct();
UpdateStruct Update = new UpdateStruct();
row13Struct row13 = new row13Struct();







	
	/**
	 * [tDBOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_5", false);
		start_Hash.put("tDBOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tDBOutput_5 = 0;
		





String dbschema_tDBOutput_5 = null;
	dbschema_tDBOutput_5 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_5 = null;
if(dbschema_tDBOutput_5 == null || dbschema_tDBOutput_5.trim().length() == 0) {
	tableName_tDBOutput_5 = ("dw_t_ponto");
} else {
	tableName_tDBOutput_5 = dbschema_tDBOutput_5 + "\".\"" + ("dw_t_ponto");
}


int nb_line_tDBOutput_5 = 0;
int nb_line_update_tDBOutput_5 = 0;
int nb_line_inserted_tDBOutput_5 = 0;
int nb_line_deleted_tDBOutput_5 = 0;
int nb_line_rejected_tDBOutput_5 = 0;

int deletedCount_tDBOutput_5=0;
int updatedCount_tDBOutput_5=0;
int insertedCount_tDBOutput_5=0;
int rowsToCommitCount_tDBOutput_5=0;
int rejectedCount_tDBOutput_5=0;

boolean whetherReject_tDBOutput_5 = false;

java.sql.Connection conn_tDBOutput_5 = null;
String dbUser_tDBOutput_5 = null;

	conn_tDBOutput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	


   int batchSize_tDBOutput_5 = 1000;
   int batchSizeCounter_tDBOutput_5=0;

int count_tDBOutput_5=0;
        java.lang.StringBuilder sb_tDBOutput_5 = new java.lang.StringBuilder();
        sb_tDBOutput_5.append("INSERT INTO \"").append(tableName_tDBOutput_5).append("\" (\"data_batimento\",\"id\",\"nome\",\"admissao\",\"demissao\",\"motivo_demissao\",\"afast_motivo\",\"nascimento\",\"sexo_masculino\",\"estado_civil_id\",\"Status\",\"centro_custos\",\"departamento\",\"funcao\",\"empresa\",\"entrada1\",\"saida1\",\"entrada2\",\"saida2\",\"Motivo\",\"mem_entrada1\",\"mem_saida1\",\"mem_entrada2\",\"mem_saida2\",\"horas_trabalhadas\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_5 = sb_tDBOutput_5.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_5 = conn_tDBOutput_5.prepareStatement(insert_tDBOutput_5);
	    resourceMap.put("pstmt_tDBOutput_5", pstmt_tDBOutput_5);
	    

 



/**
 * [tDBOutput_5 begin ] stop
 */



	
	/**
	 * [tConvertType_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_4", false);
		start_Hash.put("tConvertType_4", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Insert");
					}
				
		int tos_count_tConvertType_4 = 0;
		
	int nb_line_tConvertType_4 = 0;  
 



/**
 * [tConvertType_4 begin ] stop
 */





	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





String dbschema_tDBOutput_4 = null;
	dbschema_tDBOutput_4 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_4 = null;
if(dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
	tableName_tDBOutput_4 = ("dw_t_ponto");
} else {
	tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "\".\"" + ("dw_t_ponto");
}

        int updateKeyCount_tDBOutput_4 = 2;
        if(updateKeyCount_tDBOutput_4 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_4 == 25 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;
int rowsToCommitCount_tDBOutput_4=0;
int rejectedCount_tDBOutput_4=0;

boolean whetherReject_tDBOutput_4 = false;

java.sql.Connection conn_tDBOutput_4 = null;
String dbUser_tDBOutput_4 = null;

	conn_tDBOutput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	


   int batchSize_tDBOutput_4 = 1000;
   int batchSizeCounter_tDBOutput_4=0;

int count_tDBOutput_4=0;
	    String update_tDBOutput_4 = "UPDATE \"" + tableName_tDBOutput_4 + "\" SET \"nome\" = ?,\"admissao\" = ?,\"demissao\" = ?,\"motivo_demissao\" = ?,\"afast_motivo\" = ?,\"nascimento\" = ?,\"sexo_masculino\" = ?,\"estado_civil_id\" = ?,\"Status\" = ?,\"centro_custos\" = ?,\"departamento\" = ?,\"funcao\" = ?,\"empresa\" = ?,\"entrada1\" = ?,\"saida1\" = ?,\"entrada2\" = ?,\"saida2\" = ?,\"Motivo\" = ?,\"mem_entrada1\" = ?,\"mem_saida1\" = ?,\"mem_entrada2\" = ?,\"mem_saida2\" = ?,\"horas_trabalhadas\" = ? WHERE \"data_batimento\" = ? AND \"id\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(update_tDBOutput_4);
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tConvertType_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_5", false);
		start_Hash.put("tConvertType_5", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Update");
					}
				
		int tos_count_tConvertType_5 = 0;
		
	int nb_line_tConvertType_5 = 0;  
 



/**
 * [tConvertType_5 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
InsertStruct Insert_tmp = new InsertStruct();
UpdateStruct Update_tmp = new UpdateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tConvertType_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_2", false);
		start_Hash.put("tConvertType_2", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tConvertType_2 = 0;
		
	int nb_line_tConvertType_2 = 0;  
 



/**
 * [tConvertType_2 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row11Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row11Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row9.data_batimento = next_tHashInput_1.data_batimento;
	row9.id = next_tHashInput_1.id;
	row9.nome = next_tHashInput_1.nome;
	row9.admissao = next_tHashInput_1.admissao;
	row9.demissao = next_tHashInput_1.demissao;
	row9.motivo_demissao = next_tHashInput_1.motivo_demissao;
	row9.afast_motivo = next_tHashInput_1.afast_motivo;
	row9.nascimento = next_tHashInput_1.nascimento;
	row9.sexo_masculino = next_tHashInput_1.sexo_masculino;
	row9.estado_civil_id = next_tHashInput_1.estado_civil_id;
	row9.Status = next_tHashInput_1.Status;
	row9.centro_custos = next_tHashInput_1.centro_custos;
	row9.departamento = next_tHashInput_1.departamento;
	row9.funcao = next_tHashInput_1.funcao;
	row9.empresa = next_tHashInput_1.empresa;
	row9.entrada1 = next_tHashInput_1.entrada1;
	row9.saida1 = next_tHashInput_1.saida1;
	row9.entrada2 = next_tHashInput_1.entrada2;
	row9.saida2 = next_tHashInput_1.saida2;
	row9.Motivo = next_tHashInput_1.Motivo;
	row9.mem_entrada1 = next_tHashInput_1.mem_entrada1;
	row9.mem_saida1 = next_tHashInput_1.mem_saida1;
	row9.mem_entrada2 = next_tHashInput_1.mem_entrada2;
	row9.mem_saida2 = next_tHashInput_1.mem_saida2;
	row9.horas_trabalhadas = next_tHashInput_1.horas_trabalhadas;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_2 main ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


  row6 = new row6Struct();
  boolean bHasError_tConvertType_2 = false;             
          try {
              row6.data_batimento=TypeConvert.Date2String(row9.data_batimento, "yyyy-MM-dd");
        	            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.id=TypeConvert.Integer2Integer(row9.id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.nome=TypeConvert.String2String(row9.nome);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.admissao=TypeConvert.Date2Date(row9.admissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.demissao=TypeConvert.Date2Date(row9.demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.motivo_demissao=TypeConvert.String2String(row9.motivo_demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.afast_motivo=TypeConvert.String2String(row9.afast_motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.nascimento=TypeConvert.Date2Date(row9.nascimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.sexo_masculino=TypeConvert.Integer2Integer(row9.sexo_masculino);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.estado_civil_id=TypeConvert.Integer2Integer(row9.estado_civil_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.Status=TypeConvert.Integer2Integer(row9.Status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.centro_custos=TypeConvert.String2String(row9.centro_custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.departamento=TypeConvert.String2String(row9.departamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.funcao=TypeConvert.String2String(row9.funcao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.empresa=TypeConvert.String2String(row9.empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.entrada1=TypeConvert.Date2Date(row9.entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.saida1=TypeConvert.Date2Date(row9.saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.entrada2=TypeConvert.Date2Date(row9.entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.saida2=TypeConvert.Date2Date(row9.saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.Motivo=TypeConvert.String2String(row9.Motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.mem_entrada1=TypeConvert.Date2Date(row9.mem_entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.mem_saida1=TypeConvert.Date2Date(row9.mem_saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.mem_entrada2=TypeConvert.Date2Date(row9.mem_entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.mem_saida2=TypeConvert.Date2Date(row9.mem_saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row6.horas_trabalhadas=TypeConvert.Date2Date(row9.horas_trabalhadas);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_2) {row6 = null;}

  nb_line_tConvertType_2 ++ ;

 


	tos_count_tConvertType_2++;

/**
 * [tConvertType_2 main ] stop
 */
	
	/**
	 * [tConvertType_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_begin ] stop
 */
// Start of branch "row6"
if(row6 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row7Struct row7 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row7HashKey.data_batimento = row6.data_batimento;
                        		    		
                        		    		    row7HashKey.id = row6.id ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row7.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_1 = true;
	  								
						
									
	
		  								forceLooprow7 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow7 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row7 != null && tHash_Lookup_row7.hasNext()) || forceLooprow7) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row7'
									
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								
								if(!forceLooprow7) { // G 46
								
							
								 
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow7 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

Update = null;
Insert = null;

if(!rejectedInnerJoin_tMap_1 ) {

// # Output table : 'Update'
Update_tmp.data_batimento = row6.data_batimento ;
Update_tmp.id = row6.id ;
Update_tmp.nome = row6.nome ;
Update_tmp.admissao = row6.admissao ;
Update_tmp.demissao = row6.demissao ;
Update_tmp.motivo_demissao = row6.motivo_demissao ;
Update_tmp.afast_motivo = row6.afast_motivo ;
Update_tmp.nascimento = row6.nascimento ;
Update_tmp.sexo_masculino = row6.sexo_masculino ;
Update_tmp.estado_civil_id = row6.estado_civil_id ;
Update_tmp.Status = row6.Status ;
Update_tmp.centro_custos = row6.centro_custos ;
Update_tmp.departamento = row6.departamento ;
Update_tmp.funcao = row6.funcao ;
Update_tmp.empresa = row6.empresa ;
Update_tmp.entrada1 = row6.entrada1 ;
Update_tmp.saida1 = row6.saida1 ;
Update_tmp.entrada2 = row6.entrada2 ;
Update_tmp.saida2 = row6.saida2 ;
Update_tmp.Motivo = row6.Motivo ;
Update_tmp.mem_entrada1 = row6.mem_entrada1 ;
Update_tmp.mem_saida1 = row6.mem_saida1 ;
Update_tmp.mem_entrada2 = row6.mem_entrada2 ;
Update_tmp.mem_saida2 = row6.mem_saida2 ;
Update_tmp.horas_trabalhadas = row6.horas_trabalhadas ;
Update = Update_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Insert'
// # Filter conditions 
if( rejectedInnerJoin_tMap_1 ) {
Insert_tmp.data_batimento = row6.data_batimento ;
Insert_tmp.id = row6.id ;
Insert_tmp.nome = row6.nome ;
Insert_tmp.admissao = row6.admissao ;
Insert_tmp.demissao = row6.demissao ;
Insert_tmp.motivo_demissao = row6.motivo_demissao ;
Insert_tmp.afast_motivo = row6.afast_motivo ;
Insert_tmp.nascimento = row6.nascimento ;
Insert_tmp.sexo_masculino = row6.sexo_masculino ;
Insert_tmp.estado_civil_id = row6.estado_civil_id ;
Insert_tmp.Status = row6.Status ;
Insert_tmp.centro_custos = row6.centro_custos ;
Insert_tmp.departamento = row6.departamento ;
Insert_tmp.funcao = row6.funcao ;
Insert_tmp.empresa = row6.empresa ;
Insert_tmp.entrada1 = row6.entrada1 ;
Insert_tmp.saida1 = row6.saida1 ;
Insert_tmp.entrada2 = row6.entrada2 ;
Insert_tmp.saida2 = row6.saida2 ;
Insert_tmp.Motivo = row6.Motivo ;
Insert_tmp.mem_entrada1 = row6.mem_entrada1 ;
Insert_tmp.mem_saida1 = row6.mem_saida1 ;
Insert_tmp.mem_entrada2 = row6.mem_entrada2 ;
Insert_tmp.mem_saida2 = row6.mem_saida2 ;
Insert_tmp.horas_trabalhadas = row6.horas_trabalhadas ;
Insert = Insert_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "Insert"
if(Insert != null) { 



	
	/**
	 * [tConvertType_4 main ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Insert"
						
						);
					}
					


  row12 = new row12Struct();
  boolean bHasError_tConvertType_4 = false;             
          try {
              row12.data_batimento=TypeConvert.String2Date(Insert.data_batimento, "yyyy-MM-dd");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.id=TypeConvert.Integer2Integer(Insert.id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.nome=TypeConvert.String2String(Insert.nome);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.admissao=TypeConvert.Date2Date(Insert.admissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.demissao=TypeConvert.Date2Date(Insert.demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.motivo_demissao=TypeConvert.String2String(Insert.motivo_demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.afast_motivo=TypeConvert.String2String(Insert.afast_motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.nascimento=TypeConvert.Date2Date(Insert.nascimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.sexo_masculino=TypeConvert.Integer2Integer(Insert.sexo_masculino);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.estado_civil_id=TypeConvert.Integer2Integer(Insert.estado_civil_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.Status=TypeConvert.Integer2Integer(Insert.Status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.centro_custos=TypeConvert.String2String(Insert.centro_custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.departamento=TypeConvert.String2String(Insert.departamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.funcao=TypeConvert.String2String(Insert.funcao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.empresa=TypeConvert.String2String(Insert.empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.entrada1=TypeConvert.Date2Date(Insert.entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.saida1=TypeConvert.Date2Date(Insert.saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.entrada2=TypeConvert.Date2Date(Insert.entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.saida2=TypeConvert.Date2Date(Insert.saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.Motivo=TypeConvert.String2String(Insert.Motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.mem_entrada1=TypeConvert.Date2Date(Insert.mem_entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.mem_saida1=TypeConvert.Date2Date(Insert.mem_saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.mem_entrada2=TypeConvert.Date2Date(Insert.mem_entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.mem_saida2=TypeConvert.Date2Date(Insert.mem_saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row12.horas_trabalhadas=TypeConvert.Date2Date(Insert.horas_trabalhadas);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_4) {row12 = null;}

  nb_line_tConvertType_4 ++ ;

 


	tos_count_tConvertType_4++;

/**
 * [tConvertType_4 main ] stop
 */
	
	/**
	 * [tConvertType_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 process_data_begin ] stop
 */
// Start of branch "row12"
if(row12 != null) { 



	
	/**
	 * [tDBOutput_5 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					



        whetherReject_tDBOutput_5 = false;
                    if(row12.data_batimento != null) {
pstmt_tDBOutput_5.setTimestamp(1, new java.sql.Timestamp(row12.data_batimento.getTime()));
} else {
pstmt_tDBOutput_5.setNull(1, java.sql.Types.TIMESTAMP);
}

                    if(row12.id == null) {
pstmt_tDBOutput_5.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_5.setInt(2, row12.id);
}

                    if(row12.nome == null) {
pstmt_tDBOutput_5.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(3, row12.nome);
}

                    if(row12.admissao != null) {
pstmt_tDBOutput_5.setTimestamp(4, new java.sql.Timestamp(row12.admissao.getTime()));
} else {
pstmt_tDBOutput_5.setNull(4, java.sql.Types.TIMESTAMP);
}

                    if(row12.demissao != null) {
pstmt_tDBOutput_5.setTimestamp(5, new java.sql.Timestamp(row12.demissao.getTime()));
} else {
pstmt_tDBOutput_5.setNull(5, java.sql.Types.TIMESTAMP);
}

                    if(row12.motivo_demissao == null) {
pstmt_tDBOutput_5.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(6, row12.motivo_demissao);
}

                    if(row12.afast_motivo == null) {
pstmt_tDBOutput_5.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(7, row12.afast_motivo);
}

                    if(row12.nascimento != null) {
pstmt_tDBOutput_5.setTimestamp(8, new java.sql.Timestamp(row12.nascimento.getTime()));
} else {
pstmt_tDBOutput_5.setNull(8, java.sql.Types.TIMESTAMP);
}

                    if(row12.sexo_masculino == null) {
pstmt_tDBOutput_5.setNull(9, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_5.setInt(9, row12.sexo_masculino);
}

                    if(row12.estado_civil_id == null) {
pstmt_tDBOutput_5.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_5.setInt(10, row12.estado_civil_id);
}

                    if(row12.Status == null) {
pstmt_tDBOutput_5.setNull(11, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_5.setInt(11, row12.Status);
}

                    if(row12.centro_custos == null) {
pstmt_tDBOutput_5.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(12, row12.centro_custos);
}

                    if(row12.departamento == null) {
pstmt_tDBOutput_5.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(13, row12.departamento);
}

                    if(row12.funcao == null) {
pstmt_tDBOutput_5.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(14, row12.funcao);
}

                    if(row12.empresa == null) {
pstmt_tDBOutput_5.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(15, row12.empresa);
}

                    if(row12.entrada1 != null) {
pstmt_tDBOutput_5.setTimestamp(16, new java.sql.Timestamp(row12.entrada1.getTime()));
} else {
pstmt_tDBOutput_5.setNull(16, java.sql.Types.TIMESTAMP);
}

                    if(row12.saida1 != null) {
pstmt_tDBOutput_5.setTimestamp(17, new java.sql.Timestamp(row12.saida1.getTime()));
} else {
pstmt_tDBOutput_5.setNull(17, java.sql.Types.TIMESTAMP);
}

                    if(row12.entrada2 != null) {
pstmt_tDBOutput_5.setTimestamp(18, new java.sql.Timestamp(row12.entrada2.getTime()));
} else {
pstmt_tDBOutput_5.setNull(18, java.sql.Types.TIMESTAMP);
}

                    if(row12.saida2 != null) {
pstmt_tDBOutput_5.setTimestamp(19, new java.sql.Timestamp(row12.saida2.getTime()));
} else {
pstmt_tDBOutput_5.setNull(19, java.sql.Types.TIMESTAMP);
}

                    if(row12.Motivo == null) {
pstmt_tDBOutput_5.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(20, row12.Motivo);
}

                    if(row12.mem_entrada1 != null) {
pstmt_tDBOutput_5.setTimestamp(21, new java.sql.Timestamp(row12.mem_entrada1.getTime()));
} else {
pstmt_tDBOutput_5.setNull(21, java.sql.Types.TIMESTAMP);
}

                    if(row12.mem_saida1 != null) {
pstmt_tDBOutput_5.setTimestamp(22, new java.sql.Timestamp(row12.mem_saida1.getTime()));
} else {
pstmt_tDBOutput_5.setNull(22, java.sql.Types.TIMESTAMP);
}

                    if(row12.mem_entrada2 != null) {
pstmt_tDBOutput_5.setTimestamp(23, new java.sql.Timestamp(row12.mem_entrada2.getTime()));
} else {
pstmt_tDBOutput_5.setNull(23, java.sql.Types.TIMESTAMP);
}

                    if(row12.mem_saida2 != null) {
pstmt_tDBOutput_5.setTimestamp(24, new java.sql.Timestamp(row12.mem_saida2.getTime()));
} else {
pstmt_tDBOutput_5.setNull(24, java.sql.Types.TIMESTAMP);
}

                    if(row12.horas_trabalhadas != null) {
pstmt_tDBOutput_5.setTimestamp(25, new java.sql.Timestamp(row12.horas_trabalhadas.getTime()));
} else {
pstmt_tDBOutput_5.setNull(25, java.sql.Types.TIMESTAMP);
}

			
    		pstmt_tDBOutput_5.addBatch();
    		nb_line_tDBOutput_5++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_5++;
    		  
    			if ((batchSize_tDBOutput_5 > 0) && (batchSize_tDBOutput_5 <= batchSizeCounter_tDBOutput_5)) {
                try {
						int countSum_tDBOutput_5 = 0;
						    
						for(int countEach_tDBOutput_5: pstmt_tDBOutput_5.executeBatch()) {
							countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
						}
				    	rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
				    	
				    		insertedCount_tDBOutput_5 += countSum_tDBOutput_5;
				    	
            	    	batchSizeCounter_tDBOutput_5 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_5){
globalMap.put("tDBOutput_5_ERROR_MESSAGE",e_tDBOutput_5.getMessage());
				    	java.sql.SQLException ne_tDBOutput_5 = e_tDBOutput_5.getNextException(),sqle_tDBOutput_5=null;
				    	String errormessage_tDBOutput_5;
						if (ne_tDBOutput_5 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_5 = new java.sql.SQLException(e_tDBOutput_5.getMessage() + "\ncaused by: " + ne_tDBOutput_5.getMessage(), ne_tDBOutput_5.getSQLState(), ne_tDBOutput_5.getErrorCode(), ne_tDBOutput_5);
							errormessage_tDBOutput_5 = sqle_tDBOutput_5.getMessage();
						}else{
							errormessage_tDBOutput_5 = e_tDBOutput_5.getMessage();
						}
				    	
				    	int countSum_tDBOutput_5 = 0;
						for(int countEach_tDBOutput_5: e_tDBOutput_5.getUpdateCounts()) {
							countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
						}
						rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
						
				    		insertedCount_tDBOutput_5 += countSum_tDBOutput_5;
				    	
				    	System.err.println(errormessage_tDBOutput_5);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_5++;

/**
 * [tDBOutput_5 main ] stop
 */
	
	/**
	 * [tDBOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	

 



/**
 * [tDBOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	

 



/**
 * [tDBOutput_5 process_data_end ] stop
 */

} // End of branch "row12"




	
	/**
	 * [tConvertType_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 process_data_end ] stop
 */

} // End of branch "Insert"




// Start of branch "Update"
if(Update != null) { 



	
	/**
	 * [tConvertType_5 main ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Update"
						
						);
					}
					


  row13 = new row13Struct();
  boolean bHasError_tConvertType_5 = false;             
          try {
              row13.data_batimento=TypeConvert.String2Date(Update.data_batimento, "yyyy-MM-dd");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.id=TypeConvert.Integer2Integer(Update.id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.nome=TypeConvert.String2String(Update.nome);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.admissao=TypeConvert.Date2Date(Update.admissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.demissao=TypeConvert.Date2Date(Update.demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.motivo_demissao=TypeConvert.String2String(Update.motivo_demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.afast_motivo=TypeConvert.String2String(Update.afast_motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.nascimento=TypeConvert.Date2Date(Update.nascimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.sexo_masculino=TypeConvert.Integer2Integer(Update.sexo_masculino);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.estado_civil_id=TypeConvert.Integer2Integer(Update.estado_civil_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.Status=TypeConvert.Integer2Integer(Update.Status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.centro_custos=TypeConvert.String2String(Update.centro_custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.departamento=TypeConvert.String2String(Update.departamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.funcao=TypeConvert.String2String(Update.funcao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.empresa=TypeConvert.String2String(Update.empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.entrada1=TypeConvert.Date2Date(Update.entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.saida1=TypeConvert.Date2Date(Update.saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.entrada2=TypeConvert.Date2Date(Update.entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.saida2=TypeConvert.Date2Date(Update.saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.Motivo=TypeConvert.String2String(Update.Motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.mem_entrada1=TypeConvert.Date2Date(Update.mem_entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.mem_saida1=TypeConvert.Date2Date(Update.mem_saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.mem_entrada2=TypeConvert.Date2Date(Update.mem_entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.mem_saida2=TypeConvert.Date2Date(Update.mem_saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row13.horas_trabalhadas=TypeConvert.Date2Date(Update.horas_trabalhadas);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_5_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_5 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_5) {row13 = null;}

  nb_line_tConvertType_5 ++ ;

 


	tos_count_tConvertType_5++;

/**
 * [tConvertType_5 main ] stop
 */
	
	/**
	 * [tConvertType_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(row13.nome == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, row13.nome);
}

                    if(row13.admissao != null) {
pstmt_tDBOutput_4.setTimestamp(2, new java.sql.Timestamp(row13.admissao.getTime()));
} else {
pstmt_tDBOutput_4.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(row13.demissao != null) {
pstmt_tDBOutput_4.setTimestamp(3, new java.sql.Timestamp(row13.demissao.getTime()));
} else {
pstmt_tDBOutput_4.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(row13.motivo_demissao == null) {
pstmt_tDBOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(4, row13.motivo_demissao);
}

                    if(row13.afast_motivo == null) {
pstmt_tDBOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(5, row13.afast_motivo);
}

                    if(row13.nascimento != null) {
pstmt_tDBOutput_4.setTimestamp(6, new java.sql.Timestamp(row13.nascimento.getTime()));
} else {
pstmt_tDBOutput_4.setNull(6, java.sql.Types.TIMESTAMP);
}

                    if(row13.sexo_masculino == null) {
pstmt_tDBOutput_4.setNull(7, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(7, row13.sexo_masculino);
}

                    if(row13.estado_civil_id == null) {
pstmt_tDBOutput_4.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(8, row13.estado_civil_id);
}

                    if(row13.Status == null) {
pstmt_tDBOutput_4.setNull(9, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(9, row13.Status);
}

                    if(row13.centro_custos == null) {
pstmt_tDBOutput_4.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(10, row13.centro_custos);
}

                    if(row13.departamento == null) {
pstmt_tDBOutput_4.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(11, row13.departamento);
}

                    if(row13.funcao == null) {
pstmt_tDBOutput_4.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(12, row13.funcao);
}

                    if(row13.empresa == null) {
pstmt_tDBOutput_4.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(13, row13.empresa);
}

                    if(row13.entrada1 != null) {
pstmt_tDBOutput_4.setTimestamp(14, new java.sql.Timestamp(row13.entrada1.getTime()));
} else {
pstmt_tDBOutput_4.setNull(14, java.sql.Types.TIMESTAMP);
}

                    if(row13.saida1 != null) {
pstmt_tDBOutput_4.setTimestamp(15, new java.sql.Timestamp(row13.saida1.getTime()));
} else {
pstmt_tDBOutput_4.setNull(15, java.sql.Types.TIMESTAMP);
}

                    if(row13.entrada2 != null) {
pstmt_tDBOutput_4.setTimestamp(16, new java.sql.Timestamp(row13.entrada2.getTime()));
} else {
pstmt_tDBOutput_4.setNull(16, java.sql.Types.TIMESTAMP);
}

                    if(row13.saida2 != null) {
pstmt_tDBOutput_4.setTimestamp(17, new java.sql.Timestamp(row13.saida2.getTime()));
} else {
pstmt_tDBOutput_4.setNull(17, java.sql.Types.TIMESTAMP);
}

                    if(row13.Motivo == null) {
pstmt_tDBOutput_4.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(18, row13.Motivo);
}

                    if(row13.mem_entrada1 != null) {
pstmt_tDBOutput_4.setTimestamp(19, new java.sql.Timestamp(row13.mem_entrada1.getTime()));
} else {
pstmt_tDBOutput_4.setNull(19, java.sql.Types.TIMESTAMP);
}

                    if(row13.mem_saida1 != null) {
pstmt_tDBOutput_4.setTimestamp(20, new java.sql.Timestamp(row13.mem_saida1.getTime()));
} else {
pstmt_tDBOutput_4.setNull(20, java.sql.Types.TIMESTAMP);
}

                    if(row13.mem_entrada2 != null) {
pstmt_tDBOutput_4.setTimestamp(21, new java.sql.Timestamp(row13.mem_entrada2.getTime()));
} else {
pstmt_tDBOutput_4.setNull(21, java.sql.Types.TIMESTAMP);
}

                    if(row13.mem_saida2 != null) {
pstmt_tDBOutput_4.setTimestamp(22, new java.sql.Timestamp(row13.mem_saida2.getTime()));
} else {
pstmt_tDBOutput_4.setNull(22, java.sql.Types.TIMESTAMP);
}

                    if(row13.horas_trabalhadas != null) {
pstmt_tDBOutput_4.setTimestamp(23, new java.sql.Timestamp(row13.horas_trabalhadas.getTime()));
} else {
pstmt_tDBOutput_4.setNull(23, java.sql.Types.TIMESTAMP);
}

                    if(row13.data_batimento != null) {
pstmt_tDBOutput_4.setTimestamp(24 + count_tDBOutput_4, new java.sql.Timestamp(row13.data_batimento.getTime()));
} else {
pstmt_tDBOutput_4.setNull(24 + count_tDBOutput_4, java.sql.Types.TIMESTAMP);
}


                    if(row13.id == null) {
pstmt_tDBOutput_4.setNull(25 + count_tDBOutput_4, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(25 + count_tDBOutput_4, row13.id);
}


    		pstmt_tDBOutput_4.addBatch();
    		nb_line_tDBOutput_4++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_4++;
    		  
    			if ((batchSize_tDBOutput_4 > 0) && (batchSize_tDBOutput_4 <= batchSizeCounter_tDBOutput_4)) {
                try {
						int countSum_tDBOutput_4 = 0;
						    
						for(int countEach_tDBOutput_4: pstmt_tDBOutput_4.executeBatch()) {
							countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
						}
				    	rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
				    		updatedCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
            	    	batchSizeCounter_tDBOutput_4 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_4){
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e_tDBOutput_4.getMessage());
				    	java.sql.SQLException ne_tDBOutput_4 = e_tDBOutput_4.getNextException(),sqle_tDBOutput_4=null;
				    	String errormessage_tDBOutput_4;
						if (ne_tDBOutput_4 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_4 = new java.sql.SQLException(e_tDBOutput_4.getMessage() + "\ncaused by: " + ne_tDBOutput_4.getMessage(), ne_tDBOutput_4.getSQLState(), ne_tDBOutput_4.getErrorCode(), ne_tDBOutput_4);
							errormessage_tDBOutput_4 = sqle_tDBOutput_4.getMessage();
						}else{
							errormessage_tDBOutput_4 = e_tDBOutput_4.getMessage();
						}
				    	
				    		if (ne_tDBOutput_4 != null) {
				    			throw(sqle_tDBOutput_4);
				    		}else{
				            	throw(e_tDBOutput_4);
				            }
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tConvertType_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 process_data_end ] stop
 */

} // End of branch "Update"



	
		} // close loop of lookup 'row7' // G_TM_M_043
	
	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row6"




	
	/**
	 * [tConvertType_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tConvertType_2 end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
      globalMap.put("tConvertType_2_NB_LINE", nb_line_tConvertType_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tConvertType_2", true);
end_Hash.put("tConvertType_2", System.currentTimeMillis());




/**
 * [tConvertType_2 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tConvertType_4 end ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	
      globalMap.put("tConvertType_4_NB_LINE", nb_line_tConvertType_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Insert");
			  	}
			  	
 

ok_Hash.put("tConvertType_4", true);
end_Hash.put("tConvertType_4", System.currentTimeMillis());




/**
 * [tConvertType_4 end ] stop
 */

	
	/**
	 * [tDBOutput_5 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	



	    try {
				int countSum_tDBOutput_5 = 0;
				if (pstmt_tDBOutput_5 != null && batchSizeCounter_tDBOutput_5 > 0) {
						
					for(int countEach_tDBOutput_5: pstmt_tDBOutput_5.executeBatch()) {
						countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
					}
					rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
						
				}
		    	
		    		insertedCount_tDBOutput_5 += countSum_tDBOutput_5;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_5){
globalMap.put("tDBOutput_5_ERROR_MESSAGE",e_tDBOutput_5.getMessage());
	    	java.sql.SQLException ne_tDBOutput_5 = e_tDBOutput_5.getNextException(),sqle_tDBOutput_5=null;
	    	String errormessage_tDBOutput_5;
			if (ne_tDBOutput_5 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_5 = new java.sql.SQLException(e_tDBOutput_5.getMessage() + "\ncaused by: " + ne_tDBOutput_5.getMessage(), ne_tDBOutput_5.getSQLState(), ne_tDBOutput_5.getErrorCode(), ne_tDBOutput_5);
				errormessage_tDBOutput_5 = sqle_tDBOutput_5.getMessage();
			}else{
				errormessage_tDBOutput_5 = e_tDBOutput_5.getMessage();
			}
	    	
	    	int countSum_tDBOutput_5 = 0;
			for(int countEach_tDBOutput_5: e_tDBOutput_5.getUpdateCounts()) {
				countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
			}
			rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
			
	    		insertedCount_tDBOutput_5 += countSum_tDBOutput_5;
	    	
	    	System.err.println(errormessage_tDBOutput_5);
	    	
		}
	    
        if(pstmt_tDBOutput_5 != null) {
        		
            pstmt_tDBOutput_5.close();
            resourceMap.remove("pstmt_tDBOutput_5");
        }
    resourceMap.put("statementClosed_tDBOutput_5", true);

	nb_line_deleted_tDBOutput_5=nb_line_deleted_tDBOutput_5+ deletedCount_tDBOutput_5;
	nb_line_update_tDBOutput_5=nb_line_update_tDBOutput_5 + updatedCount_tDBOutput_5;
	nb_line_inserted_tDBOutput_5=nb_line_inserted_tDBOutput_5 + insertedCount_tDBOutput_5;
	nb_line_rejected_tDBOutput_5=nb_line_rejected_tDBOutput_5 + rejectedCount_tDBOutput_5;
	
        globalMap.put("tDBOutput_5_NB_LINE",nb_line_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_UPDATED",nb_line_update_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_DELETED",nb_line_deleted_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_5);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tDBOutput_5", true);
end_Hash.put("tDBOutput_5", System.currentTimeMillis());




/**
 * [tDBOutput_5 end ] stop
 */







	
	/**
	 * [tConvertType_5 end ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	
      globalMap.put("tConvertType_5_NB_LINE", nb_line_tConvertType_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Update");
			  	}
			  	
 

ok_Hash.put("tConvertType_5", true);
end_Hash.put("tConvertType_5", System.currentTimeMillis());




/**
 * [tConvertType_5 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



	    try {
				int countSum_tDBOutput_4 = 0;
				if (pstmt_tDBOutput_4 != null && batchSizeCounter_tDBOutput_4 > 0) {
						
					for(int countEach_tDBOutput_4: pstmt_tDBOutput_4.executeBatch()) {
						countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
					}
					rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
						
				}
		    	
		    		updatedCount_tDBOutput_4 += countSum_tDBOutput_4;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_4){
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e_tDBOutput_4.getMessage());
	    	java.sql.SQLException ne_tDBOutput_4 = e_tDBOutput_4.getNextException(),sqle_tDBOutput_4=null;
	    	String errormessage_tDBOutput_4;
			if (ne_tDBOutput_4 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_4 = new java.sql.SQLException(e_tDBOutput_4.getMessage() + "\ncaused by: " + ne_tDBOutput_4.getMessage(), ne_tDBOutput_4.getSQLState(), ne_tDBOutput_4.getErrorCode(), ne_tDBOutput_4);
				errormessage_tDBOutput_4 = sqle_tDBOutput_4.getMessage();
			}else{
				errormessage_tDBOutput_4 = e_tDBOutput_4.getMessage();
			}
	    	
	    		if (ne_tDBOutput_4 != null) {
	    			throw(sqle_tDBOutput_4);
	    		}else{
	            	throw(e_tDBOutput_4);
	            }
	    	
		}
	    
        if(pstmt_tDBOutput_4 != null) {
        		
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());




/**
 * [tDBOutput_4 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tConvertType_2 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tConvertType_4 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_5") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_5 = null;
                if ((pstmtToClose_tDBOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_5")) != null) {
                    pstmtToClose_tDBOutput_5.close();
                }
    }
 



/**
 * [tDBOutput_5 finally ] stop
 */







	
	/**
	 * [tConvertType_5 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_5";
	
	

 



/**
 * [tConvertType_5 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_t_ponto");
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_t_ponto");
}

        int updateKeyCount_tDBOutput_3 = 2;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_3 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	


   int batchSize_tDBOutput_3 = 100;
   int batchSizeCounter_tDBOutput_3=0;

int count_tDBOutput_3=0;
	    String update_tDBOutput_3 = "UPDATE \"" + tableName_tDBOutput_3 + "\" SET \"horas_trabalhadas\" = ? WHERE \"data_batimento\" = ? AND \"id\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select \n       data_batimento,\n       id,\n       case when ((Saida_almoco - entrada) + (Saida - retorno_almoco)) < '"
+"00:00' then '00:00'\n       else ((Saida_almoco - entrada) + (Saida - retorno_almoco)) end horas_trabalhadas\n  from (\n"
+"select id, data_batimento,\n       CASE WHEN entrada1 is null and saida1 is not null THEN mem_entrada1\n            WHEN"
+" entrada1 is null and saida1 is null THEN entrada2\n       ELSE entrada1\n        END AS entrada,\n       CASE WHEN said"
+"a1 is null and entrada2 is not null THEN (entrada2 - (mem_entrada2 - mem_saida1))\n            when saida1 is null and e"
+"ntrada2 is null then saida2\n       ELSE saida1\n        END AS Saida_almoco,\n       CASE WHEN entrada2 is null and sai"
+"da1 is not null THEN (saida1 + (mem_entrada2 - mem_saida1))\n            WHEN entrada2 is null and saida1 is null THEN s"
+"aida2\n       ELSE entrada2\n        END AS retorno_almoco,\n       CASE WHEN saida2 is null and entrada2 is not null TH"
+"EN mem_saida2\n            WHEN saida2 is null and entrada2 is null THEN mem_saida2\n       ELSE saida2\n        END AS "
+"Saida\n  from dw_t_ponto dtp\n  where horas_trabalhadas is null\nand \"Motivo\" = 'NORMAL') calc";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row2.data_batimento = null;
							} else {
										
			row2.data_batimento = routines.system.JDBCUtil.getDate(rs_tDBInput_4, 1);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row2.id = null;
							} else {
		                          
            row2.id = rs_tDBInput_4.getInt(2);
            if(rs_tDBInput_4.wasNull()){
                    row2.id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row2.horas_trabalhadas = null;
							} else {
										
			row2.horas_trabalhadas = routines.system.JDBCUtil.getDate(rs_tDBInput_4, 3);
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(row2.horas_trabalhadas != null) {
pstmt_tDBOutput_3.setTimestamp(1, new java.sql.Timestamp(row2.horas_trabalhadas.getTime()));
} else {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.TIMESTAMP);
}

                    if(row2.data_batimento != null) {
pstmt_tDBOutput_3.setTimestamp(2 + count_tDBOutput_3, new java.sql.Timestamp(row2.data_batimento.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2 + count_tDBOutput_3, java.sql.Types.TIMESTAMP);
}


                    if(row2.id == null) {
pstmt_tDBOutput_3.setNull(3 + count_tDBOutput_3, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(3 + count_tDBOutput_3, row2.id);
}


    		pstmt_tDBOutput_3.addBatch();
    		nb_line_tDBOutput_3++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_3++;
    		  
    			if ((batchSize_tDBOutput_3 > 0) && (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {
                try {
						int countSum_tDBOutput_3 = 0;
						    
						for(int countEach_tDBOutput_3: pstmt_tDBOutput_3.executeBatch()) {
							countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
						}
				    	rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
				    		updatedCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
            	    	batchSizeCounter_tDBOutput_3 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_3){
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e_tDBOutput_3.getMessage());
				    	java.sql.SQLException ne_tDBOutput_3 = e_tDBOutput_3.getNextException(),sqle_tDBOutput_3=null;
				    	String errormessage_tDBOutput_3;
						if (ne_tDBOutput_3 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_3 = new java.sql.SQLException(e_tDBOutput_3.getMessage() + "\ncaused by: " + ne_tDBOutput_3.getMessage(), ne_tDBOutput_3.getSQLState(), ne_tDBOutput_3.getErrorCode(), ne_tDBOutput_3);
							errormessage_tDBOutput_3 = sqle_tDBOutput_3.getMessage();
						}else{
							errormessage_tDBOutput_3 = e_tDBOutput_3.getMessage();
						}
				    	
				    	int countSum_tDBOutput_3 = 0;
						for(int countEach_tDBOutput_3: e_tDBOutput_3.getUpdateCounts()) {
							countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
						}
						rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
						
				    		updatedCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
				    	System.err.println(errormessage_tDBOutput_3);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



	    try {
				int countSum_tDBOutput_3 = 0;
				if (pstmt_tDBOutput_3 != null && batchSizeCounter_tDBOutput_3 > 0) {
						
					for(int countEach_tDBOutput_3: pstmt_tDBOutput_3.executeBatch()) {
						countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
					}
					rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
						
				}
		    	
		    		updatedCount_tDBOutput_3 += countSum_tDBOutput_3;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_3){
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e_tDBOutput_3.getMessage());
	    	java.sql.SQLException ne_tDBOutput_3 = e_tDBOutput_3.getNextException(),sqle_tDBOutput_3=null;
	    	String errormessage_tDBOutput_3;
			if (ne_tDBOutput_3 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_3 = new java.sql.SQLException(e_tDBOutput_3.getMessage() + "\ncaused by: " + ne_tDBOutput_3.getMessage(), ne_tDBOutput_3.getSQLState(), ne_tDBOutput_3.getErrorCode(), ne_tDBOutput_3);
				errormessage_tDBOutput_3 = sqle_tDBOutput_3.getMessage();
			}else{
				errormessage_tDBOutput_3 = e_tDBOutput_3.getMessage();
			}
	    	
	    	int countSum_tDBOutput_3 = 0;
			for(int countEach_tDBOutput_3: e_tDBOutput_3.getUpdateCounts()) {
				countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
			}
			rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
			
	    		updatedCount_tDBOutput_3 += countSum_tDBOutput_3;
	    	
	    	System.err.println(errormessage_tDBOutput_3);
	    	
		}
	    
        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tDBOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_6", false);
		start_Hash.put("tDBOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tDBOutput_6 = 0;
		





String dbschema_tDBOutput_6 = null;
	dbschema_tDBOutput_6 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_6 = null;
if(dbschema_tDBOutput_6 == null || dbschema_tDBOutput_6.trim().length() == 0) {
	tableName_tDBOutput_6 = ("dw_t_ponto");
} else {
	tableName_tDBOutput_6 = dbschema_tDBOutput_6 + "\".\"" + ("dw_t_ponto");
}

        int updateKeyCount_tDBOutput_6 = 2;
        if(updateKeyCount_tDBOutput_6 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_6 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_6 = 0;
int nb_line_update_tDBOutput_6 = 0;
int nb_line_inserted_tDBOutput_6 = 0;
int nb_line_deleted_tDBOutput_6 = 0;
int nb_line_rejected_tDBOutput_6 = 0;

int deletedCount_tDBOutput_6=0;
int updatedCount_tDBOutput_6=0;
int insertedCount_tDBOutput_6=0;
int rowsToCommitCount_tDBOutput_6=0;
int rejectedCount_tDBOutput_6=0;

boolean whetherReject_tDBOutput_6 = false;

java.sql.Connection conn_tDBOutput_6 = null;
String dbUser_tDBOutput_6 = null;

	conn_tDBOutput_6 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	


   int batchSize_tDBOutput_6 = 100;
   int batchSizeCounter_tDBOutput_6=0;

int count_tDBOutput_6=0;
	    String update_tDBOutput_6 = "UPDATE \"" + tableName_tDBOutput_6 + "\" SET \"horas_trabalhadas\" = ? WHERE \"data_batimento\" = ? AND \"id\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_6 = conn_tDBOutput_6.prepareStatement(update_tDBOutput_6);
	    resourceMap.put("pstmt_tDBOutput_6", pstmt_tDBOutput_6);
	    

 



/**
 * [tDBOutput_6 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
    
	
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "select data_batimento, id,\n       CASE WHEN saida2 is null and entrada2 is null THEN (saida1 - entrada1)\n       ELSE "
+"'00:00'\n       end horas_trabalhadas\n  from dw_t_ponto dtp\n  where horas_trabalhadas is null\nand \"Motivo\" = 'NORMA"
+"L'";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row3.data_batimento = null;
							} else {
										
			row3.data_batimento = routines.system.JDBCUtil.getDate(rs_tDBInput_2, 1);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row3.id = null;
							} else {
		                          
            row3.id = rs_tDBInput_2.getInt(2);
            if(rs_tDBInput_2.wasNull()){
                    row3.id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row3.horas_trabalhadas = null;
							} else {
										
			row3.horas_trabalhadas = routines.system.JDBCUtil.getDate(rs_tDBInput_2, 3);
		                    }
					


 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tDBOutput_6 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					



        whetherReject_tDBOutput_6 = false;
                    if(row3.horas_trabalhadas != null) {
pstmt_tDBOutput_6.setTimestamp(1, new java.sql.Timestamp(row3.horas_trabalhadas.getTime()));
} else {
pstmt_tDBOutput_6.setNull(1, java.sql.Types.TIMESTAMP);
}

                    if(row3.data_batimento != null) {
pstmt_tDBOutput_6.setTimestamp(2 + count_tDBOutput_6, new java.sql.Timestamp(row3.data_batimento.getTime()));
} else {
pstmt_tDBOutput_6.setNull(2 + count_tDBOutput_6, java.sql.Types.TIMESTAMP);
}


                    if(row3.id == null) {
pstmt_tDBOutput_6.setNull(3 + count_tDBOutput_6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_6.setInt(3 + count_tDBOutput_6, row3.id);
}


    		pstmt_tDBOutput_6.addBatch();
    		nb_line_tDBOutput_6++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_6++;
    		  
    			if ((batchSize_tDBOutput_6 > 0) && (batchSize_tDBOutput_6 <= batchSizeCounter_tDBOutput_6)) {
                try {
						int countSum_tDBOutput_6 = 0;
						    
						for(int countEach_tDBOutput_6: pstmt_tDBOutput_6.executeBatch()) {
							countSum_tDBOutput_6 += (countEach_tDBOutput_6 < 0 ? 0 : countEach_tDBOutput_6);
						}
				    	rowsToCommitCount_tDBOutput_6 += countSum_tDBOutput_6;
				    	
				    		updatedCount_tDBOutput_6 += countSum_tDBOutput_6;
				    	
            	    	batchSizeCounter_tDBOutput_6 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_6){
globalMap.put("tDBOutput_6_ERROR_MESSAGE",e_tDBOutput_6.getMessage());
				    	java.sql.SQLException ne_tDBOutput_6 = e_tDBOutput_6.getNextException(),sqle_tDBOutput_6=null;
				    	String errormessage_tDBOutput_6;
						if (ne_tDBOutput_6 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_6 = new java.sql.SQLException(e_tDBOutput_6.getMessage() + "\ncaused by: " + ne_tDBOutput_6.getMessage(), ne_tDBOutput_6.getSQLState(), ne_tDBOutput_6.getErrorCode(), ne_tDBOutput_6);
							errormessage_tDBOutput_6 = sqle_tDBOutput_6.getMessage();
						}else{
							errormessage_tDBOutput_6 = e_tDBOutput_6.getMessage();
						}
				    	
				    	int countSum_tDBOutput_6 = 0;
						for(int countEach_tDBOutput_6: e_tDBOutput_6.getUpdateCounts()) {
							countSum_tDBOutput_6 += (countEach_tDBOutput_6 < 0 ? 0 : countEach_tDBOutput_6);
						}
						rowsToCommitCount_tDBOutput_6 += countSum_tDBOutput_6;
						
				    		updatedCount_tDBOutput_6 += countSum_tDBOutput_6;
				    	
				    	System.err.println(errormessage_tDBOutput_6);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_6++;

/**
 * [tDBOutput_6 main ] stop
 */
	
	/**
	 * [tDBOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	

 



/**
 * [tDBOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	

 



/**
 * [tDBOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);
 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tDBOutput_6 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	



	    try {
				int countSum_tDBOutput_6 = 0;
				if (pstmt_tDBOutput_6 != null && batchSizeCounter_tDBOutput_6 > 0) {
						
					for(int countEach_tDBOutput_6: pstmt_tDBOutput_6.executeBatch()) {
						countSum_tDBOutput_6 += (countEach_tDBOutput_6 < 0 ? 0 : countEach_tDBOutput_6);
					}
					rowsToCommitCount_tDBOutput_6 += countSum_tDBOutput_6;
						
				}
		    	
		    		updatedCount_tDBOutput_6 += countSum_tDBOutput_6;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_6){
globalMap.put("tDBOutput_6_ERROR_MESSAGE",e_tDBOutput_6.getMessage());
	    	java.sql.SQLException ne_tDBOutput_6 = e_tDBOutput_6.getNextException(),sqle_tDBOutput_6=null;
	    	String errormessage_tDBOutput_6;
			if (ne_tDBOutput_6 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_6 = new java.sql.SQLException(e_tDBOutput_6.getMessage() + "\ncaused by: " + ne_tDBOutput_6.getMessage(), ne_tDBOutput_6.getSQLState(), ne_tDBOutput_6.getErrorCode(), ne_tDBOutput_6);
				errormessage_tDBOutput_6 = sqle_tDBOutput_6.getMessage();
			}else{
				errormessage_tDBOutput_6 = e_tDBOutput_6.getMessage();
			}
	    	
	    	int countSum_tDBOutput_6 = 0;
			for(int countEach_tDBOutput_6: e_tDBOutput_6.getUpdateCounts()) {
				countSum_tDBOutput_6 += (countEach_tDBOutput_6 < 0 ? 0 : countEach_tDBOutput_6);
			}
			rowsToCommitCount_tDBOutput_6 += countSum_tDBOutput_6;
			
	    		updatedCount_tDBOutput_6 += countSum_tDBOutput_6;
	    	
	    	System.err.println(errormessage_tDBOutput_6);
	    	
		}
	    
        if(pstmt_tDBOutput_6 != null) {
        		
            pstmt_tDBOutput_6.close();
            resourceMap.remove("pstmt_tDBOutput_6");
        }
    resourceMap.put("statementClosed_tDBOutput_6", true);

	nb_line_deleted_tDBOutput_6=nb_line_deleted_tDBOutput_6+ deletedCount_tDBOutput_6;
	nb_line_update_tDBOutput_6=nb_line_update_tDBOutput_6 + updatedCount_tDBOutput_6;
	nb_line_inserted_tDBOutput_6=nb_line_inserted_tDBOutput_6 + insertedCount_tDBOutput_6;
	nb_line_rejected_tDBOutput_6=nb_line_rejected_tDBOutput_6 + rejectedCount_tDBOutput_6;
	
        globalMap.put("tDBOutput_6_NB_LINE",nb_line_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_UPDATED",nb_line_update_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_DELETED",nb_line_deleted_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_6);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tDBOutput_6", true);
end_Hash.put("tDBOutput_6", System.currentTimeMillis());




/**
 * [tDBOutput_6 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_6") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_6 = null;
                if ((pstmtToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_6")) != null) {
                    pstmtToClose_tDBOutput_6.close();
                }
    }
 



/**
 * [tDBOutput_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row80Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row80Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row81.nm_programa = next_tHashInput_3.nm_programa;
	row81.data_inicio_execucao = next_tHashInput_3.data_inicio_execucao;
	row81.data_termino_execucao = next_tHashInput_3.data_termino_execucao;
	row81.mensagem = next_tHashInput_3.mensagem;
	row81.uuid = next_tHashInput_3.uuid;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row81.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row81.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String data_batimento;

				public String getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.data_batimento == null) ? 0 : this.data_batimento.hashCode());
					
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.data_batimento == null) {
							if (other.data_batimento != null)
								return false;
						
						} else if (!this.data_batimento.equals(other.data_batimento))
						
							return false;
					
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.data_batimento = this.data_batimento;
	            other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.afast_motivo = this.afast_motivo;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.Status = this.Status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            other.entrada1 = this.entrada1;
	            other.saida1 = this.saida1;
	            other.entrada2 = this.entrada2;
	            other.saida2 = this.saida2;
	            other.Motivo = this.Motivo;
	            other.mem_entrada1 = this.mem_entrada1;
	            other.mem_saida1 = this.mem_saida1;
	            other.mem_entrada2 = this.mem_entrada2;
	            other.mem_saida2 = this.mem_saida2;
	            other.horas_trabalhadas = this.horas_trabalhadas;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.data_batimento = this.data_batimento;
	            	other.id = this.id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readString(dis);
					
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.nome = readString(dis,ois);
					
						this.admissao = readDate(dis,ois);
					
						this.demissao = readDate(dis,ois);
					
						this.motivo_demissao = readString(dis,ois);
					
						this.afast_motivo = readString(dis,ois);
					
						this.nascimento = readDate(dis,ois);
					
						this.sexo_masculino = readInteger(dis,ois);
					
						this.estado_civil_id = readInteger(dis,ois);
					
						this.Status = readInteger(dis,ois);
					
						this.centro_custos = readString(dis,ois);
					
						this.departamento = readString(dis,ois);
					
						this.funcao = readString(dis,ois);
					
						this.empresa = readString(dis,ois);
					
						this.entrada1 = readDate(dis,ois);
					
						this.saida1 = readDate(dis,ois);
					
						this.entrada2 = readDate(dis,ois);
					
						this.saida2 = readDate(dis,ois);
					
						this.Motivo = readString(dis,ois);
					
						this.mem_entrada1 = readDate(dis,ois);
					
						this.mem_saida1 = readDate(dis,ois);
					
						this.mem_entrada2 = readDate(dis,ois);
					
						this.mem_saida2 = readDate(dis,ois);
					
						this.horas_trabalhadas = readDate(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.nome = readString(dis,objectIn);
					
						this.admissao = readDate(dis,objectIn);
					
						this.demissao = readDate(dis,objectIn);
					
						this.motivo_demissao = readString(dis,objectIn);
					
						this.afast_motivo = readString(dis,objectIn);
					
						this.nascimento = readDate(dis,objectIn);
					
						this.sexo_masculino = readInteger(dis,objectIn);
					
						this.estado_civil_id = readInteger(dis,objectIn);
					
						this.Status = readInteger(dis,objectIn);
					
						this.centro_custos = readString(dis,objectIn);
					
						this.departamento = readString(dis,objectIn);
					
						this.funcao = readString(dis,objectIn);
					
						this.empresa = readString(dis,objectIn);
					
						this.entrada1 = readDate(dis,objectIn);
					
						this.saida1 = readDate(dis,objectIn);
					
						this.entrada2 = readDate(dis,objectIn);
					
						this.saida2 = readDate(dis,objectIn);
					
						this.Motivo = readString(dis,objectIn);
					
						this.mem_entrada1 = readDate(dis,objectIn);
					
						this.mem_saida1 = readDate(dis,objectIn);
					
						this.mem_entrada2 = readDate(dis,objectIn);
					
						this.mem_saida2 = readDate(dis,objectIn);
					
						this.horas_trabalhadas = readDate(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.nome, dos, oos);
					
						writeDate(this.admissao, dos, oos);
					
						writeDate(this.demissao, dos, oos);
					
						writeString(this.motivo_demissao, dos, oos);
					
						writeString(this.afast_motivo, dos, oos);
					
						writeDate(this.nascimento, dos, oos);
					
					writeInteger(this.sexo_masculino, dos, oos);
					
					writeInteger(this.estado_civil_id, dos, oos);
					
					writeInteger(this.Status, dos, oos);
					
						writeString(this.centro_custos, dos, oos);
					
						writeString(this.departamento, dos, oos);
					
						writeString(this.funcao, dos, oos);
					
						writeString(this.empresa, dos, oos);
					
						writeDate(this.entrada1, dos, oos);
					
						writeDate(this.saida1, dos, oos);
					
						writeDate(this.entrada2, dos, oos);
					
						writeDate(this.saida2, dos, oos);
					
						writeString(this.Motivo, dos, oos);
					
						writeDate(this.mem_entrada1, dos, oos);
					
						writeDate(this.mem_saida1, dos, oos);
					
						writeDate(this.mem_entrada2, dos, oos);
					
						writeDate(this.mem_saida2, dos, oos);
					
						writeDate(this.horas_trabalhadas, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.nome, dos, objectOut);
					
						writeDate(this.admissao, dos, objectOut);
					
						writeDate(this.demissao, dos, objectOut);
					
						writeString(this.motivo_demissao, dos, objectOut);
					
						writeString(this.afast_motivo, dos, objectOut);
					
						writeDate(this.nascimento, dos, objectOut);
					
					writeInteger(this.sexo_masculino, dos, objectOut);
					
					writeInteger(this.estado_civil_id, dos, objectOut);
					
					writeInteger(this.Status, dos, objectOut);
					
						writeString(this.centro_custos, dos, objectOut);
					
						writeString(this.departamento, dos, objectOut);
					
						writeString(this.funcao, dos, objectOut);
					
						writeString(this.empresa, dos, objectOut);
					
						writeDate(this.entrada1, dos, objectOut);
					
						writeDate(this.saida1, dos, objectOut);
					
						writeDate(this.entrada2, dos, objectOut);
					
						writeDate(this.saida2, dos, objectOut);
					
						writeString(this.Motivo, dos, objectOut);
					
						writeDate(this.mem_entrada1, dos, objectOut);
					
						writeDate(this.mem_saida1, dos, objectOut);
					
						writeDate(this.mem_entrada2, dos, objectOut);
					
						writeDate(this.mem_saida2, dos, objectOut);
					
						writeDate(this.horas_trabalhadas, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+data_batimento);
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.data_batimento, other.data_batimento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date data_batimento;

				public java.util.Date getData_batimento () {
					return this.data_batimento;
				}

				public Boolean data_batimentoIsNullable(){
				    return true;
				}
				public Boolean data_batimentoIsKey(){
				    return false;
				}
				public Integer data_batimentoLength(){
				    return null;
				}
				public Integer data_batimentoPrecision(){
				    return null;
				}
				public String data_batimentoDefault(){
				
					return null;
				
				}
				public String data_batimentoComment(){
				
				    return "";
				
				}
				public String data_batimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String data_batimentoOriginalDbColumnName(){
				
					return "data_batimento";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public String afast_motivo;

				public String getAfast_motivo () {
					return this.afast_motivo;
				}

				public Boolean afast_motivoIsNullable(){
				    return true;
				}
				public Boolean afast_motivoIsKey(){
				    return false;
				}
				public Integer afast_motivoLength(){
				    return null;
				}
				public Integer afast_motivoPrecision(){
				    return null;
				}
				public String afast_motivoDefault(){
				
					return null;
				
				}
				public String afast_motivoComment(){
				
				    return "";
				
				}
				public String afast_motivoPattern(){
				
					return "";
				
				}
				public String afast_motivoOriginalDbColumnName(){
				
					return "afast_motivo";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer Status;

				public Integer getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				
			    public java.util.Date entrada1;

				public java.util.Date getEntrada1 () {
					return this.entrada1;
				}

				public Boolean entrada1IsNullable(){
				    return true;
				}
				public Boolean entrada1IsKey(){
				    return false;
				}
				public Integer entrada1Length(){
				    return null;
				}
				public Integer entrada1Precision(){
				    return null;
				}
				public String entrada1Default(){
				
					return null;
				
				}
				public String entrada1Comment(){
				
				    return "";
				
				}
				public String entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada1OriginalDbColumnName(){
				
					return "entrada1";
				
				}

				
			    public java.util.Date saida1;

				public java.util.Date getSaida1 () {
					return this.saida1;
				}

				public Boolean saida1IsNullable(){
				    return true;
				}
				public Boolean saida1IsKey(){
				    return false;
				}
				public Integer saida1Length(){
				    return null;
				}
				public Integer saida1Precision(){
				    return null;
				}
				public String saida1Default(){
				
					return null;
				
				}
				public String saida1Comment(){
				
				    return "";
				
				}
				public String saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String saida1OriginalDbColumnName(){
				
					return "saida1";
				
				}

				
			    public java.util.Date entrada2;

				public java.util.Date getEntrada2 () {
					return this.entrada2;
				}

				public Boolean entrada2IsNullable(){
				    return true;
				}
				public Boolean entrada2IsKey(){
				    return false;
				}
				public Integer entrada2Length(){
				    return null;
				}
				public Integer entrada2Precision(){
				    return null;
				}
				public String entrada2Default(){
				
					return null;
				
				}
				public String entrada2Comment(){
				
				    return "";
				
				}
				public String entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String entrada2OriginalDbColumnName(){
				
					return "entrada2";
				
				}

				
			    public java.util.Date saida2;

				public java.util.Date getSaida2 () {
					return this.saida2;
				}

				public Boolean saida2IsNullable(){
				    return true;
				}
				public Boolean saida2IsKey(){
				    return false;
				}
				public Integer saida2Length(){
				    return null;
				}
				public Integer saida2Precision(){
				    return null;
				}
				public String saida2Default(){
				
					return null;
				
				}
				public String saida2Comment(){
				
				    return "";
				
				}
				public String saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String saida2OriginalDbColumnName(){
				
					return "saida2";
				
				}

				
			    public String Motivo;

				public String getMotivo () {
					return this.Motivo;
				}

				public Boolean MotivoIsNullable(){
				    return true;
				}
				public Boolean MotivoIsKey(){
				    return false;
				}
				public Integer MotivoLength(){
				    return null;
				}
				public Integer MotivoPrecision(){
				    return null;
				}
				public String MotivoDefault(){
				
					return null;
				
				}
				public String MotivoComment(){
				
				    return "";
				
				}
				public String MotivoPattern(){
				
					return "";
				
				}
				public String MotivoOriginalDbColumnName(){
				
					return "Motivo";
				
				}

				
			    public java.util.Date mem_entrada1;

				public java.util.Date getMem_entrada1 () {
					return this.mem_entrada1;
				}

				public Boolean mem_entrada1IsNullable(){
				    return true;
				}
				public Boolean mem_entrada1IsKey(){
				    return false;
				}
				public Integer mem_entrada1Length(){
				    return null;
				}
				public Integer mem_entrada1Precision(){
				    return null;
				}
				public String mem_entrada1Default(){
				
					return null;
				
				}
				public String mem_entrada1Comment(){
				
				    return "";
				
				}
				public String mem_entrada1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada1OriginalDbColumnName(){
				
					return "mem_entrada1";
				
				}

				
			    public java.util.Date mem_saida1;

				public java.util.Date getMem_saida1 () {
					return this.mem_saida1;
				}

				public Boolean mem_saida1IsNullable(){
				    return true;
				}
				public Boolean mem_saida1IsKey(){
				    return false;
				}
				public Integer mem_saida1Length(){
				    return null;
				}
				public Integer mem_saida1Precision(){
				    return null;
				}
				public String mem_saida1Default(){
				
					return null;
				
				}
				public String mem_saida1Comment(){
				
				    return "";
				
				}
				public String mem_saida1Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida1OriginalDbColumnName(){
				
					return "mem_saida1";
				
				}

				
			    public java.util.Date mem_entrada2;

				public java.util.Date getMem_entrada2 () {
					return this.mem_entrada2;
				}

				public Boolean mem_entrada2IsNullable(){
				    return true;
				}
				public Boolean mem_entrada2IsKey(){
				    return false;
				}
				public Integer mem_entrada2Length(){
				    return null;
				}
				public Integer mem_entrada2Precision(){
				    return null;
				}
				public String mem_entrada2Default(){
				
					return null;
				
				}
				public String mem_entrada2Comment(){
				
				    return "";
				
				}
				public String mem_entrada2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_entrada2OriginalDbColumnName(){
				
					return "mem_entrada2";
				
				}

				
			    public java.util.Date mem_saida2;

				public java.util.Date getMem_saida2 () {
					return this.mem_saida2;
				}

				public Boolean mem_saida2IsNullable(){
				    return true;
				}
				public Boolean mem_saida2IsKey(){
				    return false;
				}
				public Integer mem_saida2Length(){
				    return null;
				}
				public Integer mem_saida2Precision(){
				    return null;
				}
				public String mem_saida2Default(){
				
					return null;
				
				}
				public String mem_saida2Comment(){
				
				    return "";
				
				}
				public String mem_saida2Pattern(){
				
					return "HH:mm";
				
				}
				public String mem_saida2OriginalDbColumnName(){
				
					return "mem_saida2";
				
				}

				
			    public java.util.Date horas_trabalhadas;

				public java.util.Date getHoras_trabalhadas () {
					return this.horas_trabalhadas;
				}

				public Boolean horas_trabalhadasIsNullable(){
				    return true;
				}
				public Boolean horas_trabalhadasIsKey(){
				    return false;
				}
				public Integer horas_trabalhadasLength(){
				    return null;
				}
				public Integer horas_trabalhadasPrecision(){
				    return null;
				}
				public String horas_trabalhadasDefault(){
				
					return null;
				
				}
				public String horas_trabalhadasComment(){
				
				    return "";
				
				}
				public String horas_trabalhadasPattern(){
				
					return "HH:mm";
				
				}
				public String horas_trabalhadasOriginalDbColumnName(){
				
					return "horas_trabalhadas";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.data_batimento = readDate(dis);
					
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.afast_motivo = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.Status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
					this.entrada1 = readDate(dis);
					
					this.saida1 = readDate(dis);
					
					this.entrada2 = readDate(dis);
					
					this.saida2 = readDate(dis);
					
					this.Motivo = readString(dis);
					
					this.mem_entrada1 = readDate(dis);
					
					this.mem_saida1 = readDate(dis);
					
					this.mem_entrada2 = readDate(dis);
					
					this.mem_saida2 = readDate(dis);
					
					this.horas_trabalhadas = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.data_batimento,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// String
				
						writeString(this.afast_motivo,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.Status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
					// java.util.Date
				
						writeDate(this.entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.saida1,dos);
					
					// java.util.Date
				
						writeDate(this.entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.saida2,dos);
					
					// String
				
						writeString(this.Motivo,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida1,dos);
					
					// java.util.Date
				
						writeDate(this.mem_entrada2,dos);
					
					// java.util.Date
				
						writeDate(this.mem_saida2,dos);
					
					// java.util.Date
				
						writeDate(this.horas_trabalhadas,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_batimento="+String.valueOf(data_batimento));
		sb.append(",id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",afast_motivo="+afast_motivo);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",Status="+String.valueOf(Status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
		sb.append(",entrada1="+String.valueOf(entrada1));
		sb.append(",saida1="+String.valueOf(saida1));
		sb.append(",entrada2="+String.valueOf(entrada2));
		sb.append(",saida2="+String.valueOf(saida2));
		sb.append(",Motivo="+Motivo);
		sb.append(",mem_entrada1="+String.valueOf(mem_entrada1));
		sb.append(",mem_saida1="+String.valueOf(mem_saida1));
		sb.append(",mem_entrada2="+String.valueOf(mem_entrada2));
		sb.append(",mem_saida2="+String.valueOf(mem_saida2));
		sb.append(",horas_trabalhadas="+String.valueOf(horas_trabalhadas));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();
row7Struct row7 = new row7Struct();





	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tConvertType_3 - inputs:(row10) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_1 - inputs:(row6,row7) outputs:(Insert,Update)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tConvertType_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_3", false);
		start_Hash.put("tConvertType_3", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tConvertType_3 = 0;
		
	int nb_line_tConvertType_3 = 0;  
 



/**
 * [tConvertType_3 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row8Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row8Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row10.data_batimento = next_tHashInput_2.data_batimento;
	row10.id = next_tHashInput_2.id;
	row10.nome = next_tHashInput_2.nome;
	row10.admissao = next_tHashInput_2.admissao;
	row10.demissao = next_tHashInput_2.demissao;
	row10.motivo_demissao = next_tHashInput_2.motivo_demissao;
	row10.afast_motivo = next_tHashInput_2.afast_motivo;
	row10.nascimento = next_tHashInput_2.nascimento;
	row10.sexo_masculino = next_tHashInput_2.sexo_masculino;
	row10.estado_civil_id = next_tHashInput_2.estado_civil_id;
	row10.Status = next_tHashInput_2.Status;
	row10.centro_custos = next_tHashInput_2.centro_custos;
	row10.departamento = next_tHashInput_2.departamento;
	row10.funcao = next_tHashInput_2.funcao;
	row10.empresa = next_tHashInput_2.empresa;
	row10.entrada1 = next_tHashInput_2.entrada1;
	row10.saida1 = next_tHashInput_2.saida1;
	row10.entrada2 = next_tHashInput_2.entrada2;
	row10.saida2 = next_tHashInput_2.saida2;
	row10.Motivo = next_tHashInput_2.Motivo;
	row10.mem_entrada1 = next_tHashInput_2.mem_entrada1;
	row10.mem_saida1 = next_tHashInput_2.mem_saida1;
	row10.mem_entrada2 = next_tHashInput_2.mem_entrada2;
	row10.mem_saida2 = next_tHashInput_2.mem_saida2;
	row10.horas_trabalhadas = next_tHashInput_2.horas_trabalhadas;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_3 main ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


  row7 = new row7Struct();
  boolean bHasError_tConvertType_3 = false;             
          try {
              row7.data_batimento=TypeConvert.Date2String(row10.data_batimento, "yyyy-MM-dd");
        	            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.id=TypeConvert.Integer2Integer(row10.id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.nome=TypeConvert.String2String(row10.nome);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.admissao=TypeConvert.Date2Date(row10.admissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.demissao=TypeConvert.Date2Date(row10.demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.motivo_demissao=TypeConvert.String2String(row10.motivo_demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.afast_motivo=TypeConvert.String2String(row10.afast_motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.nascimento=TypeConvert.Date2Date(row10.nascimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.sexo_masculino=TypeConvert.Integer2Integer(row10.sexo_masculino);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.estado_civil_id=TypeConvert.Integer2Integer(row10.estado_civil_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.Status=TypeConvert.Integer2Integer(row10.Status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.centro_custos=TypeConvert.String2String(row10.centro_custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.departamento=TypeConvert.String2String(row10.departamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.funcao=TypeConvert.String2String(row10.funcao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.empresa=TypeConvert.String2String(row10.empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.entrada1=TypeConvert.Date2Date(row10.entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.saida1=TypeConvert.Date2Date(row10.saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.entrada2=TypeConvert.Date2Date(row10.entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.saida2=TypeConvert.Date2Date(row10.saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.Motivo=TypeConvert.String2String(row10.Motivo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.mem_entrada1=TypeConvert.Date2Date(row10.mem_entrada1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.mem_saida1=TypeConvert.Date2Date(row10.mem_saida1);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.mem_entrada2=TypeConvert.Date2Date(row10.mem_entrada2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.mem_saida2=TypeConvert.Date2Date(row10.mem_saida2);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row7.horas_trabalhadas=TypeConvert.Date2Date(row10.horas_trabalhadas);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_3) {row7 = null;}

  nb_line_tConvertType_3 ++ ;

 


	tos_count_tConvertType_3++;

/**
 * [tConvertType_3 main ] stop
 */
	
	/**
	 * [tConvertType_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.data_batimento = row7.data_batimento;
				
				row7_HashRow.id = row7.id;
				
				row7_HashRow.nome = row7.nome;
				
				row7_HashRow.admissao = row7.admissao;
				
				row7_HashRow.demissao = row7.demissao;
				
				row7_HashRow.motivo_demissao = row7.motivo_demissao;
				
				row7_HashRow.afast_motivo = row7.afast_motivo;
				
				row7_HashRow.nascimento = row7.nascimento;
				
				row7_HashRow.sexo_masculino = row7.sexo_masculino;
				
				row7_HashRow.estado_civil_id = row7.estado_civil_id;
				
				row7_HashRow.Status = row7.Status;
				
				row7_HashRow.centro_custos = row7.centro_custos;
				
				row7_HashRow.departamento = row7.departamento;
				
				row7_HashRow.funcao = row7.funcao;
				
				row7_HashRow.empresa = row7.empresa;
				
				row7_HashRow.entrada1 = row7.entrada1;
				
				row7_HashRow.saida1 = row7.saida1;
				
				row7_HashRow.entrada2 = row7.entrada2;
				
				row7_HashRow.saida2 = row7.saida2;
				
				row7_HashRow.Motivo = row7.Motivo;
				
				row7_HashRow.mem_entrada1 = row7.mem_entrada1;
				
				row7_HashRow.mem_saida1 = row7.mem_saida1;
				
				row7_HashRow.mem_entrada2 = row7.mem_entrada2;
				
				row7_HashRow.mem_saida2 = row7.mem_saida2;
				
				row7_HashRow.horas_trabalhadas = row7.horas_trabalhadas;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */

} // End of branch "row7"




	
	/**
	 * [tConvertType_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tConvertType_3 end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
      globalMap.put("tConvertType_3_NB_LINE", nb_line_tConvertType_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tConvertType_3", true);
end_Hash.put("tConvertType_3", System.currentTimeMillis());




/**
 * [tConvertType_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tConvertType_3 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfinsert_logStruct implements routines.system.IPersistableRow<copyOfinsert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfinsert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return "";
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return "";
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return "";
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return "";
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return "";
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return "";
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return "";
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return "";
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return "";
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return "";
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();
row4Struct row4 = new row4Struct();
copyOfinsert_logStruct copyOfinsert_log = new copyOfinsert_logStruct();




	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tRowGenerator_2 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row5.type = lcm.getType();
		row5.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row5.priority = lcm.getPriority();
		row5.message = lcm.getMessage();
		row5.code = lcm.getCode();
		
		row5.moment = java.util.Calendar.getInstance().getTime();
	
    	row5.pid = pid;
		row5.root_pid = rootPid;
		row5.father_pid = fatherPid;
	
    	row5.project = projectName;
    	row5.job = jobName;
    	row5.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


    	            
            globalMap.put("row5.moment", row5.moment);
    	            
            globalMap.put("row5.pid", row5.pid);
    	            
            globalMap.put("row5.root_pid", row5.root_pid);
    	            
            globalMap.put("row5.father_pid", row5.father_pid);
    	            
            globalMap.put("row5.project", row5.project);
    	            
            globalMap.put("row5.job", row5.job);
    	            
            globalMap.put("row5.context", row5.context);
    	            
            globalMap.put("row5.priority", row5.priority);
    	            
            globalMap.put("row5.type", row5.type);
    	            
            globalMap.put("row5.origin", row5.origin);
    	            
            globalMap.put("row5.message", row5.message);
    	            
            globalMap.put("row5.code", row5.code);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tRowGenerator_2++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("copyOfinsert_log", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tRowGenerator_2);
					//Thread.sleep(1000);
				}				
			



	
	/**
	 * [tDBOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_7", false);
		start_Hash.put("tDBOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfinsert_log");
					}
				
		int tos_count_tDBOutput_7 = 0;
		





String dbschema_tDBOutput_7 = null;
	dbschema_tDBOutput_7 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_7 = null;
if(dbschema_tDBOutput_7 == null || dbschema_tDBOutput_7.trim().length() == 0) {
	tableName_tDBOutput_7 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_7 = dbschema_tDBOutput_7 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_7 = 0;
int nb_line_update_tDBOutput_7 = 0;
int nb_line_inserted_tDBOutput_7 = 0;
int nb_line_deleted_tDBOutput_7 = 0;
int nb_line_rejected_tDBOutput_7 = 0;

int deletedCount_tDBOutput_7=0;
int updatedCount_tDBOutput_7=0;
int insertedCount_tDBOutput_7=0;
int rowsToCommitCount_tDBOutput_7=0;
int rejectedCount_tDBOutput_7=0;

boolean whetherReject_tDBOutput_7 = false;

java.sql.Connection conn_tDBOutput_7 = null;
String dbUser_tDBOutput_7 = null;

	conn_tDBOutput_7 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_7=0;
        java.lang.StringBuilder sb_tDBOutput_7 = new java.lang.StringBuilder();
        sb_tDBOutput_7.append("INSERT INTO \"").append(tableName_tDBOutput_7).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_7 = sb_tDBOutput_7.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_7 = conn_tDBOutput_7.prepareStatement(insert_tDBOutput_7);
	    resourceMap.put("pstmt_tDBOutput_7", pstmt_tDBOutput_7);
	    

 



/**
 * [tDBOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfinsert_logStruct copyOfinsert_log_tmp = new copyOfinsert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tRowGenerator_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_2", false);
		start_Hash.put("tRowGenerator_2", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_2";
	
	
		int tos_count_tRowGenerator_2 = 0;
		


int nb_line_tRowGenerator_2 = 0;
int nb_max_row_tRowGenerator_2 = 1;


class tRowGenerator_2Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_2Randomizer randtRowGenerator_2 = new tRowGenerator_2Randomizer();
	
	for (int itRowGenerator_2=0; itRowGenerator_2<nb_max_row_tRowGenerator_2 ;itRowGenerator_2++) {
		row4.datainicio = randtRowGenerator_2.getRandomdatainicio();
		nb_line_tRowGenerator_2++;
		

 



/**
 * [tRowGenerator_2 begin ] stop
 */
	
	/**
	 * [tRowGenerator_2 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_2";
	
	

 


	tos_count_tRowGenerator_2++;

/**
 * [tRowGenerator_2 main ] stop
 */
	
	/**
	 * [tRowGenerator_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_2";
	
	

 



/**
 * [tRowGenerator_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

copyOfinsert_log = null;


// # Output table : 'copyOfinsert_log'
copyOfinsert_log_tmp.nm_programa = context.programa;
copyOfinsert_log_tmp.data_inicio_execucao = row4.datainicio ;
copyOfinsert_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
copyOfinsert_log_tmp.mensagem = ((String)globalMap.get("row5.message"));
copyOfinsert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
copyOfinsert_log_tmp.versao = context.versao;
copyOfinsert_log = copyOfinsert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "copyOfinsert_log"
if(copyOfinsert_log != null) { 



	
	/**
	 * [tDBOutput_7 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfinsert_log"
						
						);
					}
					



        whetherReject_tDBOutput_7 = false;
                    if(copyOfinsert_log.nm_programa == null) {
pstmt_tDBOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(1, copyOfinsert_log.nm_programa);
}

                    if(copyOfinsert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_7.setTimestamp(2, new java.sql.Timestamp(copyOfinsert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_7.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(copyOfinsert_log.data_termino_execucao != null) {
pstmt_tDBOutput_7.setTimestamp(3, new java.sql.Timestamp(copyOfinsert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_7.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(copyOfinsert_log.mensagem == null) {
pstmt_tDBOutput_7.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(4, copyOfinsert_log.mensagem);
}

                    if(copyOfinsert_log.uuid == null) {
pstmt_tDBOutput_7.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(5, copyOfinsert_log.uuid);
}

                    if(copyOfinsert_log.versao == null) {
pstmt_tDBOutput_7.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_7.setInt(6, copyOfinsert_log.versao);
}

			
            try {
                nb_line_tDBOutput_7++;
				
                int processedCount_tDBOutput_7 = pstmt_tDBOutput_7.executeUpdate();
                insertedCount_tDBOutput_7 += processedCount_tDBOutput_7;
                rowsToCommitCount_tDBOutput_7 += processedCount_tDBOutput_7;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_7_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_7 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_7++;

/**
 * [tDBOutput_7 main ] stop
 */
	
	/**
	 * [tDBOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	

 



/**
 * [tDBOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	

 



/**
 * [tDBOutput_7 process_data_end ] stop
 */

} // End of branch "copyOfinsert_log"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_2";
	
	

 



/**
 * [tRowGenerator_2 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_2 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_2";
	
	

}
globalMap.put("tRowGenerator_2_NB_LINE",nb_line_tRowGenerator_2);

 

ok_Hash.put("tRowGenerator_2", true);
end_Hash.put("tRowGenerator_2", System.currentTimeMillis());




/**
 * [tRowGenerator_2 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tDBOutput_7 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	



        if(pstmt_tDBOutput_7 != null) {
        		
            pstmt_tDBOutput_7.close();
            resourceMap.remove("pstmt_tDBOutput_7");
        }
    resourceMap.put("statementClosed_tDBOutput_7", true);

	nb_line_deleted_tDBOutput_7=nb_line_deleted_tDBOutput_7+ deletedCount_tDBOutput_7;
	nb_line_update_tDBOutput_7=nb_line_update_tDBOutput_7 + updatedCount_tDBOutput_7;
	nb_line_inserted_tDBOutput_7=nb_line_inserted_tDBOutput_7 + insertedCount_tDBOutput_7;
	nb_line_rejected_tDBOutput_7=nb_line_rejected_tDBOutput_7 + rejectedCount_tDBOutput_7;
	
        globalMap.put("tDBOutput_7_NB_LINE",nb_line_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_UPDATED",nb_line_update_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_DELETED",nb_line_deleted_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_7);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfinsert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_7", true);
end_Hash.put("tDBOutput_7", System.currentTimeMillis());




/**
 * [tDBOutput_7 end ] stop
 */






						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tRowGenerator_2);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tRowGenerator_2 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_2";
	
	

 



/**
 * [tRowGenerator_2 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_7") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_7 = null;
                if ((pstmtToClose_tDBOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_7")) != null) {
                    pstmtToClose_tDBOutput_7.close();
                }
    }
 



/**
 * [tDBOutput_7 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final dw_t_ponto dw_t_pontoClass = new dw_t_ponto();

        int exitCode = dw_t_pontoClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = dw_t_ponto.class.getClassLoader().getResourceAsStream("palacio_ferramentas/dw_t_ponto_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = dw_t_ponto.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("PONTEC_HOST", "id_String");
                        if(context.getStringValue("PONTEC_HOST") == null) {
                            context.PONTEC_HOST = null;
                        } else {
                            context.PONTEC_HOST=(String) context.getProperty("PONTEC_HOST");
                        }
                        context.setContextType("PONTEC_DB", "id_String");
                        if(context.getStringValue("PONTEC_DB") == null) {
                            context.PONTEC_DB = null;
                        } else {
                            context.PONTEC_DB=(String) context.getProperty("PONTEC_DB");
                        }
                        context.setContextType("PONTEC_PORT", "id_String");
                        if(context.getStringValue("PONTEC_PORT") == null) {
                            context.PONTEC_PORT = null;
                        } else {
                            context.PONTEC_PORT=(String) context.getProperty("PONTEC_PORT");
                        }
                        context.setContextType("PONTEC_USER", "id_String");
                        if(context.getStringValue("PONTEC_USER") == null) {
                            context.PONTEC_USER = null;
                        } else {
                            context.PONTEC_USER=(String) context.getProperty("PONTEC_USER");
                        }
                        context.setContextType("PONTEC_PASSWORD", "id_String");
                        if(context.getStringValue("PONTEC_PASSWORD") == null) {
                            context.PONTEC_PASSWORD = null;
                        } else {
                            context.PONTEC_PASSWORD=(String) context.getProperty("PONTEC_PASSWORD");
                        }
                        context.setContextType("PONTEC_JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("PONTEC_JDBC_PARAMETERS") == null) {
                            context.PONTEC_JDBC_PARAMETERS = null;
                        } else {
                            context.PONTEC_JDBC_PARAMETERS=(String) context.getProperty("PONTEC_JDBC_PARAMETERS");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("PONTEC_HOST")) {
                context.PONTEC_HOST = (String) parentContextMap.get("PONTEC_HOST");
            }if (parentContextMap.containsKey("PONTEC_DB")) {
                context.PONTEC_DB = (String) parentContextMap.get("PONTEC_DB");
            }if (parentContextMap.containsKey("PONTEC_PORT")) {
                context.PONTEC_PORT = (String) parentContextMap.get("PONTEC_PORT");
            }if (parentContextMap.containsKey("PONTEC_USER")) {
                context.PONTEC_USER = (String) parentContextMap.get("PONTEC_USER");
            }if (parentContextMap.containsKey("PONTEC_PASSWORD")) {
                context.PONTEC_PASSWORD = (String) parentContextMap.get("PONTEC_PASSWORD");
            }if (parentContextMap.containsKey("PONTEC_JDBC_PARAMETERS")) {
                context.PONTEC_JDBC_PARAMETERS = (String) parentContextMap.get("PONTEC_JDBC_PARAMETERS");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tDBInput_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}
try {
errorCode = null;tDBInput_3Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tDBInput_3) {
globalMap.put("tDBInput_3_SUBPROCESS_STATE", -1);

e_tDBInput_3.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : dw_t_ponto");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     819693 characters generated by Talend Open Studio for Big Data 
 *     on the 19 de junho de 2024 13:31:09 BRT
 ************************************************************************************************/