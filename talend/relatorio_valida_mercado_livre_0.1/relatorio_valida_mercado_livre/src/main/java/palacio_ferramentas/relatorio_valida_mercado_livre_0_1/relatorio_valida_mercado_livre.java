// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_valida_mercado_livre_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;
import java.math.BigDecimal;
import java.math.RoundingMode;

	//the import part of tJavaRow_3
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_valida_mercado_livre Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_valida_mercado_livre implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(EMAIL_PASSWORD != null){
				
					this.setProperty("EMAIL_PASSWORD", EMAIL_PASSWORD.toString());
				
			}
			
			if(EMAIL != null){
				
					this.setProperty("EMAIL", EMAIL.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(SMTP != null){
				
					this.setProperty("SMTP", SMTP.toString());
				
			}
			
			if(SMTP_PORT != null){
				
					this.setProperty("SMTP_PORT", SMTP_PORT.toString());
				
			}
			
			if(data_atual != null){
				
					this.setProperty("data_atual", data_atual.toString());
				
			}
			
			if(data_atual1 != null){
				
					this.setProperty("data_atual1", data_atual1.toString());
				
			}
			
			if(Pasta_Rede != null){
				
					this.setProperty("Pasta_Rede", Pasta_Rede.toString());
				
			}
			
			if(Arquivo != null){
				
					this.setProperty("Arquivo", Arquivo.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String EMAIL_PASSWORD;
public String getEMAIL_PASSWORD(){
	return this.EMAIL_PASSWORD;
}
public String EMAIL;
public String getEMAIL(){
	return this.EMAIL;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public String SMTP;
public String getSMTP(){
	return this.SMTP;
}
public String SMTP_PORT;
public String getSMTP_PORT(){
	return this.SMTP_PORT;
}
public String data_atual;
public String getData_atual(){
	return this.data_atual;
}
public String data_atual1;
public String getData_atual1(){
	return this.data_atual1;
}
public String Pasta_Rede;
public String getPasta_Rede(){
	return this.Pasta_Rede;
}
public Integer Arquivo;
public Integer getArquivo(){
	return this.Arquivo;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_valida_mercado_livre";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_valida_mercado_livre.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_valida_mercado_livre.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		
	

	
        String properties_tDBConnection_1 = System.getenv(context.JDBC_PARAMETERS);
        if (properties_tDBConnection_1 == null || properties_tDBConnection_1.trim().length() == 0) {
            properties_tDBConnection_1 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_1.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_1 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_1.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_1 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_1 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_1;
	String dbUser_tDBConnection_1 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.AUTCOM_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
		
			String driverClass_tDBConnection_1 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_1",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tDBConnection_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		


	
            String dbProperties_tDBConnection_2 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_2 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_2 != null && !"".equals(dbProperties_tDBConnection_2.trim())) {
                url_tDBConnection_2 = url_tDBConnection_2 + "?" + dbProperties_tDBConnection_2;
            }
	String dbUser_tDBConnection_2 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_2 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_2 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_2.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_2 = drivers_tDBConnection_2.nextElement();
        if (redShiftDriverNames_tDBConnection_2.contains(d_tDBConnection_2.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_2);
                java.sql.DriverManager.registerDriver(d_tDBConnection_2);
            } catch (java.lang.Exception e_tDBConnection_2) {
globalMap.put("tDBConnection_2_ERROR_MESSAGE",e_tDBConnection_2.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_2 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_2","");

 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk81", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


String foo = "bar";

//context.data_atual = TalendDate.getCurrentDate();

Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


Date dataNova1 = new Date();
DateFormat formato1 = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato1.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data1 = formato1.format(dataNova1.getTime());


System.out.println(data);
context.data_atual = data;
context.data_atual1 = data1;

context.data_execucao = data1;
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();
insert_logStruct insert_log = new insert_logStruct();
row80Struct row80 = new row80Struct();






	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_relatorio_valida_mercado_livre_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row79.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row79.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row80 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row80 = new row80Struct();
                                row80.nm_programa = insert_log.nm_programa;
                                row80.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row80.data_termino_execucao = insert_log.data_termino_execucao;
                                row80.mensagem = insert_log.mensagem;
                                row80.uuid = insert_log.uuid;
                                row80.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row80"
if(row80 != null) { 



	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					



    
		row80Struct oneRow_tHashOutput_13 = new row80Struct();
				
					oneRow_tHashOutput_13.nm_programa = row80.nm_programa;
					oneRow_tHashOutput_13.data_inicio_execucao = row80.data_inicio_execucao;
					oneRow_tHashOutput_13.data_termino_execucao = row80.data_termino_execucao;
					oneRow_tHashOutput_13.mensagem = row80.mensagem;
					oneRow_tHashOutput_13.uuid = row80.uuid;
					oneRow_tHashOutput_13.versao = row80.versao;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */

} // End of branch "row80"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public Integer unidades;

				public Integer getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public BigDecimal total;

				public BigDecimal getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.total);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.total);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+String.valueOf(unidades));
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+String.valueOf(total));
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public String unidades;

				public String getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public String total;

				public String getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+unidades);
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+total);
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public String unidades;

				public String getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public String total;

				public String getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+unidades);
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+total);
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class inputStruct implements routines.system.IPersistableRow<inputStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public String unidades;

				public String getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public String total;

				public String getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+unidades);
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+total);
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(inputStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public String unidades;

				public String getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public String total;

				public String getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
					this.unidades = readString(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
					this.total = readString(dis);
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// String
				
						writeString(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// String
				
						writeString(this.total,dos);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+unidades);
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+total);
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
inputStruct input = new inputStruct();
row8Struct row8 = new row8Struct();
row1Struct row1 = new row1Struct();
row5Struct row5 = new row5Struct();








	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_valida_mercado_livre_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"input");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
inputStruct input_tmp = new inputStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_1", false);
		start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_1";
	
	
		int tos_count_tFileInputExcel_1 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:syPrSR2kKSFOr5mVA2AxMPmUDkxnrEvTurme3A==");
        String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
        if (password_tFileInputExcel_1.isEmpty()){
            password_tFileInputExcel_1 = null;
        }
			class RegexUtil_tFileInputExcel_1 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

		Object source_tFileInputExcel_1 = ""+context.Pasta_Rede+"/Vendas_BR_Mercado_Livre.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;
		
		if(source_tFileInputExcel_1 instanceof String){
			workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_1), password_tFileInputExcel_1, true);
		} else if(source_tFileInputExcel_1 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_1, password_tFileInputExcel_1);
		} else{
			workbook_tFileInputExcel_1 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
    	for(org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_1 : workbook_tFileInputExcel_1){
   			sheetList_tFileInputExcel_1.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_1);
    	}
    	if(sheetList_tFileInputExcel_1.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
			if(sheet_FilterNull_tFileInputExcel_1!=null && sheetList_FilterNull_tFileInputExcel_1.iterator()!=null && sheet_FilterNull_tFileInputExcel_1.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_1.add(sheet_FilterNull_tFileInputExcel_1);
			}
		}
		sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
	if(sheetList_tFileInputExcel_1.size()>0){
		int nb_line_tFileInputExcel_1 = 0;

        int begin_line_tFileInputExcel_1 = 7;

        int footer_input_tFileInputExcel_1 = 0;

        int end_line_tFileInputExcel_1=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1:sheetList_tFileInputExcel_1){
			end_line_tFileInputExcel_1+=(sheet_tFileInputExcel_1.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
        int limit_tFileInputExcel_1 = -1;
        int start_column_tFileInputExcel_1 = 1-1;
        int end_column_tFileInputExcel_1 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(0);
        int rowCount_tFileInputExcel_1 = 0;
        int sheetIndex_tFileInputExcel_1 = 0;
        int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++){

        	int emptyColumnCount_tFileInputExcel_1 = 0;

        	if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
        		break;
        	}

            while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1 + currentRows_tFileInputExcel_1) {
                rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
                sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(++sheetIndex_tFileInputExcel_1);
                currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_1_CURRENT_SHEET",sheet_tFileInputExcel_1.getSheetName());
            if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
                row_tFileInputExcel_1 = sheet_tFileInputExcel_1.getRow(i_tFileInputExcel_1 - rowCount_tFileInputExcel_1);
            }
		    row6 = null;
					int tempRowLength_tFileInputExcel_1 = 21;
				
				int columnIndex_tFileInputExcel_1 = 0;
			
			String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
			int excel_end_column_tFileInputExcel_1;
			if(row_tFileInputExcel_1==null){
				excel_end_column_tFileInputExcel_1=0;
			}else{
				excel_end_column_tFileInputExcel_1=row_tFileInputExcel_1.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_1;
			if(end_column_tFileInputExcel_1 == -1){
				actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
			}
			else{
				actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 >	excel_end_column_tFileInputExcel_1 ? excel_end_column_tFileInputExcel_1 : end_column_tFileInputExcel_1;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_1;i++){
				if(i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1.getCell(i + start_column_tFileInputExcel_1);
					if(cell_tFileInputExcel_1!=null){
					switch (cell_tFileInputExcel_1.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
									temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1.format(cell_tFileInputExcel_1.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_1.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
											temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_1.getNumericCellValue());
										temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_1[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_1[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_1[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_1[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_1 = false;
			row6 = new row6Struct();
			int curColNum_tFileInputExcel_1 = -1;
			String curColName_tFileInputExcel_1 = "";
			try{
							columnIndex_tFileInputExcel_1 = 0;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "num_venda";

				row6.num_venda = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.num_venda = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 1;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "data_venda";

				row6.data_venda = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.data_venda = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 2;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "status";

				row6.status = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.status = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 3;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "descricao_status";

				row6.descricao_status = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.descricao_status = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 4;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "pacotes_diversos";

				row6.pacotes_diversos = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.pacotes_diversos = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 5;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "unidades";

				row6.unidades = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.unidades = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 6;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "receita_por_produto";

				row6.receita_por_produto = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.receita_por_produto = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 7;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "receita_por_envio";

				row6.receita_por_envio = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.receita_por_envio = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 8;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "tarifa_vendas_impostos";

				row6.tarifa_vendas_impostos = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.tarifa_vendas_impostos = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 9;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "tarifa_envio";

				row6.tarifa_envio = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.tarifa_envio = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 10;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "cancelamento_reembolso";

				row6.cancelamento_reembolso = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.cancelamento_reembolso = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 11;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "total";

				row6.total = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.total = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 12;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "mes_faturamento";

				row6.mes_faturamento = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.mes_faturamento = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 13;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "venda_publicidade";

				row6.venda_publicidade = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.venda_publicidade = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 14;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "sku";

				row6.sku = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.sku = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 15;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "anuncio";

				row6.anuncio = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.anuncio = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 16;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "loja_oficial";

				row6.loja_oficial = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.loja_oficial = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 17;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "titulo_anuncio";

				row6.titulo_anuncio = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.titulo_anuncio = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 18;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "variacao";

				row6.variacao = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.variacao = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 19;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "preco_unitario_venda";

				row6.preco_unitario_venda = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.preco_unitario_venda = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 20;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "tipo_anuncio";

				row6.tipo_anuncio = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row6.tipo_anuncio = null;
				emptyColumnCount_tFileInputExcel_1++;
			}

				nb_line_tFileInputExcel_1++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_1 = true;
					 System.err.println(e.getMessage());
					 row6 = null;
			}


		



 



/**
 * [tFileInputExcel_1 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 


	tos_count_tFileInputExcel_1++;

/**
 * [tFileInputExcel_1 main ] stop
 */
	
	/**
	 * [tFileInputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_begin ] stop
 */
// Start of branch "row6"
if(row6 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

input = null;


// # Output table : 'input'
input_tmp.num_venda = row6.num_venda ;
input_tmp.data_venda = row6.data_venda ;
input_tmp.status = row6.status ;
input_tmp.descricao_status = row6.descricao_status ;
input_tmp.pacotes_diversos = row6.pacotes_diversos ;
input_tmp.unidades = row6.unidades != null ? row6.unidades : "0,00" ;
input_tmp.receita_por_produto = row6.receita_por_produto != null ? row6.receita_por_produto : "0,00" ;
input_tmp.receita_por_envio = row6.receita_por_envio != null ? row6.receita_por_envio : "0,00" ;
input_tmp.tarifa_vendas_impostos = row6.tarifa_vendas_impostos != null ? row6.tarifa_vendas_impostos : "0,00" ;
input_tmp.tarifa_envio = row6.tarifa_envio != null ? row6.tarifa_envio : "0,00" ;
input_tmp.cancelamento_reembolso = row6.cancelamento_reembolso != null ? row6.cancelamento_reembolso : "0,00" ;
input_tmp.total = row6.total != null ? row6.total : "0,00" ;
input_tmp.mes_faturamento = row6.mes_faturamento ;
input_tmp.venda_publicidade = row6.venda_publicidade ;
input_tmp.sku = row6.sku ;
input_tmp.anuncio = row6.anuncio ;
input_tmp.loja_oficial = row6.loja_oficial ;
input_tmp.titulo_anuncio = row6.titulo_anuncio ;
input_tmp.variacao = row6.variacao ;
input_tmp.preco_unitario_venda = row6.preco_unitario_venda != null ? row6.preco_unitario_venda : "0,00" ;
input_tmp.tipo_anuncio = row6.tipo_anuncio ;
input = input_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "input"
if(input != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"input"
						
						);
					}
					

          row8 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
      ope_tFilterRow_1.matches((// code sample : use input to define the condition.
// input.columnName1.equals("foo") ||!(input.columnName2.equals("bar"))
// replace the following expression by your own filter condition 
input.pacotes_diversos.equals("Não")
			), "advanced condition failed");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row8 == null){ 
                row8 = new row8Struct();
              }
               row8.num_venda = input.num_venda;
               row8.data_venda = input.data_venda;
               row8.status = input.status;
               row8.descricao_status = input.descricao_status;
               row8.pacotes_diversos = input.pacotes_diversos;
               row8.unidades = input.unidades;
               row8.receita_por_produto = input.receita_por_produto;
               row8.receita_por_envio = input.receita_por_envio;
               row8.tarifa_vendas_impostos = input.tarifa_vendas_impostos;
               row8.tarifa_envio = input.tarifa_envio;
               row8.cancelamento_reembolso = input.cancelamento_reembolso;
               row8.total = input.total;
               row8.mes_faturamento = input.mes_faturamento;
               row8.venda_publicidade = input.venda_publicidade;
               row8.sku = input.sku;
               row8.anuncio = input.anuncio;
               row8.loja_oficial = input.loja_oficial;
               row8.titulo_anuncio = input.titulo_anuncio;
               row8.variacao = input.variacao;
               row8.preco_unitario_venda = input.preco_unitario_venda;
               row8.tipo_anuncio = input.tipo_anuncio;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row8"
if(row8 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

    //Code generated according to input schema and output schema
row1.num_venda = row8.num_venda;
row1.data_venda = row8.data_venda;
row1.status = row8.status;
row1.descricao_status = row8.descricao_status;
row1.pacotes_diversos = row8.pacotes_diversos;
row1.unidades = row8.unidades;
row1.receita_por_produto = row8.receita_por_produto.replaceAll(",", ".");
row1.receita_por_envio = row8.receita_por_envio.replaceAll(",", ".");
row1.tarifa_vendas_impostos = row8.tarifa_vendas_impostos.replaceAll(",", ".");
row1.tarifa_envio = row8.tarifa_envio.replaceAll(",", ".");
row1.cancelamento_reembolso = row8.cancelamento_reembolso.replaceAll(",", ".");
row1.total = row8.total.replaceAll(",", ".");
row1.mes_faturamento = row8.mes_faturamento;
row1.venda_publicidade = row8.venda_publicidade;
row1.sku = row8.sku;
row1.anuncio = row8.anuncio;
row1.loja_oficial = row8.loja_oficial;
row1.titulo_anuncio = row8.titulo_anuncio;
row1.variacao = row8.variacao;
row1.preco_unitario_venda = row8.preco_unitario_venda.replaceAll(",", ".");
row1.tipo_anuncio = row8.tipo_anuncio;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					


  row5 = new row5Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              if ("".equals(row1.num_venda)){  
                row1.num_venda = null;
              }
              row5.num_venda=TypeConvert.String2String(row1.num_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.data_venda)){  
                row1.data_venda = null;
              }
              row5.data_venda=TypeConvert.String2String(row1.data_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.status)){  
                row1.status = null;
              }
              row5.status=TypeConvert.String2String(row1.status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.descricao_status)){  
                row1.descricao_status = null;
              }
              row5.descricao_status=TypeConvert.String2String(row1.descricao_status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.pacotes_diversos)){  
                row1.pacotes_diversos = null;
              }
              row5.pacotes_diversos=TypeConvert.String2String(row1.pacotes_diversos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.unidades)){  
                row1.unidades = null;
              }
              row5.unidades=TypeConvert.String2Integer(row1.unidades);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.receita_por_produto)){  
                row1.receita_por_produto = null;
              }
              row5.receita_por_produto=TypeConvert.String2String(row1.receita_por_produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.receita_por_envio)){  
                row1.receita_por_envio = null;
              }
              row5.receita_por_envio=TypeConvert.String2String(row1.receita_por_envio);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.tarifa_vendas_impostos)){  
                row1.tarifa_vendas_impostos = null;
              }
              row5.tarifa_vendas_impostos=TypeConvert.String2String(row1.tarifa_vendas_impostos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.tarifa_envio)){  
                row1.tarifa_envio = null;
              }
              row5.tarifa_envio=TypeConvert.String2String(row1.tarifa_envio);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.cancelamento_reembolso)){  
                row1.cancelamento_reembolso = null;
              }
              row5.cancelamento_reembolso=TypeConvert.String2String(row1.cancelamento_reembolso);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.total)){  
                row1.total = null;
              }
              row5.total=TypeConvert.String2BigDecimal(row1.total);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.mes_faturamento)){  
                row1.mes_faturamento = null;
              }
              row5.mes_faturamento=TypeConvert.String2String(row1.mes_faturamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.venda_publicidade)){  
                row1.venda_publicidade = null;
              }
              row5.venda_publicidade=TypeConvert.String2String(row1.venda_publicidade);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.sku)){  
                row1.sku = null;
              }
              row5.sku=TypeConvert.String2String(row1.sku);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.anuncio)){  
                row1.anuncio = null;
              }
              row5.anuncio=TypeConvert.String2String(row1.anuncio);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.loja_oficial)){  
                row1.loja_oficial = null;
              }
              row5.loja_oficial=TypeConvert.String2String(row1.loja_oficial);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.titulo_anuncio)){  
                row1.titulo_anuncio = null;
              }
              row5.titulo_anuncio=TypeConvert.String2String(row1.titulo_anuncio);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.variacao)){  
                row1.variacao = null;
              }
              row5.variacao=TypeConvert.String2String(row1.variacao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.preco_unitario_venda)){  
                row1.preco_unitario_venda = null;
              }
              row5.preco_unitario_venda=TypeConvert.String2String(row1.preco_unitario_venda);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              if ("".equals(row1.tipo_anuncio)){  
                row1.tipo_anuncio = null;
              }
              row5.tipo_anuncio=TypeConvert.String2String(row1.tipo_anuncio);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row5 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.num_venda = row5.num_venda;
					oneRow_tHashOutput_1.data_venda = row5.data_venda;
					oneRow_tHashOutput_1.status = row5.status;
					oneRow_tHashOutput_1.descricao_status = row5.descricao_status;
					oneRow_tHashOutput_1.pacotes_diversos = row5.pacotes_diversos;
					oneRow_tHashOutput_1.unidades = row5.unidades;
					oneRow_tHashOutput_1.receita_por_produto = row5.receita_por_produto;
					oneRow_tHashOutput_1.receita_por_envio = row5.receita_por_envio;
					oneRow_tHashOutput_1.tarifa_vendas_impostos = row5.tarifa_vendas_impostos;
					oneRow_tHashOutput_1.tarifa_envio = row5.tarifa_envio;
					oneRow_tHashOutput_1.cancelamento_reembolso = row5.cancelamento_reembolso;
					oneRow_tHashOutput_1.total = row5.total;
					oneRow_tHashOutput_1.mes_faturamento = row5.mes_faturamento;
					oneRow_tHashOutput_1.venda_publicidade = row5.venda_publicidade;
					oneRow_tHashOutput_1.sku = row5.sku;
					oneRow_tHashOutput_1.anuncio = row5.anuncio;
					oneRow_tHashOutput_1.loja_oficial = row5.loja_oficial;
					oneRow_tHashOutput_1.titulo_anuncio = row5.titulo_anuncio;
					oneRow_tHashOutput_1.variacao = row5.variacao;
					oneRow_tHashOutput_1.preco_unitario_venda = row5.preco_unitario_venda;
					oneRow_tHashOutput_1.tipo_anuncio = row5.tipo_anuncio;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row8"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "input"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row6"




	
	/**
	 * [tFileInputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_1_NB_LINE",nb_line_tFileInputExcel_1);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_1 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_1.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_1", true);
end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());




/**
 * [tFileInputExcel_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"input");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputExcel_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public Integer unidades;

				public Integer getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public BigDecimal total;

				public BigDecimal getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public BigDecimal custo_autcom;

				public BigDecimal getCusto_autcom () {
					return this.custo_autcom;
				}

				public Boolean custo_autcomIsNullable(){
				    return true;
				}
				public Boolean custo_autcomIsKey(){
				    return false;
				}
				public Integer custo_autcomLength(){
				    return null;
				}
				public Integer custo_autcomPrecision(){
				    return null;
				}
				public String custo_autcomDefault(){
				
					return null;
				
				}
				public String custo_autcomComment(){
				
				    return "";
				
				}
				public String custo_autcomPattern(){
				
					return "";
				
				}
				public String custo_autcomOriginalDbColumnName(){
				
					return "custo_autcom";
				
				}

				
			    public BigDecimal Margem;

				public BigDecimal getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
						this.custo_autcom = (BigDecimal) dis.readObject();
					
						this.Margem = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
						this.custo_autcom = (BigDecimal) dis.readObject();
					
						this.Margem = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.custo_autcom);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Margem);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.custo_autcom);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Margem);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+String.valueOf(unidades));
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+String.valueOf(total));
		sb.append(",custo_autcom="+String.valueOf(custo_autcom));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class base_custoStruct implements routines.system.IPersistableRow<base_custoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public Integer unidades;

				public Integer getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public BigDecimal total;

				public BigDecimal getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public BigDecimal custo_autcom;

				public BigDecimal getCusto_autcom () {
					return this.custo_autcom;
				}

				public Boolean custo_autcomIsNullable(){
				    return true;
				}
				public Boolean custo_autcomIsKey(){
				    return false;
				}
				public Integer custo_autcomLength(){
				    return null;
				}
				public Integer custo_autcomPrecision(){
				    return null;
				}
				public String custo_autcomDefault(){
				
					return null;
				
				}
				public String custo_autcomComment(){
				
				    return "";
				
				}
				public String custo_autcomPattern(){
				
					return "";
				
				}
				public String custo_autcomOriginalDbColumnName(){
				
					return "custo_autcom";
				
				}

				
			    public BigDecimal Margem;

				public BigDecimal getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
						this.custo_autcom = (BigDecimal) dis.readObject();
					
						this.Margem = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
						this.custo_autcom = (BigDecimal) dis.readObject();
					
						this.Margem = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.custo_autcom);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Margem);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.custo_autcom);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Margem);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+String.valueOf(unidades));
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+String.valueOf(total));
		sb.append(",custo_autcom="+String.valueOf(custo_autcom));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(base_custoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public Integer unidades;

				public Integer getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public BigDecimal total;

				public BigDecimal getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.total);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.total);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+String.valueOf(unidades));
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+String.valueOf(total));
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String num_venda;

				public String getNum_venda () {
					return this.num_venda;
				}

				public Boolean num_vendaIsNullable(){
				    return true;
				}
				public Boolean num_vendaIsKey(){
				    return false;
				}
				public Integer num_vendaLength(){
				    return null;
				}
				public Integer num_vendaPrecision(){
				    return null;
				}
				public String num_vendaDefault(){
				
					return null;
				
				}
				public String num_vendaComment(){
				
				    return "";
				
				}
				public String num_vendaPattern(){
				
					return "";
				
				}
				public String num_vendaOriginalDbColumnName(){
				
					return "num_venda";
				
				}

				
			    public String data_venda;

				public String getData_venda () {
					return this.data_venda;
				}

				public Boolean data_vendaIsNullable(){
				    return true;
				}
				public Boolean data_vendaIsKey(){
				    return false;
				}
				public Integer data_vendaLength(){
				    return null;
				}
				public Integer data_vendaPrecision(){
				    return null;
				}
				public String data_vendaDefault(){
				
					return null;
				
				}
				public String data_vendaComment(){
				
				    return "";
				
				}
				public String data_vendaPattern(){
				
					return "";
				
				}
				public String data_vendaOriginalDbColumnName(){
				
					return "data_venda";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String descricao_status;

				public String getDescricao_status () {
					return this.descricao_status;
				}

				public Boolean descricao_statusIsNullable(){
				    return true;
				}
				public Boolean descricao_statusIsKey(){
				    return false;
				}
				public Integer descricao_statusLength(){
				    return null;
				}
				public Integer descricao_statusPrecision(){
				    return null;
				}
				public String descricao_statusDefault(){
				
					return null;
				
				}
				public String descricao_statusComment(){
				
				    return "";
				
				}
				public String descricao_statusPattern(){
				
					return "";
				
				}
				public String descricao_statusOriginalDbColumnName(){
				
					return "descricao_status";
				
				}

				
			    public String pacotes_diversos;

				public String getPacotes_diversos () {
					return this.pacotes_diversos;
				}

				public Boolean pacotes_diversosIsNullable(){
				    return true;
				}
				public Boolean pacotes_diversosIsKey(){
				    return false;
				}
				public Integer pacotes_diversosLength(){
				    return null;
				}
				public Integer pacotes_diversosPrecision(){
				    return null;
				}
				public String pacotes_diversosDefault(){
				
					return null;
				
				}
				public String pacotes_diversosComment(){
				
				    return "";
				
				}
				public String pacotes_diversosPattern(){
				
					return "";
				
				}
				public String pacotes_diversosOriginalDbColumnName(){
				
					return "pacotes_diversos";
				
				}

				
			    public Integer unidades;

				public Integer getUnidades () {
					return this.unidades;
				}

				public Boolean unidadesIsNullable(){
				    return true;
				}
				public Boolean unidadesIsKey(){
				    return false;
				}
				public Integer unidadesLength(){
				    return null;
				}
				public Integer unidadesPrecision(){
				    return null;
				}
				public String unidadesDefault(){
				
					return null;
				
				}
				public String unidadesComment(){
				
				    return "";
				
				}
				public String unidadesPattern(){
				
					return "";
				
				}
				public String unidadesOriginalDbColumnName(){
				
					return "unidades";
				
				}

				
			    public String receita_por_produto;

				public String getReceita_por_produto () {
					return this.receita_por_produto;
				}

				public Boolean receita_por_produtoIsNullable(){
				    return true;
				}
				public Boolean receita_por_produtoIsKey(){
				    return false;
				}
				public Integer receita_por_produtoLength(){
				    return null;
				}
				public Integer receita_por_produtoPrecision(){
				    return null;
				}
				public String receita_por_produtoDefault(){
				
					return null;
				
				}
				public String receita_por_produtoComment(){
				
				    return "";
				
				}
				public String receita_por_produtoPattern(){
				
					return "";
				
				}
				public String receita_por_produtoOriginalDbColumnName(){
				
					return "receita_por_produto";
				
				}

				
			    public String receita_por_envio;

				public String getReceita_por_envio () {
					return this.receita_por_envio;
				}

				public Boolean receita_por_envioIsNullable(){
				    return true;
				}
				public Boolean receita_por_envioIsKey(){
				    return false;
				}
				public Integer receita_por_envioLength(){
				    return null;
				}
				public Integer receita_por_envioPrecision(){
				    return null;
				}
				public String receita_por_envioDefault(){
				
					return null;
				
				}
				public String receita_por_envioComment(){
				
				    return "";
				
				}
				public String receita_por_envioPattern(){
				
					return "";
				
				}
				public String receita_por_envioOriginalDbColumnName(){
				
					return "receita_por_envio";
				
				}

				
			    public String tarifa_vendas_impostos;

				public String getTarifa_vendas_impostos () {
					return this.tarifa_vendas_impostos;
				}

				public Boolean tarifa_vendas_impostosIsNullable(){
				    return true;
				}
				public Boolean tarifa_vendas_impostosIsKey(){
				    return false;
				}
				public Integer tarifa_vendas_impostosLength(){
				    return null;
				}
				public Integer tarifa_vendas_impostosPrecision(){
				    return null;
				}
				public String tarifa_vendas_impostosDefault(){
				
					return null;
				
				}
				public String tarifa_vendas_impostosComment(){
				
				    return "";
				
				}
				public String tarifa_vendas_impostosPattern(){
				
					return "";
				
				}
				public String tarifa_vendas_impostosOriginalDbColumnName(){
				
					return "tarifa_vendas_impostos";
				
				}

				
			    public String tarifa_envio;

				public String getTarifa_envio () {
					return this.tarifa_envio;
				}

				public Boolean tarifa_envioIsNullable(){
				    return true;
				}
				public Boolean tarifa_envioIsKey(){
				    return false;
				}
				public Integer tarifa_envioLength(){
				    return null;
				}
				public Integer tarifa_envioPrecision(){
				    return null;
				}
				public String tarifa_envioDefault(){
				
					return null;
				
				}
				public String tarifa_envioComment(){
				
				    return "";
				
				}
				public String tarifa_envioPattern(){
				
					return "";
				
				}
				public String tarifa_envioOriginalDbColumnName(){
				
					return "tarifa_envio";
				
				}

				
			    public String cancelamento_reembolso;

				public String getCancelamento_reembolso () {
					return this.cancelamento_reembolso;
				}

				public Boolean cancelamento_reembolsoIsNullable(){
				    return true;
				}
				public Boolean cancelamento_reembolsoIsKey(){
				    return false;
				}
				public Integer cancelamento_reembolsoLength(){
				    return null;
				}
				public Integer cancelamento_reembolsoPrecision(){
				    return null;
				}
				public String cancelamento_reembolsoDefault(){
				
					return null;
				
				}
				public String cancelamento_reembolsoComment(){
				
				    return "";
				
				}
				public String cancelamento_reembolsoPattern(){
				
					return "";
				
				}
				public String cancelamento_reembolsoOriginalDbColumnName(){
				
					return "cancelamento_reembolso";
				
				}

				
			    public BigDecimal total;

				public BigDecimal getTotal () {
					return this.total;
				}

				public Boolean totalIsNullable(){
				    return true;
				}
				public Boolean totalIsKey(){
				    return false;
				}
				public Integer totalLength(){
				    return null;
				}
				public Integer totalPrecision(){
				    return null;
				}
				public String totalDefault(){
				
					return null;
				
				}
				public String totalComment(){
				
				    return "";
				
				}
				public String totalPattern(){
				
					return "";
				
				}
				public String totalOriginalDbColumnName(){
				
					return "total";
				
				}

				
			    public String mes_faturamento;

				public String getMes_faturamento () {
					return this.mes_faturamento;
				}

				public Boolean mes_faturamentoIsNullable(){
				    return true;
				}
				public Boolean mes_faturamentoIsKey(){
				    return false;
				}
				public Integer mes_faturamentoLength(){
				    return null;
				}
				public Integer mes_faturamentoPrecision(){
				    return null;
				}
				public String mes_faturamentoDefault(){
				
					return null;
				
				}
				public String mes_faturamentoComment(){
				
				    return "";
				
				}
				public String mes_faturamentoPattern(){
				
					return "";
				
				}
				public String mes_faturamentoOriginalDbColumnName(){
				
					return "mes_faturamento";
				
				}

				
			    public String venda_publicidade;

				public String getVenda_publicidade () {
					return this.venda_publicidade;
				}

				public Boolean venda_publicidadeIsNullable(){
				    return true;
				}
				public Boolean venda_publicidadeIsKey(){
				    return false;
				}
				public Integer venda_publicidadeLength(){
				    return null;
				}
				public Integer venda_publicidadePrecision(){
				    return null;
				}
				public String venda_publicidadeDefault(){
				
					return null;
				
				}
				public String venda_publicidadeComment(){
				
				    return "";
				
				}
				public String venda_publicidadePattern(){
				
					return "";
				
				}
				public String venda_publicidadeOriginalDbColumnName(){
				
					return "venda_publicidade";
				
				}

				
			    public String sku;

				public String getSku () {
					return this.sku;
				}

				public Boolean skuIsNullable(){
				    return true;
				}
				public Boolean skuIsKey(){
				    return false;
				}
				public Integer skuLength(){
				    return null;
				}
				public Integer skuPrecision(){
				    return null;
				}
				public String skuDefault(){
				
					return null;
				
				}
				public String skuComment(){
				
				    return "";
				
				}
				public String skuPattern(){
				
					return "";
				
				}
				public String skuOriginalDbColumnName(){
				
					return "sku";
				
				}

				
			    public String anuncio;

				public String getAnuncio () {
					return this.anuncio;
				}

				public Boolean anuncioIsNullable(){
				    return true;
				}
				public Boolean anuncioIsKey(){
				    return false;
				}
				public Integer anuncioLength(){
				    return null;
				}
				public Integer anuncioPrecision(){
				    return null;
				}
				public String anuncioDefault(){
				
					return null;
				
				}
				public String anuncioComment(){
				
				    return "";
				
				}
				public String anuncioPattern(){
				
					return "";
				
				}
				public String anuncioOriginalDbColumnName(){
				
					return "anuncio";
				
				}

				
			    public String loja_oficial;

				public String getLoja_oficial () {
					return this.loja_oficial;
				}

				public Boolean loja_oficialIsNullable(){
				    return true;
				}
				public Boolean loja_oficialIsKey(){
				    return false;
				}
				public Integer loja_oficialLength(){
				    return null;
				}
				public Integer loja_oficialPrecision(){
				    return null;
				}
				public String loja_oficialDefault(){
				
					return null;
				
				}
				public String loja_oficialComment(){
				
				    return "";
				
				}
				public String loja_oficialPattern(){
				
					return "";
				
				}
				public String loja_oficialOriginalDbColumnName(){
				
					return "loja_oficial";
				
				}

				
			    public String titulo_anuncio;

				public String getTitulo_anuncio () {
					return this.titulo_anuncio;
				}

				public Boolean titulo_anuncioIsNullable(){
				    return true;
				}
				public Boolean titulo_anuncioIsKey(){
				    return false;
				}
				public Integer titulo_anuncioLength(){
				    return null;
				}
				public Integer titulo_anuncioPrecision(){
				    return null;
				}
				public String titulo_anuncioDefault(){
				
					return null;
				
				}
				public String titulo_anuncioComment(){
				
				    return "";
				
				}
				public String titulo_anuncioPattern(){
				
					return "";
				
				}
				public String titulo_anuncioOriginalDbColumnName(){
				
					return "titulo_anuncio";
				
				}

				
			    public String variacao;

				public String getVariacao () {
					return this.variacao;
				}

				public Boolean variacaoIsNullable(){
				    return true;
				}
				public Boolean variacaoIsKey(){
				    return false;
				}
				public Integer variacaoLength(){
				    return null;
				}
				public Integer variacaoPrecision(){
				    return null;
				}
				public String variacaoDefault(){
				
					return null;
				
				}
				public String variacaoComment(){
				
				    return "";
				
				}
				public String variacaoPattern(){
				
					return "";
				
				}
				public String variacaoOriginalDbColumnName(){
				
					return "variacao";
				
				}

				
			    public String preco_unitario_venda;

				public String getPreco_unitario_venda () {
					return this.preco_unitario_venda;
				}

				public Boolean preco_unitario_vendaIsNullable(){
				    return true;
				}
				public Boolean preco_unitario_vendaIsKey(){
				    return false;
				}
				public Integer preco_unitario_vendaLength(){
				    return null;
				}
				public Integer preco_unitario_vendaPrecision(){
				    return null;
				}
				public String preco_unitario_vendaDefault(){
				
					return null;
				
				}
				public String preco_unitario_vendaComment(){
				
				    return "";
				
				}
				public String preco_unitario_vendaPattern(){
				
					return "";
				
				}
				public String preco_unitario_vendaOriginalDbColumnName(){
				
					return "preco_unitario_venda";
				
				}

				
			    public String tipo_anuncio;

				public String getTipo_anuncio () {
					return this.tipo_anuncio;
				}

				public Boolean tipo_anuncioIsNullable(){
				    return true;
				}
				public Boolean tipo_anuncioIsKey(){
				    return false;
				}
				public Integer tipo_anuncioLength(){
				    return null;
				}
				public Integer tipo_anuncioPrecision(){
				    return null;
				}
				public String tipo_anuncioDefault(){
				
					return null;
				
				}
				public String tipo_anuncioComment(){
				
				    return "";
				
				}
				public String tipo_anuncioPattern(){
				
					return "";
				
				}
				public String tipo_anuncioOriginalDbColumnName(){
				
					return "tipo_anuncio";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.num_venda = readString(dis);
					
					this.data_venda = readString(dis);
					
					this.status = readString(dis);
					
					this.descricao_status = readString(dis);
					
					this.pacotes_diversos = readString(dis);
					
						this.unidades = readInteger(dis);
					
					this.receita_por_produto = readString(dis);
					
					this.receita_por_envio = readString(dis);
					
					this.tarifa_vendas_impostos = readString(dis);
					
					this.tarifa_envio = readString(dis);
					
					this.cancelamento_reembolso = readString(dis);
					
						this.total = (BigDecimal) dis.readObject();
					
					this.mes_faturamento = readString(dis);
					
					this.venda_publicidade = readString(dis);
					
					this.sku = readString(dis);
					
					this.anuncio = readString(dis);
					
					this.loja_oficial = readString(dis);
					
					this.titulo_anuncio = readString(dis);
					
					this.variacao = readString(dis);
					
					this.preco_unitario_venda = readString(dis);
					
					this.tipo_anuncio = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.total);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.num_venda,dos);
					
					// String
				
						writeString(this.data_venda,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// String
				
						writeString(this.descricao_status,dos);
					
					// String
				
						writeString(this.pacotes_diversos,dos);
					
					// Integer
				
						writeInteger(this.unidades,dos);
					
					// String
				
						writeString(this.receita_por_produto,dos);
					
					// String
				
						writeString(this.receita_por_envio,dos);
					
					// String
				
						writeString(this.tarifa_vendas_impostos,dos);
					
					// String
				
						writeString(this.tarifa_envio,dos);
					
					// String
				
						writeString(this.cancelamento_reembolso,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.total);
					
					// String
				
						writeString(this.mes_faturamento,dos);
					
					// String
				
						writeString(this.venda_publicidade,dos);
					
					// String
				
						writeString(this.sku,dos);
					
					// String
				
						writeString(this.anuncio,dos);
					
					// String
				
						writeString(this.loja_oficial,dos);
					
					// String
				
						writeString(this.titulo_anuncio,dos);
					
					// String
				
						writeString(this.variacao,dos);
					
					// String
				
						writeString(this.preco_unitario_venda,dos);
					
					// String
				
						writeString(this.tipo_anuncio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("num_venda="+num_venda);
		sb.append(",data_venda="+data_venda);
		sb.append(",status="+status);
		sb.append(",descricao_status="+descricao_status);
		sb.append(",pacotes_diversos="+pacotes_diversos);
		sb.append(",unidades="+String.valueOf(unidades));
		sb.append(",receita_por_produto="+receita_por_produto);
		sb.append(",receita_por_envio="+receita_por_envio);
		sb.append(",tarifa_vendas_impostos="+tarifa_vendas_impostos);
		sb.append(",tarifa_envio="+tarifa_envio);
		sb.append(",cancelamento_reembolso="+cancelamento_reembolso);
		sb.append(",total="+String.valueOf(total));
		sb.append(",mes_faturamento="+mes_faturamento);
		sb.append(",venda_publicidade="+venda_publicidade);
		sb.append(",sku="+sku);
		sb.append(",anuncio="+anuncio);
		sb.append(",loja_oficial="+loja_oficial);
		sb.append(",titulo_anuncio="+titulo_anuncio);
		sb.append(",variacao="+variacao);
		sb.append(",preco_unitario_venda="+preco_unitario_venda);
		sb.append(",tipo_anuncio="+tipo_anuncio);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);

		row2Struct row2 = new row2Struct();
base_custoStruct base_custo = new base_custoStruct();
row4Struct row4 = new row4Struct();






	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		String fileName_tFileOutputExcel_1=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/ReportML_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_1.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("num_venda");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("data_venda");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("status");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("descricao_status");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("pacotes_diversos");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("unidades");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("receita_por_produto");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("receita_por_envio");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("tarifa_vendas_impostos");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("tarifa_envio");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("cancelamento_reembolso");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("total");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("custo_autcom");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Margem");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("mes_faturamento");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("venda_publicidade");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("sku");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("anuncio");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("loja_oficial");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("titulo_anuncio");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("variacao");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("preco_unitario_venda");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("tipo_anuncio");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"base_custo");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
					globalMap.get( "tHash_Lookup_row3" ))
					;					
					
	
		tHash_Lookup_row3.initGet();
	

row3Struct row3HashKey = new row3Struct();
row3Struct row3Default = new row3Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
base_custoStruct base_custo_tmp = new base_custoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_mercado_livre_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row2.num_venda = next_tHashInput_1.num_venda;
	row2.data_venda = next_tHashInput_1.data_venda;
	row2.status = next_tHashInput_1.status;
	row2.descricao_status = next_tHashInput_1.descricao_status;
	row2.pacotes_diversos = next_tHashInput_1.pacotes_diversos;
	row2.unidades = next_tHashInput_1.unidades;
	row2.receita_por_produto = next_tHashInput_1.receita_por_produto;
	row2.receita_por_envio = next_tHashInput_1.receita_por_envio;
	row2.tarifa_vendas_impostos = next_tHashInput_1.tarifa_vendas_impostos;
	row2.tarifa_envio = next_tHashInput_1.tarifa_envio;
	row2.cancelamento_reembolso = next_tHashInput_1.cancelamento_reembolso;
	row2.total = next_tHashInput_1.total;
	row2.mes_faturamento = next_tHashInput_1.mes_faturamento;
	row2.venda_publicidade = next_tHashInput_1.venda_publicidade;
	row2.sku = next_tHashInput_1.sku;
	row2.anuncio = next_tHashInput_1.anuncio;
	row2.loja_oficial = next_tHashInput_1.loja_oficial;
	row2.titulo_anuncio = next_tHashInput_1.titulo_anuncio;
	row2.variacao = next_tHashInput_1.variacao;
	row2.preco_unitario_venda = next_tHashInput_1.preco_unitario_venda;
	row2.tipo_anuncio = next_tHashInput_1.tipo_anuncio;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row3Struct row3 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row3" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow3 = false;
       		  	    	
       		  	    	
 							row3Struct row3ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row3.lookup( row3HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row3.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow3 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow3 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row3 != null && tHash_Lookup_row3.hasNext()) || forceLooprow3) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row3'
									
                    		  	 
							   
                    		  	 
	       		  	    	row3Struct fromLookup_row3 = null;
							row3 = row3Default;
										 
							
								
								if(!forceLooprow3) { // G 46
								
							
								 
							
								
								fromLookup_row3 = tHash_Lookup_row3.next();

							

							if(fromLookup_row3 != null) {
								row3 = fromLookup_row3;
							}
							
							
							
			  							
							
                    		  	  		
								if( !rejectedInnerJoin_tMap_2 && 
									
									!(
										
										row3.cod_item.equals(row2.sku)
										
									)
									
								) { // G 016
                    		  	  		  
									fromLookup_row3 = null;
									row3 = row3Default;
                    		  	  		  		
									
								} // G 016
     	               		  	
								
								
									if(fromLookup_row3 == null && !rejectedInnerJoin_tMap_2) { // G 017
								
										continue;
									
									} // G 017
								
								
     	               		  	  	  
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow3 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

base_custo = null;


// # Output table : 'base_custo'
base_custo_tmp.num_venda = ((String)globalMap.get("row2.num_venda"));
base_custo_tmp.data_venda = ((String)globalMap.get("row2.data_venda"));
base_custo_tmp.status = ((String)globalMap.get("row2.status"));
base_custo_tmp.descricao_status = ((String)globalMap.get("row2.descricao_status"));
base_custo_tmp.pacotes_diversos = ((String)globalMap.get("row2.pacotes_diversos"));
base_custo_tmp.unidades = ((Integer)globalMap.get("row2.unidades"));
base_custo_tmp.receita_por_produto = ((String)globalMap.get("row2.receita_por_produto"));
base_custo_tmp.receita_por_envio = ((String)globalMap.get("row2.receita_por_envio"));
base_custo_tmp.tarifa_vendas_impostos = ((String)globalMap.get("row2.tarifa_vendas_impostos"));
base_custo_tmp.tarifa_envio = ((String)globalMap.get("row2.tarifa_envio"));
base_custo_tmp.cancelamento_reembolso = ((String)globalMap.get("row2.cancelamento_reembolso"));
base_custo_tmp.total = row2.total != null ? row2.total : new BigDecimal(0);
base_custo_tmp.custo_autcom = row3.vl_custo;
base_custo_tmp.Margem = null;
base_custo_tmp.mes_faturamento = ((String)globalMap.get("row2.mes_faturamento"));
base_custo_tmp.venda_publicidade = ((String)globalMap.get("row2.venda_publicidade"));
base_custo_tmp.sku = ((String)globalMap.get("row2.sku"));
base_custo_tmp.anuncio = ((String)globalMap.get("row2.anuncio"));
base_custo_tmp.loja_oficial = ((String)globalMap.get("row2.loja_oficial"));
base_custo_tmp.titulo_anuncio = ((String)globalMap.get("row2.titulo_anuncio"));
base_custo_tmp.variacao = ((String)globalMap.get("row2.variacao"));
base_custo_tmp.preco_unitario_venda = ((String)globalMap.get("row2.preco_unitario_venda"));
base_custo_tmp.tipo_anuncio = ((String)globalMap.get("row2.tipo_anuncio"));
base_custo = base_custo_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "base_custo"
if(base_custo != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"base_custo"
						
						);
					}
					

    //Code generated according to input schema and output schema
row4.num_venda = base_custo.num_venda;
row4.data_venda = base_custo.data_venda;
row4.status = base_custo.status;
row4.descricao_status = base_custo.descricao_status;
row4.pacotes_diversos = base_custo.pacotes_diversos;
row4.unidades = base_custo.unidades;
row4.receita_por_produto = base_custo.receita_por_produto;
row4.receita_por_envio = base_custo.receita_por_envio;
row4.tarifa_vendas_impostos = base_custo.tarifa_vendas_impostos;
row4.tarifa_envio = base_custo.tarifa_envio;
row4.cancelamento_reembolso = base_custo.cancelamento_reembolso;
row4.total = base_custo.total;
row4.custo_autcom = base_custo.custo_autcom;
row4.Margem = ((base_custo.total.divide(base_custo.custo_autcom, 5, RoundingMode.HALF_UP)).subtract(new BigDecimal(1))).multiply(new BigDecimal(100));
row4.mes_faturamento = base_custo.mes_faturamento;
row4.venda_publicidade = base_custo.venda_publicidade;
row4.sku = base_custo.sku;
row4.anuncio = base_custo.anuncio;
row4.loja_oficial = base_custo.loja_oficial;
row4.titulo_anuncio = base_custo.titulo_anuncio;
row4.variacao = base_custo.variacao;
row4.preco_unitario_venda = base_custo.preco_unitario_venda;
row4.tipo_anuncio = base_custo.tipo_anuncio;
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(row4.num_venda != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.num_venda));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.data_venda != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.data_venda));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.status != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.status));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.descricao_status != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.descricao_status));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.pacotes_diversos != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.pacotes_diversos));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.unidades != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row4.unidades)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.receita_por_produto != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.receita_por_produto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.receita_por_envio != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.receita_por_envio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.tarifa_vendas_impostos != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.tarifa_vendas_impostos));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.tarifa_envio != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.tarifa_envio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.cancelamento_reembolso != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.cancelamento_reembolso));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.total != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row4.total).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.custo_autcom != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row4.custo_autcom).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.Margem != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row4.Margem).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.mes_faturamento != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.mes_faturamento));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.venda_publicidade != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.venda_publicidade));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.sku != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.sku));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.anuncio != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.anuncio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.loja_oficial != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.loja_oficial));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.titulo_anuncio != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.titulo_anuncio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.variacao != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.variacao));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.preco_unitario_venda != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.preco_unitario_venda));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row4.tipo_anuncio != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row4.tipo_anuncio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "base_custo"



	
		} // close loop of lookup 'row3' // G_TM_M_043
	
	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_mercado_livre_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row3 != null) {
						tHash_Lookup_row3.endGet();
					}
					globalMap.remove( "tHash_Lookup_row3" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"base_custo");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

							columnIndex_tFileOutputExcel_1 = 0;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 1;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 2;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 3;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 4;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 5;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 6;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 7;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 8;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 9;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 10;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 11;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 12;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 13;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 14;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 15;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 16;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 17;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 18;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 19;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 20;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 21;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 22;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row3"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String des_item;

				public String getDes_item () {
					return this.des_item;
				}

				public Boolean des_itemIsNullable(){
				    return true;
				}
				public Boolean des_itemIsKey(){
				    return false;
				}
				public Integer des_itemLength(){
				    return null;
				}
				public Integer des_itemPrecision(){
				    return null;
				}
				public String des_itemDefault(){
				
					return null;
				
				}
				public String des_itemComment(){
				
				    return "";
				
				}
				public String des_itemPattern(){
				
					return "";
				
				}
				public String des_itemOriginalDbColumnName(){
				
					return "des_item";
				
				}

				
			    public String referencia;

				public String getReferencia () {
					return this.referencia;
				}

				public Boolean referenciaIsNullable(){
				    return true;
				}
				public Boolean referenciaIsKey(){
				    return false;
				}
				public Integer referenciaLength(){
				    return null;
				}
				public Integer referenciaPrecision(){
				    return null;
				}
				public String referenciaDefault(){
				
					return null;
				
				}
				public String referenciaComment(){
				
				    return "";
				
				}
				public String referenciaPattern(){
				
					return "";
				
				}
				public String referenciaOriginalDbColumnName(){
				
					return "referencia";
				
				}

				
			    public BigDecimal vl_tab_7;

				public BigDecimal getVl_tab_7 () {
					return this.vl_tab_7;
				}

				public Boolean vl_tab_7IsNullable(){
				    return true;
				}
				public Boolean vl_tab_7IsKey(){
				    return false;
				}
				public Integer vl_tab_7Length(){
				    return null;
				}
				public Integer vl_tab_7Precision(){
				    return null;
				}
				public String vl_tab_7Default(){
				
					return null;
				
				}
				public String vl_tab_7Comment(){
				
				    return "";
				
				}
				public String vl_tab_7Pattern(){
				
					return "";
				
				}
				public String vl_tab_7OriginalDbColumnName(){
				
					return "vl_tab_7";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return null;
				}
				public Integer vl_custoPrecision(){
				    return null;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.des_item = readString(dis);
					
					this.referencia = readString(dis);
					
						this.vl_tab_7 = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.des_item = readString(dis);
					
					this.referencia = readString(dis);
					
						this.vl_tab_7 = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.des_item,dos);
					
					// String
				
						writeString(this.referencia,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tab_7);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.des_item,dos);
					
					// String
				
						writeString(this.referencia,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tab_7);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",des_item="+des_item);
		sb.append(",referencia="+referencia);
		sb.append(",vl_tab_7="+String.valueOf(vl_tab_7));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tAdvancedHash_row3 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row3", false);
		start_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tAdvancedHash_row3 = 0;
		

			   		// connection name:row3
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_1) outputs:(row3,row3) | target node:tAdvancedHash_row3 - inputs:(row3) outputs:()
			   		// linked node: tMap_2 - inputs:(row2,row3) outputs:(base_custo)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row3 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row3Struct>getLookup(matchingModeEnum_row3);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row3", tHash_Lookup_row3);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row3 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row7Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_mercado_livre_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row7Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row7Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row3.cod_item = next_tHashInput_3.cod_item;
	row3.des_item = next_tHashInput_3.des_item;
	row3.referencia = next_tHashInput_3.referencia;
	row3.vl_tab_7 = next_tHashInput_3.vl_tab_7;
	row3.vl_custo = next_tHashInput_3.vl_custo;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


			   
			   

					row3Struct row3_HashRow = new row3Struct();
		   	   	   
				
				row3_HashRow.cod_item = row3.cod_item;
				
				row3_HashRow.des_item = row3.des_item;
				
				row3_HashRow.referencia = row3.referencia;
				
				row3_HashRow.vl_tab_7 = row3.vl_tab_7;
				
				row3_HashRow.vl_custo = row3.vl_custo;
				
			tHash_Lookup_row3.put(row3_HashRow);
			
            




 


	tos_count_tAdvancedHash_row3++;

/**
 * [tAdvancedHash_row3 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_mercado_livre_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

tHash_Lookup_row3.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row3", true);
end_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());




/**
 * [tAdvancedHash_row3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_relatorio_valida_mercado_livre_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = ""+context.Pasta_Rede+"/Parametro/Parametro.csv";
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited(""+context.Pasta_Rede+"/Parametro/Parametro.csv", "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row75 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row75 = new row75Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					String temp = ""; 
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row75.Quantidade = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"Quantidade", "row75", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row75.Quantidade = null;
								
							
						}
					
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row75 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row75"
if(row75 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					



    
		row75Struct oneRow_tHashOutput_2 = new row75Struct();
				
					oneRow_tHashOutput_2.Quantidade = row75.Quantidade;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "row75"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)(""+context.Pasta_Rede+"/Parametro/Parametro.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tFileDelete_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
	java.io.File path_tFileDelete_1=new java.io.File(""+context.Pasta_Rede+"/Parametro/Parametro.csv");
	if(path_tFileDelete_1.exists()){
		if(path_tFileDelete_1.isFile()){
	    	if(path_tFileDelete_1.delete()){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
	    	}
		}else if(path_tFileDelete_1.isDirectory()){ 
	    	DeleteFoldertFileDelete_1 dftFileDelete_1 = new DeleteFoldertFileDelete_1();
	    	if(dftFileDelete_1.delete(path_tFileDelete_1)){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "Path deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No path deleted.");
	    	}
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File or path does not exist or is invalid.");
    }
    globalMap.put("tFileDelete_1_DELETE_PATH",""+context.Pasta_Rede+"/Parametro/Parametro.csv");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row76Struct row76 = new row76Struct();
row78Struct row78 = new row78Struct();





	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(""+context.Pasta_Rede+"/Parametro/Parametro.csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("Quantidade");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_valida_mercado_livre_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row75Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row75Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row76.Quantidade = next_tHashInput_2.Quantidade;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					

    //Code generate according to input schema and output schema
row78.Quantidade = row76.Quantidade+1;
context.Arquivo = row78.Quantidade;
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row78.Quantidade != null) {
                        sb_tFileOutputDelimited_1.append(
                            row78.Quantidade
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

                    }



 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_valida_mercado_livre_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String des_item;

				public String getDes_item () {
					return this.des_item;
				}

				public Boolean des_itemIsNullable(){
				    return true;
				}
				public Boolean des_itemIsKey(){
				    return false;
				}
				public Integer des_itemLength(){
				    return null;
				}
				public Integer des_itemPrecision(){
				    return null;
				}
				public String des_itemDefault(){
				
					return null;
				
				}
				public String des_itemComment(){
				
				    return "";
				
				}
				public String des_itemPattern(){
				
					return "";
				
				}
				public String des_itemOriginalDbColumnName(){
				
					return "des_item";
				
				}

				
			    public String referencia;

				public String getReferencia () {
					return this.referencia;
				}

				public Boolean referenciaIsNullable(){
				    return true;
				}
				public Boolean referenciaIsKey(){
				    return false;
				}
				public Integer referenciaLength(){
				    return null;
				}
				public Integer referenciaPrecision(){
				    return null;
				}
				public String referenciaDefault(){
				
					return null;
				
				}
				public String referenciaComment(){
				
				    return "";
				
				}
				public String referenciaPattern(){
				
					return "";
				
				}
				public String referenciaOriginalDbColumnName(){
				
					return "referencia";
				
				}

				
			    public BigDecimal vl_tab_7;

				public BigDecimal getVl_tab_7 () {
					return this.vl_tab_7;
				}

				public Boolean vl_tab_7IsNullable(){
				    return true;
				}
				public Boolean vl_tab_7IsKey(){
				    return false;
				}
				public Integer vl_tab_7Length(){
				    return null;
				}
				public Integer vl_tab_7Precision(){
				    return null;
				}
				public String vl_tab_7Default(){
				
					return null;
				
				}
				public String vl_tab_7Comment(){
				
				    return "";
				
				}
				public String vl_tab_7Pattern(){
				
					return "";
				
				}
				public String vl_tab_7OriginalDbColumnName(){
				
					return "vl_tab_7";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return null;
				}
				public Integer vl_custoPrecision(){
				    return null;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.des_item = readString(dis);
					
					this.referencia = readString(dis);
					
						this.vl_tab_7 = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_valida_mercado_livre) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.des_item = readString(dis);
					
					this.referencia = readString(dis);
					
						this.vl_tab_7 = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.des_item,dos);
					
					// String
				
						writeString(this.referencia,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tab_7);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.des_item,dos);
					
					// String
				
						writeString(this.referencia,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tab_7);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",des_item="+des_item);
		sb.append(",referencia="+referencia);
		sb.append(",vl_tab_7="+String.valueOf(vl_tab_7));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row7Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_relatorio_valida_mercado_livre_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row7Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select G.ITE_CODITE cod_item,\n       I.ITE_DESITE des_item,\n       I.ITE_REFERE referencia,\n       G.ITE_PREVE7 vl_t"
+"ab_7,\n       ROUND(G.ITE_PRECUS,4) vl_custo\n  FROM CADITE I,\n       ITEGER G\n WHERE G.ITE_CODITE = I.ITE_CODITE\n   "
+"AND I.ITE_ITEATI = 'S'\n   AND G.ITE_CODEMP = '001'";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row7.cod_item = null;
							} else {
	                         		
        	row7.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row7.des_item = null;
							} else {
	                         		
        	row7.des_item = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row7.referencia = null;
							} else {
	                         		
        	row7.referencia = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row7.vl_tab_7 = null;
							} else {
		                          
            row7.vl_tab_7 = rs_tDBInput_1.getBigDecimal(4);
            if(rs_tDBInput_1.wasNull()){
                    row7.vl_tab_7 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row7.vl_custo = null;
							} else {
		                          
            row7.vl_custo = rs_tDBInput_1.getBigDecimal(5);
            if(rs_tDBInput_1.wasNull()){
                    row7.vl_custo = null;
            }
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					



    
		row7Struct oneRow_tHashOutput_3 = new row7Struct();
				
					oneRow_tHashOutput_3.cod_item = row7.cod_item;
					oneRow_tHashOutput_3.des_item = row7.des_item;
					oneRow_tHashOutput_3.referencia = row7.referencia;
					oneRow_tHashOutput_3.vl_tab_7 = row7.vl_tab_7;
					oneRow_tHashOutput_3.vl_custo = row7.vl_custo;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_valida_mercado_livre relatorio_valida_mercado_livreClass = new relatorio_valida_mercado_livre();

        int exitCode = relatorio_valida_mercado_livreClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_valida_mercado_livre.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_valida_mercado_livre_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_valida_mercado_livre.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("EMAIL_PASSWORD", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD") == null) {
                            context.EMAIL_PASSWORD = null;
                        } else {
                            context.EMAIL_PASSWORD=(String) context.getProperty("EMAIL_PASSWORD");
                        }
                        context.setContextType("EMAIL", "id_String");
                        if(context.getStringValue("EMAIL") == null) {
                            context.EMAIL = null;
                        } else {
                            context.EMAIL=(String) context.getProperty("EMAIL");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("SMTP", "id_String");
                        if(context.getStringValue("SMTP") == null) {
                            context.SMTP = null;
                        } else {
                            context.SMTP=(String) context.getProperty("SMTP");
                        }
                        context.setContextType("SMTP_PORT", "id_String");
                        if(context.getStringValue("SMTP_PORT") == null) {
                            context.SMTP_PORT = null;
                        } else {
                            context.SMTP_PORT=(String) context.getProperty("SMTP_PORT");
                        }
                        context.setContextType("data_atual", "id_String");
                        if(context.getStringValue("data_atual") == null) {
                            context.data_atual = null;
                        } else {
                            context.data_atual=(String) context.getProperty("data_atual");
                        }
                        context.setContextType("data_atual1", "id_String");
                        if(context.getStringValue("data_atual1") == null) {
                            context.data_atual1 = null;
                        } else {
                            context.data_atual1=(String) context.getProperty("data_atual1");
                        }
                        context.setContextType("Pasta_Rede", "id_String");
                        if(context.getStringValue("Pasta_Rede") == null) {
                            context.Pasta_Rede = null;
                        } else {
                            context.Pasta_Rede=(String) context.getProperty("Pasta_Rede");
                        }
                        context.setContextType("Arquivo", "id_Integer");
                        if(context.getStringValue("Arquivo") == null) {
                            context.Arquivo = null;
                        } else {
                            try{
                                context.Arquivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Arquivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Arquivo", e.getMessage()));
                                context.Arquivo=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD")) {
                context.EMAIL_PASSWORD = (String) parentContextMap.get("EMAIL_PASSWORD");
            }if (parentContextMap.containsKey("EMAIL")) {
                context.EMAIL = (String) parentContextMap.get("EMAIL");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("SMTP")) {
                context.SMTP = (String) parentContextMap.get("SMTP");
            }if (parentContextMap.containsKey("SMTP_PORT")) {
                context.SMTP_PORT = (String) parentContextMap.get("SMTP_PORT");
            }if (parentContextMap.containsKey("data_atual")) {
                context.data_atual = (String) parentContextMap.get("data_atual");
            }if (parentContextMap.containsKey("data_atual1")) {
                context.data_atual1 = (String) parentContextMap.get("data_atual1");
            }if (parentContextMap.containsKey("Pasta_Rede")) {
                context.Pasta_Rede = (String) parentContextMap.get("Pasta_Rede");
            }if (parentContextMap.containsKey("Arquivo")) {
                context.Arquivo = (Integer) parentContextMap.get("Arquivo");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

e_tFileInputExcel_1.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputDelimited_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", -1);

e_tFileInputDelimited_1.printStackTrace();

}catch (java.lang.Error e_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputDelimited_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}catch (java.lang.Error e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_valida_mercado_livre");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     548598 characters generated by Talend Open Studio for Big Data 
 *     on the 25 de abril de 2024 10:33:54 BRT
 ************************************************************************************************/