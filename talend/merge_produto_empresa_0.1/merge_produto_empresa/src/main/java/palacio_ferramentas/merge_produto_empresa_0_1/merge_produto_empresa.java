// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.merge_produto_empresa_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: merge_produto_empresa Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class merge_produto_empresa implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(DW_DB != null){
				
					this.setProperty("DW_DB", DW_DB.toString());
				
			}
			
			if(DW_HOST != null){
				
					this.setProperty("DW_HOST", DW_HOST.toString());
				
			}
			
			if(DW_PASSWORD != null){
				
					this.setProperty("DW_PASSWORD", DW_PASSWORD.toString());
				
			}
			
			if(DW_PORT != null){
				
					this.setProperty("DW_PORT", DW_PORT.toString());
				
			}
			
			if(DW_USER != null){
				
					this.setProperty("DW_USER", DW_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String DW_DB;
public String getDW_DB(){
	return this.DW_DB;
}
public String DW_HOST;
public String getDW_HOST(){
	return this.DW_HOST;
}
public String DW_PASSWORD;
public String getDW_PASSWORD(){
	return this.DW_PASSWORD;
}
public String DW_PORT;
public String getDW_PORT(){
	return this.DW_PORT;
}
public String DW_USER;
public String getDW_USER(){
	return this.DW_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "merge_produto_empresa";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				merge_produto_empresa.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(merge_produto_empresa.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBConnection_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_3Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_3", false);
		start_Hash.put("tDBConnection_3", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_3";
	
	
		int tos_count_tDBConnection_3 = 0;
		


	
            String dbProperties_tDBConnection_3 = "ApplicationName=merge_t_produto_empresa";
            String url_tDBConnection_3 = "jdbc:postgresql://"+context.POSTGRES_HOST+":"+context.POSTGRES_PORT+"/"+context.POSTGRES_DB;
            
            if(dbProperties_tDBConnection_3 != null && !"".equals(dbProperties_tDBConnection_3.trim())) {
                url_tDBConnection_3 = url_tDBConnection_3 + "?" + dbProperties_tDBConnection_3;
            }
	String dbUser_tDBConnection_3 = context.POSTGRES_USER;
	
	
		
	final String decryptedPassword_tDBConnection_3 = context.POSTGRES_PASSWORD; 
		String dbPwd_tDBConnection_3 = decryptedPassword_tDBConnection_3;
	
	
	java.sql.Connection conn_tDBConnection_3 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_3 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_3 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_3.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_3 = drivers_tDBConnection_3.nextElement();
        if (redShiftDriverNames_tDBConnection_3.contains(d_tDBConnection_3.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_3);
                java.sql.DriverManager.registerDriver(d_tDBConnection_3);
            } catch (java.lang.Exception e_tDBConnection_3) {
globalMap.put("tDBConnection_3_ERROR_MESSAGE",e_tDBConnection_3.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_3 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_3 = java.lang.Class.forName(driverClass_tDBConnection_3);
			globalMap.put("driverClass_tDBConnection_3", driverClass_tDBConnection_3);
		
			conn_tDBConnection_3 = java.sql.DriverManager.getConnection(url_tDBConnection_3,dbUser_tDBConnection_3,dbPwd_tDBConnection_3);

		globalMap.put("conn_tDBConnection_3", conn_tDBConnection_3);
	if (null != conn_tDBConnection_3) {
		
			conn_tDBConnection_3.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_3","");

 



/**
 * [tDBConnection_3 begin ] stop
 */
	
	/**
	 * [tDBConnection_3 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 


	tos_count_tDBConnection_3++;

/**
 * [tDBConnection_3 main ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_3 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 

ok_Hash.put("tDBConnection_3", true);
end_Hash.put("tDBConnection_3", System.currentTimeMillis());




/**
 * [tDBConnection_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_3 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_merge_produto_empresa_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_2=0;
        java.lang.StringBuilder sb_tDBOutput_2 = new java.lang.StringBuilder();
        sb_tDBOutput_2.append("INSERT INTO \"").append(tableName_tDBOutput_2).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_2 = sb_tDBOutput_2.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_2 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_2.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_2.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                insertedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_2) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


System.out.println("\n");
System.out.println("*************************************************");
System.out.println("Iniciando SELECT na stg_t_produto_empresa: ");
System.out.println("Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("\n");


 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class insertStruct implements routines.system.IPersistableRow<insertStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public String curva_emp;

				public String getCurva_emp () {
					return this.curva_emp;
				}

				public Boolean curva_empIsNullable(){
				    return true;
				}
				public Boolean curva_empIsKey(){
				    return false;
				}
				public Integer curva_empLength(){
				    return null;
				}
				public Integer curva_empPrecision(){
				    return null;
				}
				public String curva_empDefault(){
				
					return null;
				
				}
				public String curva_empComment(){
				
				    return "";
				
				}
				public String curva_empPattern(){
				
					return "";
				
				}
				public String curva_empOriginalDbColumnName(){
				
					return "curva_emp";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insertStruct other = (insertStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insertStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.SALDO_FISICO = this.SALDO_FISICO;
	            other.RESERVADO_ORDEM_PRODUCAO = this.RESERVADO_ORDEM_PRODUCAO;
	            other.RESERVADO_PEDIDO_VENDA = this.RESERVADO_PEDIDO_VENDA;
	            other.RESERVADO_ENDERECAMENTO = this.RESERVADO_ENDERECAMENTO;
	            other.RESERVADO_GARANTIA = this.RESERVADO_GARANTIA;
	            other.RESERVADO_EXTERNO = this.RESERVADO_EXTERNO;
	            other.VL_COMPRA = this.VL_COMPRA;
	            other.PRECO_COMPRA = this.PRECO_COMPRA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA1_PRECO_VENDA = this.TABELA1_PRECO_VENDA;
	            other.MARKUP_TABELA1 = this.MARKUP_TABELA1;
	            other.TABELA2_PRECO_VENDA = this.TABELA2_PRECO_VENDA;
	            other.MARKUP_TABELA2 = this.MARKUP_TABELA2;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.MARKUP_TABELA3 = this.MARKUP_TABELA3;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.MARKUP_TABELA4 = this.MARKUP_TABELA4;
	            other.TABELA5_PRECO_VENDA = this.TABELA5_PRECO_VENDA;
	            other.MARKUP_TABELA5 = this.MARKUP_TABELA5;
	            other.TABELA6_PRECO_VENDA = this.TABELA6_PRECO_VENDA;
	            other.MARKUP_TABELA6 = this.MARKUP_TABELA6;
	            other.TABELA7_PRECO_VENDA = this.TABELA7_PRECO_VENDA;
	            other.MARKUP_TABELA7 = this.MARKUP_TABELA7;
	            other.ABRANGENCIA_FISCAL = this.ABRANGENCIA_FISCAL;
	            other.IMPORTADO = this.IMPORTADO;
	            other.DT_ULTIMA_COMPRA = this.DT_ULTIMA_COMPRA;
	            other.PRECO_ULTIMA_COMPRA = this.PRECO_ULTIMA_COMPRA;
	            other.QTD_ULTIMA_COMPRA = this.QTD_ULTIMA_COMPRA;
	            other.PRECO_MEDIO = this.PRECO_MEDIO;
	            other.DT_ULTIMA_VENDA = this.DT_ULTIMA_VENDA;
	            other.PRECO_ULTIMA_VENDA = this.PRECO_ULTIMA_VENDA;
	            other.QTD_ULTIMA_VENDA = this.QTD_ULTIMA_VENDA;
	            other.DIAS_SEM_VENDA = this.DIAS_SEM_VENDA;
	            other.ST = this.ST;
	            other.CURVA_ABC = this.CURVA_ABC;
	            other.CRITICIDADE = this.CRITICIDADE;
	            other.LOCAL_FISICO = this.LOCAL_FISICO;
	            other.Curva_qtde = this.Curva_qtde;
	            other.Curva_vlr = this.Curva_vlr;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.curva_emp = this.curva_emp;
	            other.agp_curva_emp = this.agp_curva_emp;
	            other.STATUS = this.STATUS;
	            
	}

	public void copyKeysDataTo(insertStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",curva_emp="+curva_emp);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insertStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public String curva_emp;

				public String getCurva_emp () {
					return this.curva_emp;
				}

				public Boolean curva_empIsNullable(){
				    return true;
				}
				public Boolean curva_empIsKey(){
				    return false;
				}
				public Integer curva_empLength(){
				    return null;
				}
				public Integer curva_empPrecision(){
				    return null;
				}
				public String curva_empDefault(){
				
					return null;
				
				}
				public String curva_empComment(){
				
				    return "";
				
				}
				public String curva_empPattern(){
				
					return "";
				
				}
				public String curva_empOriginalDbColumnName(){
				
					return "curva_emp";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",curva_emp="+curva_emp);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
insertStruct insert = new insertStruct();





	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<insertStruct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_merge_produto_empresa_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<insertStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insertStruct insert_tmp = new insertStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select \ncd_produto,\ncd_empresa,\nsaldo_fisico,\nreservado_ordem_producao,\nreservado_pedido_venda,\nreservado_enderec"
+"amento,\nreservado_garantia,\nreservado_externo,\nvl_compra,\npreco_compra,\nvl_custo,\ntabela1_preco_venda,\nmarkup_tab"
+"ela1,\ntabela2_preco_venda,\nmarkup_tabela2,\ntabela3_preco_venda,\nmarkup_tabela3,\ntabela4_preco_venda,\nmarkup_tabela"
+"4,\ntabela5_preco_venda,\nmarkup_tabela5,\ntabela6_preco_venda,\nmarkup_tabela6,\ntabela7_preco_venda,\nmarkup_tabela7,"
+"\nabrangencia_fiscal,\nimportado,\ndt_ultima_compra,\npreco_ultima_compra,\nqtd_ultima_compra,\npreco_medio,\ndt_ultima_v"
+"enda,\npreco_ultima_venda,\nqtd_ultima_venda,\ndias_sem_venda,\nst,\ncurva_abc,\ncriticidade,\nlocal_fisico,\ncurva_qtde"
+",\ncurva_vlr,\ndata_execucao,\ncode_curva_emp,\nagp_curva_emp,\nstatus\nfrom stg_t_produto_empresa;\n";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row1.CD_PRODUTO = null;
							} else {
	                         		
        	row1.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row1.CD_EMPRESA = null;
							} else {
	                         		
        	row1.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row1.SALDO_FISICO = null;
							} else {
		                          
            row1.SALDO_FISICO = rs_tDBInput_4.getBigDecimal(3);
            if(rs_tDBInput_4.wasNull()){
                    row1.SALDO_FISICO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row1.RESERVADO_ORDEM_PRODUCAO = null;
							} else {
		                          
            row1.RESERVADO_ORDEM_PRODUCAO = rs_tDBInput_4.getBigDecimal(4);
            if(rs_tDBInput_4.wasNull()){
                    row1.RESERVADO_ORDEM_PRODUCAO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row1.RESERVADO_PEDIDO_VENDA = null;
							} else {
		                          
            row1.RESERVADO_PEDIDO_VENDA = rs_tDBInput_4.getBigDecimal(5);
            if(rs_tDBInput_4.wasNull()){
                    row1.RESERVADO_PEDIDO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row1.RESERVADO_ENDERECAMENTO = null;
							} else {
		                          
            row1.RESERVADO_ENDERECAMENTO = rs_tDBInput_4.getBigDecimal(6);
            if(rs_tDBInput_4.wasNull()){
                    row1.RESERVADO_ENDERECAMENTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 7) {
								row1.RESERVADO_GARANTIA = null;
							} else {
		                          
            row1.RESERVADO_GARANTIA = rs_tDBInput_4.getBigDecimal(7);
            if(rs_tDBInput_4.wasNull()){
                    row1.RESERVADO_GARANTIA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 8) {
								row1.RESERVADO_EXTERNO = null;
							} else {
		                          
            row1.RESERVADO_EXTERNO = rs_tDBInput_4.getBigDecimal(8);
            if(rs_tDBInput_4.wasNull()){
                    row1.RESERVADO_EXTERNO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 9) {
								row1.VL_COMPRA = null;
							} else {
		                          
            row1.VL_COMPRA = rs_tDBInput_4.getBigDecimal(9);
            if(rs_tDBInput_4.wasNull()){
                    row1.VL_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 10) {
								row1.PRECO_COMPRA = null;
							} else {
		                          
            row1.PRECO_COMPRA = rs_tDBInput_4.getBigDecimal(10);
            if(rs_tDBInput_4.wasNull()){
                    row1.PRECO_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 11) {
								row1.VL_CUSTO = null;
							} else {
		                          
            row1.VL_CUSTO = rs_tDBInput_4.getBigDecimal(11);
            if(rs_tDBInput_4.wasNull()){
                    row1.VL_CUSTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 12) {
								row1.TABELA1_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA1_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(12);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA1_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 13) {
								row1.MARKUP_TABELA1 = null;
							} else {
		                          
            row1.MARKUP_TABELA1 = rs_tDBInput_4.getBigDecimal(13);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA1 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 14) {
								row1.TABELA2_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA2_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(14);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA2_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 15) {
								row1.MARKUP_TABELA2 = null;
							} else {
		                          
            row1.MARKUP_TABELA2 = rs_tDBInput_4.getBigDecimal(15);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA2 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 16) {
								row1.TABELA3_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA3_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(16);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA3_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 17) {
								row1.MARKUP_TABELA3 = null;
							} else {
		                          
            row1.MARKUP_TABELA3 = rs_tDBInput_4.getBigDecimal(17);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA3 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 18) {
								row1.TABELA4_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA4_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(18);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA4_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 19) {
								row1.MARKUP_TABELA4 = null;
							} else {
		                          
            row1.MARKUP_TABELA4 = rs_tDBInput_4.getBigDecimal(19);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA4 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 20) {
								row1.TABELA5_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA5_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(20);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA5_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 21) {
								row1.MARKUP_TABELA5 = null;
							} else {
		                          
            row1.MARKUP_TABELA5 = rs_tDBInput_4.getBigDecimal(21);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA5 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 22) {
								row1.TABELA6_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA6_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(22);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA6_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 23) {
								row1.MARKUP_TABELA6 = null;
							} else {
		                          
            row1.MARKUP_TABELA6 = rs_tDBInput_4.getBigDecimal(23);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA6 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 24) {
								row1.TABELA7_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA7_PRECO_VENDA = rs_tDBInput_4.getBigDecimal(24);
            if(rs_tDBInput_4.wasNull()){
                    row1.TABELA7_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 25) {
								row1.MARKUP_TABELA7 = null;
							} else {
		                          
            row1.MARKUP_TABELA7 = rs_tDBInput_4.getBigDecimal(25);
            if(rs_tDBInput_4.wasNull()){
                    row1.MARKUP_TABELA7 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 26) {
								row1.ABRANGENCIA_FISCAL = null;
							} else {
	                         		
        	row1.ABRANGENCIA_FISCAL = routines.system.JDBCUtil.getString(rs_tDBInput_4, 26, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 27) {
								row1.IMPORTADO = null;
							} else {
	                         		
        	row1.IMPORTADO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 27, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 28) {
								row1.DT_ULTIMA_COMPRA = null;
							} else {
										
			row1.DT_ULTIMA_COMPRA = routines.system.JDBCUtil.getDate(rs_tDBInput_4, 28);
		                    }
							if(colQtyInRs_tDBInput_4 < 29) {
								row1.PRECO_ULTIMA_COMPRA = null;
							} else {
		                          
            row1.PRECO_ULTIMA_COMPRA = rs_tDBInput_4.getBigDecimal(29);
            if(rs_tDBInput_4.wasNull()){
                    row1.PRECO_ULTIMA_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 30) {
								row1.QTD_ULTIMA_COMPRA = null;
							} else {
		                          
            row1.QTD_ULTIMA_COMPRA = rs_tDBInput_4.getInt(30);
            if(rs_tDBInput_4.wasNull()){
                    row1.QTD_ULTIMA_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 31) {
								row1.PRECO_MEDIO = null;
							} else {
		                          
            row1.PRECO_MEDIO = rs_tDBInput_4.getBigDecimal(31);
            if(rs_tDBInput_4.wasNull()){
                    row1.PRECO_MEDIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 32) {
								row1.DT_ULTIMA_VENDA = null;
							} else {
										
			row1.DT_ULTIMA_VENDA = routines.system.JDBCUtil.getDate(rs_tDBInput_4, 32);
		                    }
							if(colQtyInRs_tDBInput_4 < 33) {
								row1.PRECO_ULTIMA_VENDA = null;
							} else {
		                          
            row1.PRECO_ULTIMA_VENDA = rs_tDBInput_4.getBigDecimal(33);
            if(rs_tDBInput_4.wasNull()){
                    row1.PRECO_ULTIMA_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 34) {
								row1.QTD_ULTIMA_VENDA = null;
							} else {
		                          
            row1.QTD_ULTIMA_VENDA = rs_tDBInput_4.getInt(34);
            if(rs_tDBInput_4.wasNull()){
                    row1.QTD_ULTIMA_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 35) {
								row1.DIAS_SEM_VENDA = null;
							} else {
		                          
            row1.DIAS_SEM_VENDA = rs_tDBInput_4.getInt(35);
            if(rs_tDBInput_4.wasNull()){
                    row1.DIAS_SEM_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 36) {
								row1.ST = null;
							} else {
	                         		
            row1.ST = rs_tDBInput_4.getDouble(36);
            if(rs_tDBInput_4.wasNull()){
                    row1.ST = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 37) {
								row1.CURVA_ABC = null;
							} else {
	                         		
        	row1.CURVA_ABC = routines.system.JDBCUtil.getString(rs_tDBInput_4, 37, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 38) {
								row1.CRITICIDADE = null;
							} else {
	                         		
        	row1.CRITICIDADE = routines.system.JDBCUtil.getString(rs_tDBInput_4, 38, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 39) {
								row1.LOCAL_FISICO = null;
							} else {
	                         		
        	row1.LOCAL_FISICO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 39, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 40) {
								row1.Curva_qtde = null;
							} else {
	                         		
        	row1.Curva_qtde = routines.system.JDBCUtil.getString(rs_tDBInput_4, 40, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 41) {
								row1.Curva_vlr = null;
							} else {
	                         		
        	row1.Curva_vlr = routines.system.JDBCUtil.getString(rs_tDBInput_4, 41, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 42) {
								row1.DATA_EXECUCAO = null;
							} else {
										
			row1.DATA_EXECUCAO = routines.system.JDBCUtil.getDate(rs_tDBInput_4, 42);
		                    }
							if(colQtyInRs_tDBInput_4 < 43) {
								row1.curva_emp = null;
							} else {
	                         		
        	row1.curva_emp = routines.system.JDBCUtil.getString(rs_tDBInput_4, 43, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 44) {
								row1.agp_curva_emp = null;
							} else {
	                         		
        	row1.agp_curva_emp = routines.system.JDBCUtil.getString(rs_tDBInput_4, 44, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 45) {
								row1.STATUS = null;
							} else {
	                         		
        	row1.STATUS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 45, false);
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert = null;


// # Output table : 'insert'
insert_tmp.CD_PRODUTO = row1.CD_PRODUTO ;
insert_tmp.CD_EMPRESA = row1.CD_EMPRESA ;
insert_tmp.SALDO_FISICO = row1.SALDO_FISICO ;
insert_tmp.RESERVADO_ORDEM_PRODUCAO = row1.RESERVADO_ORDEM_PRODUCAO ;
insert_tmp.RESERVADO_PEDIDO_VENDA = row1.RESERVADO_PEDIDO_VENDA ;
insert_tmp.RESERVADO_ENDERECAMENTO = row1.RESERVADO_ENDERECAMENTO ;
insert_tmp.RESERVADO_GARANTIA = row1.RESERVADO_GARANTIA ;
insert_tmp.RESERVADO_EXTERNO = row1.RESERVADO_EXTERNO ;
insert_tmp.VL_COMPRA = row1.VL_COMPRA ;
insert_tmp.PRECO_COMPRA = row1.PRECO_COMPRA ;
insert_tmp.VL_CUSTO = row1.VL_CUSTO ;
insert_tmp.TABELA1_PRECO_VENDA = row1.TABELA1_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA1 = row1.MARKUP_TABELA1 ;
insert_tmp.TABELA2_PRECO_VENDA = row1.TABELA2_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA2 = row1.MARKUP_TABELA2 ;
insert_tmp.TABELA3_PRECO_VENDA = row1.TABELA3_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA3 = row1.MARKUP_TABELA3 ;
insert_tmp.TABELA4_PRECO_VENDA = row1.TABELA4_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA4 = row1.MARKUP_TABELA4 ;
insert_tmp.TABELA5_PRECO_VENDA = row1.TABELA5_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA5 = row1.MARKUP_TABELA5 ;
insert_tmp.TABELA6_PRECO_VENDA = row1.TABELA6_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA6 = row1.MARKUP_TABELA6 ;
insert_tmp.TABELA7_PRECO_VENDA = row1.TABELA7_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA7 = row1.MARKUP_TABELA7 ;
insert_tmp.ABRANGENCIA_FISCAL = row1.ABRANGENCIA_FISCAL ;
insert_tmp.IMPORTADO = row1.IMPORTADO ;
insert_tmp.DT_ULTIMA_COMPRA = row1.DT_ULTIMA_COMPRA ;
insert_tmp.PRECO_ULTIMA_COMPRA = row1.PRECO_ULTIMA_COMPRA ;
insert_tmp.QTD_ULTIMA_COMPRA = row1.QTD_ULTIMA_COMPRA ;
insert_tmp.PRECO_MEDIO = row1.PRECO_MEDIO ;
insert_tmp.DT_ULTIMA_VENDA = row1.DT_ULTIMA_VENDA ;
insert_tmp.PRECO_ULTIMA_VENDA = row1.PRECO_ULTIMA_VENDA ;
insert_tmp.QTD_ULTIMA_VENDA = row1.QTD_ULTIMA_VENDA ;
insert_tmp.DIAS_SEM_VENDA = row1.DIAS_SEM_VENDA ;
insert_tmp.ST = row1.ST ;
insert_tmp.CURVA_ABC = row1.CURVA_ABC ;
insert_tmp.CRITICIDADE = row1.CRITICIDADE ;
insert_tmp.LOCAL_FISICO = row1.LOCAL_FISICO ;
insert_tmp.Curva_qtde = row1.Curva_qtde ;
insert_tmp.Curva_vlr = row1.Curva_vlr ;
insert_tmp.DATA_EXECUCAO = row1.DATA_EXECUCAO ;
insert_tmp.curva_emp = row1.curva_emp ;
insert_tmp.agp_curva_emp = row1.agp_curva_emp ;
insert_tmp.STATUS = row1.STATUS ;
insert = insert_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert"
if(insert != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert"
						
						);
					}
					



    
		insertStruct oneRow_tHashOutput_2 = new insertStruct();
				
					oneRow_tHashOutput_2.CD_PRODUTO = insert.CD_PRODUTO;
					oneRow_tHashOutput_2.CD_EMPRESA = insert.CD_EMPRESA;
					oneRow_tHashOutput_2.SALDO_FISICO = insert.SALDO_FISICO;
					oneRow_tHashOutput_2.RESERVADO_ORDEM_PRODUCAO = insert.RESERVADO_ORDEM_PRODUCAO;
					oneRow_tHashOutput_2.RESERVADO_PEDIDO_VENDA = insert.RESERVADO_PEDIDO_VENDA;
					oneRow_tHashOutput_2.RESERVADO_ENDERECAMENTO = insert.RESERVADO_ENDERECAMENTO;
					oneRow_tHashOutput_2.RESERVADO_GARANTIA = insert.RESERVADO_GARANTIA;
					oneRow_tHashOutput_2.RESERVADO_EXTERNO = insert.RESERVADO_EXTERNO;
					oneRow_tHashOutput_2.VL_COMPRA = insert.VL_COMPRA;
					oneRow_tHashOutput_2.PRECO_COMPRA = insert.PRECO_COMPRA;
					oneRow_tHashOutput_2.VL_CUSTO = insert.VL_CUSTO;
					oneRow_tHashOutput_2.TABELA1_PRECO_VENDA = insert.TABELA1_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA1 = insert.MARKUP_TABELA1;
					oneRow_tHashOutput_2.TABELA2_PRECO_VENDA = insert.TABELA2_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA2 = insert.MARKUP_TABELA2;
					oneRow_tHashOutput_2.TABELA3_PRECO_VENDA = insert.TABELA3_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA3 = insert.MARKUP_TABELA3;
					oneRow_tHashOutput_2.TABELA4_PRECO_VENDA = insert.TABELA4_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA4 = insert.MARKUP_TABELA4;
					oneRow_tHashOutput_2.TABELA5_PRECO_VENDA = insert.TABELA5_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA5 = insert.MARKUP_TABELA5;
					oneRow_tHashOutput_2.TABELA6_PRECO_VENDA = insert.TABELA6_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA6 = insert.MARKUP_TABELA6;
					oneRow_tHashOutput_2.TABELA7_PRECO_VENDA = insert.TABELA7_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA7 = insert.MARKUP_TABELA7;
					oneRow_tHashOutput_2.ABRANGENCIA_FISCAL = insert.ABRANGENCIA_FISCAL;
					oneRow_tHashOutput_2.IMPORTADO = insert.IMPORTADO;
					oneRow_tHashOutput_2.DT_ULTIMA_COMPRA = insert.DT_ULTIMA_COMPRA;
					oneRow_tHashOutput_2.PRECO_ULTIMA_COMPRA = insert.PRECO_ULTIMA_COMPRA;
					oneRow_tHashOutput_2.QTD_ULTIMA_COMPRA = insert.QTD_ULTIMA_COMPRA;
					oneRow_tHashOutput_2.PRECO_MEDIO = insert.PRECO_MEDIO;
					oneRow_tHashOutput_2.DT_ULTIMA_VENDA = insert.DT_ULTIMA_VENDA;
					oneRow_tHashOutput_2.PRECO_ULTIMA_VENDA = insert.PRECO_ULTIMA_VENDA;
					oneRow_tHashOutput_2.QTD_ULTIMA_VENDA = insert.QTD_ULTIMA_VENDA;
					oneRow_tHashOutput_2.DIAS_SEM_VENDA = insert.DIAS_SEM_VENDA;
					oneRow_tHashOutput_2.ST = insert.ST;
					oneRow_tHashOutput_2.CURVA_ABC = insert.CURVA_ABC;
					oneRow_tHashOutput_2.CRITICIDADE = insert.CRITICIDADE;
					oneRow_tHashOutput_2.LOCAL_FISICO = insert.LOCAL_FISICO;
					oneRow_tHashOutput_2.Curva_qtde = insert.Curva_qtde;
					oneRow_tHashOutput_2.Curva_vlr = insert.Curva_vlr;
					oneRow_tHashOutput_2.DATA_EXECUCAO = insert.DATA_EXECUCAO;
					oneRow_tHashOutput_2.curva_emp = insert.curva_emp;
					oneRow_tHashOutput_2.agp_curva_emp = insert.agp_curva_emp;
					oneRow_tHashOutput_2.STATUS = insert.STATUS;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "insert"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tJava_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("Iniciando INSERT na dw_t_produto_empresa: ");
System.out.println("Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("\n");


 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class insert_dwStruct implements routines.system.IPersistableRow<insert_dwStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insert_dwStruct other = (insert_dwStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insert_dwStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.SALDO_FISICO = this.SALDO_FISICO;
	            other.RESERVADO_ORDEM_PRODUCAO = this.RESERVADO_ORDEM_PRODUCAO;
	            other.RESERVADO_PEDIDO_VENDA = this.RESERVADO_PEDIDO_VENDA;
	            other.RESERVADO_ENDERECAMENTO = this.RESERVADO_ENDERECAMENTO;
	            other.RESERVADO_GARANTIA = this.RESERVADO_GARANTIA;
	            other.RESERVADO_EXTERNO = this.RESERVADO_EXTERNO;
	            other.VL_COMPRA = this.VL_COMPRA;
	            other.PRECO_COMPRA = this.PRECO_COMPRA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA1_PRECO_VENDA = this.TABELA1_PRECO_VENDA;
	            other.MARKUP_TABELA1 = this.MARKUP_TABELA1;
	            other.TABELA2_PRECO_VENDA = this.TABELA2_PRECO_VENDA;
	            other.MARKUP_TABELA2 = this.MARKUP_TABELA2;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.MARKUP_TABELA3 = this.MARKUP_TABELA3;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.MARKUP_TABELA4 = this.MARKUP_TABELA4;
	            other.TABELA5_PRECO_VENDA = this.TABELA5_PRECO_VENDA;
	            other.MARKUP_TABELA5 = this.MARKUP_TABELA5;
	            other.TABELA6_PRECO_VENDA = this.TABELA6_PRECO_VENDA;
	            other.MARKUP_TABELA6 = this.MARKUP_TABELA6;
	            other.TABELA7_PRECO_VENDA = this.TABELA7_PRECO_VENDA;
	            other.MARKUP_TABELA7 = this.MARKUP_TABELA7;
	            other.ABRANGENCIA_FISCAL = this.ABRANGENCIA_FISCAL;
	            other.IMPORTADO = this.IMPORTADO;
	            other.DT_ULTIMA_COMPRA = this.DT_ULTIMA_COMPRA;
	            other.PRECO_ULTIMA_COMPRA = this.PRECO_ULTIMA_COMPRA;
	            other.QTD_ULTIMA_COMPRA = this.QTD_ULTIMA_COMPRA;
	            other.PRECO_MEDIO = this.PRECO_MEDIO;
	            other.DT_ULTIMA_VENDA = this.DT_ULTIMA_VENDA;
	            other.PRECO_ULTIMA_VENDA = this.PRECO_ULTIMA_VENDA;
	            other.QTD_ULTIMA_VENDA = this.QTD_ULTIMA_VENDA;
	            other.DIAS_SEM_VENDA = this.DIAS_SEM_VENDA;
	            other.ST = this.ST;
	            other.CURVA_ABC = this.CURVA_ABC;
	            other.CRITICIDADE = this.CRITICIDADE;
	            other.LOCAL_FISICO = this.LOCAL_FISICO;
	            other.Curva_qtde = this.Curva_qtde;
	            other.Curva_vlr = this.Curva_vlr;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.code_curva_emp = this.code_curva_emp;
	            other.agp_curva_emp = this.agp_curva_emp;
	            other.STATUS = this.STATUS;
	            
	}

	public void copyKeysDataTo(insert_dwStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_dwStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
insert_dwStruct insert_dw = new insert_dwStruct();





	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_dw");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





String dbschema_tDBOutput_4 = null;
	dbschema_tDBOutput_4 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_4 = null;
if(dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
	tableName_tDBOutput_4 = ("dw_t_produto_empresa").toLowerCase();
} else {
	tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "\".\"" + ("dw_t_produto_empresa").toLowerCase();
}


int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;
int rowsToCommitCount_tDBOutput_4=0;
int rejectedCount_tDBOutput_4=0;

boolean whetherReject_tDBOutput_4 = false;

java.sql.Connection conn_tDBOutput_4 = null;
String dbUser_tDBOutput_4 = null;

	conn_tDBOutput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	


   int batchSize_tDBOutput_4 = 1000;
   int batchSizeCounter_tDBOutput_4=0;

int count_tDBOutput_4=0;
            int rsTruncCountNumber_tDBOutput_4 = 0;
            try(java.sql.Statement stmtTruncCount_tDBOutput_4 = conn_tDBOutput_4.createStatement()) {
                try (java.sql.ResultSet rsTruncCount_tDBOutput_4 = stmtTruncCount_tDBOutput_4.executeQuery("SELECT COUNT(1) FROM \"" + tableName_tDBOutput_4 + "\"")) {
                    if(rsTruncCount_tDBOutput_4.next()) {
                        rsTruncCountNumber_tDBOutput_4 = rsTruncCount_tDBOutput_4.getInt(1);
                    }
                }
            }
            try (java.sql.Statement stmtTrunc_tDBOutput_4 = conn_tDBOutput_4.createStatement()) {
                stmtTrunc_tDBOutput_4.executeUpdate("TRUNCATE TABLE \"" + tableName_tDBOutput_4 + "\"");
                deletedCount_tDBOutput_4 += rsTruncCountNumber_tDBOutput_4;
            }
        java.lang.StringBuilder sb_tDBOutput_4 = new java.lang.StringBuilder();
        sb_tDBOutput_4.append("INSERT INTO \"").append(tableName_tDBOutput_4).append("\" (\"cd_produto\",\"cd_empresa\",\"saldo_fisico\",\"reservado_ordem_producao\",\"reservado_pedido_venda\",\"reservado_enderecamento\",\"reservado_garantia\",\"reservado_externo\",\"vl_compra\",\"preco_compra\",\"vl_custo\",\"tabela1_preco_venda\",\"markup_tabela1\",\"tabela2_preco_venda\",\"markup_tabela2\",\"tabela3_preco_venda\",\"markup_tabela3\",\"tabela4_preco_venda\",\"markup_tabela4\",\"tabela5_preco_venda\",\"markup_tabela5\",\"tabela6_preco_venda\",\"markup_tabela6\",\"tabela7_preco_venda\",\"markup_tabela7\",\"abrangencia_fiscal\",\"importado\",\"dt_ultima_compra\",\"preco_ultima_compra\",\"qtd_ultima_compra\",\"preco_medio\",\"dt_ultima_venda\",\"preco_ultima_venda\",\"qtd_ultima_venda\",\"dias_sem_venda\",\"st\",\"curva_abc\",\"criticidade\",\"local_fisico\",\"curva_qtde\",\"curva_vlr\",\"data_execucao\",\"code_curva_emp\",\"agp_curva_emp\",\"status\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_4 = sb_tDBOutput_4.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(insert_tDBOutput_4);
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_dwStruct insert_dw_tmp = new insert_dwStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<insertStruct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_merge_produto_empresa_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<insertStruct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    insertStruct next_tHashInput_2 = iterator_tHashInput_2.next();

	row3.CD_PRODUTO = next_tHashInput_2.CD_PRODUTO;
	row3.CD_EMPRESA = next_tHashInput_2.CD_EMPRESA;
	row3.SALDO_FISICO = next_tHashInput_2.SALDO_FISICO;
	row3.RESERVADO_ORDEM_PRODUCAO = next_tHashInput_2.RESERVADO_ORDEM_PRODUCAO;
	row3.RESERVADO_PEDIDO_VENDA = next_tHashInput_2.RESERVADO_PEDIDO_VENDA;
	row3.RESERVADO_ENDERECAMENTO = next_tHashInput_2.RESERVADO_ENDERECAMENTO;
	row3.RESERVADO_GARANTIA = next_tHashInput_2.RESERVADO_GARANTIA;
	row3.RESERVADO_EXTERNO = next_tHashInput_2.RESERVADO_EXTERNO;
	row3.VL_COMPRA = next_tHashInput_2.VL_COMPRA;
	row3.PRECO_COMPRA = next_tHashInput_2.PRECO_COMPRA;
	row3.VL_CUSTO = next_tHashInput_2.VL_CUSTO;
	row3.TABELA1_PRECO_VENDA = next_tHashInput_2.TABELA1_PRECO_VENDA;
	row3.MARKUP_TABELA1 = next_tHashInput_2.MARKUP_TABELA1;
	row3.TABELA2_PRECO_VENDA = next_tHashInput_2.TABELA2_PRECO_VENDA;
	row3.MARKUP_TABELA2 = next_tHashInput_2.MARKUP_TABELA2;
	row3.TABELA3_PRECO_VENDA = next_tHashInput_2.TABELA3_PRECO_VENDA;
	row3.MARKUP_TABELA3 = next_tHashInput_2.MARKUP_TABELA3;
	row3.TABELA4_PRECO_VENDA = next_tHashInput_2.TABELA4_PRECO_VENDA;
	row3.MARKUP_TABELA4 = next_tHashInput_2.MARKUP_TABELA4;
	row3.TABELA5_PRECO_VENDA = next_tHashInput_2.TABELA5_PRECO_VENDA;
	row3.MARKUP_TABELA5 = next_tHashInput_2.MARKUP_TABELA5;
	row3.TABELA6_PRECO_VENDA = next_tHashInput_2.TABELA6_PRECO_VENDA;
	row3.MARKUP_TABELA6 = next_tHashInput_2.MARKUP_TABELA6;
	row3.TABELA7_PRECO_VENDA = next_tHashInput_2.TABELA7_PRECO_VENDA;
	row3.MARKUP_TABELA7 = next_tHashInput_2.MARKUP_TABELA7;
	row3.ABRANGENCIA_FISCAL = next_tHashInput_2.ABRANGENCIA_FISCAL;
	row3.IMPORTADO = next_tHashInput_2.IMPORTADO;
	row3.DT_ULTIMA_COMPRA = next_tHashInput_2.DT_ULTIMA_COMPRA;
	row3.PRECO_ULTIMA_COMPRA = next_tHashInput_2.PRECO_ULTIMA_COMPRA;
	row3.QTD_ULTIMA_COMPRA = next_tHashInput_2.QTD_ULTIMA_COMPRA;
	row3.PRECO_MEDIO = next_tHashInput_2.PRECO_MEDIO;
	row3.DT_ULTIMA_VENDA = next_tHashInput_2.DT_ULTIMA_VENDA;
	row3.PRECO_ULTIMA_VENDA = next_tHashInput_2.PRECO_ULTIMA_VENDA;
	row3.QTD_ULTIMA_VENDA = next_tHashInput_2.QTD_ULTIMA_VENDA;
	row3.DIAS_SEM_VENDA = next_tHashInput_2.DIAS_SEM_VENDA;
	row3.ST = next_tHashInput_2.ST;
	row3.CURVA_ABC = next_tHashInput_2.CURVA_ABC;
	row3.CRITICIDADE = next_tHashInput_2.CRITICIDADE;
	row3.LOCAL_FISICO = next_tHashInput_2.LOCAL_FISICO;
	row3.Curva_qtde = next_tHashInput_2.Curva_qtde;
	row3.Curva_vlr = next_tHashInput_2.Curva_vlr;
	row3.DATA_EXECUCAO = next_tHashInput_2.DATA_EXECUCAO;
	row3.code_curva_emp = next_tHashInput_2.curva_emp;
	row3.agp_curva_emp = next_tHashInput_2.agp_curva_emp;
	row3.STATUS = next_tHashInput_2.STATUS;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

insert_dw = null;


// # Output table : 'insert_dw'
insert_dw_tmp.CD_PRODUTO = row3.CD_PRODUTO;
insert_dw_tmp.CD_EMPRESA = row3.CD_EMPRESA;
insert_dw_tmp.SALDO_FISICO = row3.SALDO_FISICO;
insert_dw_tmp.RESERVADO_ORDEM_PRODUCAO = row3.RESERVADO_ORDEM_PRODUCAO;
insert_dw_tmp.RESERVADO_PEDIDO_VENDA = row3.RESERVADO_PEDIDO_VENDA;
insert_dw_tmp.RESERVADO_ENDERECAMENTO = row3.RESERVADO_ENDERECAMENTO;
insert_dw_tmp.RESERVADO_GARANTIA = row3.RESERVADO_GARANTIA;
insert_dw_tmp.RESERVADO_EXTERNO = row3.RESERVADO_EXTERNO;
insert_dw_tmp.VL_COMPRA = row3.VL_COMPRA;
insert_dw_tmp.PRECO_COMPRA = row3.PRECO_COMPRA;
insert_dw_tmp.VL_CUSTO = row3.VL_CUSTO;
insert_dw_tmp.TABELA1_PRECO_VENDA = row3.TABELA1_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA1 = row3.MARKUP_TABELA1;
insert_dw_tmp.TABELA2_PRECO_VENDA = row3.TABELA2_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA2 = row3.MARKUP_TABELA2;
insert_dw_tmp.TABELA3_PRECO_VENDA = row3.TABELA3_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA3 = row3.MARKUP_TABELA3;
insert_dw_tmp.TABELA4_PRECO_VENDA = row3.TABELA4_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA4 = row3.MARKUP_TABELA4;
insert_dw_tmp.TABELA5_PRECO_VENDA = row3.TABELA5_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA5 = row3.MARKUP_TABELA5;
insert_dw_tmp.TABELA6_PRECO_VENDA = row3.TABELA6_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA6 = row3.MARKUP_TABELA6;
insert_dw_tmp.TABELA7_PRECO_VENDA = row3.TABELA7_PRECO_VENDA;
insert_dw_tmp.MARKUP_TABELA7 = row3.MARKUP_TABELA7;
insert_dw_tmp.ABRANGENCIA_FISCAL = row3.ABRANGENCIA_FISCAL;
insert_dw_tmp.IMPORTADO = row3.IMPORTADO;
insert_dw_tmp.DT_ULTIMA_COMPRA = row3.DT_ULTIMA_COMPRA;
insert_dw_tmp.PRECO_ULTIMA_COMPRA = row3.PRECO_ULTIMA_COMPRA;
insert_dw_tmp.QTD_ULTIMA_COMPRA = row3.QTD_ULTIMA_COMPRA;
insert_dw_tmp.PRECO_MEDIO = row3.PRECO_MEDIO;
insert_dw_tmp.DT_ULTIMA_VENDA = row3.DT_ULTIMA_VENDA;
insert_dw_tmp.PRECO_ULTIMA_VENDA = row3.PRECO_ULTIMA_VENDA;
insert_dw_tmp.QTD_ULTIMA_VENDA = row3.QTD_ULTIMA_VENDA;
insert_dw_tmp.DIAS_SEM_VENDA = row3.DIAS_SEM_VENDA;
insert_dw_tmp.ST = row3.ST;
insert_dw_tmp.CURVA_ABC = row3.CURVA_ABC;
insert_dw_tmp.CRITICIDADE = row3.CRITICIDADE;
insert_dw_tmp.LOCAL_FISICO = row3.LOCAL_FISICO;
insert_dw_tmp.Curva_qtde = row3.Curva_qtde;
insert_dw_tmp.Curva_vlr = row3.Curva_vlr;
insert_dw_tmp.DATA_EXECUCAO = TalendDate.getCurrentDate();
insert_dw_tmp.code_curva_emp = row3.code_curva_emp ;
insert_dw_tmp.agp_curva_emp = row3.agp_curva_emp ;
insert_dw_tmp.STATUS = row3.STATUS ;
insert_dw = insert_dw_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "insert_dw"
if(insert_dw != null) { 



	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_dw"
						
						);
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(insert_dw.CD_PRODUTO == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, insert_dw.CD_PRODUTO);
}

                    if(insert_dw.CD_EMPRESA == null) {
pstmt_tDBOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(2, insert_dw.CD_EMPRESA);
}

                    pstmt_tDBOutput_4.setBigDecimal(3, insert_dw.SALDO_FISICO);

                    pstmt_tDBOutput_4.setBigDecimal(4, insert_dw.RESERVADO_ORDEM_PRODUCAO);

                    pstmt_tDBOutput_4.setBigDecimal(5, insert_dw.RESERVADO_PEDIDO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(6, insert_dw.RESERVADO_ENDERECAMENTO);

                    pstmt_tDBOutput_4.setBigDecimal(7, insert_dw.RESERVADO_GARANTIA);

                    pstmt_tDBOutput_4.setBigDecimal(8, insert_dw.RESERVADO_EXTERNO);

                    pstmt_tDBOutput_4.setBigDecimal(9, insert_dw.VL_COMPRA);

                    pstmt_tDBOutput_4.setBigDecimal(10, insert_dw.PRECO_COMPRA);

                    pstmt_tDBOutput_4.setBigDecimal(11, insert_dw.VL_CUSTO);

                    pstmt_tDBOutput_4.setBigDecimal(12, insert_dw.TABELA1_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(13, insert_dw.MARKUP_TABELA1);

                    pstmt_tDBOutput_4.setBigDecimal(14, insert_dw.TABELA2_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(15, insert_dw.MARKUP_TABELA2);

                    pstmt_tDBOutput_4.setBigDecimal(16, insert_dw.TABELA3_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(17, insert_dw.MARKUP_TABELA3);

                    pstmt_tDBOutput_4.setBigDecimal(18, insert_dw.TABELA4_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(19, insert_dw.MARKUP_TABELA4);

                    pstmt_tDBOutput_4.setBigDecimal(20, insert_dw.TABELA5_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(21, insert_dw.MARKUP_TABELA5);

                    pstmt_tDBOutput_4.setBigDecimal(22, insert_dw.TABELA6_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(23, insert_dw.MARKUP_TABELA6);

                    pstmt_tDBOutput_4.setBigDecimal(24, insert_dw.TABELA7_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(25, insert_dw.MARKUP_TABELA7);

                    if(insert_dw.ABRANGENCIA_FISCAL == null) {
pstmt_tDBOutput_4.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(26, insert_dw.ABRANGENCIA_FISCAL);
}

                    if(insert_dw.IMPORTADO == null) {
pstmt_tDBOutput_4.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(27, insert_dw.IMPORTADO);
}

                    if(insert_dw.DT_ULTIMA_COMPRA != null) {
pstmt_tDBOutput_4.setTimestamp(28, new java.sql.Timestamp(insert_dw.DT_ULTIMA_COMPRA.getTime()));
} else {
pstmt_tDBOutput_4.setNull(28, java.sql.Types.TIMESTAMP);
}

                    pstmt_tDBOutput_4.setBigDecimal(29, insert_dw.PRECO_ULTIMA_COMPRA);

                    if(insert_dw.QTD_ULTIMA_COMPRA == null) {
pstmt_tDBOutput_4.setNull(30, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(30, insert_dw.QTD_ULTIMA_COMPRA);
}

                    pstmt_tDBOutput_4.setBigDecimal(31, insert_dw.PRECO_MEDIO);

                    if(insert_dw.DT_ULTIMA_VENDA != null) {
pstmt_tDBOutput_4.setTimestamp(32, new java.sql.Timestamp(insert_dw.DT_ULTIMA_VENDA.getTime()));
} else {
pstmt_tDBOutput_4.setNull(32, java.sql.Types.TIMESTAMP);
}

                    pstmt_tDBOutput_4.setBigDecimal(33, insert_dw.PRECO_ULTIMA_VENDA);

                    if(insert_dw.QTD_ULTIMA_VENDA == null) {
pstmt_tDBOutput_4.setNull(34, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(34, insert_dw.QTD_ULTIMA_VENDA);
}

                    if(insert_dw.DIAS_SEM_VENDA == null) {
pstmt_tDBOutput_4.setNull(35, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(35, insert_dw.DIAS_SEM_VENDA);
}

                    if(insert_dw.ST == null) {
pstmt_tDBOutput_4.setNull(36, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_4.setDouble(36, insert_dw.ST);
}

                    if(insert_dw.CURVA_ABC == null) {
pstmt_tDBOutput_4.setNull(37, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(37, insert_dw.CURVA_ABC);
}

                    if(insert_dw.CRITICIDADE == null) {
pstmt_tDBOutput_4.setNull(38, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(38, insert_dw.CRITICIDADE);
}

                    if(insert_dw.LOCAL_FISICO == null) {
pstmt_tDBOutput_4.setNull(39, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(39, insert_dw.LOCAL_FISICO);
}

                    if(insert_dw.Curva_qtde == null) {
pstmt_tDBOutput_4.setNull(40, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(40, insert_dw.Curva_qtde);
}

                    if(insert_dw.Curva_vlr == null) {
pstmt_tDBOutput_4.setNull(41, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(41, insert_dw.Curva_vlr);
}

                    if(insert_dw.DATA_EXECUCAO != null) {
pstmt_tDBOutput_4.setTimestamp(42, new java.sql.Timestamp(insert_dw.DATA_EXECUCAO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(42, java.sql.Types.TIMESTAMP);
}

                    if(insert_dw.code_curva_emp == null) {
pstmt_tDBOutput_4.setNull(43, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(43, insert_dw.code_curva_emp);
}

                    if(insert_dw.agp_curva_emp == null) {
pstmt_tDBOutput_4.setNull(44, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(44, insert_dw.agp_curva_emp);
}

                    if(insert_dw.STATUS == null) {
pstmt_tDBOutput_4.setNull(45, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(45, insert_dw.STATUS);
}

			
    		pstmt_tDBOutput_4.addBatch();
    		nb_line_tDBOutput_4++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_4++;
    		  
    			if ((batchSize_tDBOutput_4 > 0) && (batchSize_tDBOutput_4 <= batchSizeCounter_tDBOutput_4)) {
                try {
						int countSum_tDBOutput_4 = 0;
						    
						for(int countEach_tDBOutput_4: pstmt_tDBOutput_4.executeBatch()) {
							countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
						}
				    	rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
				    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
            	    	batchSizeCounter_tDBOutput_4 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_4){
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e_tDBOutput_4.getMessage());
				    	java.sql.SQLException ne_tDBOutput_4 = e_tDBOutput_4.getNextException(),sqle_tDBOutput_4=null;
				    	String errormessage_tDBOutput_4;
						if (ne_tDBOutput_4 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_4 = new java.sql.SQLException(e_tDBOutput_4.getMessage() + "\ncaused by: " + ne_tDBOutput_4.getMessage(), ne_tDBOutput_4.getSQLState(), ne_tDBOutput_4.getErrorCode(), ne_tDBOutput_4);
							errormessage_tDBOutput_4 = sqle_tDBOutput_4.getMessage();
						}else{
							errormessage_tDBOutput_4 = e_tDBOutput_4.getMessage();
						}
				    	
				    	int countSum_tDBOutput_4 = 0;
						for(int countEach_tDBOutput_4: e_tDBOutput_4.getUpdateCounts()) {
							countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
						}
						rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
						
				    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
				    	System.err.println(errormessage_tDBOutput_4);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */

} // End of branch "insert_dw"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_merge_produto_empresa_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



	    try {
				int countSum_tDBOutput_4 = 0;
				if (pstmt_tDBOutput_4 != null && batchSizeCounter_tDBOutput_4 > 0) {
						
					for(int countEach_tDBOutput_4: pstmt_tDBOutput_4.executeBatch()) {
						countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
					}
					rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
						
				}
		    	
		    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_4){
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e_tDBOutput_4.getMessage());
	    	java.sql.SQLException ne_tDBOutput_4 = e_tDBOutput_4.getNextException(),sqle_tDBOutput_4=null;
	    	String errormessage_tDBOutput_4;
			if (ne_tDBOutput_4 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_4 = new java.sql.SQLException(e_tDBOutput_4.getMessage() + "\ncaused by: " + ne_tDBOutput_4.getMessage(), ne_tDBOutput_4.getSQLState(), ne_tDBOutput_4.getErrorCode(), ne_tDBOutput_4);
				errormessage_tDBOutput_4 = sqle_tDBOutput_4.getMessage();
			}else{
				errormessage_tDBOutput_4 = e_tDBOutput_4.getMessage();
			}
	    	
	    	int countSum_tDBOutput_4 = 0;
			for(int countEach_tDBOutput_4: e_tDBOutput_4.getUpdateCounts()) {
				countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
			}
			rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
			
	    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
	    	
	    	System.err.println(errormessage_tDBOutput_4);
	    	
		}
	    
        if(pstmt_tDBOutput_4 != null) {
        		
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_dw");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());




/**
 * [tDBOutput_4 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_merge_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_merge_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_3 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_3=0;
	    String update_tDBOutput_3 = "UPDATE \"" + tableName_tDBOutput_3 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_merge_produto_empresa_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.nm_programa = next_tHashInput_1.nm_programa;
	row6.data_inicio_execucao = next_tHashInput_1.data_inicio_execucao;
	row6.data_termino_execucao = next_tHashInput_1.data_termino_execucao;
	row6.mensagem = next_tHashInput_1.mensagem;
	row6.uuid = next_tHashInput_1.uuid;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row6.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row6.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_3.setNull(5 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5 + count_tDBOutput_3, update_log.uuid);
}


            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                updatedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_merge_produto_empresa_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tDBClose_2Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final merge_produto_empresa merge_produto_empresaClass = new merge_produto_empresa();

        int exitCode = merge_produto_empresaClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = merge_produto_empresa.class.getClassLoader().getResourceAsStream("palacio_ferramentas/merge_produto_empresa_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = merge_produto_empresa.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("DW_DB", "id_String");
                        if(context.getStringValue("DW_DB") == null) {
                            context.DW_DB = null;
                        } else {
                            context.DW_DB=(String) context.getProperty("DW_DB");
                        }
                        context.setContextType("DW_HOST", "id_String");
                        if(context.getStringValue("DW_HOST") == null) {
                            context.DW_HOST = null;
                        } else {
                            context.DW_HOST=(String) context.getProperty("DW_HOST");
                        }
                        context.setContextType("DW_PASSWORD", "id_String");
                        if(context.getStringValue("DW_PASSWORD") == null) {
                            context.DW_PASSWORD = null;
                        } else {
                            context.DW_PASSWORD=(String) context.getProperty("DW_PASSWORD");
                        }
                        context.setContextType("DW_PORT", "id_String");
                        if(context.getStringValue("DW_PORT") == null) {
                            context.DW_PORT = null;
                        } else {
                            context.DW_PORT=(String) context.getProperty("DW_PORT");
                        }
                        context.setContextType("DW_USER", "id_String");
                        if(context.getStringValue("DW_USER") == null) {
                            context.DW_USER = null;
                        } else {
                            context.DW_USER=(String) context.getProperty("DW_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("DW_DB")) {
                context.DW_DB = (String) parentContextMap.get("DW_DB");
            }if (parentContextMap.containsKey("DW_HOST")) {
                context.DW_HOST = (String) parentContextMap.get("DW_HOST");
            }if (parentContextMap.containsKey("DW_PASSWORD")) {
                context.DW_PASSWORD = (String) parentContextMap.get("DW_PASSWORD");
            }if (parentContextMap.containsKey("DW_PORT")) {
                context.DW_PORT = (String) parentContextMap.get("DW_PORT");
            }if (parentContextMap.containsKey("DW_USER")) {
                context.DW_USER = (String) parentContextMap.get("DW_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs


this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : merge_produto_empresa");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_3");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_3", globalMap.get("conn_tDBConnection_3"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     460632 characters generated by Talend Open Studio for Big Data 
 *     on the 10 de janeiro de 2025 17:31:51 BRT
 ************************************************************************************************/