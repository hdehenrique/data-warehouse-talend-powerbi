// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.dw_t_ponto_colaborador_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: dw_t_ponto_colaborador Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class dw_t_ponto_colaborador implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(PONTEC_HOST != null){
				
					this.setProperty("PONTEC_HOST", PONTEC_HOST.toString());
				
			}
			
			if(PONTEC_DB != null){
				
					this.setProperty("PONTEC_DB", PONTEC_DB.toString());
				
			}
			
			if(PONTEC_PORT != null){
				
					this.setProperty("PONTEC_PORT", PONTEC_PORT.toString());
				
			}
			
			if(PONTEC_USER != null){
				
					this.setProperty("PONTEC_USER", PONTEC_USER.toString());
				
			}
			
			if(PONTEC_PASSWORD != null){
				
					this.setProperty("PONTEC_PASSWORD", PONTEC_PASSWORD.toString());
				
			}
			
			if(PONTEC_JDBC_PARAMETERS != null){
				
					this.setProperty("PONTEC_JDBC_PARAMETERS", PONTEC_JDBC_PARAMETERS.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String PONTEC_HOST;
public String getPONTEC_HOST(){
	return this.PONTEC_HOST;
}
public String PONTEC_DB;
public String getPONTEC_DB(){
	return this.PONTEC_DB;
}
public String PONTEC_PORT;
public String getPONTEC_PORT(){
	return this.PONTEC_PORT;
}
public String PONTEC_USER;
public String getPONTEC_USER(){
	return this.PONTEC_USER;
}
public String PONTEC_PASSWORD;
public String getPONTEC_PASSWORD(){
	return this.PONTEC_PASSWORD;
}
public String PONTEC_JDBC_PARAMETERS;
public String getPONTEC_JDBC_PARAMETERS(){
	return this.PONTEC_JDBC_PARAMETERS;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "dw_t_ponto_colaborador";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				dw_t_ponto_colaborador.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(dw_t_ponto_colaborador.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError2", 0, "error");
						}
					
					errorCode = null;
					tDie_2Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					errorCode = null;
					tDie_1Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
row11Struct row11 = new row11Struct();





	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_dw_t_ponto_colaborador_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
			org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_1 = org.talend.designer.components.util.mssql.MSSqlUtilFactory.getMSSqlGenerateTimestampUtil();
			
			java.util.List<String> talendToDBList_tDBInput_1 = new java.util.ArrayList();
			String[] talendToDBArray_tDBInput_1  = new String[]{"FLOAT","NUMERIC","NUMERIC IDENTITY","DECIMAL","DECIMAL IDENTITY","REAL"}; 
			java.util.Collections.addAll(talendToDBList_tDBInput_1, talendToDBArray_tDBInput_1); 
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
			String dbschema_tDBInput_1 = (String)globalMap.get("dbschema_tDBConnection_1");
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "SELECT\n    F.id,\n    F.nome,\n    F.admissao,\n    F.demissao,\n    MD.descricao motivo_demissao,\n    F.nascimento,"
+"\n    F.sexo_masculino,\n    F.estado_civil_id,\n    F.invisivel status,\n    F.centro_custos,\n    D.descricao departame"
+"nto,\n    FU.descricao funcao,\n    E.nome empresa\nfrom [Ponto4 SQL].dbo.funcionarios F\nleft join [Ponto4 SQL].dbo.mot"
+"ivos_demissao MD on F.motivo_demissao_id = MD.id \nleft join [Ponto4 SQL].dbo.departamentos D ON  F.departamento_id = D."
+"id\nleft join [Ponto4 SQL].dbo.funcoes FU ON F.funcao_id = FU.id\nleft join [Ponto4 SQL].dbo.empresas E ON  F.empresa_id"
+" = E.id";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row1.id = null;
							} else {
		                          
            row1.id = rs_tDBInput_1.getInt(1);
            if(rs_tDBInput_1.wasNull()){
                    row1.id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row1.nome = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(2);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.nome = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.nome = tmpContent_tDBInput_1;
                }
            } else {
                row1.nome = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row1.admissao = null;
							} else {
										
			row1.admissao = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 3);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row1.demissao = null;
							} else {
										
			row1.demissao = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 4);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row1.motivo_demissao = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(5);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(5).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.motivo_demissao = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.motivo_demissao = tmpContent_tDBInput_1;
                }
            } else {
                row1.motivo_demissao = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row1.nascimento = null;
							} else {
										
			row1.nascimento = mssqlGTU_tDBInput_1.getDate(rsmd_tDBInput_1, rs_tDBInput_1, 6);
			
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row1.sexo_masculino = null;
							} else {
		                          
            row1.sexo_masculino = rs_tDBInput_1.getInt(7);
            if(rs_tDBInput_1.wasNull()){
                    row1.sexo_masculino = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row1.estado_civil_id = null;
							} else {
		                          
            row1.estado_civil_id = rs_tDBInput_1.getInt(8);
            if(rs_tDBInput_1.wasNull()){
                    row1.estado_civil_id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 9) {
								row1.status = null;
							} else {
		                          
            row1.status = rs_tDBInput_1.getInt(9);
            if(rs_tDBInput_1.wasNull()){
                    row1.status = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 10) {
								row1.centro_custos = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(10);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(10).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.centro_custos = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.centro_custos = tmpContent_tDBInput_1;
                }
            } else {
                row1.centro_custos = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 11) {
								row1.departamento = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(11);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(11).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.departamento = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.departamento = tmpContent_tDBInput_1;
                }
            } else {
                row1.departamento = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 12) {
								row1.funcao = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(12);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(12).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.funcao = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.funcao = tmpContent_tDBInput_1;
                }
            } else {
                row1.funcao = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 13) {
								row1.empresa = null;
							} else {
	                         		
           		tmpContent_tDBInput_1 = rs_tDBInput_1.getString(13);
            if(tmpContent_tDBInput_1 != null) {
            	if (talendToDBList_tDBInput_1 .contains(rsmd_tDBInput_1.getColumnTypeName(13).toUpperCase(java.util.Locale.ENGLISH))) {
            		row1.empresa = FormatterUtils.formatUnwithE(tmpContent_tDBInput_1);
            	} else {
                	row1.empresa = tmpContent_tDBInput_1;
                }
            } else {
                row1.empresa = null;
            }
		                    }
					





 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					


  row11 = new row11Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row11.id=TypeConvert.Integer2Integer(row1.id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.nome=TypeConvert.String2String(row1.nome);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.admissao=TypeConvert.Date2Date(row1.admissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.demissao=TypeConvert.Date2Date(row1.demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.motivo_demissao=TypeConvert.String2String(row1.motivo_demissao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.nascimento=TypeConvert.Date2Date(row1.nascimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.sexo_masculino=TypeConvert.Integer2Integer(row1.sexo_masculino);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.estado_civil_id=TypeConvert.Integer2Integer(row1.estado_civil_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.status=TypeConvert.Integer2Integer(row1.status);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.centro_custos=TypeConvert.String2String(row1.centro_custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.departamento=TypeConvert.String2String(row1.departamento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.funcao=TypeConvert.String2String(row1.funcao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row11.empresa=TypeConvert.String2String(row1.empresa);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row11 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row11"
if(row11 != null) { 



	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					



    
		row11Struct oneRow_tHashOutput_4 = new row11Struct();
				
					oneRow_tHashOutput_4.id = row11.id;
					oneRow_tHashOutput_4.nome = row11.nome;
					oneRow_tHashOutput_4.admissao = row11.admissao;
					oneRow_tHashOutput_4.demissao = row11.demissao;
					oneRow_tHashOutput_4.motivo_demissao = row11.motivo_demissao;
					oneRow_tHashOutput_4.nascimento = row11.nascimento;
					oneRow_tHashOutput_4.sexo_masculino = row11.sexo_masculino;
					oneRow_tHashOutput_4.estado_civil_id = row11.estado_civil_id;
					oneRow_tHashOutput_4.status = row11.status;
					oneRow_tHashOutput_4.centro_custos = row11.centro_custos;
					oneRow_tHashOutput_4.departamento = row11.departamento;
					oneRow_tHashOutput_4.funcao = row11.funcao;
					oneRow_tHashOutput_4.empresa = row11.empresa;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */

} // End of branch "row11"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		


	
            String dbProperties_tDBConnection_2 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_2 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_2 != null && !"".equals(dbProperties_tDBConnection_2.trim())) {
                url_tDBConnection_2 = url_tDBConnection_2 + "?" + dbProperties_tDBConnection_2;
            }
	String dbUser_tDBConnection_2 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_2 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_2 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_2.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_2 = drivers_tDBConnection_2.nextElement();
        if (redShiftDriverNames_tDBConnection_2.contains(d_tDBConnection_2.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_2);
                java.sql.DriverManager.registerDriver(d_tDBConnection_2);
            } catch (java.lang.Exception e_tDBConnection_2) {
globalMap.put("tDBConnection_2_ERROR_MESSAGE",e_tDBConnection_2.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_2 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_2","");

 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDie_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */
	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

	try {
	globalMap.put("tDie_2_DIE_PRIORITY", 5);
	System.err.println("Erro de conexão com o Banco de Dados Postegre DW");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "Erro de conexão com o Banco de Dados Postegre DW");
	globalMap.put("tDie_2_DIE_MESSAGES", "Erro de conexão com o Banco de Dados Postegre DW");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
        errorCode = new Integer(1);
        globalMap.put("tDie_2_DIE_CODE", errorCode);        

    
	

	
	
	System.exit(1);

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */
	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		
	

	
			String url_tDBConnection_1 = "jdbc:jtds:sqlserver://" + System.getenv(context.PONTEC_HOST) ;
		String port_tDBConnection_1 = System.getenv(context.PONTEC_PORT);
		String dbname_tDBConnection_1 = System.getenv(context.PONTEC_DB) ;
    	if (!"".equals(port_tDBConnection_1)) {
    		url_tDBConnection_1 += ":" + System.getenv(context.PONTEC_PORT);
    	}
    	if (!"".equals(dbname_tDBConnection_1)) {
    		
				url_tDBConnection_1 += "//" + System.getenv(context.PONTEC_DB); 
    	}

		url_tDBConnection_1 += ";appName=" + projectName + ";" + System.getenv(context.PONTEC_JDBC_PARAMETERS);  
	String dbUser_tDBConnection_1 = System.getenv(context.PONTEC_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.PONTEC_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
		
			String driverClass_tDBConnection_1 = "net.sourceforge.jtds.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(false);
	}

	globalMap.put("dbschema_tDBConnection_1", "");

	globalMap.put("db_tDBConnection_1",  System.getenv(context.PONTEC_DB));
	
	globalMap.put("shareIdentitySetting_tDBConnection_1",  false);

	globalMap.put("driver_tDBConnection_1", "JTDS");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Erro de conexão com o Banco de Dados CAIXAPROGRAMADO");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Erro de conexão com o Banco de Dados CAIXAPROGRAMADO");
	globalMap.put("tDie_1_DIE_MESSAGES", "Erro de conexão com o Banco de Dados CAIXAPROGRAMADO");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
        errorCode = new Integer(2);
        globalMap.put("tDie_1_DIE_CODE", errorCode);        

    
	

	
	
	System.exit(2);

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();
insert_logStruct insert_log = new insert_logStruct();
row80Struct row80 = new row80Struct();






	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_dw_t_ponto_colaborador_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row79.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row79.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row80 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row80 = new row80Struct();
                                row80.nm_programa = insert_log.nm_programa;
                                row80.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row80.data_termino_execucao = insert_log.data_termino_execucao;
                                row80.mensagem = insert_log.mensagem;
                                row80.uuid = insert_log.uuid;
                                row80.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row80"
if(row80 != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					



    
		row80Struct oneRow_tHashOutput_3 = new row80Struct();
				
					oneRow_tHashOutput_3.nm_programa = row80.nm_programa;
					oneRow_tHashOutput_3.data_inicio_execucao = row80.data_inicio_execucao;
					oneRow_tHashOutput_3.data_termino_execucao = row80.data_termino_execucao;
					oneRow_tHashOutput_3.mensagem = row80.mensagem;
					oneRow_tHashOutput_3.uuid = row80.uuid;
					oneRow_tHashOutput_3.versao = row80.versao;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "row80"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tHashInput_4Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class Update2Struct implements routines.system.IPersistableRow<Update2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return true;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Update2Struct other = (Update2Struct) obj;
		
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Update2Struct other) {

		other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.status = this.status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            
	}

	public void copyKeysDataTo(Update2Struct other) {

		other.id = this.id;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Update2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Insert1Struct implements routines.system.IPersistableRow<Insert1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return true;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Insert1Struct other = (Insert1Struct) obj;
		
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Insert1Struct other) {

		other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.status = this.status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            
	}

	public void copyKeysDataTo(Insert1Struct other) {

		other.id = this.id;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Insert1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Update1Struct implements routines.system.IPersistableRow<Update1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Update1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_5Process(globalMap);
		tHashInput_6Process(globalMap);

		row8Struct row8 = new row8Struct();
Insert1Struct Insert1 = new Insert1Struct();
Update1Struct Update1 = new Update1Struct();
Update2Struct Update2 = new Update2Struct();





	
	/**
	 * [tDBOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_8", false);
		start_Hash.put("tDBOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Insert1");
					}
				
		int tos_count_tDBOutput_8 = 0;
		





String dbschema_tDBOutput_8 = null;
	dbschema_tDBOutput_8 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_8 = null;
if(dbschema_tDBOutput_8 == null || dbschema_tDBOutput_8.trim().length() == 0) {
	tableName_tDBOutput_8 = ("dw_t_ponto_colaborador");
} else {
	tableName_tDBOutput_8 = dbschema_tDBOutput_8 + "\".\"" + ("dw_t_ponto_colaborador");
}


int nb_line_tDBOutput_8 = 0;
int nb_line_update_tDBOutput_8 = 0;
int nb_line_inserted_tDBOutput_8 = 0;
int nb_line_deleted_tDBOutput_8 = 0;
int nb_line_rejected_tDBOutput_8 = 0;

int deletedCount_tDBOutput_8=0;
int updatedCount_tDBOutput_8=0;
int insertedCount_tDBOutput_8=0;
int rowsToCommitCount_tDBOutput_8=0;
int rejectedCount_tDBOutput_8=0;

boolean whetherReject_tDBOutput_8 = false;

java.sql.Connection conn_tDBOutput_8 = null;
String dbUser_tDBOutput_8 = null;

	conn_tDBOutput_8 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	


   int batchSize_tDBOutput_8 = 1000;
   int batchSizeCounter_tDBOutput_8=0;

int count_tDBOutput_8=0;
        java.lang.StringBuilder sb_tDBOutput_8 = new java.lang.StringBuilder();
        sb_tDBOutput_8.append("INSERT INTO \"").append(tableName_tDBOutput_8).append("\" (\"id\",\"nome\",\"admissao\",\"demissao\",\"motivo_demissao\",\"nascimento\",\"sexo_masculino\",\"estado_civil_id\",\"status\",\"centro_custos\",\"departamento\",\"funcao\",\"empresa\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_8 = sb_tDBOutput_8.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_8 = conn_tDBOutput_8.prepareStatement(insert_tDBOutput_8);
	    resourceMap.put("pstmt_tDBOutput_8", pstmt_tDBOutput_8);
	    

 



/**
 * [tDBOutput_8 begin ] stop
 */





	
	/**
	 * [tDBOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_9", false);
		start_Hash.put("tDBOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Update2");
					}
				
		int tos_count_tDBOutput_9 = 0;
		





String dbschema_tDBOutput_9 = null;
	dbschema_tDBOutput_9 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_9 = null;
if(dbschema_tDBOutput_9 == null || dbschema_tDBOutput_9.trim().length() == 0) {
	tableName_tDBOutput_9 = ("dw_t_ponto_colaborador");
} else {
	tableName_tDBOutput_9 = dbschema_tDBOutput_9 + "\".\"" + ("dw_t_ponto_colaborador");
}

        int updateKeyCount_tDBOutput_9 = 1;
        if(updateKeyCount_tDBOutput_9 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_9 == 13 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_9 = 0;
int nb_line_update_tDBOutput_9 = 0;
int nb_line_inserted_tDBOutput_9 = 0;
int nb_line_deleted_tDBOutput_9 = 0;
int nb_line_rejected_tDBOutput_9 = 0;

int deletedCount_tDBOutput_9=0;
int updatedCount_tDBOutput_9=0;
int insertedCount_tDBOutput_9=0;
int rowsToCommitCount_tDBOutput_9=0;
int rejectedCount_tDBOutput_9=0;

boolean whetherReject_tDBOutput_9 = false;

java.sql.Connection conn_tDBOutput_9 = null;
String dbUser_tDBOutput_9 = null;

	conn_tDBOutput_9 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	


   int batchSize_tDBOutput_9 = 1000;
   int batchSizeCounter_tDBOutput_9=0;

int count_tDBOutput_9=0;
	    String update_tDBOutput_9 = "UPDATE \"" + tableName_tDBOutput_9 + "\" SET \"nome\" = ?,\"admissao\" = ?,\"demissao\" = ?,\"motivo_demissao\" = ?,\"nascimento\" = ?,\"sexo_masculino\" = ?,\"estado_civil_id\" = ?,\"status\" = ?,\"centro_custos\" = ?,\"departamento\" = ?,\"funcao\" = ?,\"empresa\" = ? WHERE \"id\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_9 = conn_tDBOutput_9.prepareStatement(update_tDBOutput_9);
	    resourceMap.put("pstmt_tDBOutput_9", pstmt_tDBOutput_9);
	    

 



/**
 * [tDBOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Update1");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
Update2Struct Update2_tmp = new Update2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
Insert1Struct Insert1_tmp = new Insert1Struct();
Update1Struct Update1_tmp = new Update1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row11Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row11Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row8.id = next_tHashInput_4.id;
	row8.nome = next_tHashInput_4.nome;
	row8.admissao = next_tHashInput_4.admissao;
	row8.demissao = next_tHashInput_4.demissao;
	row8.motivo_demissao = next_tHashInput_4.motivo_demissao;
	row8.nascimento = next_tHashInput_4.nascimento;
	row8.sexo_masculino = next_tHashInput_4.sexo_masculino;
	row8.estado_civil_id = next_tHashInput_4.estado_civil_id;
	row8.status = next_tHashInput_4.status;
	row8.centro_custos = next_tHashInput_4.centro_custos;
	row8.departamento = next_tHashInput_4.departamento;
	row8.funcao = next_tHashInput_4.funcao;
	row8.empresa = next_tHashInput_4.empresa;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row15Struct row15 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row15HashKey.id = row8.id ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row15.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_10 = true;
	  								
						
									
	
		  								forceLooprow15 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow15 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row15 != null && tHash_Lookup_row15.hasNext()) || forceLooprow15) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row15'
									
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								
								if(!forceLooprow15) { // G 46
								
							
								 
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow15 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

Update1 = null;
Insert1 = null;

if(!rejectedInnerJoin_tMap_10 ) {

// # Output table : 'Update1'
Update1_tmp.id = row8.id ;
Update1_tmp.nome = row8.nome ;
Update1_tmp.admissao = row8.admissao ;
Update1_tmp.demissao = row8.demissao ;
Update1_tmp.motivo_demissao = row8.motivo_demissao ;
Update1_tmp.nascimento = row8.nascimento ;
Update1_tmp.sexo_masculino = row8.sexo_masculino ;
Update1_tmp.estado_civil_id = row8.estado_civil_id ;
Update1_tmp.status = row8.status ;
Update1_tmp.centro_custos = row8.centro_custos ;
Update1_tmp.departamento = row8.departamento ;
Update1_tmp.funcao = row8.funcao ;
Update1_tmp.empresa = row8.empresa ;
Update1 = Update1_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Insert1'
// # Filter conditions 
if( rejectedInnerJoin_tMap_10 ) {
Insert1_tmp.id = row8.id ;
Insert1_tmp.nome = row8.nome ;
Insert1_tmp.admissao = row8.admissao ;
Insert1_tmp.demissao = row8.demissao ;
Insert1_tmp.motivo_demissao = row8.motivo_demissao ;
Insert1_tmp.nascimento = row8.nascimento ;
Insert1_tmp.sexo_masculino = row8.sexo_masculino ;
Insert1_tmp.estado_civil_id = row8.estado_civil_id ;
Insert1_tmp.status = row8.status ;
Insert1_tmp.centro_custos = row8.centro_custos ;
Insert1_tmp.departamento = row8.departamento ;
Insert1_tmp.funcao = row8.funcao ;
Insert1_tmp.empresa = row8.empresa ;
Insert1 = Insert1_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "Insert1"
if(Insert1 != null) { 



	
	/**
	 * [tDBOutput_8 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Insert1"
						
						);
					}
					



        whetherReject_tDBOutput_8 = false;
                    if(Insert1.id == null) {
pstmt_tDBOutput_8.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_8.setInt(1, Insert1.id);
}

                    if(Insert1.nome == null) {
pstmt_tDBOutput_8.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(2, Insert1.nome);
}

                    if(Insert1.admissao != null) {
pstmt_tDBOutput_8.setTimestamp(3, new java.sql.Timestamp(Insert1.admissao.getTime()));
} else {
pstmt_tDBOutput_8.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(Insert1.demissao != null) {
pstmt_tDBOutput_8.setTimestamp(4, new java.sql.Timestamp(Insert1.demissao.getTime()));
} else {
pstmt_tDBOutput_8.setNull(4, java.sql.Types.TIMESTAMP);
}

                    if(Insert1.motivo_demissao == null) {
pstmt_tDBOutput_8.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(5, Insert1.motivo_demissao);
}

                    if(Insert1.nascimento != null) {
pstmt_tDBOutput_8.setTimestamp(6, new java.sql.Timestamp(Insert1.nascimento.getTime()));
} else {
pstmt_tDBOutput_8.setNull(6, java.sql.Types.TIMESTAMP);
}

                    if(Insert1.sexo_masculino == null) {
pstmt_tDBOutput_8.setNull(7, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_8.setInt(7, Insert1.sexo_masculino);
}

                    if(Insert1.estado_civil_id == null) {
pstmt_tDBOutput_8.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_8.setInt(8, Insert1.estado_civil_id);
}

                    if(Insert1.status == null) {
pstmt_tDBOutput_8.setNull(9, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_8.setInt(9, Insert1.status);
}

                    if(Insert1.centro_custos == null) {
pstmt_tDBOutput_8.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(10, Insert1.centro_custos);
}

                    if(Insert1.departamento == null) {
pstmt_tDBOutput_8.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(11, Insert1.departamento);
}

                    if(Insert1.funcao == null) {
pstmt_tDBOutput_8.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(12, Insert1.funcao);
}

                    if(Insert1.empresa == null) {
pstmt_tDBOutput_8.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(13, Insert1.empresa);
}

			
    		pstmt_tDBOutput_8.addBatch();
    		nb_line_tDBOutput_8++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_8++;
    		  
    			if ((batchSize_tDBOutput_8 > 0) && (batchSize_tDBOutput_8 <= batchSizeCounter_tDBOutput_8)) {
                try {
						int countSum_tDBOutput_8 = 0;
						    
						for(int countEach_tDBOutput_8: pstmt_tDBOutput_8.executeBatch()) {
							countSum_tDBOutput_8 += (countEach_tDBOutput_8 < 0 ? 0 : countEach_tDBOutput_8);
						}
				    	rowsToCommitCount_tDBOutput_8 += countSum_tDBOutput_8;
				    	
				    		insertedCount_tDBOutput_8 += countSum_tDBOutput_8;
				    	
            	    	batchSizeCounter_tDBOutput_8 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_8){
globalMap.put("tDBOutput_8_ERROR_MESSAGE",e_tDBOutput_8.getMessage());
				    	java.sql.SQLException ne_tDBOutput_8 = e_tDBOutput_8.getNextException(),sqle_tDBOutput_8=null;
				    	String errormessage_tDBOutput_8;
						if (ne_tDBOutput_8 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_8 = new java.sql.SQLException(e_tDBOutput_8.getMessage() + "\ncaused by: " + ne_tDBOutput_8.getMessage(), ne_tDBOutput_8.getSQLState(), ne_tDBOutput_8.getErrorCode(), ne_tDBOutput_8);
							errormessage_tDBOutput_8 = sqle_tDBOutput_8.getMessage();
						}else{
							errormessage_tDBOutput_8 = e_tDBOutput_8.getMessage();
						}
				    	
				    	int countSum_tDBOutput_8 = 0;
						for(int countEach_tDBOutput_8: e_tDBOutput_8.getUpdateCounts()) {
							countSum_tDBOutput_8 += (countEach_tDBOutput_8 < 0 ? 0 : countEach_tDBOutput_8);
						}
						rowsToCommitCount_tDBOutput_8 += countSum_tDBOutput_8;
						
				    		insertedCount_tDBOutput_8 += countSum_tDBOutput_8;
				    	
				    	System.err.println(errormessage_tDBOutput_8);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_8++;

/**
 * [tDBOutput_8 main ] stop
 */
	
	/**
	 * [tDBOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";
	
	

 



/**
 * [tDBOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";
	
	

 



/**
 * [tDBOutput_8 process_data_end ] stop
 */

} // End of branch "Insert1"




// Start of branch "Update1"
if(Update1 != null) { 



	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Update1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
						row16Struct row16 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_11) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_11 = false;
								
                        		    		    row16HashKey.id = Update1.id ;
                        		    		
                        		    		    row16HashKey.nome = Update1.nome ;
                        		    		
                        		    		    row16HashKey.admissao = Update1.admissao  == null ? null : new java.util.Date((Update1.admissao ).getTime());
                        		    		
                        		    		    row16HashKey.demissao = Update1.demissao  == null ? null : new java.util.Date((Update1.demissao ).getTime());
                        		    		
                        		    		    row16HashKey.motivo_demissao = Update1.motivo_demissao ;
                        		    		
                        		    		    row16HashKey.nascimento = Update1.nascimento  == null ? null : new java.util.Date((Update1.nascimento ).getTime());
                        		    		
                        		    		    row16HashKey.sexo_masculino = Update1.sexo_masculino ;
                        		    		
                        		    		    row16HashKey.estado_civil_id = Update1.estado_civil_id ;
                        		    		
                        		    		    row16HashKey.status = Update1.status;
                        		    		
                        		    		    row16HashKey.centro_custos = Update1.centro_custos ;
                        		    		
                        		    		    row16HashKey.departamento = Update1.departamento ;
                        		    		
                        		    		    row16HashKey.funcao = Update1.funcao;
                        		    		
                        		    		    row16HashKey.empresa = Update1.empresa ;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row16.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_11 = true;
	  								
						
									
	
		  								forceLooprow16 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow16 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row16 != null && tHash_Lookup_row16.hasNext()) || forceLooprow16) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row16'
									
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								
								if(!forceLooprow16) { // G 46
								
							
								 
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow16 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

Update2 = null;

if(!rejectedInnerJoin_tMap_11 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Update2'
// # Filter conditions 
if( rejectedInnerJoin_tMap_11 ) {
Update2_tmp.id = Update1.id;
Update2_tmp.nome = Update1.nome;
Update2_tmp.admissao = Update1.admissao;
Update2_tmp.demissao = Update1.demissao;
Update2_tmp.motivo_demissao = Update1.motivo_demissao;
Update2_tmp.nascimento = Update1.nascimento;
Update2_tmp.sexo_masculino = Update1.sexo_masculino;
Update2_tmp.estado_civil_id = Update1.estado_civil_id;
Update2_tmp.status = Update1.status;
Update2_tmp.centro_custos = Update1.centro_custos;
Update2_tmp.departamento = Update1.departamento;
Update2_tmp.funcao = Update1.funcao;
Update2_tmp.empresa = Update1.empresa;
Update2 = Update2_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "Update2"
if(Update2 != null) { 



	
	/**
	 * [tDBOutput_9 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Update2"
						
						);
					}
					



        whetherReject_tDBOutput_9 = false;
                    if(Update2.nome == null) {
pstmt_tDBOutput_9.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_9.setString(1, Update2.nome);
}

                    if(Update2.admissao != null) {
pstmt_tDBOutput_9.setTimestamp(2, new java.sql.Timestamp(Update2.admissao.getTime()));
} else {
pstmt_tDBOutput_9.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(Update2.demissao != null) {
pstmt_tDBOutput_9.setTimestamp(3, new java.sql.Timestamp(Update2.demissao.getTime()));
} else {
pstmt_tDBOutput_9.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(Update2.motivo_demissao == null) {
pstmt_tDBOutput_9.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_9.setString(4, Update2.motivo_demissao);
}

                    if(Update2.nascimento != null) {
pstmt_tDBOutput_9.setTimestamp(5, new java.sql.Timestamp(Update2.nascimento.getTime()));
} else {
pstmt_tDBOutput_9.setNull(5, java.sql.Types.TIMESTAMP);
}

                    if(Update2.sexo_masculino == null) {
pstmt_tDBOutput_9.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_9.setInt(6, Update2.sexo_masculino);
}

                    if(Update2.estado_civil_id == null) {
pstmt_tDBOutput_9.setNull(7, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_9.setInt(7, Update2.estado_civil_id);
}

                    if(Update2.status == null) {
pstmt_tDBOutput_9.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_9.setInt(8, Update2.status);
}

                    if(Update2.centro_custos == null) {
pstmt_tDBOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_9.setString(9, Update2.centro_custos);
}

                    if(Update2.departamento == null) {
pstmt_tDBOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_9.setString(10, Update2.departamento);
}

                    if(Update2.funcao == null) {
pstmt_tDBOutput_9.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_9.setString(11, Update2.funcao);
}

                    if(Update2.empresa == null) {
pstmt_tDBOutput_9.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_9.setString(12, Update2.empresa);
}

                    if(Update2.id == null) {
pstmt_tDBOutput_9.setNull(13 + count_tDBOutput_9, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_9.setInt(13 + count_tDBOutput_9, Update2.id);
}


    		pstmt_tDBOutput_9.addBatch();
    		nb_line_tDBOutput_9++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_9++;
    		  
    			if ((batchSize_tDBOutput_9 > 0) && (batchSize_tDBOutput_9 <= batchSizeCounter_tDBOutput_9)) {
                try {
						int countSum_tDBOutput_9 = 0;
						    
						for(int countEach_tDBOutput_9: pstmt_tDBOutput_9.executeBatch()) {
							countSum_tDBOutput_9 += (countEach_tDBOutput_9 < 0 ? 0 : countEach_tDBOutput_9);
						}
				    	rowsToCommitCount_tDBOutput_9 += countSum_tDBOutput_9;
				    	
				    		updatedCount_tDBOutput_9 += countSum_tDBOutput_9;
				    	
            	    	batchSizeCounter_tDBOutput_9 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_9){
globalMap.put("tDBOutput_9_ERROR_MESSAGE",e_tDBOutput_9.getMessage());
				    	java.sql.SQLException ne_tDBOutput_9 = e_tDBOutput_9.getNextException(),sqle_tDBOutput_9=null;
				    	String errormessage_tDBOutput_9;
						if (ne_tDBOutput_9 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_9 = new java.sql.SQLException(e_tDBOutput_9.getMessage() + "\ncaused by: " + ne_tDBOutput_9.getMessage(), ne_tDBOutput_9.getSQLState(), ne_tDBOutput_9.getErrorCode(), ne_tDBOutput_9);
							errormessage_tDBOutput_9 = sqle_tDBOutput_9.getMessage();
						}else{
							errormessage_tDBOutput_9 = e_tDBOutput_9.getMessage();
						}
				    	
				    	int countSum_tDBOutput_9 = 0;
						for(int countEach_tDBOutput_9: e_tDBOutput_9.getUpdateCounts()) {
							countSum_tDBOutput_9 += (countEach_tDBOutput_9 < 0 ? 0 : countEach_tDBOutput_9);
						}
						rowsToCommitCount_tDBOutput_9 += countSum_tDBOutput_9;
						
				    		updatedCount_tDBOutput_9 += countSum_tDBOutput_9;
				    	
				    	System.err.println(errormessage_tDBOutput_9);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_9++;

/**
 * [tDBOutput_9 main ] stop
 */
	
	/**
	 * [tDBOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_9";
	
	

 



/**
 * [tDBOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_9";
	
	

 



/**
 * [tDBOutput_9 process_data_end ] stop
 */

} // End of branch "Update2"



	
		} // close loop of lookup 'row16' // G_TM_M_043
	
	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */

} // End of branch "Update1"



	
		} // close loop of lookup 'row15' // G_TM_M_043
	
	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tDBOutput_8 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";
	
	



	    try {
				int countSum_tDBOutput_8 = 0;
				if (pstmt_tDBOutput_8 != null && batchSizeCounter_tDBOutput_8 > 0) {
						
					for(int countEach_tDBOutput_8: pstmt_tDBOutput_8.executeBatch()) {
						countSum_tDBOutput_8 += (countEach_tDBOutput_8 < 0 ? 0 : countEach_tDBOutput_8);
					}
					rowsToCommitCount_tDBOutput_8 += countSum_tDBOutput_8;
						
				}
		    	
		    		insertedCount_tDBOutput_8 += countSum_tDBOutput_8;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_8){
globalMap.put("tDBOutput_8_ERROR_MESSAGE",e_tDBOutput_8.getMessage());
	    	java.sql.SQLException ne_tDBOutput_8 = e_tDBOutput_8.getNextException(),sqle_tDBOutput_8=null;
	    	String errormessage_tDBOutput_8;
			if (ne_tDBOutput_8 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_8 = new java.sql.SQLException(e_tDBOutput_8.getMessage() + "\ncaused by: " + ne_tDBOutput_8.getMessage(), ne_tDBOutput_8.getSQLState(), ne_tDBOutput_8.getErrorCode(), ne_tDBOutput_8);
				errormessage_tDBOutput_8 = sqle_tDBOutput_8.getMessage();
			}else{
				errormessage_tDBOutput_8 = e_tDBOutput_8.getMessage();
			}
	    	
	    	int countSum_tDBOutput_8 = 0;
			for(int countEach_tDBOutput_8: e_tDBOutput_8.getUpdateCounts()) {
				countSum_tDBOutput_8 += (countEach_tDBOutput_8 < 0 ? 0 : countEach_tDBOutput_8);
			}
			rowsToCommitCount_tDBOutput_8 += countSum_tDBOutput_8;
			
	    		insertedCount_tDBOutput_8 += countSum_tDBOutput_8;
	    	
	    	System.err.println(errormessage_tDBOutput_8);
	    	
		}
	    
        if(pstmt_tDBOutput_8 != null) {
        		
            pstmt_tDBOutput_8.close();
            resourceMap.remove("pstmt_tDBOutput_8");
        }
    resourceMap.put("statementClosed_tDBOutput_8", true);

	nb_line_deleted_tDBOutput_8=nb_line_deleted_tDBOutput_8+ deletedCount_tDBOutput_8;
	nb_line_update_tDBOutput_8=nb_line_update_tDBOutput_8 + updatedCount_tDBOutput_8;
	nb_line_inserted_tDBOutput_8=nb_line_inserted_tDBOutput_8 + insertedCount_tDBOutput_8;
	nb_line_rejected_tDBOutput_8=nb_line_rejected_tDBOutput_8 + rejectedCount_tDBOutput_8;
	
        globalMap.put("tDBOutput_8_NB_LINE",nb_line_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_UPDATED",nb_line_update_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_DELETED",nb_line_deleted_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_8);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Insert1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_8", true);
end_Hash.put("tDBOutput_8", System.currentTimeMillis());




/**
 * [tDBOutput_8 end ] stop
 */




	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Update1");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tDBOutput_9 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_9";
	
	



	    try {
				int countSum_tDBOutput_9 = 0;
				if (pstmt_tDBOutput_9 != null && batchSizeCounter_tDBOutput_9 > 0) {
						
					for(int countEach_tDBOutput_9: pstmt_tDBOutput_9.executeBatch()) {
						countSum_tDBOutput_9 += (countEach_tDBOutput_9 < 0 ? 0 : countEach_tDBOutput_9);
					}
					rowsToCommitCount_tDBOutput_9 += countSum_tDBOutput_9;
						
				}
		    	
		    		updatedCount_tDBOutput_9 += countSum_tDBOutput_9;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_9){
globalMap.put("tDBOutput_9_ERROR_MESSAGE",e_tDBOutput_9.getMessage());
	    	java.sql.SQLException ne_tDBOutput_9 = e_tDBOutput_9.getNextException(),sqle_tDBOutput_9=null;
	    	String errormessage_tDBOutput_9;
			if (ne_tDBOutput_9 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_9 = new java.sql.SQLException(e_tDBOutput_9.getMessage() + "\ncaused by: " + ne_tDBOutput_9.getMessage(), ne_tDBOutput_9.getSQLState(), ne_tDBOutput_9.getErrorCode(), ne_tDBOutput_9);
				errormessage_tDBOutput_9 = sqle_tDBOutput_9.getMessage();
			}else{
				errormessage_tDBOutput_9 = e_tDBOutput_9.getMessage();
			}
	    	
	    	int countSum_tDBOutput_9 = 0;
			for(int countEach_tDBOutput_9: e_tDBOutput_9.getUpdateCounts()) {
				countSum_tDBOutput_9 += (countEach_tDBOutput_9 < 0 ? 0 : countEach_tDBOutput_9);
			}
			rowsToCommitCount_tDBOutput_9 += countSum_tDBOutput_9;
			
	    		updatedCount_tDBOutput_9 += countSum_tDBOutput_9;
	    	
	    	System.err.println(errormessage_tDBOutput_9);
	    	
		}
	    
        if(pstmt_tDBOutput_9 != null) {
        		
            pstmt_tDBOutput_9.close();
            resourceMap.remove("pstmt_tDBOutput_9");
        }
    resourceMap.put("statementClosed_tDBOutput_9", true);

	nb_line_deleted_tDBOutput_9=nb_line_deleted_tDBOutput_9+ deletedCount_tDBOutput_9;
	nb_line_update_tDBOutput_9=nb_line_update_tDBOutput_9 + updatedCount_tDBOutput_9;
	nb_line_inserted_tDBOutput_9=nb_line_inserted_tDBOutput_9 + insertedCount_tDBOutput_9;
	nb_line_rejected_tDBOutput_9=nb_line_rejected_tDBOutput_9 + rejectedCount_tDBOutput_9;
	
        globalMap.put("tDBOutput_9_NB_LINE",nb_line_tDBOutput_9);
        globalMap.put("tDBOutput_9_NB_LINE_UPDATED",nb_line_update_tDBOutput_9);
        globalMap.put("tDBOutput_9_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_9);
        globalMap.put("tDBOutput_9_NB_LINE_DELETED",nb_line_deleted_tDBOutput_9);
        globalMap.put("tDBOutput_9_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_9);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Update2");
			  	}
			  	
 

ok_Hash.put("tDBOutput_9", true);
end_Hash.put("tDBOutput_9", System.currentTimeMillis());




/**
 * [tDBOutput_9 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_11"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tDBOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_8") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_8 = null;
                if ((pstmtToClose_tDBOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_8")) != null) {
                    pstmtToClose_tDBOutput_8.close();
                }
    }
 



/**
 * [tDBOutput_8 finally ] stop
 */




	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tDBOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_9";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_9") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_9 = null;
                if ((pstmtToClose_tDBOutput_9 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_9")) != null) {
                    pstmtToClose_tDBOutput_9.close();
                }
    }
 



/**
 * [tDBOutput_9 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_2");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row80Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row80Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row80Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row81.nm_programa = next_tHashInput_3.nm_programa;
	row81.data_inicio_execucao = next_tHashInput_3.data_inicio_execucao;
	row81.data_termino_execucao = next_tHashInput_3.data_termino_execucao;
	row81.mensagem = next_tHashInput_3.mensagem;
	row81.uuid = next_tHashInput_3.uuid;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row81.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row81.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];

	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_dw_t_ponto_colaborador_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";
	
	
		int tos_count_tDBInput_5 = 0;
		
	
    
	
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				conn_tDBInput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "select id,\n       nome,\n       admissao,\n       demissao,\n       motivo_demissao,\n       nascimento,\n       sexo_"
+"masculino,\n       estado_civil_id,\n       status,\n       centro_custos,\n       departamento,\n       funcao,\n      "
+" empresa\n  from dw_t_ponto_colaborador";
		    

		    globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);

		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row14.id = null;
							} else {
		                          
            row14.id = rs_tDBInput_5.getInt(1);
            if(rs_tDBInput_5.wasNull()){
                    row14.id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row14.nome = null;
							} else {
	                         		
        	row14.nome = routines.system.JDBCUtil.getString(rs_tDBInput_5, 2, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 3) {
								row14.admissao = null;
							} else {
										
			row14.admissao = routines.system.JDBCUtil.getDate(rs_tDBInput_5, 3);
		                    }
							if(colQtyInRs_tDBInput_5 < 4) {
								row14.demissao = null;
							} else {
										
			row14.demissao = routines.system.JDBCUtil.getDate(rs_tDBInput_5, 4);
		                    }
							if(colQtyInRs_tDBInput_5 < 5) {
								row14.motivo_demissao = null;
							} else {
	                         		
        	row14.motivo_demissao = routines.system.JDBCUtil.getString(rs_tDBInput_5, 5, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 6) {
								row14.nascimento = null;
							} else {
										
			row14.nascimento = routines.system.JDBCUtil.getDate(rs_tDBInput_5, 6);
		                    }
							if(colQtyInRs_tDBInput_5 < 7) {
								row14.sexo_masculino = null;
							} else {
		                          
            row14.sexo_masculino = rs_tDBInput_5.getInt(7);
            if(rs_tDBInput_5.wasNull()){
                    row14.sexo_masculino = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 8) {
								row14.estado_civil_id = null;
							} else {
		                          
            row14.estado_civil_id = rs_tDBInput_5.getInt(8);
            if(rs_tDBInput_5.wasNull()){
                    row14.estado_civil_id = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 9) {
								row14.status = null;
							} else {
		                          
            row14.status = rs_tDBInput_5.getInt(9);
            if(rs_tDBInput_5.wasNull()){
                    row14.status = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 10) {
								row14.centro_custos = null;
							} else {
	                         		
        	row14.centro_custos = routines.system.JDBCUtil.getString(rs_tDBInput_5, 10, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 11) {
								row14.departamento = null;
							} else {
	                         		
        	row14.departamento = routines.system.JDBCUtil.getString(rs_tDBInput_5, 11, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 12) {
								row14.funcao = null;
							} else {
	                         		
        	row14.funcao = routines.system.JDBCUtil.getString(rs_tDBInput_5, 12, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 13) {
								row14.empresa = null;
							} else {
	                         		
        	row14.empresa = routines.system.JDBCUtil.getString(rs_tDBInput_5, 13, false);
		                    }
					


 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					



    
		row14Struct oneRow_tHashOutput_1 = new row14Struct();
				
					oneRow_tHashOutput_1.id = row14.id;
					oneRow_tHashOutput_1.nome = row14.nome;
					oneRow_tHashOutput_1.admissao = row14.admissao;
					oneRow_tHashOutput_1.demissao = row14.demissao;
					oneRow_tHashOutput_1.motivo_demissao = row14.motivo_demissao;
					oneRow_tHashOutput_1.nascimento = row14.nascimento;
					oneRow_tHashOutput_1.sexo_masculino = row14.sexo_masculino;
					oneRow_tHashOutput_1.estado_civil_id = row14.estado_civil_id;
					oneRow_tHashOutput_1.status = row14.status;
					oneRow_tHashOutput_1.centro_custos = row14.centro_custos;
					oneRow_tHashOutput_1.departamento = row14.departamento;
					oneRow_tHashOutput_1.funcao = row14.funcao;
					oneRow_tHashOutput_1.empresa = row14.empresa;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
}
globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);
 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.status = this.status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.id = this.id;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.nome = readString(dis,ois);
					
						this.admissao = readDate(dis,ois);
					
						this.demissao = readDate(dis,ois);
					
						this.motivo_demissao = readString(dis,ois);
					
						this.nascimento = readDate(dis,ois);
					
						this.sexo_masculino = readInteger(dis,ois);
					
						this.estado_civil_id = readInteger(dis,ois);
					
						this.status = readInteger(dis,ois);
					
						this.centro_custos = readString(dis,ois);
					
						this.departamento = readString(dis,ois);
					
						this.funcao = readString(dis,ois);
					
						this.empresa = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.nome = readString(dis,objectIn);
					
						this.admissao = readDate(dis,objectIn);
					
						this.demissao = readDate(dis,objectIn);
					
						this.motivo_demissao = readString(dis,objectIn);
					
						this.nascimento = readDate(dis,objectIn);
					
						this.sexo_masculino = readInteger(dis,objectIn);
					
						this.estado_civil_id = readInteger(dis,objectIn);
					
						this.status = readInteger(dis,objectIn);
					
						this.centro_custos = readString(dis,objectIn);
					
						this.departamento = readString(dis,objectIn);
					
						this.funcao = readString(dis,objectIn);
					
						this.empresa = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.nome, dos, oos);
					
						writeDate(this.admissao, dos, oos);
					
						writeDate(this.demissao, dos, oos);
					
						writeString(this.motivo_demissao, dos, oos);
					
						writeDate(this.nascimento, dos, oos);
					
					writeInteger(this.sexo_masculino, dos, oos);
					
					writeInteger(this.estado_civil_id, dos, oos);
					
					writeInteger(this.status, dos, oos);
					
						writeString(this.centro_custos, dos, oos);
					
						writeString(this.departamento, dos, oos);
					
						writeString(this.funcao, dos, oos);
					
						writeString(this.empresa, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.nome, dos, objectOut);
					
						writeDate(this.admissao, dos, objectOut);
					
						writeDate(this.demissao, dos, objectOut);
					
						writeString(this.motivo_demissao, dos, objectOut);
					
						writeDate(this.nascimento, dos, objectOut);
					
					writeInteger(this.sexo_masculino, dos, objectOut);
					
					writeInteger(this.estado_civil_id, dos, objectOut);
					
					writeInteger(this.status, dos, objectOut);
					
						writeString(this.centro_custos, dos, objectOut);
					
						writeString(this.departamento, dos, objectOut);
					
						writeString(this.funcao, dos, objectOut);
					
						writeString(this.empresa, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tHashInput_5 - inputs:(after_tHashInput_4) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_10 - inputs:(row8,row15) outputs:(Insert1,Update1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row14Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row14Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row15.id = next_tHashInput_5.id;
	row15.nome = next_tHashInput_5.nome;
	row15.admissao = next_tHashInput_5.admissao;
	row15.demissao = next_tHashInput_5.demissao;
	row15.motivo_demissao = next_tHashInput_5.motivo_demissao;
	row15.nascimento = next_tHashInput_5.nascimento;
	row15.sexo_masculino = next_tHashInput_5.sexo_masculino;
	row15.estado_civil_id = next_tHashInput_5.estado_civil_id;
	row15.status = next_tHashInput_5.status;
	row15.centro_custos = next_tHashInput_5.centro_custos;
	row15.departamento = next_tHashInput_5.departamento;
	row15.funcao = next_tHashInput_5.funcao;
	row15.empresa = next_tHashInput_5.empresa;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.id = row15.id;
				
				row15_HashRow.nome = row15.nome;
				
				row15_HashRow.admissao = row15.admissao;
				
				row15_HashRow.demissao = row15.demissao;
				
				row15_HashRow.motivo_demissao = row15.motivo_demissao;
				
				row15_HashRow.nascimento = row15.nascimento;
				
				row15_HashRow.sexo_masculino = row15.sexo_masculino;
				
				row15_HashRow.estado_civil_id = row15.estado_civil_id;
				
				row15_HashRow.status = row15.status;
				
				row15_HashRow.centro_custos = row15.centro_custos;
				
				row15_HashRow.departamento = row15.departamento;
				
				row15_HashRow.funcao = row15.funcao;
				
				row15_HashRow.empresa = row15.empresa;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public String nome;

				public String getNome () {
					return this.nome;
				}

				public Boolean nomeIsNullable(){
				    return true;
				}
				public Boolean nomeIsKey(){
				    return false;
				}
				public Integer nomeLength(){
				    return null;
				}
				public Integer nomePrecision(){
				    return null;
				}
				public String nomeDefault(){
				
					return null;
				
				}
				public String nomeComment(){
				
				    return "";
				
				}
				public String nomePattern(){
				
					return "";
				
				}
				public String nomeOriginalDbColumnName(){
				
					return "nome";
				
				}

				
			    public java.util.Date admissao;

				public java.util.Date getAdmissao () {
					return this.admissao;
				}

				public Boolean admissaoIsNullable(){
				    return true;
				}
				public Boolean admissaoIsKey(){
				    return false;
				}
				public Integer admissaoLength(){
				    return null;
				}
				public Integer admissaoPrecision(){
				    return null;
				}
				public String admissaoDefault(){
				
					return null;
				
				}
				public String admissaoComment(){
				
				    return "";
				
				}
				public String admissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String admissaoOriginalDbColumnName(){
				
					return "admissao";
				
				}

				
			    public java.util.Date demissao;

				public java.util.Date getDemissao () {
					return this.demissao;
				}

				public Boolean demissaoIsNullable(){
				    return true;
				}
				public Boolean demissaoIsKey(){
				    return false;
				}
				public Integer demissaoLength(){
				    return null;
				}
				public Integer demissaoPrecision(){
				    return null;
				}
				public String demissaoDefault(){
				
					return null;
				
				}
				public String demissaoComment(){
				
				    return "";
				
				}
				public String demissaoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String demissaoOriginalDbColumnName(){
				
					return "demissao";
				
				}

				
			    public String motivo_demissao;

				public String getMotivo_demissao () {
					return this.motivo_demissao;
				}

				public Boolean motivo_demissaoIsNullable(){
				    return true;
				}
				public Boolean motivo_demissaoIsKey(){
				    return false;
				}
				public Integer motivo_demissaoLength(){
				    return null;
				}
				public Integer motivo_demissaoPrecision(){
				    return null;
				}
				public String motivo_demissaoDefault(){
				
					return null;
				
				}
				public String motivo_demissaoComment(){
				
				    return "";
				
				}
				public String motivo_demissaoPattern(){
				
					return "";
				
				}
				public String motivo_demissaoOriginalDbColumnName(){
				
					return "motivo_demissao";
				
				}

				
			    public java.util.Date nascimento;

				public java.util.Date getNascimento () {
					return this.nascimento;
				}

				public Boolean nascimentoIsNullable(){
				    return true;
				}
				public Boolean nascimentoIsKey(){
				    return false;
				}
				public Integer nascimentoLength(){
				    return null;
				}
				public Integer nascimentoPrecision(){
				    return null;
				}
				public String nascimentoDefault(){
				
					return null;
				
				}
				public String nascimentoComment(){
				
				    return "";
				
				}
				public String nascimentoPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String nascimentoOriginalDbColumnName(){
				
					return "nascimento";
				
				}

				
			    public Integer sexo_masculino;

				public Integer getSexo_masculino () {
					return this.sexo_masculino;
				}

				public Boolean sexo_masculinoIsNullable(){
				    return true;
				}
				public Boolean sexo_masculinoIsKey(){
				    return false;
				}
				public Integer sexo_masculinoLength(){
				    return null;
				}
				public Integer sexo_masculinoPrecision(){
				    return null;
				}
				public String sexo_masculinoDefault(){
				
					return null;
				
				}
				public String sexo_masculinoComment(){
				
				    return "";
				
				}
				public String sexo_masculinoPattern(){
				
					return "";
				
				}
				public String sexo_masculinoOriginalDbColumnName(){
				
					return "sexo_masculino";
				
				}

				
			    public Integer estado_civil_id;

				public Integer getEstado_civil_id () {
					return this.estado_civil_id;
				}

				public Boolean estado_civil_idIsNullable(){
				    return true;
				}
				public Boolean estado_civil_idIsKey(){
				    return false;
				}
				public Integer estado_civil_idLength(){
				    return null;
				}
				public Integer estado_civil_idPrecision(){
				    return null;
				}
				public String estado_civil_idDefault(){
				
					return null;
				
				}
				public String estado_civil_idComment(){
				
				    return "";
				
				}
				public String estado_civil_idPattern(){
				
					return "";
				
				}
				public String estado_civil_idOriginalDbColumnName(){
				
					return "estado_civil_id";
				
				}

				
			    public Integer status;

				public Integer getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public String centro_custos;

				public String getCentro_custos () {
					return this.centro_custos;
				}

				public Boolean centro_custosIsNullable(){
				    return true;
				}
				public Boolean centro_custosIsKey(){
				    return false;
				}
				public Integer centro_custosLength(){
				    return null;
				}
				public Integer centro_custosPrecision(){
				    return null;
				}
				public String centro_custosDefault(){
				
					return null;
				
				}
				public String centro_custosComment(){
				
				    return "";
				
				}
				public String centro_custosPattern(){
				
					return "";
				
				}
				public String centro_custosOriginalDbColumnName(){
				
					return "centro_custos";
				
				}

				
			    public String departamento;

				public String getDepartamento () {
					return this.departamento;
				}

				public Boolean departamentoIsNullable(){
				    return true;
				}
				public Boolean departamentoIsKey(){
				    return false;
				}
				public Integer departamentoLength(){
				    return null;
				}
				public Integer departamentoPrecision(){
				    return null;
				}
				public String departamentoDefault(){
				
					return null;
				
				}
				public String departamentoComment(){
				
				    return "";
				
				}
				public String departamentoPattern(){
				
					return "";
				
				}
				public String departamentoOriginalDbColumnName(){
				
					return "departamento";
				
				}

				
			    public String funcao;

				public String getFuncao () {
					return this.funcao;
				}

				public Boolean funcaoIsNullable(){
				    return true;
				}
				public Boolean funcaoIsKey(){
				    return false;
				}
				public Integer funcaoLength(){
				    return null;
				}
				public Integer funcaoPrecision(){
				    return null;
				}
				public String funcaoDefault(){
				
					return null;
				
				}
				public String funcaoComment(){
				
				    return "";
				
				}
				public String funcaoPattern(){
				
					return "";
				
				}
				public String funcaoOriginalDbColumnName(){
				
					return "funcao";
				
				}

				
			    public String empresa;

				public String getEmpresa () {
					return this.empresa;
				}

				public Boolean empresaIsNullable(){
				    return true;
				}
				public Boolean empresaIsKey(){
				    return false;
				}
				public Integer empresaLength(){
				    return null;
				}
				public Integer empresaPrecision(){
				    return null;
				}
				public String empresaDefault(){
				
					return null;
				
				}
				public String empresaComment(){
				
				    return "";
				
				}
				public String empresaPattern(){
				
					return "";
				
				}
				public String empresaOriginalDbColumnName(){
				
					return "empresa";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
					
						result = prime * result + ((this.nome == null) ? 0 : this.nome.hashCode());
					
						result = prime * result + ((this.admissao == null) ? 0 : this.admissao.hashCode());
					
						result = prime * result + ((this.demissao == null) ? 0 : this.demissao.hashCode());
					
						result = prime * result + ((this.motivo_demissao == null) ? 0 : this.motivo_demissao.hashCode());
					
						result = prime * result + ((this.nascimento == null) ? 0 : this.nascimento.hashCode());
					
						result = prime * result + ((this.sexo_masculino == null) ? 0 : this.sexo_masculino.hashCode());
					
						result = prime * result + ((this.estado_civil_id == null) ? 0 : this.estado_civil_id.hashCode());
					
						result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
					
						result = prime * result + ((this.centro_custos == null) ? 0 : this.centro_custos.hashCode());
					
						result = prime * result + ((this.departamento == null) ? 0 : this.departamento.hashCode());
					
						result = prime * result + ((this.funcao == null) ? 0 : this.funcao.hashCode());
					
						result = prime * result + ((this.empresa == null) ? 0 : this.empresa.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.id == null) {
							if (other.id != null)
								return false;
						
						} else if (!this.id.equals(other.id))
						
							return false;
					
						if (this.nome == null) {
							if (other.nome != null)
								return false;
						
						} else if (!this.nome.equals(other.nome))
						
							return false;
					
						if (this.admissao == null) {
							if (other.admissao != null)
								return false;
						
						} else if (!this.admissao.equals(other.admissao))
						
							return false;
					
						if (this.demissao == null) {
							if (other.demissao != null)
								return false;
						
						} else if (!this.demissao.equals(other.demissao))
						
							return false;
					
						if (this.motivo_demissao == null) {
							if (other.motivo_demissao != null)
								return false;
						
						} else if (!this.motivo_demissao.equals(other.motivo_demissao))
						
							return false;
					
						if (this.nascimento == null) {
							if (other.nascimento != null)
								return false;
						
						} else if (!this.nascimento.equals(other.nascimento))
						
							return false;
					
						if (this.sexo_masculino == null) {
							if (other.sexo_masculino != null)
								return false;
						
						} else if (!this.sexo_masculino.equals(other.sexo_masculino))
						
							return false;
					
						if (this.estado_civil_id == null) {
							if (other.estado_civil_id != null)
								return false;
						
						} else if (!this.estado_civil_id.equals(other.estado_civil_id))
						
							return false;
					
						if (this.status == null) {
							if (other.status != null)
								return false;
						
						} else if (!this.status.equals(other.status))
						
							return false;
					
						if (this.centro_custos == null) {
							if (other.centro_custos != null)
								return false;
						
						} else if (!this.centro_custos.equals(other.centro_custos))
						
							return false;
					
						if (this.departamento == null) {
							if (other.departamento != null)
								return false;
						
						} else if (!this.departamento.equals(other.departamento))
						
							return false;
					
						if (this.funcao == null) {
							if (other.funcao != null)
								return false;
						
						} else if (!this.funcao.equals(other.funcao))
						
							return false;
					
						if (this.empresa == null) {
							if (other.empresa != null)
								return false;
						
						} else if (!this.empresa.equals(other.empresa))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.id = this.id;
	            other.nome = this.nome;
	            other.admissao = this.admissao;
	            other.demissao = this.demissao;
	            other.motivo_demissao = this.motivo_demissao;
	            other.nascimento = this.nascimento;
	            other.sexo_masculino = this.sexo_masculino;
	            other.estado_civil_id = this.estado_civil_id;
	            other.status = this.status;
	            other.centro_custos = this.centro_custos;
	            other.departamento = this.departamento;
	            other.funcao = this.funcao;
	            other.empresa = this.empresa;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.id = this.id;
	            	other.nome = this.nome;
	            	other.admissao = this.admissao;
	            	other.demissao = this.demissao;
	            	other.motivo_demissao = this.motivo_demissao;
	            	other.nascimento = this.nascimento;
	            	other.sexo_masculino = this.sexo_masculino;
	            	other.estado_civil_id = this.estado_civil_id;
	            	other.status = this.status;
	            	other.centro_custos = this.centro_custos;
	            	other.departamento = this.departamento;
	            	other.funcao = this.funcao;
	            	other.empresa = this.empresa;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_ponto_colaborador) {

        	try {

        		int length = 0;
		
						this.id = readInteger(dis);
					
					this.nome = readString(dis);
					
					this.admissao = readDate(dis);
					
					this.demissao = readDate(dis);
					
					this.motivo_demissao = readString(dis);
					
					this.nascimento = readDate(dis);
					
						this.sexo_masculino = readInteger(dis);
					
						this.estado_civil_id = readInteger(dis);
					
						this.status = readInteger(dis);
					
					this.centro_custos = readString(dis);
					
					this.departamento = readString(dis);
					
					this.funcao = readString(dis);
					
					this.empresa = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.id,dos);
					
					// String
				
						writeString(this.nome,dos);
					
					// java.util.Date
				
						writeDate(this.admissao,dos);
					
					// java.util.Date
				
						writeDate(this.demissao,dos);
					
					// String
				
						writeString(this.motivo_demissao,dos);
					
					// java.util.Date
				
						writeDate(this.nascimento,dos);
					
					// Integer
				
						writeInteger(this.sexo_masculino,dos);
					
					// Integer
				
						writeInteger(this.estado_civil_id,dos);
					
					// Integer
				
						writeInteger(this.status,dos);
					
					// String
				
						writeString(this.centro_custos,dos);
					
					// String
				
						writeString(this.departamento,dos);
					
					// String
				
						writeString(this.funcao,dos);
					
					// String
				
						writeString(this.empresa,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",nome="+nome);
		sb.append(",admissao="+String.valueOf(admissao));
		sb.append(",demissao="+String.valueOf(demissao));
		sb.append(",motivo_demissao="+motivo_demissao);
		sb.append(",nascimento="+String.valueOf(nascimento));
		sb.append(",sexo_masculino="+String.valueOf(sexo_masculino));
		sb.append(",estado_civil_id="+String.valueOf(estado_civil_id));
		sb.append(",status="+String.valueOf(status));
		sb.append(",centro_custos="+centro_custos);
		sb.append(",departamento="+departamento);
		sb.append(",funcao="+funcao);
		sb.append(",empresa="+empresa);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.id, other.id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.nome, other.nome);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.admissao, other.admissao);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.demissao, other.demissao);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.motivo_demissao, other.motivo_demissao);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.nascimento, other.nascimento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.sexo_masculino, other.sexo_masculino);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.estado_civil_id, other.estado_civil_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.status, other.status);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.centro_custos, other.centro_custos);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.departamento, other.departamento);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.funcao, other.funcao);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.empresa, other.empresa);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_4) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_11 - inputs:(Update1,row16) outputs:(Update2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row14Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row14Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row16.id = next_tHashInput_6.id;
	row16.nome = next_tHashInput_6.nome;
	row16.admissao = next_tHashInput_6.admissao;
	row16.demissao = next_tHashInput_6.demissao;
	row16.motivo_demissao = next_tHashInput_6.motivo_demissao;
	row16.nascimento = next_tHashInput_6.nascimento;
	row16.sexo_masculino = next_tHashInput_6.sexo_masculino;
	row16.estado_civil_id = next_tHashInput_6.estado_civil_id;
	row16.status = next_tHashInput_6.status;
	row16.centro_custos = next_tHashInput_6.centro_custos;
	row16.departamento = next_tHashInput_6.departamento;
	row16.funcao = next_tHashInput_6.funcao;
	row16.empresa = next_tHashInput_6.empresa;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.id = row16.id;
				
				row16_HashRow.nome = row16.nome;
				
				row16_HashRow.admissao = row16.admissao;
				
				row16_HashRow.demissao = row16.demissao;
				
				row16_HashRow.motivo_demissao = row16.motivo_demissao;
				
				row16_HashRow.nascimento = row16.nascimento;
				
				row16_HashRow.sexo_masculino = row16.sexo_masculino;
				
				row16_HashRow.estado_civil_id = row16.estado_civil_id;
				
				row16_HashRow.status = row16.status;
				
				row16_HashRow.centro_custos = row16.centro_custos;
				
				row16_HashRow.departamento = row16.departamento;
				
				row16_HashRow.funcao = row16.funcao;
				
				row16_HashRow.empresa = row16.empresa;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_ponto_colaborador_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final dw_t_ponto_colaborador dw_t_ponto_colaboradorClass = new dw_t_ponto_colaborador();

        int exitCode = dw_t_ponto_colaboradorClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = dw_t_ponto_colaborador.class.getClassLoader().getResourceAsStream("palacio_ferramentas/dw_t_ponto_colaborador_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = dw_t_ponto_colaborador.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("PONTEC_HOST", "id_String");
                        if(context.getStringValue("PONTEC_HOST") == null) {
                            context.PONTEC_HOST = null;
                        } else {
                            context.PONTEC_HOST=(String) context.getProperty("PONTEC_HOST");
                        }
                        context.setContextType("PONTEC_DB", "id_String");
                        if(context.getStringValue("PONTEC_DB") == null) {
                            context.PONTEC_DB = null;
                        } else {
                            context.PONTEC_DB=(String) context.getProperty("PONTEC_DB");
                        }
                        context.setContextType("PONTEC_PORT", "id_String");
                        if(context.getStringValue("PONTEC_PORT") == null) {
                            context.PONTEC_PORT = null;
                        } else {
                            context.PONTEC_PORT=(String) context.getProperty("PONTEC_PORT");
                        }
                        context.setContextType("PONTEC_USER", "id_String");
                        if(context.getStringValue("PONTEC_USER") == null) {
                            context.PONTEC_USER = null;
                        } else {
                            context.PONTEC_USER=(String) context.getProperty("PONTEC_USER");
                        }
                        context.setContextType("PONTEC_PASSWORD", "id_String");
                        if(context.getStringValue("PONTEC_PASSWORD") == null) {
                            context.PONTEC_PASSWORD = null;
                        } else {
                            context.PONTEC_PASSWORD=(String) context.getProperty("PONTEC_PASSWORD");
                        }
                        context.setContextType("PONTEC_JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("PONTEC_JDBC_PARAMETERS") == null) {
                            context.PONTEC_JDBC_PARAMETERS = null;
                        } else {
                            context.PONTEC_JDBC_PARAMETERS=(String) context.getProperty("PONTEC_JDBC_PARAMETERS");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("PONTEC_HOST")) {
                context.PONTEC_HOST = (String) parentContextMap.get("PONTEC_HOST");
            }if (parentContextMap.containsKey("PONTEC_DB")) {
                context.PONTEC_DB = (String) parentContextMap.get("PONTEC_DB");
            }if (parentContextMap.containsKey("PONTEC_PORT")) {
                context.PONTEC_PORT = (String) parentContextMap.get("PONTEC_PORT");
            }if (parentContextMap.containsKey("PONTEC_USER")) {
                context.PONTEC_USER = (String) parentContextMap.get("PONTEC_USER");
            }if (parentContextMap.containsKey("PONTEC_PASSWORD")) {
                context.PONTEC_PASSWORD = (String) parentContextMap.get("PONTEC_PASSWORD");
            }if (parentContextMap.containsKey("PONTEC_JDBC_PARAMETERS")) {
                context.PONTEC_JDBC_PARAMETERS = (String) parentContextMap.get("PONTEC_JDBC_PARAMETERS");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tDBInput_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}
try {
errorCode = null;tDBInput_5Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tDBInput_5) {
globalMap.put("tDBInput_5_SUBPROCESS_STATE", -1);

e_tDBInput_5.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : dw_t_ponto_colaborador");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     466223 characters generated by Talend Open Studio for Big Data 
 *     on the 26 de novembro de 2024 19:14:32 BRT
 ************************************************************************************************/