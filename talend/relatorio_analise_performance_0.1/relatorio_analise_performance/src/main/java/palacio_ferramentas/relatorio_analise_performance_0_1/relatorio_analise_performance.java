// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_analise_performance_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendStringUtil;
import routines.TalendDataGenerator;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_2
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJava_6
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_15
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_analise_performance Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_analise_performance implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(data_inicio != null){
				
					this.setProperty("data_inicio", data_inicio.toString());
				
			}
			
			if(Acumulado != null){
				
					this.setProperty("Acumulado", Acumulado.toString());
				
			}
			
			if(Dias_atras != null){
				
					this.setProperty("Dias_atras", Dias_atras.toString());
				
			}
			
			if(Dias_VendasItens != null){
				
					this.setProperty("Dias_VendasItens", Dias_VendasItens.toString());
				
			}
			
			if(Dias_Vendas != null){
				
					this.setProperty("Dias_Vendas", Dias_Vendas.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(EMAIL_PASSWORD != null){
				
					this.setProperty("EMAIL_PASSWORD", EMAIL_PASSWORD.toString());
				
			}
			
			if(EMAIL != null){
				
					this.setProperty("EMAIL", EMAIL.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(SMTP != null){
				
					this.setProperty("SMTP", SMTP.toString());
				
			}
			
			if(SMTP_PORT != null){
				
					this.setProperty("SMTP_PORT", SMTP_PORT.toString());
				
			}
			
			if(Semana != null){
				
					this.setProperty("Semana", Semana.toString());
				
			}
			
			if(Ano != null){
				
					this.setProperty("Ano", Ano.toString());
				
			}
			
			if(AnoD != null){
				
					String pattern_AnoD = "yyyy-MM-dd HH:mm:ss";
					String value_AnoD = "'2023-12-01'";
					String[] parts_AnoD = value_AnoD.split(";");
					if(parts_AnoD.length > 1){
						pattern_AnoD = parts_AnoD[0];
						this.setProperty("AnoD", pattern_AnoD + ";" + FormatterUtils.format_Date(AnoD, pattern_AnoD));
					}else{
						this.setProperty("AnoD", FormatterUtils.format_Date(AnoD, pattern_AnoD));
					}
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String data_inicio;
public String getData_inicio(){
	return this.data_inicio;
}
public Double Acumulado;
public Double getAcumulado(){
	return this.Acumulado;
}
public Integer Dias_atras;
public Integer getDias_atras(){
	return this.Dias_atras;
}
public Integer Dias_VendasItens;
public Integer getDias_VendasItens(){
	return this.Dias_VendasItens;
}
public Integer Dias_Vendas;
public Integer getDias_Vendas(){
	return this.Dias_Vendas;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String EMAIL_PASSWORD;
public String getEMAIL_PASSWORD(){
	return this.EMAIL_PASSWORD;
}
public String EMAIL;
public String getEMAIL(){
	return this.EMAIL;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public String SMTP;
public String getSMTP(){
	return this.SMTP;
}
public String SMTP_PORT;
public String getSMTP_PORT(){
	return this.SMTP_PORT;
}
public Integer Semana;
public Integer getSemana(){
	return this.Semana;
}
public String Ano;
public String getAno(){
	return this.Ano;
}
public java.util.Date AnoD;
public java.util.Date getAnoD(){
	return this.AnoD;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_analise_performance";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_analise_performance.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_analise_performance.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError2", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_2Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSendMail_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tSendMail_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError2", 0, "error");
						}
					
					((java.util.Map)threadLocal.get()).put("errorCode", null);
					tDie_1Process(globalMap);
					if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
						((java.util.Map)threadLocal.get()).put("status", "end");
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSendMail_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					((java.util.Map)threadLocal.get()).put("errorCode", null);
					tDie_3Process(globalMap);
					if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
						((java.util.Map)threadLocal.get()).put("status", "end");
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tJava_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println("*****************************************************");
System.out.println("Iniciando Relatorio de Analise_Performance_e-commerce");
System.out.println("Iniciando Conexao com AutCom");
System.out.println("Job Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("*****************************************************");
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tDBConnection_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = System.getenv(context.JDBC_PARAMETERS);
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD); 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tJava_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("Finalizada com sucesso a conexao com AutCom");

Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


context.data_execucao = data;
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_1 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk26", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Erro na Conexão com o Dw");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Erro na Conexão com o Dw");
	globalMap.put("tDie_1_DIE_MESSAGES", "Erro na Conexão com o Dw");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
    	errorCode = new Integer(2);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(2));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_1_DIE_CODE", errorCode);

    
	

	
	
	System.exit(2);

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
insert_logStruct insert_log = new insert_logStruct();
row6Struct row6 = new row6Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_analise_performance_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row1.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row1.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row6 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row6 = new row6Struct();
                                row6.nm_programa = insert_log.nm_programa;
                                row6.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row6.data_termino_execucao = insert_log.data_termino_execucao;
                                row6.mensagem = insert_log.mensagem;
                                row6.uuid = insert_log.uuid;
                                row6.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row6"
if(row6 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					



    
		row6Struct oneRow_tHashOutput_1 = new row6Struct();
				
					oneRow_tHashOutput_1.nm_programa = row6.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row6.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row6.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row6.mensagem;
					oneRow_tHashOutput_1.uuid = row6.uuid;
					oneRow_tHashOutput_1.versao = row6.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row6"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */
	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

	try {
	globalMap.put("tDie_2_DIE_PRIORITY", 5);
	System.err.println("Erro de Conexão Banco de Dados AutCom");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "Erro de Conexão Banco de Dados AutCom");
	globalMap.put("tDie_2_DIE_MESSAGES", "Erro de Conexão Banco de Dados AutCom");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
    	errorCode = new Integer(1);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(1));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_2_DIE_CODE", errorCode);

    
	

	
	
	System.exit(1);

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */
	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_2_SUBPROCESS_STATE", 1);
	}
	


public static class Saida6Struct implements routines.system.IPersistableRow<Saida6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public Double VALOR_COMPRA;

				public Double getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+String.valueOf(VALOR_COMPRA));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public Double VALOR_COMPRA;

				public Double getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+String.valueOf(VALOR_COMPRA));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida4Struct implements routines.system.IPersistableRow<saida4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida3Struct implements routines.system.IPersistableRow<saida3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida5Struct implements routines.system.IPersistableRow<Saida5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class pri_pedidoStruct implements routines.system.IPersistableRow<pri_pedidoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(pri_pedidoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class casualStruct implements routines.system.IPersistableRow<casualStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(casualStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class FieisStruct implements routines.system.IPersistableRow<FieisStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(FieisStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class altoConsumoStruct implements routines.system.IPersistableRow<altoConsumoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public Double VALOR_COMPRA;

				public Double getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+String.valueOf(VALOR_COMPRA));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(altoConsumoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Double VALOR_COMPRA_D;

				public Double getVALOR_COMPRA_D () {
					return this.VALOR_COMPRA_D;
				}

				public Boolean VALOR_COMPRA_DIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRA_DIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRA_DLength(){
				    return null;
				}
				public Integer VALOR_COMPRA_DPrecision(){
				    return null;
				}
				public String VALOR_COMPRA_DDefault(){
				
					return null;
				
				}
				public String VALOR_COMPRA_DComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRA_DPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRA_DOriginalDbColumnName(){
				
					return "VALOR_COMPRA_D";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA_D = null;
           				} else {
           			    	this.VALOR_COMPRA_D = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA_D = null;
           				} else {
           			    	this.VALOR_COMPRA_D = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA_D == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA_D);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA_D == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA_D);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",VALOR_COMPRA_D="+String.valueOf(VALOR_COMPRA_D));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saidaStruct implements routines.system.IPersistableRow<saidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public Double VALOR_COMPRA;

				public Double getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Double VALOR_COMPRA_D;

				public Double getVALOR_COMPRA_D () {
					return this.VALOR_COMPRA_D;
				}

				public Boolean VALOR_COMPRA_DIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRA_DIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRA_DLength(){
				    return null;
				}
				public Integer VALOR_COMPRA_DPrecision(){
				    return null;
				}
				public String VALOR_COMPRA_DDefault(){
				
					return null;
				
				}
				public String VALOR_COMPRA_DComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRA_DPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRA_DOriginalDbColumnName(){
				
					return "VALOR_COMPRA_D";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA_D = null;
           				} else {
           			    	this.VALOR_COMPRA_D = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA_D = null;
           				} else {
           			    	this.VALOR_COMPRA_D = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Double
				
						if(this.VALOR_COMPRA_D == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA_D);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Double
				
						if(this.VALOR_COMPRA_D == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA_D);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+String.valueOf(VALOR_COMPRA));
		sb.append(",VALOR_COMPRA_D="+String.valueOf(VALOR_COMPRA_D));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public Double VALOR_COMPRA;

				public Double getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				
			    public Integer PRIMEIRO_PEDIDO;

				public Integer getPRIMEIRO_PEDIDO () {
					return this.PRIMEIRO_PEDIDO;
				}

				public Boolean PRIMEIRO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRO_PEDIDOIsKey(){
				    return false;
				}
				public Integer PRIMEIRO_PEDIDOLength(){
				    return null;
				}
				public Integer PRIMEIRO_PEDIDOPrecision(){
				    return null;
				}
				public String PRIMEIRO_PEDIDODefault(){
				
					return null;
				
				}
				public String PRIMEIRO_PEDIDOComment(){
				
				    return "";
				
				}
				public String PRIMEIRO_PEDIDOPattern(){
				
					return "";
				
				}
				public String PRIMEIRO_PEDIDOOriginalDbColumnName(){
				
					return "PRIMEIRO_PEDIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
						this.PRIMEIRO_PEDIDO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
					// Integer
				
						writeInteger(this.PRIMEIRO_PEDIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+String.valueOf(VALOR_COMPRA));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
		sb.append(",PRIMEIRO_PEDIDO="+String.valueOf(PRIMEIRO_PEDIDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
saidaStruct saida = new saidaStruct();
row9Struct row9 = new row9Struct();
pri_pedidoStruct pri_pedido = new pri_pedidoStruct();
row22Struct row22 = new row22Struct();
Saida5Struct Saida5 = new Saida5Struct();
casualStruct casual = new casualStruct();
row28Struct row28 = new row28Struct();
saida3Struct saida3 = new saida3Struct();
FieisStruct Fieis = new FieisStruct();
row30Struct row30 = new row30Struct();
saida4Struct saida4 = new saida4Struct();
altoConsumoStruct altoConsumo = new altoConsumoStruct();
row13Struct row13 = new row13Struct();
Saida6Struct Saida6 = new Saida6Struct();









	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida5");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		
		int columnIndex_tFileOutputExcel_2 = 0;
		boolean headerIsInserted_tFileOutputExcel_2 = false;
		
		
		String fileName_tFileOutputExcel_2="/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_2 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_2 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_2.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_2.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_2.setSheet("primeiro pedido");
		xlsxTool_tFileOutputExcel_2.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_2.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_2.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_2 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_2 = chm_tFileOutputExcel_2.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_2", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_2) {
			
				xlsxTool_tFileOutputExcel_2.prepareXlsxFile(fileName_tFileOutputExcel_2);
			
		}
		
		xlsxTool_tFileOutputExcel_2.setFont("");
		
		if (xlsxTool_tFileOutputExcel_2.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_2.addRow();
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CODIGO_EMPRESA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VALOR_COMPRA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("QTDE_ITEM");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("QTDE_PEDIDO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CODIGO_CLIENTE");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NOME_CLIENTE");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("EMAIL");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DATA_CADASTRO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("PRIMEIRA_COMPRA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ULTIMA_COMPRA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("TELEFONE");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("TELEFORNE2");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CLI_STATUS");
		
		nb_line_tFileOutputExcel_2++;
		headerIsInserted_tFileOutputExcel_2 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida5Struct Saida5_tmp = new Saida5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tFilterRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_3", false);
		start_Hash.put("tFilterRow_3", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"pri_pedido");
					}
				
		int tos_count_tFilterRow_3 = 0;
		
    int nb_line_tFilterRow_3 = 0;
    int nb_line_ok_tFilterRow_3 = 0;
    int nb_line_reject_tFilterRow_3 = 0;

    class Operator_tFilterRow_3 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_3(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_3 begin ] stop
 */






	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida3");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida3Struct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_relatorio_analise_performance_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida3Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida3Struct saida3_tmp = new saida3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"casual");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */






	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida4");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida4Struct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_relatorio_analise_performance_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida4Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida4Struct saida4_tmp = new saida4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tFilterRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_2", false);
		start_Hash.put("tFilterRow_2", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Fieis");
					}
				
		int tos_count_tFilterRow_2 = 0;
		
    int nb_line_tFilterRow_2 = 0;
    int nb_line_ok_tFilterRow_2 = 0;
    int nb_line_reject_tFilterRow_2 = 0;

    class Operator_tFilterRow_2 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_2(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_2 begin ] stop
 */






	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida6");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida6Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_relatorio_analise_performance_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida6Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida6Struct Saida6_tmp = new Saida6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tFilterRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_4", false);
		start_Hash.put("tFilterRow_4", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"altoConsumo");
					}
				
		int tos_count_tFilterRow_4 = 0;
		
    int nb_line_tFilterRow_4 = 0;
    int nb_line_ok_tFilterRow_4 = 0;
    int nb_line_reject_tFilterRow_4 = 0;

    class Operator_tFilterRow_4 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_4(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_4 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
pri_pedidoStruct pri_pedido_tmp = new pri_pedidoStruct();
casualStruct casual_tmp = new casualStruct();
FieisStruct Fieis_tmp = new FieisStruct();
altoConsumoStruct altoConsumo_tmp = new altoConsumoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
saidaStruct saida_tmp = new saidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tDBInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_8", false);
		start_Hash.put("tDBInput_8", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_8";
	
	
		int tos_count_tDBInput_8 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_8 = java.util.Calendar.getInstance();
		    calendar_tDBInput_8.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_8 = calendar_tDBInput_8.getTime();
		    int nb_line_tDBInput_8 = 0;
		    java.sql.Connection conn_tDBInput_8 = null;
				conn_tDBInput_8 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_8 = conn_tDBInput_8.createStatement();

		    String dbquery_tDBInput_8 = "SELECT CODIGO_EMPRESA,\n       VALOR_COMPRA,\n       QTDE_ITEM,\n       QTDE_PEDIDO,\n       CODIGO_CLIENTE,\n       NO"
+"ME_CLIENTE,      \n	   EMAIL,\n       DATA_CADASTRO,\n       PRIMEIRA_COMPRA,\n       ULTIMA_COMPRA,\n       TELEFONE,\n"
+"       TELEFORNE2,\n       CLI_STATUS,\n       CASE WHEN PRIMEIRA_COMPRA >= SUBDATE(CURDATE(), 365)\n            THEN 1"
+"\n            ELSE 0\n        END PRIMEIRO_PEDIDO\n  FROM (\nSELECT DET_CODEMP CODIGO_EMPRESA,\n       sum(DET_VLRCON) VA"
+"LOR_COMPRA,\n       sum(DET_QTDITE) QTDE_ITEM,\n       count(MD.DET_NUMDOC) QTDE_PEDIDO,\n       DET_CODCLI CODIGO_CLIEN"
+"TE,\n       C.CLI_NOMCLI NOME_CLIENTE,      \n	   C.CLI_EMAIL_ EMAIL,\n       C.CLI_DTACAD DATA_CADASTRO,\n       CASE W"
+"HEN IFNULL(C.CLI_PRICOM,0) = 0\n            THEN '1900-01-01'\n            ELSE C.CLI_PRICOM\n        END PRIMEIRA_COMPR"
+"A,\n       CASE WHEN IFNULL(C.CLI_ULTCOM,0) = 0\n            THEN '1900-01-01'\n            ELSE C.CLI_ULTCOM\n        E"
+"ND ULTIMA_COMPRA,\n       C.CLI_FONE01 TELEFONE,\n       C.CLI_FONE02 TELEFORNE2,\n       C.CLI_STATUS CLI_STATUS\n  FRO"
+"M MOVDET MD,\n       CADCLI C\n WHERE MD.DET_CODCLI = C.CLI_CODCLI\n   AND MD.DET_DTAENT >= SUBDATE(CURDATE(), 365)\n   "
+"AND DET_CODCLI IS NOT NULL\n   AND DET_CODCLI not IN (12578138,12579961,13383333,13077929,12554690,12578128,12578129,125"
+"78161,12578184,12578222,12578703,12973018,13165829,13229787,12953792,13324138,13509861,13172257,13350330,13511222,100825"
+"45,11004094,11509524,11964360,12356856,12356863,12841535, 10005994,10006086,10017451,10367143,11629423,12291025,12353935"
+")\n   AND DET_ESPDOC = 'NF'\n  GROUP BY DET_CODCLI) X";
		    

		    globalMap.put("tDBInput_8_QUERY",dbquery_tDBInput_8);

		    java.sql.ResultSet rs_tDBInput_8 = null;

		    try {
		    	rs_tDBInput_8 = stmt_tDBInput_8.executeQuery(dbquery_tDBInput_8);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_8 = rs_tDBInput_8.getMetaData();
		    	int colQtyInRs_tDBInput_8 = rsmd_tDBInput_8.getColumnCount();

		    String tmpContent_tDBInput_8 = null;
		    
		    
		    while (rs_tDBInput_8.next()) {
		        nb_line_tDBInput_8++;
		        
							if(colQtyInRs_tDBInput_8 < 1) {
								row7.CODIGO_EMPRESA = null;
							} else {
	                         		
        	row7.CODIGO_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 1, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 2) {
								row7.VALOR_COMPRA = null;
							} else {
	                         		
            row7.VALOR_COMPRA = rs_tDBInput_8.getDouble(2);
            if(rs_tDBInput_8.wasNull()){
                    row7.VALOR_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 3) {
								row7.QTDE_ITEM = null;
							} else {
		                          
            row7.QTDE_ITEM = rs_tDBInput_8.getInt(3);
            if(rs_tDBInput_8.wasNull()){
                    row7.QTDE_ITEM = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 4) {
								row7.QTDE_PEDIDO = null;
							} else {
		                          
            row7.QTDE_PEDIDO = rs_tDBInput_8.getInt(4);
            if(rs_tDBInput_8.wasNull()){
                    row7.QTDE_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 5) {
								row7.CODIGO_CLIENTE = null;
							} else {
	                         		
        	row7.CODIGO_CLIENTE = routines.system.JDBCUtil.getString(rs_tDBInput_8, 5, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 6) {
								row7.NOME_CLIENTE = null;
							} else {
	                         		
        	row7.NOME_CLIENTE = routines.system.JDBCUtil.getString(rs_tDBInput_8, 6, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 7) {
								row7.EMAIL = null;
							} else {
	                         		
        	row7.EMAIL = routines.system.JDBCUtil.getString(rs_tDBInput_8, 7, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 8) {
								row7.DATA_CADASTRO = null;
							} else {
										
				if(rs_tDBInput_8.getString(8) != null) {
					String dateString_tDBInput_8 = rs_tDBInput_8.getString(8);
					if (!("0000-00-00").equals(dateString_tDBInput_8) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_8)) {
						row7.DATA_CADASTRO = rs_tDBInput_8.getTimestamp(8);
					} else {
						row7.DATA_CADASTRO = (java.util.Date) year0_tDBInput_8.clone();
					}
				} else {
					row7.DATA_CADASTRO =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_8 < 9) {
								row7.PRIMEIRA_COMPRA = null;
							} else {
										
				if(rs_tDBInput_8.getString(9) != null) {
					String dateString_tDBInput_8 = rs_tDBInput_8.getString(9);
					if (!("0000-00-00").equals(dateString_tDBInput_8) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_8)) {
						row7.PRIMEIRA_COMPRA = rs_tDBInput_8.getTimestamp(9);
					} else {
						row7.PRIMEIRA_COMPRA = (java.util.Date) year0_tDBInput_8.clone();
					}
				} else {
					row7.PRIMEIRA_COMPRA =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_8 < 10) {
								row7.ULTIMA_COMPRA = null;
							} else {
										
				if(rs_tDBInput_8.getString(10) != null) {
					String dateString_tDBInput_8 = rs_tDBInput_8.getString(10);
					if (!("0000-00-00").equals(dateString_tDBInput_8) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_8)) {
						row7.ULTIMA_COMPRA = rs_tDBInput_8.getTimestamp(10);
					} else {
						row7.ULTIMA_COMPRA = (java.util.Date) year0_tDBInput_8.clone();
					}
				} else {
					row7.ULTIMA_COMPRA =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_8 < 11) {
								row7.TELEFONE = null;
							} else {
	                         		
        	row7.TELEFONE = routines.system.JDBCUtil.getString(rs_tDBInput_8, 11, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 12) {
								row7.TELEFORNE2 = null;
							} else {
	                         		
        	row7.TELEFORNE2 = routines.system.JDBCUtil.getString(rs_tDBInput_8, 12, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 13) {
								row7.CLI_STATUS = null;
							} else {
	                         		
        	row7.CLI_STATUS = routines.system.JDBCUtil.getString(rs_tDBInput_8, 13, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 14) {
								row7.PRIMEIRO_PEDIDO = null;
							} else {
		                          
            row7.PRIMEIRO_PEDIDO = rs_tDBInput_8.getInt(14);
            if(rs_tDBInput_8.wasNull()){
                    row7.PRIMEIRO_PEDIDO = null;
            }
		                    }
					

 



/**
 * [tDBInput_8 begin ] stop
 */
	
	/**
	 * [tDBInput_8 main ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 


	tos_count_tDBInput_8++;

/**
 * [tDBInput_8 main ] stop
 */
	
	/**
	 * [tDBInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

saida = null;


// # Output table : 'saida'
saida_tmp.CODIGO_EMPRESA = row7.CODIGO_EMPRESA;
saida_tmp.VALOR_COMPRA = row7.VALOR_COMPRA;
saida_tmp.VALOR_COMPRA_D = row7.VALOR_COMPRA;
saida_tmp.QTDE_ITEM = row7.QTDE_ITEM;
saida_tmp.QTDE_PEDIDO = row7.QTDE_PEDIDO;
saida_tmp.CODIGO_CLIENTE = row7.CODIGO_CLIENTE;
saida_tmp.NOME_CLIENTE = row7.NOME_CLIENTE;
saida_tmp.EMAIL = row7.EMAIL != null ? row7.EMAIL : "null";
saida_tmp.DATA_CADASTRO = row7.DATA_CADASTRO;
saida_tmp.PRIMEIRA_COMPRA = row7.PRIMEIRA_COMPRA;
saida_tmp.ULTIMA_COMPRA = row7.ULTIMA_COMPRA;
saida_tmp.TELEFONE = row7.TELEFONE;
saida_tmp.TELEFORNE2 = row7.TELEFORNE2;
saida_tmp.CLI_STATUS = row7.CLI_STATUS;
saida_tmp.PRIMEIRO_PEDIDO = row7.PRIMEIRO_PEDIDO;
saida = saida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "saida"
if(saida != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida"
						
						);
					}
					

    //Code generated according to input schema and output schema
row9.CODIGO_EMPRESA = saida.CODIGO_EMPRESA;
row9.VALOR_COMPRA = String.format("%.2f",saida.VALOR_COMPRA);
row9.VALOR_COMPRA_D = saida.VALOR_COMPRA_D;
row9.QTDE_ITEM = saida.QTDE_ITEM;
row9.QTDE_PEDIDO = saida.QTDE_PEDIDO;
row9.CODIGO_CLIENTE = saida.CODIGO_CLIENTE;
row9.NOME_CLIENTE = saida.NOME_CLIENTE;
row9.EMAIL = saida.EMAIL.replaceAll("\\n", "");
row9.DATA_CADASTRO = saida.DATA_CADASTRO;
row9.PRIMEIRA_COMPRA = saida.PRIMEIRA_COMPRA;
row9.ULTIMA_COMPRA = saida.ULTIMA_COMPRA;
row9.TELEFONE = saida.TELEFONE;
row9.TELEFORNE2 = saida.TELEFORNE2;
row9.CLI_STATUS = saida.CLI_STATUS;
row9.PRIMEIRO_PEDIDO = saida.PRIMEIRO_PEDIDO;

/*if (row9.PRIMEIRA_COMPRA.equals(row9.ULTIMA_COMPRA)) {
row9.PRIMEIRO_PEDIDO = 1;
} else{
row9.PRIMEIRO_PEDIDO = 0;
}*/
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

pri_pedido = null;
casual = null;
Fieis = null;
altoConsumo = null;


// # Output table : 'pri_pedido'
pri_pedido_tmp.CODIGO_EMPRESA = row9.CODIGO_EMPRESA ;
pri_pedido_tmp.VALOR_COMPRA = row9.VALOR_COMPRA ;
pri_pedido_tmp.QTDE_ITEM = row9.QTDE_ITEM ;
pri_pedido_tmp.QTDE_PEDIDO = row9.QTDE_PEDIDO ;
pri_pedido_tmp.CODIGO_CLIENTE = row9.CODIGO_CLIENTE ;
pri_pedido_tmp.NOME_CLIENTE = row9.NOME_CLIENTE ;
pri_pedido_tmp.EMAIL = row9.EMAIL ;
pri_pedido_tmp.DATA_CADASTRO = row9.DATA_CADASTRO ;
pri_pedido_tmp.PRIMEIRA_COMPRA = row9.PRIMEIRA_COMPRA ;
pri_pedido_tmp.ULTIMA_COMPRA = row9.ULTIMA_COMPRA ;
pri_pedido_tmp.TELEFONE = row9.TELEFONE ;
pri_pedido_tmp.TELEFORNE2 = row9.TELEFORNE2 ;
pri_pedido_tmp.CLI_STATUS = row9.CLI_STATUS ;
pri_pedido_tmp.PRIMEIRO_PEDIDO = row9.PRIMEIRO_PEDIDO ;
pri_pedido = pri_pedido_tmp;

// # Output table : 'casual'
casual_tmp.CODIGO_EMPRESA = row9.CODIGO_EMPRESA ;
casual_tmp.VALOR_COMPRA = row9.VALOR_COMPRA ;
casual_tmp.QTDE_ITEM = row9.QTDE_ITEM ;
casual_tmp.QTDE_PEDIDO = row9.QTDE_PEDIDO ;
casual_tmp.CODIGO_CLIENTE = row9.CODIGO_CLIENTE ;
casual_tmp.NOME_CLIENTE = row9.NOME_CLIENTE ;
casual_tmp.EMAIL = row9.EMAIL ;
casual_tmp.DATA_CADASTRO = row9.DATA_CADASTRO ;
casual_tmp.PRIMEIRA_COMPRA = row9.PRIMEIRA_COMPRA ;
casual_tmp.ULTIMA_COMPRA = row9.ULTIMA_COMPRA ;
casual_tmp.TELEFONE = row9.TELEFONE ;
casual_tmp.TELEFORNE2 = row9.TELEFORNE2 ;
casual_tmp.CLI_STATUS = row9.CLI_STATUS ;
casual_tmp.PRIMEIRO_PEDIDO = row9.PRIMEIRO_PEDIDO ;
casual = casual_tmp;

// # Output table : 'Fieis'
Fieis_tmp.CODIGO_EMPRESA = row9.CODIGO_EMPRESA ;
Fieis_tmp.VALOR_COMPRA = row9.VALOR_COMPRA ;
Fieis_tmp.QTDE_ITEM = row9.QTDE_ITEM ;
Fieis_tmp.QTDE_PEDIDO = row9.QTDE_PEDIDO ;
Fieis_tmp.CODIGO_CLIENTE = row9.CODIGO_CLIENTE ;
Fieis_tmp.NOME_CLIENTE = row9.NOME_CLIENTE ;
Fieis_tmp.EMAIL = row9.EMAIL ;
Fieis_tmp.DATA_CADASTRO = row9.DATA_CADASTRO ;
Fieis_tmp.PRIMEIRA_COMPRA = row9.PRIMEIRA_COMPRA ;
Fieis_tmp.ULTIMA_COMPRA = row9.ULTIMA_COMPRA ;
Fieis_tmp.TELEFONE = row9.TELEFONE ;
Fieis_tmp.TELEFORNE2 = row9.TELEFORNE2 ;
Fieis_tmp.CLI_STATUS = row9.CLI_STATUS ;
Fieis_tmp.PRIMEIRO_PEDIDO = row9.PRIMEIRO_PEDIDO ;
Fieis = Fieis_tmp;

// # Output table : 'altoConsumo'
altoConsumo_tmp.CODIGO_EMPRESA = row9.CODIGO_EMPRESA ;
altoConsumo_tmp.VALOR_COMPRA = row9.VALOR_COMPRA_D ;
altoConsumo_tmp.QTDE_ITEM = row9.QTDE_ITEM ;
altoConsumo_tmp.QTDE_PEDIDO = row9.QTDE_PEDIDO ;
altoConsumo_tmp.CODIGO_CLIENTE = row9.CODIGO_CLIENTE ;
altoConsumo_tmp.NOME_CLIENTE = row9.NOME_CLIENTE ;
altoConsumo_tmp.EMAIL = row9.EMAIL ;
altoConsumo_tmp.DATA_CADASTRO = row9.DATA_CADASTRO ;
altoConsumo_tmp.PRIMEIRA_COMPRA = row9.PRIMEIRA_COMPRA ;
altoConsumo_tmp.ULTIMA_COMPRA = row9.ULTIMA_COMPRA ;
altoConsumo_tmp.TELEFONE = row9.TELEFONE ;
altoConsumo_tmp.TELEFORNE2 = row9.TELEFORNE2 ;
altoConsumo_tmp.CLI_STATUS = row9.CLI_STATUS ;
altoConsumo = altoConsumo_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "pri_pedido"
if(pri_pedido != null) { 



	
	/**
	 * [tFilterRow_3 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"pri_pedido"
						
						);
					}
					

          row22 = null;
    Operator_tFilterRow_3 ope_tFilterRow_3 = new Operator_tFilterRow_3("&&");
            ope_tFilterRow_3.matches((pri_pedido.PRIMEIRO_PEDIDO == null? false : pri_pedido.PRIMEIRO_PEDIDO.compareTo(ParserUtils.parseTo_Integer(String.valueOf(1))) == 0)
                           , "PRIMEIRO_PEDIDO.compareTo(1) == 0 failed");
		 	
    
    if (ope_tFilterRow_3.getMatchFlag()) {
              if(row22 == null){ 
                row22 = new row22Struct();
              }
               row22.CODIGO_EMPRESA = pri_pedido.CODIGO_EMPRESA;
               row22.VALOR_COMPRA = pri_pedido.VALOR_COMPRA;
               row22.QTDE_ITEM = pri_pedido.QTDE_ITEM;
               row22.QTDE_PEDIDO = pri_pedido.QTDE_PEDIDO;
               row22.CODIGO_CLIENTE = pri_pedido.CODIGO_CLIENTE;
               row22.NOME_CLIENTE = pri_pedido.NOME_CLIENTE;
               row22.EMAIL = pri_pedido.EMAIL;
               row22.DATA_CADASTRO = pri_pedido.DATA_CADASTRO;
               row22.PRIMEIRA_COMPRA = pri_pedido.PRIMEIRA_COMPRA;
               row22.ULTIMA_COMPRA = pri_pedido.ULTIMA_COMPRA;
               row22.TELEFONE = pri_pedido.TELEFONE;
               row22.TELEFORNE2 = pri_pedido.TELEFORNE2;
               row22.CLI_STATUS = pri_pedido.CLI_STATUS;
               row22.PRIMEIRO_PEDIDO = pri_pedido.PRIMEIRO_PEDIDO;    
      nb_line_ok_tFilterRow_3++;
    } else {
      nb_line_reject_tFilterRow_3++;
    }

nb_line_tFilterRow_3++;

 


	tos_count_tFilterRow_3++;

/**
 * [tFilterRow_3 main ] stop
 */
	
	/**
	 * [tFilterRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_begin ] stop
 */
// Start of branch "row22"
if(row22 != null) { 



	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

Saida5 = null;


// # Output table : 'Saida5'
Saida5_tmp.CODIGO_EMPRESA = row22.CODIGO_EMPRESA;
Saida5_tmp.VALOR_COMPRA = row22.VALOR_COMPRA;
Saida5_tmp.QTDE_ITEM = row22.QTDE_ITEM;
Saida5_tmp.QTDE_PEDIDO = row22.QTDE_PEDIDO;
Saida5_tmp.CODIGO_CLIENTE = row22.CODIGO_CLIENTE;
Saida5_tmp.NOME_CLIENTE = row22.NOME_CLIENTE;
Saida5_tmp.EMAIL = row22.EMAIL;
Saida5_tmp.DATA_CADASTRO = row22.DATA_CADASTRO;
Saida5_tmp.PRIMEIRA_COMPRA = row22.PRIMEIRA_COMPRA;
Saida5_tmp.ULTIMA_COMPRA = row22.ULTIMA_COMPRA;
Saida5_tmp.TELEFONE = row22.TELEFONE;
Saida5_tmp.TELEFORNE2 = row22.TELEFORNE2;
Saida5_tmp.CLI_STATUS = row22.CLI_STATUS;
Saida5 = Saida5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "Saida5"
if(Saida5 != null) { 



	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida5"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_2.addRow();
									   				
	    				if(Saida5.CODIGO_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.CODIGO_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.VALOR_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.VALOR_COMPRA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.QTDE_ITEM != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(Saida5.QTDE_ITEM)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.QTDE_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(Saida5.QTDE_PEDIDO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.CODIGO_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.CODIGO_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.NOME_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.NOME_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.EMAIL != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.EMAIL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.DATA_CADASTRO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Saida5.DATA_CADASTRO, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.PRIMEIRA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Saida5.PRIMEIRA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.ULTIMA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Saida5.ULTIMA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.TELEFONE != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.TELEFONE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.TELEFORNE2 != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.TELEFORNE2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(Saida5.CLI_STATUS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(Saida5.CLI_STATUS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */

} // End of branch "Saida5"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */

} // End of branch "row22"




	
	/**
	 * [tFilterRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_end ] stop
 */

} // End of branch "pri_pedido"




// Start of branch "casual"
if(casual != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"casual"
						
						);
					}
					

          row28 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
            ope_tFilterRow_1.matches((casual.QTDE_PEDIDO == null? false : casual.QTDE_PEDIDO.compareTo(ParserUtils.parseTo_Integer(String.valueOf(2))) >= 0)
                           , "QTDE_PEDIDO.compareTo(2) >= 0 failed");
		 	
            ope_tFilterRow_1.matches((casual.QTDE_PEDIDO == null? false : casual.QTDE_PEDIDO.compareTo(ParserUtils.parseTo_Integer(String.valueOf(8))) <= 0)
                           , "QTDE_PEDIDO.compareTo(8) <= 0 failed");
		 	
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row28 == null){ 
                row28 = new row28Struct();
              }
               row28.CODIGO_EMPRESA = casual.CODIGO_EMPRESA;
               row28.VALOR_COMPRA = casual.VALOR_COMPRA;
               row28.QTDE_ITEM = casual.QTDE_ITEM;
               row28.QTDE_PEDIDO = casual.QTDE_PEDIDO;
               row28.CODIGO_CLIENTE = casual.CODIGO_CLIENTE;
               row28.NOME_CLIENTE = casual.NOME_CLIENTE;
               row28.EMAIL = casual.EMAIL;
               row28.DATA_CADASTRO = casual.DATA_CADASTRO;
               row28.PRIMEIRA_COMPRA = casual.PRIMEIRA_COMPRA;
               row28.ULTIMA_COMPRA = casual.ULTIMA_COMPRA;
               row28.TELEFONE = casual.TELEFONE;
               row28.TELEFORNE2 = casual.TELEFORNE2;
               row28.CLI_STATUS = casual.CLI_STATUS;
               row28.PRIMEIRO_PEDIDO = casual.PRIMEIRO_PEDIDO;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row28"
if(row28 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

saida3 = null;


// # Output table : 'saida3'
saida3_tmp.CODIGO_EMPRESA = row28.CODIGO_EMPRESA ;
saida3_tmp.VALOR_COMPRA = row28.VALOR_COMPRA ;
saida3_tmp.QTDE_ITEM = row28.QTDE_ITEM ;
saida3_tmp.QTDE_PEDIDO = row28.QTDE_PEDIDO ;
saida3_tmp.CODIGO_CLIENTE = row28.CODIGO_CLIENTE ;
saida3_tmp.NOME_CLIENTE = row28.NOME_CLIENTE ;
saida3_tmp.EMAIL = row28.EMAIL ;
saida3_tmp.DATA_CADASTRO = row28.DATA_CADASTRO ;
saida3_tmp.PRIMEIRA_COMPRA = row28.PRIMEIRA_COMPRA ;
saida3_tmp.ULTIMA_COMPRA = row28.ULTIMA_COMPRA ;
saida3_tmp.TELEFONE = row28.TELEFONE ;
saida3_tmp.TELEFORNE2 = row28.TELEFORNE2 ;
saida3_tmp.CLI_STATUS = row28.CLI_STATUS ;
saida3 = saida3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "saida3"
if(saida3 != null) { 



	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida3"
						
						);
					}
					



    
		saida3Struct oneRow_tHashOutput_8 = new saida3Struct();
				
					oneRow_tHashOutput_8.CODIGO_EMPRESA = saida3.CODIGO_EMPRESA;
					oneRow_tHashOutput_8.VALOR_COMPRA = saida3.VALOR_COMPRA;
					oneRow_tHashOutput_8.QTDE_ITEM = saida3.QTDE_ITEM;
					oneRow_tHashOutput_8.QTDE_PEDIDO = saida3.QTDE_PEDIDO;
					oneRow_tHashOutput_8.CODIGO_CLIENTE = saida3.CODIGO_CLIENTE;
					oneRow_tHashOutput_8.NOME_CLIENTE = saida3.NOME_CLIENTE;
					oneRow_tHashOutput_8.EMAIL = saida3.EMAIL;
					oneRow_tHashOutput_8.DATA_CADASTRO = saida3.DATA_CADASTRO;
					oneRow_tHashOutput_8.PRIMEIRA_COMPRA = saida3.PRIMEIRA_COMPRA;
					oneRow_tHashOutput_8.ULTIMA_COMPRA = saida3.ULTIMA_COMPRA;
					oneRow_tHashOutput_8.TELEFONE = saida3.TELEFONE;
					oneRow_tHashOutput_8.TELEFORNE2 = saida3.TELEFORNE2;
					oneRow_tHashOutput_8.CLI_STATUS = saida3.CLI_STATUS;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */

} // End of branch "saida3"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "row28"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "casual"




// Start of branch "Fieis"
if(Fieis != null) { 



	
	/**
	 * [tFilterRow_2 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Fieis"
						
						);
					}
					

          row30 = null;
    Operator_tFilterRow_2 ope_tFilterRow_2 = new Operator_tFilterRow_2("&&");
            ope_tFilterRow_2.matches((Fieis.QTDE_PEDIDO == null? false : Fieis.QTDE_PEDIDO.compareTo(ParserUtils.parseTo_Integer(String.valueOf(8))) > 0)
                           , "QTDE_PEDIDO.compareTo(8) > 0 failed");
		 	
    
    if (ope_tFilterRow_2.getMatchFlag()) {
              if(row30 == null){ 
                row30 = new row30Struct();
              }
               row30.CODIGO_EMPRESA = Fieis.CODIGO_EMPRESA;
               row30.VALOR_COMPRA = Fieis.VALOR_COMPRA;
               row30.QTDE_ITEM = Fieis.QTDE_ITEM;
               row30.QTDE_PEDIDO = Fieis.QTDE_PEDIDO;
               row30.CODIGO_CLIENTE = Fieis.CODIGO_CLIENTE;
               row30.NOME_CLIENTE = Fieis.NOME_CLIENTE;
               row30.EMAIL = Fieis.EMAIL;
               row30.DATA_CADASTRO = Fieis.DATA_CADASTRO;
               row30.PRIMEIRA_COMPRA = Fieis.PRIMEIRA_COMPRA;
               row30.ULTIMA_COMPRA = Fieis.ULTIMA_COMPRA;
               row30.TELEFONE = Fieis.TELEFONE;
               row30.TELEFORNE2 = Fieis.TELEFORNE2;
               row30.CLI_STATUS = Fieis.CLI_STATUS;
               row30.PRIMEIRO_PEDIDO = Fieis.PRIMEIRO_PEDIDO;    
      nb_line_ok_tFilterRow_2++;
    } else {
      nb_line_reject_tFilterRow_2++;
    }

nb_line_tFilterRow_2++;

 


	tos_count_tFilterRow_2++;

/**
 * [tFilterRow_2 main ] stop
 */
	
	/**
	 * [tFilterRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 process_data_begin ] stop
 */
// Start of branch "row30"
if(row30 != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

saida4 = null;


// # Output table : 'saida4'
saida4_tmp.CODIGO_EMPRESA = row30.CODIGO_EMPRESA ;
saida4_tmp.VALOR_COMPRA = row30.VALOR_COMPRA ;
saida4_tmp.QTDE_ITEM = row30.QTDE_ITEM ;
saida4_tmp.QTDE_PEDIDO = row30.QTDE_PEDIDO ;
saida4_tmp.CODIGO_CLIENTE = row30.CODIGO_CLIENTE ;
saida4_tmp.NOME_CLIENTE = row30.NOME_CLIENTE ;
saida4_tmp.EMAIL = row30.EMAIL ;
saida4_tmp.DATA_CADASTRO = row30.DATA_CADASTRO ;
saida4_tmp.PRIMEIRA_COMPRA = row30.PRIMEIRA_COMPRA ;
saida4_tmp.ULTIMA_COMPRA = row30.ULTIMA_COMPRA ;
saida4_tmp.TELEFONE = row30.TELEFONE ;
saida4_tmp.TELEFORNE2 = row30.TELEFORNE2 ;
saida4_tmp.CLI_STATUS = row30.CLI_STATUS ;
saida4 = saida4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "saida4"
if(saida4 != null) { 



	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida4"
						
						);
					}
					



    
		saida4Struct oneRow_tHashOutput_9 = new saida4Struct();
				
					oneRow_tHashOutput_9.CODIGO_EMPRESA = saida4.CODIGO_EMPRESA;
					oneRow_tHashOutput_9.VALOR_COMPRA = saida4.VALOR_COMPRA;
					oneRow_tHashOutput_9.QTDE_ITEM = saida4.QTDE_ITEM;
					oneRow_tHashOutput_9.QTDE_PEDIDO = saida4.QTDE_PEDIDO;
					oneRow_tHashOutput_9.CODIGO_CLIENTE = saida4.CODIGO_CLIENTE;
					oneRow_tHashOutput_9.NOME_CLIENTE = saida4.NOME_CLIENTE;
					oneRow_tHashOutput_9.EMAIL = saida4.EMAIL;
					oneRow_tHashOutput_9.DATA_CADASTRO = saida4.DATA_CADASTRO;
					oneRow_tHashOutput_9.PRIMEIRA_COMPRA = saida4.PRIMEIRA_COMPRA;
					oneRow_tHashOutput_9.ULTIMA_COMPRA = saida4.ULTIMA_COMPRA;
					oneRow_tHashOutput_9.TELEFONE = saida4.TELEFONE;
					oneRow_tHashOutput_9.TELEFORNE2 = saida4.TELEFORNE2;
					oneRow_tHashOutput_9.CLI_STATUS = saida4.CLI_STATUS;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */

} // End of branch "saida4"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "row30"




	
	/**
	 * [tFilterRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 process_data_end ] stop
 */

} // End of branch "Fieis"




// Start of branch "altoConsumo"
if(altoConsumo != null) { 



	
	/**
	 * [tFilterRow_4 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"altoConsumo"
						
						);
					}
					

          row13 = null;
    Operator_tFilterRow_4 ope_tFilterRow_4 = new Operator_tFilterRow_4("&&");
            ope_tFilterRow_4.matches((altoConsumo.VALOR_COMPRA == null? false : altoConsumo.VALOR_COMPRA.compareTo(ParserUtils.parseTo_Double(String.valueOf(5000))) >= 0)
                           , "VALOR_COMPRA.compareTo(5000) >= 0 failed");
		 	
    
    if (ope_tFilterRow_4.getMatchFlag()) {
              if(row13 == null){ 
                row13 = new row13Struct();
              }
               row13.CODIGO_EMPRESA = altoConsumo.CODIGO_EMPRESA;
               row13.VALOR_COMPRA = altoConsumo.VALOR_COMPRA;
               row13.QTDE_ITEM = altoConsumo.QTDE_ITEM;
               row13.QTDE_PEDIDO = altoConsumo.QTDE_PEDIDO;
               row13.CODIGO_CLIENTE = altoConsumo.CODIGO_CLIENTE;
               row13.NOME_CLIENTE = altoConsumo.NOME_CLIENTE;
               row13.EMAIL = altoConsumo.EMAIL;
               row13.DATA_CADASTRO = altoConsumo.DATA_CADASTRO;
               row13.PRIMEIRA_COMPRA = altoConsumo.PRIMEIRA_COMPRA;
               row13.ULTIMA_COMPRA = altoConsumo.ULTIMA_COMPRA;
               row13.TELEFONE = altoConsumo.TELEFONE;
               row13.TELEFORNE2 = altoConsumo.TELEFORNE2;
               row13.CLI_STATUS = altoConsumo.CLI_STATUS;    
      nb_line_ok_tFilterRow_4++;
    } else {
      nb_line_reject_tFilterRow_4++;
    }

nb_line_tFilterRow_4++;

 


	tos_count_tFilterRow_4++;

/**
 * [tFilterRow_4 main ] stop
 */
	
	/**
	 * [tFilterRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	

 



/**
 * [tFilterRow_4 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

Saida6 = null;


// # Output table : 'Saida6'
Saida6_tmp.CODIGO_EMPRESA = row13.CODIGO_EMPRESA;
Saida6_tmp.VALOR_COMPRA = row13.VALOR_COMPRA;
Saida6_tmp.QTDE_ITEM = row13.QTDE_ITEM;
Saida6_tmp.QTDE_PEDIDO = row13.QTDE_PEDIDO;
Saida6_tmp.CODIGO_CLIENTE = row13.CODIGO_CLIENTE;
Saida6_tmp.NOME_CLIENTE = row13.NOME_CLIENTE;
Saida6_tmp.EMAIL = row13.EMAIL;
Saida6_tmp.DATA_CADASTRO = row13.DATA_CADASTRO;
Saida6_tmp.PRIMEIRA_COMPRA = row13.PRIMEIRA_COMPRA;
Saida6_tmp.ULTIMA_COMPRA = row13.ULTIMA_COMPRA;
Saida6_tmp.TELEFONE = row13.TELEFONE;
Saida6_tmp.TELEFORNE2 = row13.TELEFORNE2;
Saida6_tmp.CLI_STATUS = row13.CLI_STATUS;
Saida6 = Saida6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "Saida6"
if(Saida6 != null) { 



	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida6"
						
						);
					}
					



    
		Saida6Struct oneRow_tHashOutput_10 = new Saida6Struct();
				
					oneRow_tHashOutput_10.CODIGO_EMPRESA = Saida6.CODIGO_EMPRESA;
					oneRow_tHashOutput_10.VALOR_COMPRA = Saida6.VALOR_COMPRA;
					oneRow_tHashOutput_10.QTDE_ITEM = Saida6.QTDE_ITEM;
					oneRow_tHashOutput_10.QTDE_PEDIDO = Saida6.QTDE_PEDIDO;
					oneRow_tHashOutput_10.CODIGO_CLIENTE = Saida6.CODIGO_CLIENTE;
					oneRow_tHashOutput_10.NOME_CLIENTE = Saida6.NOME_CLIENTE;
					oneRow_tHashOutput_10.EMAIL = Saida6.EMAIL;
					oneRow_tHashOutput_10.DATA_CADASTRO = Saida6.DATA_CADASTRO;
					oneRow_tHashOutput_10.PRIMEIRA_COMPRA = Saida6.PRIMEIRA_COMPRA;
					oneRow_tHashOutput_10.ULTIMA_COMPRA = Saida6.ULTIMA_COMPRA;
					oneRow_tHashOutput_10.TELEFONE = Saida6.TELEFONE;
					oneRow_tHashOutput_10.TELEFORNE2 = Saida6.TELEFORNE2;
					oneRow_tHashOutput_10.CLI_STATUS = Saida6.CLI_STATUS;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */

} // End of branch "Saida6"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tFilterRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	

 



/**
 * [tFilterRow_4 process_data_end ] stop
 */

} // End of branch "altoConsumo"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "saida"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_8 end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

	}
}finally{
	if (rs_tDBInput_8 != null) {
		rs_tDBInput_8.close();
	}
	if (stmt_tDBInput_8 != null) {
		stmt_tDBInput_8.close();
	}
}
globalMap.put("tDBInput_8_NB_LINE",nb_line_tDBInput_8);

 

ok_Hash.put("tDBInput_8", true);
end_Hash.put("tDBInput_8", System.currentTimeMillis());




/**
 * [tDBInput_8 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tFilterRow_3 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
    globalMap.put("tFilterRow_3_NB_LINE", nb_line_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_OK", nb_line_ok_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_REJECT", nb_line_reject_tFilterRow_3);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"pri_pedido");
			  	}
			  	
 

ok_Hash.put("tFilterRow_3", true);
end_Hash.put("tFilterRow_3", System.currentTimeMillis());




/**
 * [tFilterRow_3 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

							columnIndex_tFileOutputExcel_2 = 0;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 1;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 2;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 3;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 4;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 5;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 6;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 7;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 8;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 9;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 10;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 11;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 12;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
	
	
	
			xlsxTool_tFileOutputExcel_2.writeExcel(fileName_tFileOutputExcel_2,true);
	
		if(headerIsInserted_tFileOutputExcel_2 && nb_line_tFileOutputExcel_2 > 0){
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		}
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida5");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());




/**
 * [tFileOutputExcel_2 end ] stop
 */










	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"casual");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida3");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */










	
	/**
	 * [tFilterRow_2 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	
    globalMap.put("tFilterRow_2_NB_LINE", nb_line_tFilterRow_2);
    globalMap.put("tFilterRow_2_NB_LINE_OK", nb_line_ok_tFilterRow_2);
    globalMap.put("tFilterRow_2_NB_LINE_REJECT", nb_line_reject_tFilterRow_2);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Fieis");
			  	}
			  	
 

ok_Hash.put("tFilterRow_2", true);
end_Hash.put("tFilterRow_2", System.currentTimeMillis());




/**
 * [tFilterRow_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida4");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */










	
	/**
	 * [tFilterRow_4 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	
    globalMap.put("tFilterRow_4_NB_LINE", nb_line_tFilterRow_4);
    globalMap.put("tFilterRow_4_NB_LINE_OK", nb_line_ok_tFilterRow_4);
    globalMap.put("tFilterRow_4_NB_LINE_REJECT", nb_line_reject_tFilterRow_4);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"altoConsumo");
			  	}
			  	
 

ok_Hash.put("tFilterRow_4", true);
end_Hash.put("tFilterRow_4", System.currentTimeMillis());




/**
 * [tFilterRow_4 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida6");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_8 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tFilterRow_3 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */










	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */










	
	/**
	 * [tFilterRow_2 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */










	
	/**
	 * [tFilterRow_4 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_4";
	
	

 



/**
 * [tFilterRow_4 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tFileOutputExcel_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_7", false);
		start_Hash.put("tFileOutputExcel_7", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tFileOutputExcel_7 = 0;
		


		
		int columnIndex_tFileOutputExcel_7 = 0;
		boolean headerIsInserted_tFileOutputExcel_7 = false;
		
		
		String fileName_tFileOutputExcel_7="/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_7 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_7 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_7.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_7.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_7.setSheet("Casual");
		xlsxTool_tFileOutputExcel_7.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_7.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_7.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_7 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_7 = chm_tFileOutputExcel_7.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_7", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_7) {
			
				xlsxTool_tFileOutputExcel_7.prepareXlsxFile(fileName_tFileOutputExcel_7);
			
		}
		
		xlsxTool_tFileOutputExcel_7.setFont("");
		
		if (xlsxTool_tFileOutputExcel_7.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_7.addRow();
		
		xlsxTool_tFileOutputExcel_7.addCellValue("CODIGO_EMPRESA");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("VALOR_COMPRA");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("QTDE_ITEM");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("QTDE_PEDIDO");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("CODIGO_CLIENTE");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("NOME_CLIENTE");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("EMAIL");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("DATA_CADASTRO");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("PRIMEIRA_COMPRA");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("ULTIMA_COMPRA");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("TELEFONE");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("TELEFORNE2");
		
		xlsxTool_tFileOutputExcel_7.addCellValue("CLI_STATUS");
		
		nb_line_tFileOutputExcel_7++;
		headerIsInserted_tFileOutputExcel_7 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_7 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida3Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<saida3Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    saida3Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row12.CODIGO_EMPRESA = next_tHashInput_3.CODIGO_EMPRESA;
	row12.VALOR_COMPRA = next_tHashInput_3.VALOR_COMPRA;
	row12.QTDE_ITEM = next_tHashInput_3.QTDE_ITEM;
	row12.QTDE_PEDIDO = next_tHashInput_3.QTDE_PEDIDO;
	row12.CODIGO_CLIENTE = next_tHashInput_3.CODIGO_CLIENTE;
	row12.NOME_CLIENTE = next_tHashInput_3.NOME_CLIENTE;
	row12.EMAIL = next_tHashInput_3.EMAIL;
	row12.DATA_CADASTRO = next_tHashInput_3.DATA_CADASTRO;
	row12.PRIMEIRA_COMPRA = next_tHashInput_3.PRIMEIRA_COMPRA;
	row12.ULTIMA_COMPRA = next_tHashInput_3.ULTIMA_COMPRA;
	row12.TELEFONE = next_tHashInput_3.TELEFONE;
	row12.TELEFORNE2 = next_tHashInput_3.TELEFORNE2;
	row12.CLI_STATUS = next_tHashInput_3.CLI_STATUS;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_7 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_7.addRow();
									   				
	    				if(row12.CODIGO_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.CODIGO_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.VALOR_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.VALOR_COMPRA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.QTDE_ITEM != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(Double.parseDouble(String.valueOf(row12.QTDE_ITEM)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.QTDE_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(Double.parseDouble(String.valueOf(row12.QTDE_PEDIDO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.CODIGO_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.CODIGO_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.NOME_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.NOME_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.EMAIL != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.EMAIL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.DATA_CADASTRO != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(row12.DATA_CADASTRO, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.PRIMEIRA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(row12.PRIMEIRA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.ULTIMA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(row12.ULTIMA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.TELEFONE != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.TELEFONE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.TELEFORNE2 != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.TELEFORNE2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
									   				
	    				if(row12.CLI_STATUS != null) {
    				
							xlsxTool_tFileOutputExcel_7.addCellValue(String.valueOf(row12.CLI_STATUS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_7++;
				
 


	tos_count_tFileOutputExcel_7++;

/**
 * [tFileOutputExcel_7 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

 



/**
 * [tFileOutputExcel_7 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

 



/**
 * [tFileOutputExcel_7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    		
    		mf_tHashInput_3.clearCache("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_8");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_7 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

							columnIndex_tFileOutputExcel_7 = 0;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 1;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 2;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 3;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 4;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 5;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 6;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 7;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 8;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 9;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 10;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 11;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
							columnIndex_tFileOutputExcel_7 = 12;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
	
	
	
			xlsxTool_tFileOutputExcel_7.writeExcel(fileName_tFileOutputExcel_7,true);
	
		if(headerIsInserted_tFileOutputExcel_7 && nb_line_tFileOutputExcel_7 > 0){
			nb_line_tFileOutputExcel_7 = nb_line_tFileOutputExcel_7 -1;
		}
		globalMap.put("tFileOutputExcel_7_NB_LINE",nb_line_tFileOutputExcel_7);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_7", true);
end_Hash.put("tFileOutputExcel_7", System.currentTimeMillis());




/**
 * [tFileOutputExcel_7 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk43", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_7 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

 



/**
 * [tFileOutputExcel_7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tFileOutputExcel_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_8", false);
		start_Hash.put("tFileOutputExcel_8", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tFileOutputExcel_8 = 0;
		


		
		int columnIndex_tFileOutputExcel_8 = 0;
		boolean headerIsInserted_tFileOutputExcel_8 = false;
		
		
		String fileName_tFileOutputExcel_8="/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_8 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_8 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_8.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_8.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_8.setSheet("Fieis");
		xlsxTool_tFileOutputExcel_8.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_8.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_8.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_8 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_8 = chm_tFileOutputExcel_8.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_8", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_8) {
			
				xlsxTool_tFileOutputExcel_8.prepareXlsxFile(fileName_tFileOutputExcel_8);
			
		}
		
		xlsxTool_tFileOutputExcel_8.setFont("");
		
		if (xlsxTool_tFileOutputExcel_8.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_8.addRow();
		
		xlsxTool_tFileOutputExcel_8.addCellValue("CODIGO_EMPRESA");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("VALOR_COMPRA");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("QTDE_ITEM");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("QTDE_PEDIDO");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("CODIGO_CLIENTE");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("NOME_CLIENTE");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("EMAIL");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("DATA_CADASTRO");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("PRIMEIRA_COMPRA");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("ULTIMA_COMPRA");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("TELEFONE");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("TELEFORNE2");
		
		xlsxTool_tFileOutputExcel_8.addCellValue("CLI_STATUS");
		
		nb_line_tFileOutputExcel_8++;
		headerIsInserted_tFileOutputExcel_8 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_8 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida4Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<saida4Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    saida4Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row24.CODIGO_EMPRESA = next_tHashInput_4.CODIGO_EMPRESA;
	row24.VALOR_COMPRA = next_tHashInput_4.VALOR_COMPRA;
	row24.QTDE_ITEM = next_tHashInput_4.QTDE_ITEM;
	row24.QTDE_PEDIDO = next_tHashInput_4.QTDE_PEDIDO;
	row24.CODIGO_CLIENTE = next_tHashInput_4.CODIGO_CLIENTE;
	row24.NOME_CLIENTE = next_tHashInput_4.NOME_CLIENTE;
	row24.EMAIL = next_tHashInput_4.EMAIL;
	row24.DATA_CADASTRO = next_tHashInput_4.DATA_CADASTRO;
	row24.PRIMEIRA_COMPRA = next_tHashInput_4.PRIMEIRA_COMPRA;
	row24.ULTIMA_COMPRA = next_tHashInput_4.ULTIMA_COMPRA;
	row24.TELEFONE = next_tHashInput_4.TELEFONE;
	row24.TELEFORNE2 = next_tHashInput_4.TELEFORNE2;
	row24.CLI_STATUS = next_tHashInput_4.CLI_STATUS;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_8 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_8.addRow();
									   				
	    				if(row24.CODIGO_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.CODIGO_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.VALOR_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.VALOR_COMPRA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.QTDE_ITEM != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(Double.parseDouble(String.valueOf(row24.QTDE_ITEM)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.QTDE_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(Double.parseDouble(String.valueOf(row24.QTDE_PEDIDO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.CODIGO_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.CODIGO_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.NOME_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.NOME_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.EMAIL != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.EMAIL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.DATA_CADASTRO != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(row24.DATA_CADASTRO, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.PRIMEIRA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(row24.PRIMEIRA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.ULTIMA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(row24.ULTIMA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.TELEFONE != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.TELEFONE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.TELEFORNE2 != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.TELEFORNE2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
									   				
	    				if(row24.CLI_STATUS != null) {
    				
							xlsxTool_tFileOutputExcel_8.addCellValue(String.valueOf(row24.CLI_STATUS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_8++;
				
 


	tos_count_tFileOutputExcel_8++;

/**
 * [tFileOutputExcel_8 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

 



/**
 * [tFileOutputExcel_8 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

 



/**
 * [tFileOutputExcel_8 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    		
    		mf_tHashInput_4.clearCache("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_9");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_8 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

							columnIndex_tFileOutputExcel_8 = 0;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 1;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 2;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 3;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 4;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 5;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 6;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 7;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 8;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 9;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 10;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 11;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
							columnIndex_tFileOutputExcel_8 = 12;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
	
	
	
			xlsxTool_tFileOutputExcel_8.writeExcel(fileName_tFileOutputExcel_8,true);
	
		if(headerIsInserted_tFileOutputExcel_8 && nb_line_tFileOutputExcel_8 > 0){
			nb_line_tFileOutputExcel_8 = nb_line_tFileOutputExcel_8 -1;
		}
		globalMap.put("tFileOutputExcel_8_NB_LINE",nb_line_tFileOutputExcel_8);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_8", true);
end_Hash.put("tFileOutputExcel_8", System.currentTimeMillis());




/**
 * [tFileOutputExcel_8 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk44", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_8 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

 



/**
 * [tFileOutputExcel_8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public String VALOR_COMPRA;

				public String getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
					this.VALOR_COMPRA = readString(dis);
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// String
				
						writeString(this.VALOR_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+VALOR_COMPRA);
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String CODIGO_EMPRESA;

				public String getCODIGO_EMPRESA () {
					return this.CODIGO_EMPRESA;
				}

				public Boolean CODIGO_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPRESAIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPRESALength(){
				    return null;
				}
				public Integer CODIGO_EMPRESAPrecision(){
				    return null;
				}
				public String CODIGO_EMPRESADefault(){
				
					return null;
				
				}
				public String CODIGO_EMPRESAComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPRESAPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPRESAOriginalDbColumnName(){
				
					return "CODIGO_EMPRESA";
				
				}

				
			    public Double VALOR_COMPRA;

				public Double getVALOR_COMPRA () {
					return this.VALOR_COMPRA;
				}

				public Boolean VALOR_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VALOR_COMPRAIsKey(){
				    return false;
				}
				public Integer VALOR_COMPRALength(){
				    return null;
				}
				public Integer VALOR_COMPRAPrecision(){
				    return null;
				}
				public String VALOR_COMPRADefault(){
				
					return null;
				
				}
				public String VALOR_COMPRAComment(){
				
				    return "";
				
				}
				public String VALOR_COMPRAPattern(){
				
					return "";
				
				}
				public String VALOR_COMPRAOriginalDbColumnName(){
				
					return "VALOR_COMPRA";
				
				}

				
			    public Integer QTDE_ITEM;

				public Integer getQTDE_ITEM () {
					return this.QTDE_ITEM;
				}

				public Boolean QTDE_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_ITEMLength(){
				    return null;
				}
				public Integer QTDE_ITEMPrecision(){
				    return null;
				}
				public String QTDE_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_ITEMOriginalDbColumnName(){
				
					return "QTDE_ITEM";
				
				}

				
			    public Integer QTDE_PEDIDO;

				public Integer getQTDE_PEDIDO () {
					return this.QTDE_PEDIDO;
				}

				public Boolean QTDE_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean QTDE_PEDIDOIsKey(){
				    return false;
				}
				public Integer QTDE_PEDIDOLength(){
				    return null;
				}
				public Integer QTDE_PEDIDOPrecision(){
				    return null;
				}
				public String QTDE_PEDIDODefault(){
				
					return null;
				
				}
				public String QTDE_PEDIDOComment(){
				
				    return "";
				
				}
				public String QTDE_PEDIDOPattern(){
				
					return "";
				
				}
				public String QTDE_PEDIDOOriginalDbColumnName(){
				
					return "QTDE_PEDIDO";
				
				}

				
			    public String CODIGO_CLIENTE;

				public String getCODIGO_CLIENTE () {
					return this.CODIGO_CLIENTE;
				}

				public Boolean CODIGO_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_CLIENTEIsKey(){
				    return false;
				}
				public Integer CODIGO_CLIENTELength(){
				    return null;
				}
				public Integer CODIGO_CLIENTEPrecision(){
				    return null;
				}
				public String CODIGO_CLIENTEDefault(){
				
					return null;
				
				}
				public String CODIGO_CLIENTEComment(){
				
				    return "";
				
				}
				public String CODIGO_CLIENTEPattern(){
				
					return "";
				
				}
				public String CODIGO_CLIENTEOriginalDbColumnName(){
				
					return "CODIGO_CLIENTE";
				
				}

				
			    public String NOME_CLIENTE;

				public String getNOME_CLIENTE () {
					return this.NOME_CLIENTE;
				}

				public Boolean NOME_CLIENTEIsNullable(){
				    return true;
				}
				public Boolean NOME_CLIENTEIsKey(){
				    return false;
				}
				public Integer NOME_CLIENTELength(){
				    return null;
				}
				public Integer NOME_CLIENTEPrecision(){
				    return null;
				}
				public String NOME_CLIENTEDefault(){
				
					return null;
				
				}
				public String NOME_CLIENTEComment(){
				
				    return "";
				
				}
				public String NOME_CLIENTEPattern(){
				
					return "";
				
				}
				public String NOME_CLIENTEOriginalDbColumnName(){
				
					return "NOME_CLIENTE";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public java.util.Date DATA_CADASTRO;

				public java.util.Date getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public java.util.Date PRIMEIRA_COMPRA;

				public java.util.Date getPRIMEIRA_COMPRA () {
					return this.PRIMEIRA_COMPRA;
				}

				public Boolean PRIMEIRA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRIMEIRA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRIMEIRA_COMPRALength(){
				    return null;
				}
				public Integer PRIMEIRA_COMPRAPrecision(){
				    return null;
				}
				public String PRIMEIRA_COMPRADefault(){
				
					return null;
				
				}
				public String PRIMEIRA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRIMEIRA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRIMEIRA_COMPRAOriginalDbColumnName(){
				
					return "PRIMEIRA_COMPRA";
				
				}

				
			    public java.util.Date ULTIMA_COMPRA;

				public java.util.Date getULTIMA_COMPRA () {
					return this.ULTIMA_COMPRA;
				}

				public Boolean ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "ULTIMA_COMPRA";
				
				}

				
			    public String TELEFONE;

				public String getTELEFONE () {
					return this.TELEFONE;
				}

				public Boolean TELEFONEIsNullable(){
				    return true;
				}
				public Boolean TELEFONEIsKey(){
				    return false;
				}
				public Integer TELEFONELength(){
				    return null;
				}
				public Integer TELEFONEPrecision(){
				    return null;
				}
				public String TELEFONEDefault(){
				
					return null;
				
				}
				public String TELEFONEComment(){
				
				    return "";
				
				}
				public String TELEFONEPattern(){
				
					return "";
				
				}
				public String TELEFONEOriginalDbColumnName(){
				
					return "TELEFONE";
				
				}

				
			    public String TELEFORNE2;

				public String getTELEFORNE2 () {
					return this.TELEFORNE2;
				}

				public Boolean TELEFORNE2IsNullable(){
				    return true;
				}
				public Boolean TELEFORNE2IsKey(){
				    return false;
				}
				public Integer TELEFORNE2Length(){
				    return null;
				}
				public Integer TELEFORNE2Precision(){
				    return null;
				}
				public String TELEFORNE2Default(){
				
					return null;
				
				}
				public String TELEFORNE2Comment(){
				
				    return "";
				
				}
				public String TELEFORNE2Pattern(){
				
					return "";
				
				}
				public String TELEFORNE2OriginalDbColumnName(){
				
					return "TELEFORNE2";
				
				}

				
			    public String CLI_STATUS;

				public String getCLI_STATUS () {
					return this.CLI_STATUS;
				}

				public Boolean CLI_STATUSIsNullable(){
				    return true;
				}
				public Boolean CLI_STATUSIsKey(){
				    return false;
				}
				public Integer CLI_STATUSLength(){
				    return null;
				}
				public Integer CLI_STATUSPrecision(){
				    return null;
				}
				public String CLI_STATUSDefault(){
				
					return null;
				
				}
				public String CLI_STATUSComment(){
				
				    return "";
				
				}
				public String CLI_STATUSPattern(){
				
					return "";
				
				}
				public String CLI_STATUSOriginalDbColumnName(){
				
					return "CLI_STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.CODIGO_EMPRESA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_COMPRA = null;
           				} else {
           			    	this.VALOR_COMPRA = dis.readDouble();
           				}
					
						this.QTDE_ITEM = readInteger(dis);
					
						this.QTDE_PEDIDO = readInteger(dis);
					
					this.CODIGO_CLIENTE = readString(dis);
					
					this.NOME_CLIENTE = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.DATA_CADASTRO = readDate(dis);
					
					this.PRIMEIRA_COMPRA = readDate(dis);
					
					this.ULTIMA_COMPRA = readDate(dis);
					
					this.TELEFONE = readString(dis);
					
					this.TELEFORNE2 = readString(dis);
					
					this.CLI_STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_EMPRESA,dos);
					
					// Double
				
						if(this.VALOR_COMPRA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_COMPRA);
		            	}
					
					// Integer
				
						writeInteger(this.QTDE_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_PEDIDO,dos);
					
					// String
				
						writeString(this.CODIGO_CLIENTE,dos);
					
					// String
				
						writeString(this.NOME_CLIENTE,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_CADASTRO,dos);
					
					// java.util.Date
				
						writeDate(this.PRIMEIRA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.ULTIMA_COMPRA,dos);
					
					// String
				
						writeString(this.TELEFONE,dos);
					
					// String
				
						writeString(this.TELEFORNE2,dos);
					
					// String
				
						writeString(this.CLI_STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_EMPRESA="+CODIGO_EMPRESA);
		sb.append(",VALOR_COMPRA="+String.valueOf(VALOR_COMPRA));
		sb.append(",QTDE_ITEM="+String.valueOf(QTDE_ITEM));
		sb.append(",QTDE_PEDIDO="+String.valueOf(QTDE_PEDIDO));
		sb.append(",CODIGO_CLIENTE="+CODIGO_CLIENTE);
		sb.append(",NOME_CLIENTE="+NOME_CLIENTE);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",DATA_CADASTRO="+String.valueOf(DATA_CADASTRO));
		sb.append(",PRIMEIRA_COMPRA="+String.valueOf(PRIMEIRA_COMPRA));
		sb.append(",ULTIMA_COMPRA="+String.valueOf(ULTIMA_COMPRA));
		sb.append(",TELEFONE="+TELEFONE);
		sb.append(",TELEFORNE2="+TELEFORNE2);
		sb.append(",CLI_STATUS="+CLI_STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();
row27Struct row27 = new row27Struct();





	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		String fileName_tFileOutputExcel_1="/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("Alto Consumo");
		xlsxTool_tFileOutputExcel_1.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_EMPRESA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_COMPRA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("QTDE_ITEM");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("QTDE_PEDIDO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_CLIENTE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NOME_CLIENTE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("EMAIL");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DATA_CADASTRO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("PRIMEIRA_COMPRA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ULTIMA_COMPRA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TELEFONE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TELEFORNE2");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CLI_STATUS");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida6Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<Saida6Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    Saida6Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row26.CODIGO_EMPRESA = next_tHashInput_5.CODIGO_EMPRESA;
	row26.VALOR_COMPRA = next_tHashInput_5.VALOR_COMPRA;
	row26.QTDE_ITEM = next_tHashInput_5.QTDE_ITEM;
	row26.QTDE_PEDIDO = next_tHashInput_5.QTDE_PEDIDO;
	row26.CODIGO_CLIENTE = next_tHashInput_5.CODIGO_CLIENTE;
	row26.NOME_CLIENTE = next_tHashInput_5.NOME_CLIENTE;
	row26.EMAIL = next_tHashInput_5.EMAIL;
	row26.DATA_CADASTRO = next_tHashInput_5.DATA_CADASTRO;
	row26.PRIMEIRA_COMPRA = next_tHashInput_5.PRIMEIRA_COMPRA;
	row26.ULTIMA_COMPRA = next_tHashInput_5.ULTIMA_COMPRA;
	row26.TELEFONE = next_tHashInput_5.TELEFONE;
	row26.TELEFORNE2 = next_tHashInput_5.TELEFORNE2;
	row26.CLI_STATUS = next_tHashInput_5.CLI_STATUS;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

    //Code generated according to input schema and output schema
row27.CODIGO_EMPRESA = row26.CODIGO_EMPRESA;
row27.VALOR_COMPRA = String.format("%.2f",row26.VALOR_COMPRA);
row27.QTDE_ITEM = row26.QTDE_ITEM;
row27.QTDE_PEDIDO = row26.QTDE_PEDIDO;
row27.CODIGO_CLIENTE = row26.CODIGO_CLIENTE;
row27.NOME_CLIENTE = row26.NOME_CLIENTE;
row27.EMAIL = row26.EMAIL;
row27.DATA_CADASTRO = row26.DATA_CADASTRO;
row27.PRIMEIRA_COMPRA = row26.PRIMEIRA_COMPRA;
row27.ULTIMA_COMPRA = row26.ULTIMA_COMPRA;
row27.TELEFONE = row26.TELEFONE;
row27.TELEFORNE2 = row26.TELEFORNE2;
row27.CLI_STATUS = row26.CLI_STATUS;

    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(row27.CODIGO_EMPRESA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.CODIGO_EMPRESA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.VALOR_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.VALOR_COMPRA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.QTDE_ITEM != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row27.QTDE_ITEM)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.QTDE_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row27.QTDE_PEDIDO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.CODIGO_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.CODIGO_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.NOME_CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.NOME_CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.EMAIL != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.EMAIL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.DATA_CADASTRO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row27.DATA_CADASTRO, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.PRIMEIRA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row27.PRIMEIRA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.ULTIMA_COMPRA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row27.ULTIMA_COMPRA, "dd-MM-yyyy");
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.TELEFONE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.TELEFONE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.TELEFORNE2 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.TELEFORNE2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row27.CLI_STATUS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row27.CLI_STATUS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    		
    		mf_tHashInput_5.clearCache("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_10");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

							columnIndex_tFileOutputExcel_1 = 0;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 1;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 2;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 3;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 4;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 5;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 6;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 7;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 8;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 9;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 10;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 11;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 12;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk28", 0, "ok");
								} 
							
							tJava_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public void tJava_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_6", false);
		start_Hash.put("tJava_6", System.currentTimeMillis());
		
	
	currentComponent="tJava_6";
	
	
		int tos_count_tJava_6 = 0;
		


System.out.println("****************************************************************************");
System.out.println("1 - Finalizado a consulta de dados de clientes :"+TalendDate.getCurrentDate());
System.out.println("****************************************************************************");
 



/**
 * [tJava_6 begin ] stop
 */
	
	/**
	 * [tJava_6 main ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 


	tos_count_tJava_6++;

/**
 * [tJava_6 main ] stop
 */
	
	/**
	 * [tJava_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_begin ] stop
 */
	
	/**
	 * [tJava_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_end ] stop
 */
	
	/**
	 * [tJava_6 end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 

ok_Hash.put("tJava_6", true);
end_Hash.put("tJava_6", System.currentTimeMillis());




/**
 * [tJava_6 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk37", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_6 finally ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_6_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfupdate_logStruct implements routines.system.IPersistableRow<copyOfupdate_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfupdate_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_analise_performance, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_analise_performance) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();
copyOfupdate_logStruct copyOfupdate_log = new copyOfupdate_logStruct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfupdate_log");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_3 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_3=0;
	    String update_tDBOutput_3 = "UPDATE \"" + tableName_tDBOutput_3 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfupdate_logStruct copyOfupdate_log_tmp = new copyOfupdate_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row6Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row6Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row8.nm_programa = next_tHashInput_2.nm_programa;
	row8.data_inicio_execucao = next_tHashInput_2.data_inicio_execucao;
	row8.data_termino_execucao = next_tHashInput_2.data_termino_execucao;
	row8.mensagem = next_tHashInput_2.mensagem;
	row8.uuid = next_tHashInput_2.uuid;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

copyOfupdate_log = null;


// # Output table : 'copyOfupdate_log'
copyOfupdate_log_tmp.nm_programa = context.programa;
copyOfupdate_log_tmp.data_inicio_execucao = row8.data_inicio_execucao;
copyOfupdate_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
copyOfupdate_log_tmp.mensagem = "Finalizado com sucesso";
copyOfupdate_log_tmp.uuid = row8.uuid ;
copyOfupdate_log = copyOfupdate_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "copyOfupdate_log"
if(copyOfupdate_log != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfupdate_log"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(copyOfupdate_log.nm_programa == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, copyOfupdate_log.nm_programa);
}

                    if(copyOfupdate_log.data_inicio_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(2, new java.sql.Timestamp(copyOfupdate_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(copyOfupdate_log.data_termino_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(3, new java.sql.Timestamp(copyOfupdate_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(copyOfupdate_log.mensagem == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(4, copyOfupdate_log.mensagem);
}

                    if(copyOfupdate_log.uuid == null) {
pstmt_tDBOutput_3.setNull(5 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5 + count_tDBOutput_3, copyOfupdate_log.uuid);
}


            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                updatedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "copyOfupdate_log"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_analise_performance_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfupdate_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk38", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


System.out.println("************************************************************************");
System.out.println("2 - Iniciado o processo de envio de emails :"+TalendDate.getCurrentDate());
System.out.println("************************************************************************");
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk34", 0, "ok");
								} 
							
							tSendMail_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tSendMail_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSendMail_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tSendMail_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tSendMail_2", false);
		start_Hash.put("tSendMail_2", System.currentTimeMillis());
		
	
	currentComponent="tSendMail_2";
	
	
		int tos_count_tSendMail_2 = 0;
		

 



/**
 * [tSendMail_2 begin ] stop
 */
	
	/**
	 * [tSendMail_2 main ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 

	String smtpHost_tSendMail_2 = context.SMTP;
        String smtpPort_tSendMail_2 = context.SMTP_PORT;
	String from_tSendMail_2 = (context.EMAIL);
    String to_tSendMail_2 = (context.SEND_EMAIL).replace(";",",");
    String cc_tSendMail_2 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String bcc_tSendMail_2 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String subject_tSendMail_2 = ("[Stella] Relatório análise performance");
    
	java.util.List<java.util.Map<String, String>> headers_tSendMail_2 = new java.util.ArrayList<java.util.Map<String,String>>();
	java.util.List<String> attachments_tSendMail_2 = new java.util.ArrayList<String>();
	java.util.List<String> contentTransferEncoding_tSendMail_2 = new java.util.ArrayList<String>();
		attachments_tSendMail_2.add("/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx");
		contentTransferEncoding_tSendMail_2.add("DEFAULT");	

	String message_tSendMail_2 = (("Conforme Solicitado, Segue Relatório de Análise de Performance\nObrigado") == null || "".equals("Conforme Solicitado, Segue Relatório de Análise de Performance\nObrigado")) ? "\"\"" : ("Conforme Solicitado, Segue Relatório de Análise de Performance\nObrigado") ;
	java.util.Properties props_tSendMail_2 = System.getProperties();     
	props_tSendMail_2.put("mail.smtp.host", smtpHost_tSendMail_2);
	props_tSendMail_2.put("mail.smtp.port", smtpPort_tSendMail_2);
	
		props_tSendMail_2.put("mail.mime.encodefilename", "true");     
	try {
		
		
			props_tSendMail_2.put("mail.smtp.auth", "true");
			javax.mail.Session session_tSendMail_2 = javax.mail.Session.getInstance(props_tSendMail_2, new javax.mail.Authenticator(){         
				protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
				
                
	final String decryptedPassword_tSendMail_2 = context.EMAIL_PASSWORD; 
				
				
				return new javax.mail.PasswordAuthentication(context.EMAIL, decryptedPassword_tSendMail_2); 
				}         
			});   
		
		
		javax.mail.Message msg_tSendMail_2 = new javax.mail.internet.MimeMessage(session_tSendMail_2);
		msg_tSendMail_2.setFrom(new javax.mail.internet.InternetAddress(from_tSendMail_2, null));
		msg_tSendMail_2.setRecipients(javax.mail.Message.RecipientType.TO,javax.mail.internet.InternetAddress.parse(to_tSendMail_2, false));
		if (cc_tSendMail_2 != null) msg_tSendMail_2.setRecipients(javax.mail.Message.RecipientType.CC, javax.mail.internet.InternetAddress.parse(cc_tSendMail_2, false));
		if (bcc_tSendMail_2 != null) msg_tSendMail_2.setRecipients(javax.mail.Message.RecipientType.BCC, javax.mail.internet.InternetAddress.parse(bcc_tSendMail_2, false));
		msg_tSendMail_2.setSubject(subject_tSendMail_2);

		for (int i_tSendMail_2 = 0; i_tSendMail_2 < headers_tSendMail_2.size(); i_tSendMail_2++) {
			java.util.Map<String, String> header_tSendMail_2 = headers_tSendMail_2.get(i_tSendMail_2);
			msg_tSendMail_2.setHeader(header_tSendMail_2.get("KEY"), header_tSendMail_2.get("VALUE"));    
		}  
		msg_tSendMail_2.setSentDate(new Date());
		msg_tSendMail_2.setHeader("X-Priority", "3"); //High->1 Normal->3 Low->5
		javax.mail.Multipart mp_tSendMail_2 = new javax.mail.internet.MimeMultipart();
		javax.mail.internet.MimeBodyPart mbpText_tSendMail_2 = new javax.mail.internet.MimeBodyPart();
		mbpText_tSendMail_2.setText(message_tSendMail_2,"ISO-8859-15", "plain");
		mp_tSendMail_2.addBodyPart(mbpText_tSendMail_2);
  
		javax.mail.internet.MimeBodyPart mbpFile_tSendMail_2 = null;

		for (int i_tSendMail_2 = 0; i_tSendMail_2 < attachments_tSendMail_2.size(); i_tSendMail_2++){
			String filename_tSendMail_2 = attachments_tSendMail_2.get(i_tSendMail_2);
			javax.activation.FileDataSource fds_tSendMail_2 = null;
			java.io.File file_tSendMail_2 = new java.io.File(filename_tSendMail_2);
			
    		if (file_tSendMail_2.isDirectory()){
				java.io.File[] subFiles_tSendMail_2 = file_tSendMail_2.listFiles();
				for(java.io.File subFile_tSendMail_2 : subFiles_tSendMail_2){
					if (subFile_tSendMail_2.isFile()){
						fds_tSendMail_2 = new javax.activation.FileDataSource(subFile_tSendMail_2.getAbsolutePath());
						mbpFile_tSendMail_2 = new javax.mail.internet.MimeBodyPart();
						mbpFile_tSendMail_2.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_2));
						mbpFile_tSendMail_2.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_2.getName()));
						if(contentTransferEncoding_tSendMail_2.get(i_tSendMail_2).equalsIgnoreCase("base64")){
							mbpFile_tSendMail_2.setHeader("Content-Transfer-Encoding", "base64");
						}
						mp_tSendMail_2.addBodyPart(mbpFile_tSendMail_2);
					}
				}
    		}else{
				mbpFile_tSendMail_2 = new javax.mail.internet.MimeBodyPart();
				fds_tSendMail_2 = new javax.activation.FileDataSource(filename_tSendMail_2);
				mbpFile_tSendMail_2.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_2)); 
				mbpFile_tSendMail_2.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_2.getName()));
				if(contentTransferEncoding_tSendMail_2.get(i_tSendMail_2).equalsIgnoreCase("base64")){
					mbpFile_tSendMail_2.setHeader("Content-Transfer-Encoding", "base64");
				}
				mp_tSendMail_2.addBodyPart(mbpFile_tSendMail_2);
			}
		}
		// -- set the content --
		msg_tSendMail_2.setContent(mp_tSendMail_2);
		// add handlers for main MIME types
		javax.activation.MailcapCommandMap mc_tSendMail_2 = ( javax.activation.MailcapCommandMap)javax.activation.CommandMap.getDefaultCommandMap();
		mc_tSendMail_2.addMailcap("text/html;; x-java-content-handler=com.sun.mail.handlers.text_html");
		mc_tSendMail_2.addMailcap("text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml");
		mc_tSendMail_2.addMailcap("text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain");
		mc_tSendMail_2.addMailcap("multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed");
		mc_tSendMail_2.addMailcap("message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822");
		javax.activation.CommandMap.setDefaultCommandMap(mc_tSendMail_2);
		// add com.sun.mail.handlers to job imports / depenencies (TESB-27110)
		com.sun.mail.handlers.text_plain text_plain_h_tSendMail_2 = null;
		// -- Send the message --
		javax.mail.Transport.send(msg_tSendMail_2);
	} catch(java.lang.Exception e){
globalMap.put("tSendMail_2_ERROR_MESSAGE",e.getMessage());
  		
			throw(e);
		
	}finally{
		props_tSendMail_2.remove("mail.smtp.host");
		props_tSendMail_2.remove("mail.smtp.port");
		
		props_tSendMail_2.remove("mail.mime.encodefilename");
		
		props_tSendMail_2.remove("mail.smtp.auth");     
	}

 


	tos_count_tSendMail_2++;

/**
 * [tSendMail_2 main ] stop
 */
	
	/**
	 * [tSendMail_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 



/**
 * [tSendMail_2 process_data_begin ] stop
 */
	
	/**
	 * [tSendMail_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 



/**
 * [tSendMail_2 process_data_end ] stop
 */
	
	/**
	 * [tSendMail_2 end ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 

ok_Hash.put("tSendMail_2", true);
end_Hash.put("tSendMail_2", System.currentTimeMillis());




/**
 * [tSendMail_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSendMail_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk32", 0, "ok");
								} 
							
							tJava_15Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSendMail_2 finally ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 



/**
 * [tSendMail_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSendMail_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_15", false);
		start_Hash.put("tJava_15", System.currentTimeMillis());
		
	
	currentComponent="tJava_15";
	
	
		int tos_count_tJava_15 = 0;
		


System.out.println("**************************************************************************");
System.out.println("2 - Finalizado o processo de envio de emails :"+TalendDate.getCurrentDate());
System.out.println("**************************************************************************");
 



/**
 * [tJava_15 begin ] stop
 */
	
	/**
	 * [tJava_15 main ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 


	tos_count_tJava_15++;

/**
 * [tJava_15 main ] stop
 */
	
	/**
	 * [tJava_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 



/**
 * [tJava_15 process_data_begin ] stop
 */
	
	/**
	 * [tJava_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 



/**
 * [tJava_15 process_data_end ] stop
 */
	
	/**
	 * [tJava_15 end ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 

ok_Hash.put("tJava_15", true);
end_Hash.put("tJava_15", System.currentTimeMillis());




/**
 * [tJava_15 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_15:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk39", 0, "ok");
								} 
							
							tFileDelete_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_15 finally ] start
	 */

	

	
	
	currentComponent="tJava_15";
	
	

 



/**
 * [tJava_15 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_15_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_1=new java.io.File("/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx");
    if(file_tFileDelete_1.exists()&& file_tFileDelete_1.isFile()){
    	if(file_tFileDelete_1.delete()){
    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_1_DELETE_PATH","/root/e_mail/analise_performance/ped_clientes_"+context.data_execucao+".xlsx");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk33", 0, "ok");
								} 
							
							tFileDelete_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tFileDelete_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_2", false);
		start_Hash.put("tFileDelete_2", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_2";
	
	
		int tos_count_tFileDelete_2 = 0;
		

 



/**
 * [tFileDelete_2 begin ] stop
 */
	
	/**
	 * [tFileDelete_2 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

class DeleteFoldertFileDelete_2{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_2=new java.io.File("/root/e_mail/analise_performance/Análise_Performance_e-comerce_"+context.data_execucao+".xls");
    if(file_tFileDelete_2.exists()&& file_tFileDelete_2.isFile()){
    	if(file_tFileDelete_2.delete()){
    		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_2_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_2_DELETE_PATH","/root/e_mail/analise_performance/Análise_Performance_e-comerce_"+context.data_execucao+".xls");
 


	tos_count_tFileDelete_2++;

/**
 * [tFileDelete_2 main ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_2 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

ok_Hash.put("tFileDelete_2", true);
end_Hash.put("tFileDelete_2", System.currentTimeMillis());




/**
 * [tFileDelete_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_2 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 1);
	}
	


public void tDie_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_3", false);
		start_Hash.put("tDie_3", System.currentTimeMillis());
		
	
	currentComponent="tDie_3";
	
	
		int tos_count_tDie_3 = 0;
		

 



/**
 * [tDie_3 begin ] stop
 */
	
	/**
	 * [tDie_3 main ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

	try {
	globalMap.put("tDie_3_DIE_PRIORITY", 5);
	System.err.println("Erro ao Enviar email");
	
	globalMap.put("tDie_3_DIE_MESSAGE", "Erro ao Enviar email");
	globalMap.put("tDie_3_DIE_MESSAGES", "Erro ao Enviar email");
	
	} catch (Exception | Error e_tDie_3) {
	    globalMap.put("tDie_3_ERROR_MESSAGE",e_tDie_3.getMessage());
		logIgnoredError(String.format("tDie_3 - tDie failed to log message due to internal error: %s", e_tDie_3), e_tDie_3);
	}
	
	currentComponent = "tDie_3";
	status = "failure";
    	errorCode = new Integer(3);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(3));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_3_DIE_CODE", errorCode);

    
	if(true){	
		TDieException e_tDie_3 = new TDieException();

		

		throw e_tDie_3;
	}

 


	tos_count_tDie_3++;

/**
 * [tDie_3 main ] stop
 */
	
	/**
	 * [tDie_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 process_data_begin ] stop
 */
	
	/**
	 * [tDie_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 process_data_end ] stop
 */
	
	/**
	 * [tDie_3 end ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 

ok_Hash.put("tDie_3", true);
end_Hash.put("tDie_3", System.currentTimeMillis());




/**
 * [tDie_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_3 finally ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_3_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tJava_5Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


System.out.println("****************************************************************************************************************");
System.out.println("1 - Iniciado a consulta de dados de Clientes :"+TalendDate.getCurrentDate());
System.out.println("****************************************************************************************************************");
 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tDBInput_8Process(globalMap);



/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_2", false);
		start_Hash.put("tPostjob_2", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_2";
	
	
		int tos_count_tPostjob_2 = 0;
		

 



/**
 * [tPostjob_2 begin ] stop
 */
	
	/**
	 * [tPostjob_2 main ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 


	tos_count_tPostjob_2++;

/**
 * [tPostjob_2 main ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_2 end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 

ok_Hash.put("tPostjob_2", true);
end_Hash.put("tPostjob_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tDBClose_1Process(globalMap);



/**
 * [tPostjob_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_2 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
		
			conn_tDBClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk41", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_analise_performance relatorio_analise_performanceClass = new relatorio_analise_performance();

        int exitCode = relatorio_analise_performanceClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_analise_performance.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_analise_performance_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_analise_performance.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("data_inicio", "id_String");
                        if(context.getStringValue("data_inicio") == null) {
                            context.data_inicio = null;
                        } else {
                            context.data_inicio=(String) context.getProperty("data_inicio");
                        }
                        context.setContextType("Acumulado", "id_Double");
                        if(context.getStringValue("Acumulado") == null) {
                            context.Acumulado = null;
                        } else {
                            try{
                                context.Acumulado=routines.system.ParserUtils.parseTo_Double (context.getProperty("Acumulado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Acumulado", e.getMessage()));
                                context.Acumulado=null;
                            }
                        }
                        context.setContextType("Dias_atras", "id_Integer");
                        if(context.getStringValue("Dias_atras") == null) {
                            context.Dias_atras = null;
                        } else {
                            try{
                                context.Dias_atras=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Dias_atras"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Dias_atras", e.getMessage()));
                                context.Dias_atras=null;
                            }
                        }
                        context.setContextType("Dias_VendasItens", "id_Integer");
                        if(context.getStringValue("Dias_VendasItens") == null) {
                            context.Dias_VendasItens = null;
                        } else {
                            try{
                                context.Dias_VendasItens=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Dias_VendasItens"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Dias_VendasItens", e.getMessage()));
                                context.Dias_VendasItens=null;
                            }
                        }
                        context.setContextType("Dias_Vendas", "id_Integer");
                        if(context.getStringValue("Dias_Vendas") == null) {
                            context.Dias_Vendas = null;
                        } else {
                            try{
                                context.Dias_Vendas=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Dias_Vendas"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Dias_Vendas", e.getMessage()));
                                context.Dias_Vendas=null;
                            }
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("EMAIL_PASSWORD", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD") == null) {
                            context.EMAIL_PASSWORD = null;
                        } else {
                            context.EMAIL_PASSWORD=(String) context.getProperty("EMAIL_PASSWORD");
                        }
                        context.setContextType("EMAIL", "id_String");
                        if(context.getStringValue("EMAIL") == null) {
                            context.EMAIL = null;
                        } else {
                            context.EMAIL=(String) context.getProperty("EMAIL");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("SMTP", "id_String");
                        if(context.getStringValue("SMTP") == null) {
                            context.SMTP = null;
                        } else {
                            context.SMTP=(String) context.getProperty("SMTP");
                        }
                        context.setContextType("SMTP_PORT", "id_String");
                        if(context.getStringValue("SMTP_PORT") == null) {
                            context.SMTP_PORT = null;
                        } else {
                            context.SMTP_PORT=(String) context.getProperty("SMTP_PORT");
                        }
                        context.setContextType("Semana", "id_Integer");
                        if(context.getStringValue("Semana") == null) {
                            context.Semana = null;
                        } else {
                            try{
                                context.Semana=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Semana"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Semana", e.getMessage()));
                                context.Semana=null;
                            }
                        }
                        context.setContextType("Ano", "id_String");
                        if(context.getStringValue("Ano") == null) {
                            context.Ano = null;
                        } else {
                            context.Ano=(String) context.getProperty("Ano");
                        }
                        context.setContextType("AnoD", "id_Date");
                        if(context.getStringValue("AnoD") == null) {
                            context.AnoD = null;
                        } else {
                            String context_AnoD_value = context.getProperty("AnoD");
                            try{
                                if (context_AnoD_value == null){
                                    context_AnoD_value = "";
                                }
                                int context_AnoD_pos = context_AnoD_value.indexOf(";");
                                String context_AnoD_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_AnoD_pos > -1){
                                    context_AnoD_pattern = context_AnoD_value.substring(0, context_AnoD_pos);
                                    context_AnoD_value = context_AnoD_value.substring(context_AnoD_pos + 1);
                                }

                                context.AnoD=(java.util.Date)(new java.text.SimpleDateFormat(context_AnoD_pattern).parse(context_AnoD_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_AnoD_longValue = Long.valueOf(context_AnoD_value);
                                    context.AnoD = new java.util.Date(context_AnoD_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "AnoD", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.AnoD=null;
                                }
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("data_inicio")) {
                context.data_inicio = (String) parentContextMap.get("data_inicio");
            }if (parentContextMap.containsKey("Acumulado")) {
                context.Acumulado = (Double) parentContextMap.get("Acumulado");
            }if (parentContextMap.containsKey("Dias_atras")) {
                context.Dias_atras = (Integer) parentContextMap.get("Dias_atras");
            }if (parentContextMap.containsKey("Dias_VendasItens")) {
                context.Dias_VendasItens = (Integer) parentContextMap.get("Dias_VendasItens");
            }if (parentContextMap.containsKey("Dias_Vendas")) {
                context.Dias_Vendas = (Integer) parentContextMap.get("Dias_Vendas");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD")) {
                context.EMAIL_PASSWORD = (String) parentContextMap.get("EMAIL_PASSWORD");
            }if (parentContextMap.containsKey("EMAIL")) {
                context.EMAIL = (String) parentContextMap.get("EMAIL");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("SMTP")) {
                context.SMTP = (String) parentContextMap.get("SMTP");
            }if (parentContextMap.containsKey("SMTP_PORT")) {
                context.SMTP_PORT = (String) parentContextMap.get("SMTP_PORT");
            }if (parentContextMap.containsKey("Semana")) {
                context.Semana = (Integer) parentContextMap.get("Semana");
            }if (parentContextMap.containsKey("Ano")) {
                context.Ano = (String) parentContextMap.get("Ano");
            }if (parentContextMap.containsKey("AnoD")) {
                context.AnoD = (java.util.Date) parentContextMap.get("AnoD");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}
try {
errorCode = null;tPostjob_2Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_2) {
globalMap.put("tPostjob_2_SUBPROCESS_STATE", -1);

e_tPostjob_2.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_analise_performance");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     775341 characters generated by Talend Open Studio for Big Data 
 *     on the 19 de março de 2024 15:08:03 BRT
 ************************************************************************************************/